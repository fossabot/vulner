/*
Copyright (c) 2016, Salesforce.com
All rights reserved.

Redistribution and use in source and binary forms, with or without 
modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this 
  list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice, 
  this list of conditions and the following disclaimer in the documentation 
  and/or other materials provided with the distribution.
* Neither the name of Salesforce.com nor the names of its contributors may be 
  used to endorse or promote products derived from this software without 
  specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE 
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, 
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

//Generated by wsdl2apex

public class JasperTerminal {
    public class TerminalPort {
        public String endpoint_x;
		public JasperAPI.SoapSecurity Security;
		private String Security_hns = 'Security=http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd';
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://api.jasperwireless.com/ws/schema', 'JasperTerminal'};
        public String licenseKey;

        public TerminalPort(String username, String password, String licenseKey, String apiServer) {
        	this.Security = new JasperAPI.SoapSecurity(username, password);
            this.licenseKey = licenseKey;
            this.endpoint_x = apiServer + '/ws/service/terminal';
        }

        public JasperAPI.terminals_element_imsitoissid GetTerminalsByImsi(JasperAPI.imsi_element imsi) {
            JasperAPI.GetTerminalsByImsiRequest_element request_x = new JasperAPI.GetTerminalsByImsiRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.imsi = imsi;
            JasperAPI.GetTerminalsByImsiResponse_element response_x;
            Map<String, JasperAPI.GetTerminalsByImsiResponse_element> response_map_x = new Map<String, JasperAPI.GetTerminalsByImsiResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/GetTerminalsByImsi',
              'http://api.jasperwireless.com/ws/schema',
              'GetTerminalsByImsiRequest',
              'http://api.jasperwireless.com/ws/schema',
              'GetTerminalsByImsiResponse',
              'JasperAPI.GetTerminalsByImsiResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.terminals;
        }
        public JasperAPI.EditTerminalResponse_element EditTerminal(String iccid,Date effectiveDate,String targetValue,String changeType) {
            JasperAPI.EditTerminalRequest_element request_x = new JasperAPI.EditTerminalRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.iccid = iccid;
            request_x.effectiveDate = effectiveDate;
            request_x.targetValue = targetValue;
            request_x.changeType = changeType;
            JasperAPI.EditTerminalResponse_element response_x;
            Map<String, JasperAPI.EditTerminalResponse_element> response_map_x = new Map<String, JasperAPI.EditTerminalResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/EditTerminal',
              'http://api.jasperwireless.com/ws/schema',
              'EditTerminalRequest',
              'http://api.jasperwireless.com/ws/schema',
              'EditTerminalResponse',
              'JasperAPI.EditTerminalResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }
        public String SendCancelLocation(String iccid) {
            JasperAPI.SendCancelLocationRequest_element request_x = new JasperAPI.SendCancelLocationRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.iccid = iccid;
            JasperAPI.SendCancelLocationResponse_element response_x;
            Map<String, JasperAPI.SendCancelLocationResponse_element> response_map_x = new Map<String, JasperAPI.SendCancelLocationResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/SendCancelLocation',
              'http://api.jasperwireless.com/ws/schema',
              'SendCancelLocationRequest',
              'http://api.jasperwireless.com/ws/schema',
              'SendCancelLocationResponse',
              'JasperAPI.SendCancelLocationResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.status;
        }
        public JasperAPI.iccids_element GetModifiedTerminals(DateTime since,String simState) {
            JasperAPI.GetModifiedTerminalsRequest_element request_x = new JasperAPI.GetModifiedTerminalsRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.since = since;
            request_x.simState = simState;
            JasperAPI.GetModifiedTerminalsResponse_element response_x;
            Map<String, JasperAPI.GetModifiedTerminalsResponse_element> response_map_x = new Map<String, JasperAPI.GetModifiedTerminalsResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/GetModifiedTerminals',
              'http://api.jasperwireless.com/ws/schema',
              'GetModifiedTerminalsRequest',
              'http://api.jasperwireless.com/ws/schema',
              'GetModifiedTerminalsResponse',
              'JasperAPI.GetModifiedTerminalsResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.iccids;
        }
        public JasperAPI.QueueTerminalRatePlanResponse_element QueueTerminalRatePlan(String iccid,String renewalRatePlan) {
            JasperAPI.QueueTerminalRatePlanRequest_element request_x = new JasperAPI.QueueTerminalRatePlanRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.iccid = iccid;
            request_x.renewalRatePlan = renewalRatePlan;
            JasperAPI.QueueTerminalRatePlanResponse_element response_x;
            Map<String, JasperAPI.QueueTerminalRatePlanResponse_element> response_map_x = new Map<String, JasperAPI.QueueTerminalRatePlanResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/QueueTerminalRatePlan',
              'http://api.jasperwireless.com/ws/schema',
              'QueueTerminalRatePlanRequest',
              'http://api.jasperwireless.com/ws/schema',
              'QueueTerminalRatePlanResponse',
              'JasperAPI.QueueTerminalRatePlanResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }
        public JasperAPI.simTransferToAccountStatusList_element TransferTrialSimsToAccount(JasperAPI.iccidList_element iccidList,Long accountId) {
            JasperAPI.TransferTrialSimsToAccountRequest_element request_x = new JasperAPI.TransferTrialSimsToAccountRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.iccidList = iccidList;
            request_x.accountId = accountId;
            JasperAPI.TransferTrialSimsToAccountResponse_element response_x;
            Map<String, JasperAPI.TransferTrialSimsToAccountResponse_element> response_map_x = new Map<String, JasperAPI.TransferTrialSimsToAccountResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/TransferTrialSimsToAccount',
              'http://api.jasperwireless.com/ws/schema',
              'TransferTrialSimsToAccountRequest',
              'http://api.jasperwireless.com/ws/schema',
              'TransferTrialSimsToAccountResponse',
              'JasperAPI.TransferTrialSimsToAccountResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.simTransferToAccountStatusList;
        }
        public JasperAPI.EditTerminalRatingResponse_element EditTerminalRating(String iccid,DateTime termStartDate,DateTime termEndDate,String renewalMode,String renewalRatePlan) {
            JasperAPI.EditTerminalRatingRequest_element request_x = new JasperAPI.EditTerminalRatingRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.iccid = iccid;
            request_x.termStartDate = termStartDate;
            request_x.termEndDate = termEndDate;
            request_x.renewalMode = renewalMode;
            request_x.renewalRatePlan = renewalRatePlan;
            JasperAPI.EditTerminalRatingResponse_element response_x;
            Map<String, JasperAPI.EditTerminalRatingResponse_element> response_map_x = new Map<String, JasperAPI.EditTerminalRatingResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/EditTerminalRating',
              'http://api.jasperwireless.com/ws/schema',
              'EditTerminalRatingRequest',
              'http://api.jasperwireless.com/ws/schema',
              'EditTerminalRatingResponse',
              'JasperAPI.EditTerminalRatingResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }
        public String TransferTerminalAccountNoSimStatus(String iccid,String msisdn,Long accountid,String ratePlan,String communicationPlan,DateTime dateShipped) {
            JasperAPI.TransferTerminalAccountNoSimStatusRequest_element request_x = new JasperAPI.TransferTerminalAccountNoSimStatusRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.iccid = iccid;
            request_x.msisdn = msisdn;
            request_x.accountid = accountid;
            request_x.ratePlan = ratePlan;
            request_x.communicationPlan = communicationPlan;
            request_x.dateShipped = dateShipped;
            JasperAPI.TransferTerminalAccountNoSimStatusResponse_element response_x;
            Map<String, JasperAPI.TransferTerminalAccountNoSimStatusResponse_element> response_map_x = new Map<String, JasperAPI.TransferTerminalAccountNoSimStatusResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/TransferTerminalAccountNoSimStatus',
              'http://api.jasperwireless.com/ws/schema',
              'TransferTerminalAccountNoSimStatusRequest',
              'http://api.jasperwireless.com/ws/schema',
              'TransferTerminalAccountNoSimStatusResponse',
              'JasperAPI.TransferTerminalAccountNoSimStatusResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.iccid;
        }
        public JasperAPI.simTransferToAccountStatusList_element TransferSimsToAccount(JasperAPI.iccidList_element iccidList,Long accountId,String ratePlanName,String commPlanName) {
            JasperAPI.TransferSimsToAccountRequest_element request_x = new JasperAPI.TransferSimsToAccountRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.iccidList = iccidList;
            request_x.accountId = accountId;
            request_x.ratePlanName = ratePlanName;
            request_x.commPlanName = commPlanName;
            JasperAPI.TransferSimsToAccountResponse_element response_x;
            Map<String, JasperAPI.TransferSimsToAccountResponse_element> response_map_x = new Map<String, JasperAPI.TransferSimsToAccountResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/TransferSimsToAccount',
              'http://api.jasperwireless.com/ws/schema',
              'TransferSimsToAccountRequest',
              'http://api.jasperwireless.com/ws/schema',
              'TransferSimsToAccountResponse',
              'JasperAPI.TransferSimsToAccountResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.simTransferToAccountStatusList;
        }
        public JasperAPI.GetTerminalRatingResponse_element GetTerminalRating(String iccid) {
            JasperAPI.GetTerminalRatingRequest_element request_x = new JasperAPI.GetTerminalRatingRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.iccid = iccid;
            JasperAPI.GetTerminalRatingResponse_element response_x;
            Map<String, JasperAPI.GetTerminalRatingResponse_element> response_map_x = new Map<String, JasperAPI.GetTerminalRatingResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/GetTerminalRating',
              'http://api.jasperwireless.com/ws/schema',
              'GetTerminalRatingRequest',
              'http://api.jasperwireless.com/ws/schema',
              'GetTerminalRatingResponse',
              'JasperAPI.GetTerminalRatingResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }
        public JasperAPI.AssignOrUpdateIPAddressResponse_element AssignOrUpdateIPAddress(String iccid,String apn,String ipAddress,String pdpId) {
            JasperAPI.AssignOrUpdateIPAddressRequest_element request_x = new JasperAPI.AssignOrUpdateIPAddressRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.iccid = iccid;
            request_x.apn = apn;
            request_x.ipAddress = ipAddress;
            request_x.pdpId = pdpId;
            JasperAPI.AssignOrUpdateIPAddressResponse_element response_x;
            Map<String, JasperAPI.AssignOrUpdateIPAddressResponse_element> response_map_x = new Map<String, JasperAPI.AssignOrUpdateIPAddressResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/AssignOrUpdateIPAddress',
              'http://api.jasperwireless.com/ws/schema',
              'AssignOrUpdateIPAddressRequest',
              'http://api.jasperwireless.com/ws/schema',
              'AssignOrUpdateIPAddressResponse',
              'JasperAPI.AssignOrUpdateIPAddressResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }
        public JasperAPI.registrationInfo_element GetTerminalLatestRegistration(String imsi) {
            JasperAPI.GetTerminalLatestRegistrationRequest_element request_x = new JasperAPI.GetTerminalLatestRegistrationRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.imsi = imsi;
            JasperAPI.GetTerminalLatestRegistrationResponse_element response_x;
            Map<String, JasperAPI.GetTerminalLatestRegistrationResponse_element> response_map_x = new Map<String, JasperAPI.GetTerminalLatestRegistrationResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/GetTerminalLatestRegistration',
              'http://api.jasperwireless.com/ws/schema',
              'GetTerminalLatestRegistrationRequest',
              'http://api.jasperwireless.com/ws/schema',
              'GetTerminalLatestRegistrationResponse',
              'JasperAPI.GetTerminalLatestRegistrationResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.registrationInfo;
        }
        public JasperAPI.iccids_element GetTerminalsBySecureSimId(String secureSimId) {
            JasperAPI.GetTerminalsBySecureSimIdRequest_element request_x = new JasperAPI.GetTerminalsBySecureSimIdRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.secureSimId = secureSimId;
            JasperAPI.GetTerminalsBySecureSimIdResponse_element response_x;
            Map<String, JasperAPI.GetTerminalsBySecureSimIdResponse_element> response_map_x = new Map<String, JasperAPI.GetTerminalsBySecureSimIdResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/GetTerminalsBySecureSimId',
              'http://api.jasperwireless.com/ws/schema',
              'GetTerminalsBySecureSimIdRequest',
              'http://api.jasperwireless.com/ws/schema',
              'GetTerminalsBySecureSimIdResponse',
              'JasperAPI.GetTerminalsBySecureSimIdResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.iccids;
        }
        public String EditLinePayStatusPerAcct(String operatorAccountId,String linePaymentStatus) {
            JasperAPI.EditLinePayStatusPerAcctRequest_element request_x = new JasperAPI.EditLinePayStatusPerAcctRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.operatorAccountId = operatorAccountId;
            request_x.linePaymentStatus = linePaymentStatus;
            JasperAPI.EditLinePayStatusPerAcctResponse_element response_x;
            Map<String, JasperAPI.EditLinePayStatusPerAcctResponse_element> response_map_x = new Map<String, JasperAPI.EditLinePayStatusPerAcctResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/EditLinePayStatusPerAcct',
              'http://api.jasperwireless.com/ws/schema',
              'EditLinePayStatusPerAcctRequest',
              'http://api.jasperwireless.com/ws/schema',
              'EditLinePayStatusPerAcctResponse',
              'JasperAPI.EditLinePayStatusPerAcctResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.operatorAccountId;
        }
        public JasperAPI.terminals_element_msisdntype GetTerminalsByMsisdn(JasperAPI.msisdns_element msisdns) {
            JasperAPI.GetTerminalsByMsisdnRequest_element request_x = new JasperAPI.GetTerminalsByMsisdnRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.msisdns = msisdns;
            JasperAPI.GetTerminalsByMsisdnResponse_element response_x;
            Map<String, JasperAPI.GetTerminalsByMsisdnResponse_element> response_map_x = new Map<String, JasperAPI.GetTerminalsByMsisdnResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/GetTerminalsByMsisdn',
              'http://api.jasperwireless.com/ws/schema',
              'GetTerminalsByMsisdnRequest',
              'http://api.jasperwireless.com/ws/schema',
              'GetTerminalsByMsisdnResponse',
              'JasperAPI.GetTerminalsByMsisdnResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.terminals;
        }
        public JasperAPI.RemoveRatePlanFromQueueResponse_element RemoveRatePlanFromQueue(String iccid,Long queuePosition,String ratePlan) {
            JasperAPI.RemoveRatePlanFromQueueRequest_element request_x = new JasperAPI.RemoveRatePlanFromQueueRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.iccid = iccid;
            request_x.queuePosition = queuePosition;
            request_x.ratePlan = ratePlan;
            JasperAPI.RemoveRatePlanFromQueueResponse_element response_x;
            Map<String, JasperAPI.RemoveRatePlanFromQueueResponse_element> response_map_x = new Map<String, JasperAPI.RemoveRatePlanFromQueueResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/RemoveRatePlanFromQueue',
              'http://api.jasperwireless.com/ws/schema',
              'RemoveRatePlanFromQueueRequest',
              'http://api.jasperwireless.com/ws/schema',
              'RemoveRatePlanFromQueueResponse',
              'JasperAPI.RemoveRatePlanFromQueueResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }
        public JasperAPI.terminalAuditTrails_element GetTerminalAuditTrail(String iccid,Integer daysOfHistory) {
            JasperAPI.GetTerminalAuditTrailRequest_element request_x = new JasperAPI.GetTerminalAuditTrailRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.iccid = iccid;
            request_x.daysOfHistory = daysOfHistory;
            JasperAPI.GetTerminalAuditTrailResponse_element response_x;
            Map<String, JasperAPI.GetTerminalAuditTrailResponse_element> response_map_x = new Map<String, JasperAPI.GetTerminalAuditTrailResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/GetTerminalAuditTrail',
              'http://api.jasperwireless.com/ws/schema',
              'GetTerminalAuditTrailRequest',
              'http://api.jasperwireless.com/ws/schema',
              'GetTerminalAuditTrailResponse',
              'JasperAPI.GetTerminalAuditTrailResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.terminalAuditTrails;
        }
        public JasperAPI.terminals_element GetTerminalDetails(JasperAPI.iccids_element iccids) {
            JasperAPI.GetTerminalDetailsRequest_element request_x = new JasperAPI.GetTerminalDetailsRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.iccids = iccids;
            JasperAPI.GetTerminalDetailsResponse_element response_x;
            Map<String, JasperAPI.GetTerminalDetailsResponse_element> response_map_x = new Map<String, JasperAPI.GetTerminalDetailsResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/GetTerminalDetails',
              'http://api.jasperwireless.com/ws/schema',
              'GetTerminalDetailsRequest',
              'http://api.jasperwireless.com/ws/schema',
              'GetTerminalDetailsResponse',
              'JasperAPI.GetTerminalDetailsResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.terminals;
        }
        public String GetLinePayStatusByOpAcctId(String operatorAccountId) {
            JasperAPI.GetLinePayStatusByOpAcctIdRequest_element request_x = new JasperAPI.GetLinePayStatusByOpAcctIdRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.operatorAccountId = operatorAccountId;
            JasperAPI.GetLinePayStatusByOpAcctIdResponse_element response_x;
            Map<String, JasperAPI.GetLinePayStatusByOpAcctIdResponse_element> response_map_x = new Map<String, JasperAPI.GetLinePayStatusByOpAcctIdResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/GetLinePayStatusByOpAcctId',
              'http://api.jasperwireless.com/ws/schema',
              'GetLinePayStatusByOpAcctIdRequest',
              'http://api.jasperwireless.com/ws/schema',
              'GetLinePayStatusByOpAcctIdResponse',
              'JasperAPI.GetLinePayStatusByOpAcctIdResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.linePaymentStatus;
        }
        public JasperAPI.sessionInfo_element GetSessionInfo(String[] iccid) {
            JasperAPI.GetSessionInfoRequest_element request_x = new JasperAPI.GetSessionInfoRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.iccid = iccid;
            JasperAPI.GetSessionInfoResponse_element response_x;
            Map<String, JasperAPI.GetSessionInfoResponse_element> response_map_x = new Map<String, JasperAPI.GetSessionInfoResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/GetSessionInfo',
              'http://api.jasperwireless.com/ws/schema',
              'GetSessionInfoRequest',
              'http://api.jasperwireless.com/ws/schema',
              'GetSessionInfoResponse',
              'JasperAPI.GetSessionInfoResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.sessionInfo;
        }
        public String UpdateSecureSimCredentials(JasperAPI.iccids_element iccids,String username,String password) {
            JasperAPI.UpdateSecureSimCredentialsRequest_element request_x = new JasperAPI.UpdateSecureSimCredentialsRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.iccids = iccids;
            request_x.username = username;
            request_x.password = password;
            JasperAPI.UpdateSecureSimCredentialsResponse_element response_x;
            Map<String, JasperAPI.UpdateSecureSimCredentialsResponse_element> response_map_x = new Map<String, JasperAPI.UpdateSecureSimCredentialsResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/UpdateSecureSimCredentials',
              'http://api.jasperwireless.com/ws/schema',
              'UpdateSecureSimCredentialsRequest',
              'http://api.jasperwireless.com/ws/schema',
              'UpdateSecureSimCredentialsResponse',
              'JasperAPI.UpdateSecureSimCredentialsResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.message;
        }
        public String SimRmaExchange(String iccid,String exchangeSimIccid,String externalRmaId) {
            JasperAPI.SimRmaExchangeRequest_element request_x = new JasperAPI.SimRmaExchangeRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.iccid = iccid;
            request_x.exchangeSimIccid = exchangeSimIccid;
            request_x.externalRmaId = externalRmaId;
            JasperAPI.SimRmaExchangeResponse_element response_x;
            Map<String, JasperAPI.SimRmaExchangeResponse_element> response_map_x = new Map<String, JasperAPI.SimRmaExchangeResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/SimRmaExchange',
              'http://api.jasperwireless.com/ws/schema',
              'SimRmaExchangeRequest',
              'http://api.jasperwireless.com/ws/schema',
              'SimRmaExchangeResponse',
              'JasperAPI.SimRmaExchangeResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.rmaId;
        }
        public String EditLinePayStatus(String iccid,String linePaymentStatus) {
            JasperAPI.EditLinePayStatusRequest_element request_x = new JasperAPI.EditLinePayStatusRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.iccid = iccid;
            request_x.linePaymentStatus = linePaymentStatus;
            JasperAPI.EditLinePayStatusResponse_element response_x;
            Map<String, JasperAPI.EditLinePayStatusResponse_element> response_map_x = new Map<String, JasperAPI.EditLinePayStatusResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/terminal/EditLinePayStatus',
              'http://api.jasperwireless.com/ws/schema',
              'EditLinePayStatusRequest',
              'http://api.jasperwireless.com/ws/schema',
              'EditLinePayStatusResponse',
              'JasperAPI.EditLinePayStatusResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.iccid;
        }
    }
}