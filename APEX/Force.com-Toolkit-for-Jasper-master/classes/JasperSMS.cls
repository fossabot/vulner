/*
Copyright (c) 2016, Salesforce.com
All rights reserved.

Redistribution and use in source and binary forms, with or without 
modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this 
  list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice, 
  this list of conditions and the following disclaimer in the documentation 
  and/or other materials provided with the distribution.
* Neither the name of Salesforce.com nor the names of its contributors may be 
  used to endorse or promote products derived from this software without 
  specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE 
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, 
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

//Generated by wsdl2apex

public class JasperSMS {
    public class SmsPort {
        public String endpoint_x;
		public JasperAPI.SoapSecurity Security;
		private String Security_hns = 'Security=http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd';
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://api.jasperwireless.com/ws/schema', 'JasperSMS'};
        public String licenseKey;

        public SmsPort(String username, String password, String licenseKey, String apiServer) {
        	this.Security = new JasperAPI.SoapSecurity(username, password);
            this.licenseKey = licenseKey;
            this.endpoint_x = apiServer + '/ws/service/Sms';
        }

        public Long SendSMS(String sentToIccid,String messageText,Integer tpvp) {
            JasperAPI.SendSMSRequest_element request_x = new JasperAPI.SendSMSRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.sentToIccid = sentToIccid;
            request_x.messageText = messageText;
            request_x.tpvp = tpvp;
            JasperAPI.SendSMSResponse_element response_x;
            Map<String, JasperAPI.SendSMSResponse_element> response_map_x = new Map<String, JasperAPI.SendSMSResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/sms/SendSMS',
              'http://api.jasperwireless.com/ws/schema',
              'SendSMSRequest',
              'http://api.jasperwireless.com/ws/schema',
              'SendSMSResponse',
              'JasperAPI.SendSMSResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.smsMsgId;
        }
        public JasperAPI.smsMsgIdList_element SendBulkSMS(JasperAPI.iccidList_element iccidList,String messageText,Integer tpvp) {
            JasperAPI.SendBulkSMSRequest_element request_x = new JasperAPI.SendBulkSMSRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.iccidList = iccidList;
            request_x.messageText = messageText;
            request_x.tpvp = tpvp;
            JasperAPI.SendBulkSMSResponse_element response_x;
            Map<String, JasperAPI.SendBulkSMSResponse_element> response_map_x = new Map<String, JasperAPI.SendBulkSMSResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/sms/SendBulkSMS',
              'http://api.jasperwireless.com/ws/schema',
              'SendBulkSMSRequest',
              'http://api.jasperwireless.com/ws/schema',
              'SendBulkSMSResponse',
              'JasperAPI.SendBulkSMSResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.smsMsgIdList;
        }
        public JasperAPI.GetModifiedSMSResponse_element GetModifiedSMS(String iccid,DateTime fromDate,DateTime toDate) {
            JasperAPI.GetModifiedSMSRequest_element request_x = new JasperAPI.GetModifiedSMSRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.iccid = iccid;
            request_x.fromDate = fromDate;
            request_x.toDate = toDate;
            JasperAPI.GetModifiedSMSResponse_element response_x;
            Map<String, JasperAPI.GetModifiedSMSResponse_element> response_map_x = new Map<String, JasperAPI.GetModifiedSMSResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/sms/GetModifiedSMS',
              'http://api.jasperwireless.com/ws/schema',
              'GetModifiedSMSRequest',
              'http://api.jasperwireless.com/ws/schema',
              'GetModifiedSMSResponse',
              'JasperAPI.GetModifiedSMSResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x;
        }
        public JasperAPI.smsMessages_element GetSMSDetails(JasperAPI.smsMsgIds_element smsMsgIds) {
            JasperAPI.GetSMSDetailsRequest_element request_x = new JasperAPI.GetSMSDetailsRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.smsMsgIds = smsMsgIds;
            JasperAPI.GetSMSDetailsResponse_element response_x;
            Map<String, JasperAPI.GetSMSDetailsResponse_element> response_map_x = new Map<String, JasperAPI.GetSMSDetailsResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/sms/GetSMSDetails',
              'http://api.jasperwireless.com/ws/schema',
              'GetSMSDetailsRequest',
              'http://api.jasperwireless.com/ws/schema',
              'GetSMSDetailsResponse',
              'JasperAPI.GetSMSDetailsResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.smsMessages;
        }
        public JasperAPI.smsMsgIdList_element SendBulkSMSToMsisdn(JasperAPI.msisdnList_element msisdnList,String messageText,Integer tpvp) {
            JasperAPI.SendBulkSMSToMsisdnRequest_element request_x = new JasperAPI.SendBulkSMSToMsisdnRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.msisdnList = msisdnList;
            request_x.messageText = messageText;
            request_x.tpvp = tpvp;
            JasperAPI.SendBulkSMSToMsisdnResponse_element response_x;
            Map<String, JasperAPI.SendBulkSMSToMsisdnResponse_element> response_map_x = new Map<String, JasperAPI.SendBulkSMSToMsisdnResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/sms/SendBulkSMSToMsisdn',
              'http://api.jasperwireless.com/ws/schema',
              'SendBulkSMSToMsisdnRequest',
              'http://api.jasperwireless.com/ws/schema',
              'SendBulkSMSToMsisdnResponse',
              'JasperAPI.SendBulkSMSToMsisdnResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.smsMsgIdList;
        }
        public Long SendSMSToMsisdn(String sentToMsisdn,String messageText,Integer tpvp) {
            JasperAPI.SendSMSToMsisdnRequest_element request_x = new JasperAPI.SendSMSToMsisdnRequest_element();
            request_x.licenseKey = this.licenseKey;
            request_x.sentToMsisdn = sentToMsisdn;
            request_x.messageText = messageText;
            request_x.tpvp = tpvp;
            JasperAPI.SendSMSToMsisdnResponse_element response_x;
            Map<String, JasperAPI.SendSMSToMsisdnResponse_element> response_map_x = new Map<String, JasperAPI.SendSMSToMsisdnResponse_element>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
              this,
              request_x,
              response_map_x,
              new String[]{endpoint_x,
              'http://api.jasperwireless.com/ws/service/sms/SendSMSToMsisdn',
              'http://api.jasperwireless.com/ws/schema',
              'SendSMSToMsisdnRequest',
              'http://api.jasperwireless.com/ws/schema',
              'SendSMSToMsisdnResponse',
              'JasperAPI.SendSMSToMsisdnResponse_element'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.smsMsgId;
        }
    }
}