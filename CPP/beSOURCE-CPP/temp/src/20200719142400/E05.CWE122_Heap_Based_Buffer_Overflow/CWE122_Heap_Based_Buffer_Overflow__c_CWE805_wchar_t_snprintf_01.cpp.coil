{
   ("filename", "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp");
   ("language", "CPP");
   ("include", "std_testcase.h");
   ("include", "<stdio.h>");
   ("include", "<stdlib.h>");
   ("include", "<stddef.h>");
   ("include", "<time.h>");
   ("include", "<limits.h>");
   ("include", "<string.h>");
   ("include", "<stdint.h>");
   ("include", "<stdint.h>");
   ("include", "<ctype.h>");
   ("include", "<fcntl.h>");
   ("include", "<sys/types.h>");
   ("include", "<sys/stat.h>");
   ("include", "std_testcase_io.h");
   ("include", "std_testcase.h");
   ("include", "<wchar.h>");
}
{
   (!3, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase_io.h");
   (!2, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h");
   (!1, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp");
}
[
   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp",
   MD("__asm__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp",
   MD("__attribute__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp",
   MD("va_start(list)",["list"],"list = (char *) &va_alist")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp",
   MD("va_end(list)",["list"],"va_end(list)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp",
   MD("va_arg(list,mode)",["list","mode"],"va_arg(list,(mode)null)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp",
   MD("offsetof(st,m)",["st","m"],"((size_t)(&((st *)0)->m))")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp",
   MD("RAND32()",[],"((rand()<<30) ^ (rand()<<15) ^ rand())")
   ,(84#0,84#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp",
   MD("RAND64()",[],"(((int64_t)rand()<<60) ^ ((int64_t)rand()<<45) ^ ((int64_t)rand()<<30) ^ ((int64_t)rand()<<15) ^ (int64_t)rand())")
   ,(87#0,87#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   SF([extern,const,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"GLOBAL_CONST_TRUE")
   ,(103#18,103#34,!2)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   SF([extern,const,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"GLOBAL_CONST_FALSE")
   ,(104#18,104#35,!2)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   SF([extern,const,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"GLOBAL_CONST_FIVE")
   ,(105#18,105#34,!2)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   SF([extern,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"globalTrue")
   ,(110#12,110#21,!2)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   SF([extern,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"globalFalse")
   ,(111#12,111#22,!2)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   SF([extern,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"globalFive")
   ,(112#12,112#21,!2)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   SF([extern,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"globalArgc")
   ,(55#12,55#21,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   SF([extern,extern],ref(ref(char)),<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"globalArgv")
   ,(56#12,56#24,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   SI(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,
   {[
      {;
      ,(1#1,103#1,!1)};
      {RE0
      ,(?)}
      ]
   ,(1#1,103#1,!1)}
   )
   ,(1#1,103#1,!1)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"printLine"):unit,[(mod(ref(char),[const]):"line",(14#16,14#32,!3))],[]
   )
   ,(14#1,14#34,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"printWLine"):unit,[(mod(ref(wchar),[const]):"line",(16#17,16#36,!3))],[]
   )
   ,(16#1,16#38,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"printIntLine"):unit,[(int:"intNumber",(18#20,18#32,!3))],[]
   )
   ,(18#1,18#34,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"printShortLine"):unit,[(short:"shortNumber",(20#22,20#38,!3))],[]
   )
   ,(20#1,20#40,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"printFloatLine"):unit,[(float:"floatNumber",(22#22,22#38,!3))],[]
   )
   ,(22#1,22#40,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"printLongLine"):unit,[(long:"longNumber",(24#20,24#34,!3))],[]
   )
   ,(24#1,24#36,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"printLongLongLine"):unit,[(class((,int64_t)):"longLongIntNumber",(26#24,26#48,!3))],[]
   )
   ,(26#1,26#50,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"printSizeTLine"):unit,[(class((,size_t)):"sizeTNumber",(28#21,28#38,!3))],[]
   )
   ,(28#1,28#40,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"printHexCharLine"):unit,[(char:"charHex",(30#23,30#34,!3))],[]
   )
   ,(30#1,30#36,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"printWcharLine"):unit,[(wchar:"wideChar",(32#21,32#36,!3))],[]
   )
   ,(32#1,32#38,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"printUnsignedLine"):unit,[(uint:"unsignedNumber",(34#24,34#46,!3))],[]
   )
   ,(34#1,34#48,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"printHexUnsignedCharLine"):unit,[(uchar:"unsignedCharacter",(36#31,36#61,!3))],[]
   )
   ,(36#1,36#63,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"printDoubleLine"):unit,[(double:"doubleNumber",(38#22,38#40,!3))],[]
   )
   ,(38#1,38#42,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"printStructLine"):unit,[(mod(ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),[const]):"structTwoIntsStruct",(40#22,40#62,!3))],[]
   )
   ,(40#1,40#64,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"printBytesLine"):unit,[(mod(ref(uchar),[const]):"bytes",(42#21,42#47,!3)),(class((,size_t)):"numBytes",(42#50,42#64,!3))],[]
   )
   ,(42#1,42#66,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"decodeHexChars"):class((,size_t)),[(ref(uchar):"bytes",(44#23,44#43,!3)),(class((,size_t)):"numBytes",(44#46,44#60,!3)),(mod(ref(char),[const]):"hex",(44#63,44#78,!3))],[]
   )
   ,(44#1,44#80,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"decodeHexWChars"):class((,size_t)),[(ref(uchar):"bytes",(46#24,46#44,!3)),(class((,size_t)):"numBytes",(46#47,46#61,!3)),(mod(ref(wchar),[const]):"hex",(46#64,46#82,!3))],[]
   )
   ,(46#1,46#84,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"globalReturnsTrue"):int,[],[]
   )
   ,(48#1,48#24,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"globalReturnsFalse"):int,[],[]
   )
   ,(50#1,50#25,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"globalReturnsTrueOrFalse"):int,[],[]
   )
   ,(52#1,52#31,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   FN([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01_bad"):unit,[],[],
   {[
      {VD("data",ref(wchar))
      ,(31#13,31#18,!1)};
      {{AE({V("data"),ref(wchar),(32#5,32#8,!1)},{CS(ref(unit),{"0"N,int,(32#12,32#15,!1)}),ref(unit),(32#12,32#15,!1)}),ref(wchar),(32#5,32#15,!1)}
      ,(32#5,32#15,!1)};
      {{AE({V("data"),ref(wchar),(34#5,34#8,!1)},{CS(ref(wchar),{SC((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"malloc"),[int],[{BO(*,{"50"N,int,(34#30,34#31,!1)},{SO(wchar),int,(34#33,34#47,!1)}),int,(34#30,34#47,!1)}]),class((,"%undef")),(34#23,34#48,!1)}),ref(wchar),(34#12,34#48,!1)}),ref(wchar),(34#5,34#48,!1)}
      ,(34#5,34#48,!1)};
      {{AE({AA({V("data"),ref(wchar),(35#5,35#8,!1)},[{"0"N,int,(35#10,35#10,!1)}]),wchar,(35#5,35#11,!1)},{"\0"C,char,(35#15,35#19,!1)}),wchar,(35#5,35#19,!1)}
      ,(35#5,35#19,!1)};
      {[
         {VD("source",wchar,([{"100"N,int,(37#24,37#26,!1)}]))
         ,(37#17,37#27,!1)};
         {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"wmemset"),[arr(wchar),char,int],[{V("source"),arr(wchar),(38#17,38#22,!1)},{"C"C,char,(38#25,38#28,!1)},{BO(-,{"100"N,int,(38#31,38#33,!1)},{"1"N,int,(38#35,38#35,!1)}),int,(38#31,38#35,!1)}])
         ,(38#9,38#36,!1)};
         {{AE({AA({V("source"),arr(wchar),(39#9,39#14,!1)},[{BO(-,{"100"N,int,(39#16,39#18,!1)},{"1"N,int,(39#20,39#20,!1)}),int,(39#16,39#20,!1)}]),wchar,(39#9,39#21,!1)},{"\0"C,char,(39#25,39#29,!1)}),wchar,(39#9,39#29,!1)}
         ,(39#9,39#29,!1)};
         {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"snprintf"),[ref(wchar),int,string,arr(wchar)],[{V("data"),ref(wchar),(41#18,41#21,!1)},{"100"N,int,(41#24,41#26,!1)},{"%s"S,string,(41#29,41#33,!1)},{V("source"),arr(wchar),(41#36,41#41,!1)}])
         ,(41#9,41#42,!1)};
         {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"printWLine"),[mod(ref(wchar),[const])],[{V("data"),ref(wchar),(42#20,42#23,!1)}])
         ,(42#9,42#24,!1)};
         {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"free"),[ref(wchar)],[{V("data"),ref(wchar),(43#14,43#17,!1)}])
         ,(43#9,43#18,!1)}
         ]
      ,(36#5,44#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(29#1,45#1,!1)}
   )
   ,(29#1,45#1,!1)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   FN([public,static],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"goodG2B"):mod(unit,[static]),[],[],
   {[
      {VD("data",ref(wchar))
      ,(54#13,54#18,!1)};
      {{AE({V("data"),ref(wchar),(55#5,55#8,!1)},{CS(ref(unit),{"0"N,int,(55#12,55#15,!1)}),ref(unit),(55#12,55#15,!1)}),ref(wchar),(55#5,55#15,!1)}
      ,(55#5,55#15,!1)};
      {{AE({V("data"),ref(wchar),(57#5,57#8,!1)},{CS(ref(wchar),{SC((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"malloc"),[int],[{BO(*,{"100"N,int,(57#30,57#32,!1)},{SO(wchar),int,(57#34,57#48,!1)}),int,(57#30,57#48,!1)}]),class((,"%undef")),(57#23,57#49,!1)}),ref(wchar),(57#12,57#49,!1)}),ref(wchar),(57#5,57#49,!1)}
      ,(57#5,57#49,!1)};
      {{AE({AA({V("data"),ref(wchar),(58#5,58#8,!1)},[{"0"N,int,(58#10,58#10,!1)}]),wchar,(58#5,58#11,!1)},{"\0"C,char,(58#15,58#19,!1)}),wchar,(58#5,58#19,!1)}
      ,(58#5,58#19,!1)};
      {[
         {VD("source",wchar,([{"100"N,int,(60#24,60#26,!1)}]))
         ,(60#17,60#27,!1)};
         {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"wmemset"),[arr(wchar),char,int],[{V("source"),arr(wchar),(61#17,61#22,!1)},{"C"C,char,(61#25,61#28,!1)},{BO(-,{"100"N,int,(61#31,61#33,!1)},{"1"N,int,(61#35,61#35,!1)}),int,(61#31,61#35,!1)}])
         ,(61#9,61#36,!1)};
         {{AE({AA({V("source"),arr(wchar),(62#9,62#14,!1)},[{BO(-,{"100"N,int,(62#16,62#18,!1)},{"1"N,int,(62#20,62#20,!1)}),int,(62#16,62#20,!1)}]),wchar,(62#9,62#21,!1)},{"\0"C,char,(62#25,62#29,!1)}),wchar,(62#9,62#29,!1)}
         ,(62#9,62#29,!1)};
         {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"snprintf"),[ref(wchar),int,string,arr(wchar)],[{V("data"),ref(wchar),(64#18,64#21,!1)},{"100"N,int,(64#24,64#26,!1)},{"%s"S,string,(64#29,64#33,!1)},{V("source"),arr(wchar),(64#36,64#41,!1)}])
         ,(64#9,64#42,!1)};
         {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"printWLine"),[mod(ref(wchar),[const])],[{V("data"),ref(wchar),(65#20,65#23,!1)}])
         ,(65#9,65#24,!1)};
         {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"free"),[ref(wchar)],[{V("data"),ref(wchar),(66#14,66#17,!1)}])
         ,(66#9,66#18,!1)}
         ]
      ,(59#5,67#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(52#1,68#1,!1)}
   )
   ,(52#1,68#1,!1)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01",
   FN([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01_good"):unit,[],[],
   {[
      {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01">,"goodG2B"),[],[])
      ,(72#5,72#13,!1)};
      {RE0
      ,(?)}
      ]
   ,(70#1,73#1,!1)}
   )
   ,(70#1,73#1,!1)},

   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp",
   CL([struct],(,_twoIntsStruct),[])
   {
      ([public],"intOne":int,(92#9,92#14,!2));
      ([public],"intTwo":int,(93#9,93#14,!2))
   }
   ,(90#1,94#16,!2)}

,


   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp",
   [
      M("/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.c\nLabel Definition File: CWE122_Heap_Based_Buffer_Overflow__c_CWE805.string.label.xml\nTemplate File: sources-sink-01.tmpl.c\n*/",1,(1#0,1#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp")),
      M("/*\n * @description\n * CWE: 122 Heap Based Buffer Overflow\n * BadSource:  Allocate using malloc() and set data pointer to a small buffer\n * GoodSource: Allocate using malloc() and set data pointer to a large buffer\n * Sink: snprintf\n *    BadSink : Copy string to data using snprintf\n * Flow Variant: 01 Baseline\n *\n * */",6,(6#0,6#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp")),
      M("/* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */",33,(33#0,33#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp")),
      M("/* null terminate */",35,(35#0,35#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp")),
      M("/* fill with L'C's */",38,(38#0,38#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp")),
      M("/* null terminate */",39,(39#0,39#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp")),
      M("/* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */",40,(40#0,40#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp")),
      M("/* OMITBAD */",47,(47#0,47#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp")),
      M("/* goodG2B uses the GoodSource with the BadSink */",51,(51#0,51#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp")),
      M("/* FIX: Allocate and point data to a large buffer that is at least as large as the large buffer used in the sink */",56,(56#0,56#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp")),
      M("/* null terminate */",58,(58#0,58#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp")),
      M("/* fill with L'C's */",61,(61#0,61#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp")),
      M("/* null terminate */",62,(62#0,62#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp")),
      M("/* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */",63,(63#0,63#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp")),
      M("/* OMITGOOD */",75,(75#0,75#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp")),
      M("/* Below is the main(). It is only used when building this testcase on\n * its own for testing or for building a binary to use in testing binary\n * analysis tools. It is not used when compiling all the testcases as one\n * application, which is how source code analysis tools are tested.\n */",77,(77#0,77#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp")),
      M("/* seed randomness */",87,(87#0,87#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp")),
      M("/* OMITGOOD */",93,(93#0,93#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp")),
      M("/* OMITBAD */",98,(98#0,98#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_snprintf_01.cpp"))
   ]
   }
]