{
   ("filename", "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp");
   ("language", "CPP");
   ("include", "std_testcase.h");
   ("include", "<stdio.h>");
   ("include", "<stdlib.h>");
   ("include", "<stddef.h>");
   ("include", "<time.h>");
   ("include", "<limits.h>");
   ("include", "<string.h>");
   ("include", "<stdint.h>");
   ("include", "<stdint.h>");
   ("include", "<ctype.h>");
   ("include", "<fcntl.h>");
   ("include", "<sys/types.h>");
   ("include", "<sys/stat.h>");
   ("include", "std_testcase_io.h");
   ("include", "std_testcase.h");
}
{
   (!3, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase_io.h");
   (!2, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h");
   (!1, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp");
}
[
   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp",
   MD("__asm__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp",
   MD("__attribute__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp",
   MD("va_start(list)",["list"],"list = (char *) &va_alist")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp",
   MD("va_end(list)",["list"],"va_end(list)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp",
   MD("va_arg(list,mode)",["list","mode"],"va_arg(list,(mode)null)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp",
   MD("offsetof(st,m)",["st","m"],"((size_t)(&((st *)0)->m))")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp",
   MD("RAND32()",[],"((rand()<<30) ^ (rand()<<15) ^ rand())")
   ,(84#0,84#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp",
   MD("RAND64()",[],"(((int64_t)rand()<<60) ^ ((int64_t)rand()<<45) ^ ((int64_t)rand()<<30) ^ ((int64_t)rand()<<15) ^ (int64_t)rand())")
   ,(87#0,87#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   SF([extern,const,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"GLOBAL_CONST_TRUE")
   ,(103#18,103#34,!2)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   SF([extern,const,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"GLOBAL_CONST_FALSE")
   ,(104#18,104#35,!2)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   SF([extern,const,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"GLOBAL_CONST_FIVE")
   ,(105#18,105#34,!2)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   SF([extern,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"globalTrue")
   ,(110#12,110#21,!2)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   SF([extern,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"globalFalse")
   ,(111#12,111#22,!2)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   SF([extern,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"globalFive")
   ,(112#12,112#21,!2)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   SF([extern,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"globalArgc")
   ,(55#12,55#21,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   SF([extern,extern],ref(ref(char)),<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"globalArgv")
   ,(56#12,56#24,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   SI(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,
   {[
      {;
      ,(1#1,187#1,!1)};
      {RE0
      ,(?)}
      ]
   ,(1#1,187#1,!1)}
   )
   ,(1#1,187#1,!1)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printLine"):unit,[(mod(ref(char),[const]):"line",(14#16,14#32,!3))],[]
   )
   ,(14#1,14#34,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printWLine"):unit,[(mod(ref(wchar),[const]):"line",(16#17,16#36,!3))],[]
   )
   ,(16#1,16#38,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printIntLine"):unit,[(int:"intNumber",(18#20,18#32,!3))],[]
   )
   ,(18#1,18#34,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printShortLine"):unit,[(short:"shortNumber",(20#22,20#38,!3))],[]
   )
   ,(20#1,20#40,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printFloatLine"):unit,[(float:"floatNumber",(22#22,22#38,!3))],[]
   )
   ,(22#1,22#40,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printLongLine"):unit,[(long:"longNumber",(24#20,24#34,!3))],[]
   )
   ,(24#1,24#36,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printLongLongLine"):unit,[(class((,int64_t)):"longLongIntNumber",(26#24,26#48,!3))],[]
   )
   ,(26#1,26#50,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printSizeTLine"):unit,[(class((,size_t)):"sizeTNumber",(28#21,28#38,!3))],[]
   )
   ,(28#1,28#40,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printHexCharLine"):unit,[(char:"charHex",(30#23,30#34,!3))],[]
   )
   ,(30#1,30#36,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printWcharLine"):unit,[(wchar:"wideChar",(32#21,32#36,!3))],[]
   )
   ,(32#1,32#38,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printUnsignedLine"):unit,[(uint:"unsignedNumber",(34#24,34#46,!3))],[]
   )
   ,(34#1,34#48,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printHexUnsignedCharLine"):unit,[(uchar:"unsignedCharacter",(36#31,36#61,!3))],[]
   )
   ,(36#1,36#63,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printDoubleLine"):unit,[(double:"doubleNumber",(38#22,38#40,!3))],[]
   )
   ,(38#1,38#42,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printStructLine"):unit,[(mod(ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),[const]):"structTwoIntsStruct",(40#22,40#62,!3))],[]
   )
   ,(40#1,40#64,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printBytesLine"):unit,[(mod(ref(uchar),[const]):"bytes",(42#21,42#47,!3)),(class((,size_t)):"numBytes",(42#50,42#64,!3))],[]
   )
   ,(42#1,42#66,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"decodeHexChars"):class((,size_t)),[(ref(uchar):"bytes",(44#23,44#43,!3)),(class((,size_t)):"numBytes",(44#46,44#60,!3)),(mod(ref(char),[const]):"hex",(44#63,44#78,!3))],[]
   )
   ,(44#1,44#80,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"decodeHexWChars"):class((,size_t)),[(ref(uchar):"bytes",(46#24,46#44,!3)),(class((,size_t)):"numBytes",(46#47,46#61,!3)),(mod(ref(wchar),[const]):"hex",(46#64,46#82,!3))],[]
   )
   ,(46#1,46#84,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"globalReturnsTrue"):int,[],[]
   )
   ,(48#1,48#24,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"globalReturnsFalse"):int,[],[]
   )
   ,(50#1,50#25,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"globalReturnsTrueOrFalse"):int,[],[]
   )
   ,(52#1,52#31,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   FN([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01_bad"):unit,[],[],
   {[
      {VD("data",int)
      ,(26#9,26#12,!1)};
      {{AE({V("data"),int,(28#5,28#8,!1)},{UO(-,{"1"N,int,(28#13,28#13,!1)}),int,(28#12,28#13,!1)}),int,(28#5,28#13,!1)}
      ,(28#5,28#13,!1)};
      {[
         {VD("inputBuffer",char,([{BO(+,{BO(*,{"3"N,int,(30#27,30#27,!1)},{SO({V("data"),int,(30#38,30#41,!1)}),int,(30#31,30#42,!1)}),int,(30#27,30#42,!1)},{"2"N,int,(30#46,30#46,!1)}),int,(30#26,30#47,!1)}],[{""S,string,(30#52,30#53,!1)}]))
         ,(30#14,30#48,!1)};
         {IF({BO(!=,{SC((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"fgets"),[arr(char),int,class((,"%undef"))],[{V("inputBuffer"),arr(char),(32#19,32#29,!1)},{BO(+,{BO(*,{"3"N,int,(32#33,32#33,!1)},{SO({V("data"),int,(32#44,32#47,!1)}),int,(32#37,32#48,!1)}),int,(32#33,32#48,!1)},{"2"N,int,(32#52,32#52,!1)}),int,(32#32,32#53,!1)},{V("stdin"),class((,"%undef")),(32#56,32#60,!1)}]),class((,"%undef")),(32#13,32#61,!1)},{CS(ref(unit),{"0"N,int,(32#66,32#69,!1)}),ref(unit),(32#66,32#69,!1)}),bool,(32#13,32#69,!1)},
            {[
               {{AE({V("data"),int,(35#13,35#16,!1)},{SC((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"atoi"),[arr(char)],[{V("inputBuffer"),arr(char),(35#25,35#35,!1)}]),class((,"%undef")),(35#20,35#36,!1)}),int,(35#13,35#36,!1)}
               ,(35#13,35#36,!1)}
               ]
            ,(33#9,36#9,!1)},
            {[
               {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printLine"),[mod(ref(char),[const])],[{"fgets() failed."S,string,(39#23,39#39,!1)}])
               ,(39#13,39#40,!1)}
               ]
            ,(38#9,40#9,!1)})
         ,(32#9,40#9,!1)}
         ]
      ,(29#5,41#5,!1)};
      {[
         {VD("i",int)
         ,(43#13,43#13,!1)};
         {VD("buffer",ref(int),{CS(ref(int),{SC((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"malloc"),[int],[{BO(*,{"10"N,int,(44#38,44#39,!1)},{SO(int),int,(44#43,44#53,!1)}),int,(44#38,44#53,!1)}]),class((,"%undef")),(44#31,44#54,!1)}),ref(int),(44#24,44#54,!1)})
         ,(44#13,44#20,!1)};
         {FL(L47,
            {[
               {{AE({V("i"),int,(46#14,46#14,!1)},{"0"N,int,(46#18,46#18,!1)}),int,(46#14,46#18,!1)}
               ,(46#14,46#18,!1)}
            ]
            ,(46#9,49#9,!1)},{BO(<,{V("i"),int,(46#21,46#21,!1)},{"10"N,int,(46#25,46#26,!1)}),bool,(46#21,46#26,!1)},
            {[
               {{IPO({V("i"),int,(46#29,46#29,!1)}),int,(46#29,46#31,!1)}
               ,(46#29,46#31,!1)}
            ]
            ,(46#9,49#9,!1)},
            {[
               {{AE({AA({V("buffer"),ref(int),(48#13,48#18,!1)},[{V("i"),int,(48#20,48#20,!1)}]),int,(48#13,48#21,!1)},{"0"N,int,(48#25,48#25,!1)}),int,(48#13,48#25,!1)}
               ,(48#13,48#25,!1)}
               ]
            ,(47#9,49#9,!1)})
         ,(46#9,49#9,!1)};
         {IF({BO(>=,{V("data"),int,(52#13,52#16,!1)},{"0"N,int,(52#21,52#21,!1)}),bool,(52#13,52#21,!1)},
            {[
               {{AE({AA({V("buffer"),ref(int),(54#13,54#18,!1)},[{V("data"),int,(54#20,54#23,!1)}]),int,(54#13,54#24,!1)},{"1"N,int,(54#28,54#28,!1)}),int,(54#13,54#28,!1)}
               ,(54#13,54#28,!1)};
               {FL(L48,
                  {[
                     {{AE({V("i"),int,(56#17,56#17,!1)},{"0"N,int,(56#21,56#21,!1)}),int,(56#17,56#21,!1)}
                     ,(56#17,56#21,!1)}
                  ]
                  ,(56#13,59#13,!1)},{BO(<,{V("i"),int,(56#24,56#24,!1)},{"10"N,int,(56#28,56#29,!1)}),bool,(56#24,56#29,!1)},
                  {[
                     {{IPO({V("i"),int,(56#32,56#32,!1)}),int,(56#32,56#34,!1)}
                     ,(56#32,56#34,!1)}
                  ]
                  ,(56#13,59#13,!1)},
                  {[
                     {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printIntLine"),[int],[{AA({V("buffer"),ref(int),(58#30,58#35,!1)},[{V("i"),int,(58#37,58#37,!1)}]),int,(58#30,58#38,!1)}])
                     ,(58#17,58#39,!1)}
                     ]
                  ,(57#13,59#13,!1)})
               ,(56#13,59#13,!1)}
               ]
            ,(53#9,60#9,!1)},
            {[
               {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printLine"),[mod(ref(char),[const])],[{"ERROR: Array index is negative."S,string,(63#23,63#55,!1)}])
               ,(63#13,63#56,!1)}
               ]
            ,(62#9,64#9,!1)})
         ,(52#9,64#9,!1)};
         {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"free"),[ref(int)],[{V("buffer"),ref(int),(65#14,65#19,!1)}])
         ,(65#9,65#20,!1)}
         ]
      ,(42#5,66#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(24#1,67#1,!1)}
   )
   ,(24#1,67#1,!1)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   FN([public,static],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"goodG2B"):mod(unit,[static]),[],[],
   {[
      {VD("data",int)
      ,(76#9,76#12,!1)};
      {{AE({V("data"),int,(78#5,78#8,!1)},{UO(-,{"1"N,int,(78#13,78#13,!1)}),int,(78#12,78#13,!1)}),int,(78#5,78#13,!1)}
      ,(78#5,78#13,!1)};
      {{AE({V("data"),int,(81#5,81#8,!1)},{"7"N,int,(81#12,81#12,!1)}),int,(81#5,81#12,!1)}
      ,(81#5,81#12,!1)};
      {[
         {VD("i",int)
         ,(83#13,83#13,!1)};
         {VD("buffer",ref(int),{CS(ref(int),{SC((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"malloc"),[int],[{BO(*,{"10"N,int,(84#38,84#39,!1)},{SO(int),int,(84#43,84#53,!1)}),int,(84#38,84#53,!1)}]),class((,"%undef")),(84#31,84#54,!1)}),ref(int),(84#24,84#54,!1)})
         ,(84#13,84#20,!1)};
         {FL(L49,
            {[
               {{AE({V("i"),int,(86#14,86#14,!1)},{"0"N,int,(86#18,86#18,!1)}),int,(86#14,86#18,!1)}
               ,(86#14,86#18,!1)}
            ]
            ,(86#9,89#9,!1)},{BO(<,{V("i"),int,(86#21,86#21,!1)},{"10"N,int,(86#25,86#26,!1)}),bool,(86#21,86#26,!1)},
            {[
               {{IPO({V("i"),int,(86#29,86#29,!1)}),int,(86#29,86#31,!1)}
               ,(86#29,86#31,!1)}
            ]
            ,(86#9,89#9,!1)},
            {[
               {{AE({AA({V("buffer"),ref(int),(88#13,88#18,!1)},[{V("i"),int,(88#20,88#20,!1)}]),int,(88#13,88#21,!1)},{"0"N,int,(88#25,88#25,!1)}),int,(88#13,88#25,!1)}
               ,(88#13,88#25,!1)}
               ]
            ,(87#9,89#9,!1)})
         ,(86#9,89#9,!1)};
         {IF({BO(>=,{V("data"),int,(92#13,92#16,!1)},{"0"N,int,(92#21,92#21,!1)}),bool,(92#13,92#21,!1)},
            {[
               {{AE({AA({V("buffer"),ref(int),(94#13,94#18,!1)},[{V("data"),int,(94#20,94#23,!1)}]),int,(94#13,94#24,!1)},{"1"N,int,(94#28,94#28,!1)}),int,(94#13,94#28,!1)}
               ,(94#13,94#28,!1)};
               {FL(L50,
                  {[
                     {{AE({V("i"),int,(96#17,96#17,!1)},{"0"N,int,(96#21,96#21,!1)}),int,(96#17,96#21,!1)}
                     ,(96#17,96#21,!1)}
                  ]
                  ,(96#13,99#13,!1)},{BO(<,{V("i"),int,(96#24,96#24,!1)},{"10"N,int,(96#28,96#29,!1)}),bool,(96#24,96#29,!1)},
                  {[
                     {{IPO({V("i"),int,(96#32,96#32,!1)}),int,(96#32,96#34,!1)}
                     ,(96#32,96#34,!1)}
                  ]
                  ,(96#13,99#13,!1)},
                  {[
                     {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printIntLine"),[int],[{AA({V("buffer"),ref(int),(98#30,98#35,!1)},[{V("i"),int,(98#37,98#37,!1)}]),int,(98#30,98#38,!1)}])
                     ,(98#17,98#39,!1)}
                     ]
                  ,(97#13,99#13,!1)})
               ,(96#13,99#13,!1)}
               ]
            ,(93#9,100#9,!1)},
            {[
               {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printLine"),[mod(ref(char),[const])],[{"ERROR: Array index is negative."S,string,(103#23,103#55,!1)}])
               ,(103#13,103#56,!1)}
               ]
            ,(102#9,104#9,!1)})
         ,(92#9,104#9,!1)};
         {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"free"),[ref(int)],[{V("buffer"),ref(int),(105#14,105#19,!1)}])
         ,(105#9,105#20,!1)}
         ]
      ,(82#5,106#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(74#1,107#1,!1)}
   )
   ,(74#1,107#1,!1)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   FN([public,static],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"goodB2G"):mod(unit,[static]),[],[],
   {[
      {VD("data",int)
      ,(112#9,112#12,!1)};
      {{AE({V("data"),int,(114#5,114#8,!1)},{UO(-,{"1"N,int,(114#13,114#13,!1)}),int,(114#12,114#13,!1)}),int,(114#5,114#13,!1)}
      ,(114#5,114#13,!1)};
      {[
         {VD("inputBuffer",char,([{BO(+,{BO(*,{"3"N,int,(116#27,116#27,!1)},{SO({V("data"),int,(116#38,116#41,!1)}),int,(116#31,116#42,!1)}),int,(116#27,116#42,!1)},{"2"N,int,(116#46,116#46,!1)}),int,(116#26,116#47,!1)}],[{""S,string,(116#52,116#53,!1)}]))
         ,(116#14,116#48,!1)};
         {IF({BO(!=,{SC((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"fgets"),[arr(char),int,class((,"%undef"))],[{V("inputBuffer"),arr(char),(118#19,118#29,!1)},{BO(+,{BO(*,{"3"N,int,(118#33,118#33,!1)},{SO({V("data"),int,(118#44,118#47,!1)}),int,(118#37,118#48,!1)}),int,(118#33,118#48,!1)},{"2"N,int,(118#52,118#52,!1)}),int,(118#32,118#53,!1)},{V("stdin"),class((,"%undef")),(118#56,118#60,!1)}]),class((,"%undef")),(118#13,118#61,!1)},{CS(ref(unit),{"0"N,int,(118#66,118#69,!1)}),ref(unit),(118#66,118#69,!1)}),bool,(118#13,118#69,!1)},
            {[
               {{AE({V("data"),int,(121#13,121#16,!1)},{SC((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"atoi"),[arr(char)],[{V("inputBuffer"),arr(char),(121#25,121#35,!1)}]),class((,"%undef")),(121#20,121#36,!1)}),int,(121#13,121#36,!1)}
               ,(121#13,121#36,!1)}
               ]
            ,(119#9,122#9,!1)},
            {[
               {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printLine"),[mod(ref(char),[const])],[{"fgets() failed."S,string,(125#23,125#39,!1)}])
               ,(125#13,125#40,!1)}
               ]
            ,(124#9,126#9,!1)})
         ,(118#9,126#9,!1)}
         ]
      ,(115#5,127#5,!1)};
      {[
         {VD("i",int)
         ,(129#13,129#13,!1)};
         {VD("buffer",ref(int),{CS(ref(int),{SC((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"malloc"),[int],[{BO(*,{"10"N,int,(130#38,130#39,!1)},{SO(int),int,(130#43,130#53,!1)}),int,(130#38,130#53,!1)}]),class((,"%undef")),(130#31,130#54,!1)}),ref(int),(130#24,130#54,!1)})
         ,(130#13,130#20,!1)};
         {FL(L51,
            {[
               {{AE({V("i"),int,(132#14,132#14,!1)},{"0"N,int,(132#18,132#18,!1)}),int,(132#14,132#18,!1)}
               ,(132#14,132#18,!1)}
            ]
            ,(132#9,135#9,!1)},{BO(<,{V("i"),int,(132#21,132#21,!1)},{"10"N,int,(132#25,132#26,!1)}),bool,(132#21,132#26,!1)},
            {[
               {{IPO({V("i"),int,(132#29,132#29,!1)}),int,(132#29,132#31,!1)}
               ,(132#29,132#31,!1)}
            ]
            ,(132#9,135#9,!1)},
            {[
               {{AE({AA({V("buffer"),ref(int),(134#13,134#18,!1)},[{V("i"),int,(134#20,134#20,!1)}]),int,(134#13,134#21,!1)},{"0"N,int,(134#25,134#25,!1)}),int,(134#13,134#25,!1)}
               ,(134#13,134#25,!1)}
               ]
            ,(133#9,135#9,!1)})
         ,(132#9,135#9,!1)};
         {IF({BO(&&,{BO(>=,{V("data"),int,(137#13,137#16,!1)},{"0"N,int,(137#21,137#21,!1)}),bool,(137#13,137#21,!1)},{BO(<,{V("data"),int,(137#26,137#29,!1)},{"10"N,int,(137#33,137#36,!1)}),bool,(137#26,137#36,!1)}),bool,(137#13,137#36,!1)},
            {[
               {{AE({AA({V("buffer"),ref(int),(139#13,139#18,!1)},[{V("data"),int,(139#20,139#23,!1)}]),int,(139#13,139#24,!1)},{"1"N,int,(139#28,139#28,!1)}),int,(139#13,139#28,!1)}
               ,(139#13,139#28,!1)};
               {FL(L52,
                  {[
                     {{AE({V("i"),int,(141#17,141#17,!1)},{"0"N,int,(141#21,141#21,!1)}),int,(141#17,141#21,!1)}
                     ,(141#17,141#21,!1)}
                  ]
                  ,(141#13,144#13,!1)},{BO(<,{V("i"),int,(141#24,141#24,!1)},{"10"N,int,(141#28,141#29,!1)}),bool,(141#24,141#29,!1)},
                  {[
                     {{IPO({V("i"),int,(141#32,141#32,!1)}),int,(141#32,141#34,!1)}
                     ,(141#32,141#34,!1)}
                  ]
                  ,(141#13,144#13,!1)},
                  {[
                     {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printIntLine"),[int],[{AA({V("buffer"),ref(int),(143#30,143#35,!1)},[{V("i"),int,(143#37,143#37,!1)}]),int,(143#30,143#38,!1)}])
                     ,(143#17,143#39,!1)}
                     ]
                  ,(142#13,144#13,!1)})
               ,(141#13,144#13,!1)}
               ]
            ,(138#9,145#9,!1)},
            {[
               {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"printLine"),[mod(ref(char),[const])],[{"ERROR: Array index is out-of-bounds"S,string,(148#23,148#59,!1)}])
               ,(148#13,148#60,!1)}
               ]
            ,(147#9,149#9,!1)})
         ,(137#9,149#9,!1)};
         {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"free"),[ref(int)],[{V("buffer"),ref(int),(150#14,150#19,!1)}])
         ,(150#9,150#20,!1)}
         ]
      ,(128#5,151#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(110#1,152#1,!1)}
   )
   ,(110#1,152#1,!1)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01",
   FN([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01_good"):unit,[],[],
   {[
      {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"goodG2B"),[],[])
      ,(156#5,156#13,!1)};
      {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01">,"goodB2G"),[],[])
      ,(157#5,157#13,!1)};
      {RE0
      ,(?)}
      ]
   ,(154#1,158#1,!1)}
   )
   ,(154#1,158#1,!1)},

   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp",
   CL([struct],(,_twoIntsStruct),[])
   {
      ([public],"intOne":int,(92#9,92#14,!2));
      ([public],"intTwo":int,(93#9,93#14,!2))
   }
   ,(90#1,94#16,!2)}

,


   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp",
   [
      M("/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.c\nLabel Definition File: CWE122_Heap_Based_Buffer_Overflow__c_CWE129.label.xml\nTemplate File: sources-sinks-01.tmpl.c\n*/",1,(1#0,1#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/*\n * @description\n * CWE: 122 Heap Based Buffer Overflow\n * BadSource: fgets Read data from the console using fgets()\n * GoodSource: Larger than zero but less than 10\n * Sinks:\n *    GoodSink: Ensure the array index is valid\n *    BadSink : Improperly check the array index by not checking the upper bound\n * Flow Variant: 01 Baseline\n *\n * */",6,(6#0,6#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* Initialize data */",27,(27#0,27#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* POTENTIAL FLAW: Read data from the console using fgets() */",31,(31#0,31#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* Convert to int */",34,(34#0,34#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* initialize buffer */",45,(45#0,45#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* POTENTIAL FLAW: Attempt to write to an index of the array that is above the upper bound\n         * This code does check to see if the array index is negative */",50,(50#0,50#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* Print the array values */",55,(55#0,55#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* OMITBAD */",69,(69#0,69#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* goodG2B uses the GoodSource with the BadSink */",73,(73#0,73#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* Initialize data */",77,(77#0,77#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* FIX: Use a value greater than 0, but less than 10 to avoid attempting to\n    * access an index of the array in the sink that is out-of-bounds */",79,(79#0,79#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* initialize buffer */",85,(85#0,85#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* POTENTIAL FLAW: Attempt to write to an index of the array that is above the upper bound\n         * This code does check to see if the array index is negative */",90,(90#0,90#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* Print the array values */",95,(95#0,95#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* goodB2G uses the BadSource with the GoodSink */",109,(109#0,109#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* Initialize data */",113,(113#0,113#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* POTENTIAL FLAW: Read data from the console using fgets() */",117,(117#0,117#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* Convert to int */",120,(120#0,120#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* initialize buffer */",131,(131#0,131#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* FIX: Properly validate the array index and prevent a buffer overflow */",136,(136#0,136#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* Print the array values */",140,(140#0,140#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* OMITGOOD */",160,(160#0,160#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */",162,(162#0,162#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* seed randomness */",171,(171#0,171#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* OMITGOOD */",177,(177#0,177#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp")),
      M("/* OMITBAD */",182,(182#0,182#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_01.cpp"))
   ]
   }
]