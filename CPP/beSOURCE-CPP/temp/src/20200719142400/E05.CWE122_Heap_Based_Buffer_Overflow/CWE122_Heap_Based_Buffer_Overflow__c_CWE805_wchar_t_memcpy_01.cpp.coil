{
   ("filename", "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp");
   ("language", "CPP");
   ("include", "std_testcase.h");
   ("include", "<stdio.h>");
   ("include", "<stdlib.h>");
   ("include", "<stddef.h>");
   ("include", "<time.h>");
   ("include", "<limits.h>");
   ("include", "<string.h>");
   ("include", "<stdint.h>");
   ("include", "<stdint.h>");
   ("include", "<ctype.h>");
   ("include", "<fcntl.h>");
   ("include", "<sys/types.h>");
   ("include", "<sys/stat.h>");
   ("include", "std_testcase_io.h");
   ("include", "std_testcase.h");
   ("include", "<wchar.h>");
}
{
   (!3, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase_io.h");
   (!2, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h");
   (!1, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp");
}
[
   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp",
   MD("__asm__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp",
   MD("__attribute__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp",
   MD("va_start(list)",["list"],"list = (char *) &va_alist")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp",
   MD("va_end(list)",["list"],"va_end(list)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp",
   MD("va_arg(list,mode)",["list","mode"],"va_arg(list,(mode)null)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp",
   MD("offsetof(st,m)",["st","m"],"((size_t)(&((st *)0)->m))")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp",
   MD("RAND32()",[],"((rand()<<30) ^ (rand()<<15) ^ rand())")
   ,(84#0,84#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp",
   MD("RAND64()",[],"(((int64_t)rand()<<60) ^ ((int64_t)rand()<<45) ^ ((int64_t)rand()<<30) ^ ((int64_t)rand()<<15) ^ (int64_t)rand())")
   ,(87#0,87#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   SF([extern,const,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"GLOBAL_CONST_TRUE")
   ,(103#18,103#34,!2)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   SF([extern,const,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"GLOBAL_CONST_FALSE")
   ,(104#18,104#35,!2)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   SF([extern,const,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"GLOBAL_CONST_FIVE")
   ,(105#18,105#34,!2)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   SF([extern,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"globalTrue")
   ,(110#12,110#21,!2)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   SF([extern,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"globalFalse")
   ,(111#12,111#22,!2)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   SF([extern,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"globalFive")
   ,(112#12,112#21,!2)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   SF([extern,extern],int,<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"globalArgc")
   ,(55#12,55#21,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   SF([extern,extern],ref(ref(char)),<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"globalArgv")
   ,(56#12,56#24,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   SI(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,
   {[
      {;
      ,(1#1,99#1,!1)};
      {RE0
      ,(?)}
      ]
   ,(1#1,99#1,!1)}
   )
   ,(1#1,99#1,!1)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"printLine"):unit,[(mod(ref(char),[const]):"line",(14#16,14#32,!3))],[]
   )
   ,(14#1,14#34,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"printWLine"):unit,[(mod(ref(wchar),[const]):"line",(16#17,16#36,!3))],[]
   )
   ,(16#1,16#38,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"printIntLine"):unit,[(int:"intNumber",(18#20,18#32,!3))],[]
   )
   ,(18#1,18#34,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"printShortLine"):unit,[(short:"shortNumber",(20#22,20#38,!3))],[]
   )
   ,(20#1,20#40,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"printFloatLine"):unit,[(float:"floatNumber",(22#22,22#38,!3))],[]
   )
   ,(22#1,22#40,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"printLongLine"):unit,[(long:"longNumber",(24#20,24#34,!3))],[]
   )
   ,(24#1,24#36,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"printLongLongLine"):unit,[(class((,int64_t)):"longLongIntNumber",(26#24,26#48,!3))],[]
   )
   ,(26#1,26#50,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"printSizeTLine"):unit,[(class((,size_t)):"sizeTNumber",(28#21,28#38,!3))],[]
   )
   ,(28#1,28#40,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"printHexCharLine"):unit,[(char:"charHex",(30#23,30#34,!3))],[]
   )
   ,(30#1,30#36,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"printWcharLine"):unit,[(wchar:"wideChar",(32#21,32#36,!3))],[]
   )
   ,(32#1,32#38,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"printUnsignedLine"):unit,[(uint:"unsignedNumber",(34#24,34#46,!3))],[]
   )
   ,(34#1,34#48,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"printHexUnsignedCharLine"):unit,[(uchar:"unsignedCharacter",(36#31,36#61,!3))],[]
   )
   ,(36#1,36#63,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"printDoubleLine"):unit,[(double:"doubleNumber",(38#22,38#40,!3))],[]
   )
   ,(38#1,38#42,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"printStructLine"):unit,[(mod(ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),[const]):"structTwoIntsStruct",(40#22,40#62,!3))],[]
   )
   ,(40#1,40#64,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"printBytesLine"):unit,[(mod(ref(uchar),[const]):"bytes",(42#21,42#47,!3)),(class((,size_t)):"numBytes",(42#50,42#64,!3))],[]
   )
   ,(42#1,42#66,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"decodeHexChars"):class((,size_t)),[(ref(uchar):"bytes",(44#23,44#43,!3)),(class((,size_t)):"numBytes",(44#46,44#60,!3)),(mod(ref(char),[const]):"hex",(44#63,44#78,!3))],[]
   )
   ,(44#1,44#80,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"decodeHexWChars"):class((,size_t)),[(ref(uchar):"bytes",(46#24,46#44,!3)),(class((,size_t)):"numBytes",(46#47,46#61,!3)),(mod(ref(wchar),[const]):"hex",(46#64,46#82,!3))],[]
   )
   ,(46#1,46#84,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"globalReturnsTrue"):int,[],[]
   )
   ,(48#1,48#24,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"globalReturnsFalse"):int,[],[]
   )
   ,(50#1,50#25,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   PT([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"globalReturnsTrueOrFalse"):int,[],[]
   )
   ,(52#1,52#31,!3)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   FN([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01_bad"):unit,[],[],
   {[
      {VD("data",ref(wchar))
      ,(25#13,25#18,!1)};
      {{AE({V("data"),ref(wchar),(26#5,26#8,!1)},{CS(ref(unit),{"0"N,int,(26#12,26#15,!1)}),ref(unit),(26#12,26#15,!1)}),ref(wchar),(26#5,26#15,!1)}
      ,(26#5,26#15,!1)};
      {{AE({V("data"),ref(wchar),(28#5,28#8,!1)},{CS(ref(wchar),{SC((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"malloc"),[int],[{BO(*,{"50"N,int,(28#30,28#31,!1)},{SO(wchar),int,(28#33,28#47,!1)}),int,(28#30,28#47,!1)}]),class((,"%undef")),(28#23,28#48,!1)}),ref(wchar),(28#12,28#48,!1)}),ref(wchar),(28#5,28#48,!1)}
      ,(28#5,28#48,!1)};
      {{AE({AA({V("data"),ref(wchar),(29#5,29#8,!1)},[{"0"N,int,(29#10,29#10,!1)}]),wchar,(29#5,29#11,!1)},{"\0"C,char,(29#15,29#19,!1)}),wchar,(29#5,29#19,!1)}
      ,(29#5,29#19,!1)};
      {[
         {VD("source",wchar,([{"100"N,int,(31#24,31#26,!1)}]))
         ,(31#17,31#27,!1)};
         {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"wmemset"),[arr(wchar),char,int],[{V("source"),arr(wchar),(32#17,32#22,!1)},{"C"C,char,(32#25,32#28,!1)},{BO(-,{"100"N,int,(32#31,32#33,!1)},{"1"N,int,(32#35,32#35,!1)}),int,(32#31,32#35,!1)}])
         ,(32#9,32#36,!1)};
         {{AE({AA({V("source"),arr(wchar),(33#9,33#14,!1)},[{BO(-,{"100"N,int,(33#16,33#18,!1)},{"1"N,int,(33#20,33#20,!1)}),int,(33#16,33#20,!1)}]),wchar,(33#9,33#21,!1)},{"\0"C,char,(33#25,33#29,!1)}),wchar,(33#9,33#29,!1)}
         ,(33#9,33#29,!1)};
         {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"memcpy"),[ref(wchar),arr(wchar),int],[{V("data"),ref(wchar),(35#16,35#19,!1)},{V("source"),arr(wchar),(35#22,35#27,!1)},{BO(*,{"100"N,int,(35#30,35#32,!1)},{SO(wchar),int,(35#34,35#48,!1)}),int,(35#30,35#48,!1)}])
         ,(35#9,35#49,!1)};
         {{AE({AA({V("data"),ref(wchar),(36#9,36#12,!1)},[{BO(-,{"100"N,int,(36#14,36#16,!1)},{"1"N,int,(36#18,36#18,!1)}),int,(36#14,36#18,!1)}]),wchar,(36#9,36#19,!1)},{"\0"C,char,(36#23,36#27,!1)}),wchar,(36#9,36#27,!1)}
         ,(36#9,36#27,!1)};
         {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"printWLine"),[mod(ref(wchar),[const])],[{V("data"),ref(wchar),(37#20,37#23,!1)}])
         ,(37#9,37#24,!1)};
         {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"free"),[ref(wchar)],[{V("data"),ref(wchar),(38#14,38#17,!1)}])
         ,(38#9,38#18,!1)}
         ]
      ,(30#5,39#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(23#1,40#1,!1)}
   )
   ,(23#1,40#1,!1)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   FN([public,static],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"goodG2B"):mod(unit,[static]),[],[],
   {[
      {VD("data",ref(wchar))
      ,(49#13,49#18,!1)};
      {{AE({V("data"),ref(wchar),(50#5,50#8,!1)},{CS(ref(unit),{"0"N,int,(50#12,50#15,!1)}),ref(unit),(50#12,50#15,!1)}),ref(wchar),(50#5,50#15,!1)}
      ,(50#5,50#15,!1)};
      {{AE({V("data"),ref(wchar),(52#5,52#8,!1)},{CS(ref(wchar),{SC((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"malloc"),[int],[{BO(*,{"100"N,int,(52#30,52#32,!1)},{SO(wchar),int,(52#34,52#48,!1)}),int,(52#30,52#48,!1)}]),class((,"%undef")),(52#23,52#49,!1)}),ref(wchar),(52#12,52#49,!1)}),ref(wchar),(52#5,52#49,!1)}
      ,(52#5,52#49,!1)};
      {{AE({AA({V("data"),ref(wchar),(53#5,53#8,!1)},[{"0"N,int,(53#10,53#10,!1)}]),wchar,(53#5,53#11,!1)},{"\0"C,char,(53#15,53#19,!1)}),wchar,(53#5,53#19,!1)}
      ,(53#5,53#19,!1)};
      {[
         {VD("source",wchar,([{"100"N,int,(55#24,55#26,!1)}]))
         ,(55#17,55#27,!1)};
         {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"wmemset"),[arr(wchar),char,int],[{V("source"),arr(wchar),(56#17,56#22,!1)},{"C"C,char,(56#25,56#28,!1)},{BO(-,{"100"N,int,(56#31,56#33,!1)},{"1"N,int,(56#35,56#35,!1)}),int,(56#31,56#35,!1)}])
         ,(56#9,56#36,!1)};
         {{AE({AA({V("source"),arr(wchar),(57#9,57#14,!1)},[{BO(-,{"100"N,int,(57#16,57#18,!1)},{"1"N,int,(57#20,57#20,!1)}),int,(57#16,57#20,!1)}]),wchar,(57#9,57#21,!1)},{"\0"C,char,(57#25,57#29,!1)}),wchar,(57#9,57#29,!1)}
         ,(57#9,57#29,!1)};
         {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"memcpy"),[ref(wchar),arr(wchar),int],[{V("data"),ref(wchar),(59#16,59#19,!1)},{V("source"),arr(wchar),(59#22,59#27,!1)},{BO(*,{"100"N,int,(59#30,59#32,!1)},{SO(wchar),int,(59#34,59#48,!1)}),int,(59#30,59#48,!1)}])
         ,(59#9,59#49,!1)};
         {{AE({AA({V("data"),ref(wchar),(60#9,60#12,!1)},[{BO(-,{"100"N,int,(60#14,60#16,!1)},{"1"N,int,(60#18,60#18,!1)}),int,(60#14,60#18,!1)}]),wchar,(60#9,60#19,!1)},{"\0"C,char,(60#23,60#27,!1)}),wchar,(60#9,60#27,!1)}
         ,(60#9,60#27,!1)};
         {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"printWLine"),[mod(ref(wchar),[const])],[{V("data"),ref(wchar),(61#20,61#23,!1)}])
         ,(61#9,61#24,!1)};
         {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"free"),[ref(wchar)],[{V("data"),ref(wchar),(62#14,62#17,!1)}])
         ,(62#9,62#18,!1)}
         ]
      ,(54#5,63#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(47#1,64#1,!1)}
   )
   ,(47#1,64#1,!1)},

   {"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01",
   FN([public],(<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01_good"):unit,[],[],
   {[
      {PC0((<"CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01">,"goodG2B"),[],[])
      ,(68#5,68#13,!1)};
      {RE0
      ,(?)}
      ]
   ,(66#1,69#1,!1)}
   )
   ,(66#1,69#1,!1)},

   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp",
   CL([struct],(,_twoIntsStruct),[])
   {
      ([public],"intOne":int,(92#9,92#14,!2));
      ([public],"intTwo":int,(93#9,93#14,!2))
   }
   ,(90#1,94#16,!2)}

,


   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp",
   [
      M("/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.c\nLabel Definition File: CWE122_Heap_Based_Buffer_Overflow__c_CWE805.string.label.xml\nTemplate File: sources-sink-01.tmpl.c\n*/",1,(1#0,1#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/*\n * @description\n * CWE: 122 Heap Based Buffer Overflow\n * BadSource:  Allocate using malloc() and set data pointer to a small buffer\n * GoodSource: Allocate using malloc() and set data pointer to a large buffer\n * Sink: memcpy\n *    BadSink : Copy string to data using memcpy\n * Flow Variant: 01 Baseline\n *\n * */",6,(6#0,6#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/* FLAW: Allocate and point data to a small buffer that is smaller than the large buffer used in the sinks */",27,(27#0,27#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/* null terminate */",29,(29#0,29#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/* fill with L'C's */",32,(32#0,32#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/* null terminate */",33,(33#0,33#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */",34,(34#0,34#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/* Ensure the destination buffer is null terminated */",36,(36#0,36#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/* OMITBAD */",42,(42#0,42#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/* goodG2B uses the GoodSource with the BadSink */",46,(46#0,46#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/* FIX: Allocate and point data to a large buffer that is at least as large as the large buffer used in the sink */",51,(51#0,51#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/* null terminate */",53,(53#0,53#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/* fill with L'C's */",56,(56#0,56#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/* null terminate */",57,(57#0,57#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/* POTENTIAL FLAW: Possible buffer overflow if source is larger than data */",58,(58#0,58#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/* Ensure the destination buffer is null terminated */",60,(60#0,60#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/* OMITGOOD */",71,(71#0,71#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/* Below is the main(). It is only used when building this testcase on\n * its own for testing or for building a binary to use in testing binary\n * analysis tools. It is not used when compiling all the testcases as one\n * application, which is how source code analysis tools are tested.\n */",73,(73#0,73#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/* seed randomness */",83,(83#0,83#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/* OMITGOOD */",89,(89#0,89#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp")),
      M("/* OMITBAD */",94,(94#0,94#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E05.CWE122_Heap_Based_Buffer_Overflow/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_wchar_t_memcpy_01.cpp"))
   ]
   }
]