{
   ("filename", "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp");
   ("language", "CPP");
   ("include", "std_testcase.h");
   ("include", "<stdio.h>");
   ("include", "<stdlib.h>");
   ("include", "<stddef.h>");
   ("include", "<time.h>");
   ("include", "<limits.h>");
   ("include", "<string.h>");
   ("include", "<stdint.h>");
   ("include", "<stdint.h>");
   ("include", "<ctype.h>");
   ("include", "<fcntl.h>");
   ("include", "<sys/types.h>");
   ("include", "<sys/stat.h>");
   ("include", "std_testcase_io.h");
   ("include", "std_testcase.h");
}
{
   (!3, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase_io.h");
   (!2, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h");
   (!1, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp");
}
[
   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp",
   MD("__asm__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp",
   MD("__attribute__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp",
   MD("va_start(list)",["list"],"list = (char *) &va_alist")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp",
   MD("va_end(list)",["list"],"va_end(list)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp",
   MD("va_arg(list,mode)",["list","mode"],"va_arg(list,(mode)null)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp",
   MD("offsetof(st,m)",["st","m"],"((size_t)(&((st *)0)->m))")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp",
   MD("RAND32()",[],"((rand()<<30) ^ (rand()<<15) ^ rand())")
   ,(84#0,84#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp",
   MD("RAND64()",[],"(((int64_t)rand()<<60) ^ ((int64_t)rand()<<45) ^ ((int64_t)rand()<<30) ^ ((int64_t)rand()<<15) ^ (int64_t)rand())")
   ,(87#0,87#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   SF([extern,const,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"GLOBAL_CONST_TRUE")
   ,(103#18,103#34,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   SF([extern,const,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"GLOBAL_CONST_FALSE")
   ,(104#18,104#35,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   SF([extern,const,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"GLOBAL_CONST_FIVE")
   ,(105#18,105#34,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   SF([extern,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"globalTrue")
   ,(110#12,110#21,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   SF([extern,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"globalFalse")
   ,(111#12,111#22,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   SF([extern,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"globalFive")
   ,(112#12,112#21,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   SF([extern,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"globalArgc")
   ,(55#12,55#21,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   SF([extern,extern],ref(ref(char)),<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"globalArgv")
   ,(56#12,56#24,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   SI(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,
   {[
      {;
      ,(1#1,87#1,!1)};
      {RE0
      ,(?)}
      ]
   ,(1#1,87#1,!1)}
   )
   ,(1#1,87#1,!1)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"printLine"):unit,[(mod(ref(char),[const]):"line",(14#16,14#32,!3))],[]
   )
   ,(14#1,14#34,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"printWLine"):unit,[(mod(ref(wchar),[const]):"line",(16#17,16#36,!3))],[]
   )
   ,(16#1,16#38,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"printIntLine"):unit,[(int:"intNumber",(18#20,18#32,!3))],[]
   )
   ,(18#1,18#34,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"printShortLine"):unit,[(short:"shortNumber",(20#22,20#38,!3))],[]
   )
   ,(20#1,20#40,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"printFloatLine"):unit,[(float:"floatNumber",(22#22,22#38,!3))],[]
   )
   ,(22#1,22#40,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"printLongLine"):unit,[(long:"longNumber",(24#20,24#34,!3))],[]
   )
   ,(24#1,24#36,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"printLongLongLine"):unit,[(class((,int64_t)):"longLongIntNumber",(26#24,26#48,!3))],[]
   )
   ,(26#1,26#50,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"printSizeTLine"):unit,[(class((,size_t)):"sizeTNumber",(28#21,28#38,!3))],[]
   )
   ,(28#1,28#40,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"printHexCharLine"):unit,[(char:"charHex",(30#23,30#34,!3))],[]
   )
   ,(30#1,30#36,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"printWcharLine"):unit,[(wchar:"wideChar",(32#21,32#36,!3))],[]
   )
   ,(32#1,32#38,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"printUnsignedLine"):unit,[(uint:"unsignedNumber",(34#24,34#46,!3))],[]
   )
   ,(34#1,34#48,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"printHexUnsignedCharLine"):unit,[(uchar:"unsignedCharacter",(36#31,36#61,!3))],[]
   )
   ,(36#1,36#63,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"printDoubleLine"):unit,[(double:"doubleNumber",(38#22,38#40,!3))],[]
   )
   ,(38#1,38#42,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"printStructLine"):unit,[(mod(ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),[const]):"structTwoIntsStruct",(40#22,40#62,!3))],[]
   )
   ,(40#1,40#64,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"printBytesLine"):unit,[(mod(ref(uchar),[const]):"bytes",(42#21,42#47,!3)),(class((,size_t)):"numBytes",(42#50,42#64,!3))],[]
   )
   ,(42#1,42#66,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"decodeHexChars"):class((,size_t)),[(ref(uchar):"bytes",(44#23,44#43,!3)),(class((,size_t)):"numBytes",(44#46,44#60,!3)),(mod(ref(char),[const]):"hex",(44#63,44#78,!3))],[]
   )
   ,(44#1,44#80,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"decodeHexWChars"):class((,size_t)),[(ref(uchar):"bytes",(46#24,46#44,!3)),(class((,size_t)):"numBytes",(46#47,46#61,!3)),(mod(ref(wchar),[const]):"hex",(46#64,46#82,!3))],[]
   )
   ,(46#1,46#84,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"globalReturnsTrue"):int,[],[]
   )
   ,(48#1,48#24,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"globalReturnsFalse"):int,[],[]
   )
   ,(50#1,50#25,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"globalReturnsTrueOrFalse"):int,[],[]
   )
   ,(52#1,52#31,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   FN([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01_bad"):unit,[],[],
   {[
      {VD("data",ref(int))
      ,(23#9,23#14,!1)};
      {{AE({V("data"),ref(int),(24#5,24#8,!1)},{CS(ref(unit),{"0"N,int,(24#12,24#15,!1)}),ref(unit),(24#12,24#15,!1)}),ref(int),(24#5,24#15,!1)}
      ,(24#5,24#15,!1)};
      {{AE({V("data"),ref(int),(26#5,26#8,!1)},{CS(ref(int),{SC((<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"alloca"),[int],[{"10"N,int,(26#26,26#27,!1)}]),class((,"%undef")),(26#19,26#28,!1)}),ref(int),(26#12,26#28,!1)}),ref(int),(26#5,26#28,!1)}
      ,(26#5,26#28,!1)};
      {[
         {VD("source",int,([{"10"N,int,(28#20,28#21,!1)}],[{"0"N,int,(28#27,28#27,!1)}]))
         ,(28#13,28#22,!1)};
         {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"memmove"),[ref(int),arr(int),int],[{V("data"),ref(int),(30#17,30#20,!1)},{V("source"),arr(int),(30#23,30#28,!1)},{BO(*,{"10"N,int,(30#31,30#32,!1)},{SO(int),int,(30#34,30#44,!1)}),int,(30#31,30#44,!1)}])
         ,(30#9,30#45,!1)};
         {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"printIntLine"),[int],[{AA({V("data"),ref(int),(31#22,31#25,!1)},[{"0"N,int,(31#27,31#27,!1)}]),int,(31#22,31#28,!1)}])
         ,(31#9,31#29,!1)}
         ]
      ,(27#5,32#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(21#1,33#1,!1)}
   )
   ,(21#1,33#1,!1)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   FN([public,static],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"goodG2B"):mod(unit,[static]),[],[],
   {[
      {VD("data",ref(int))
      ,(42#9,42#14,!1)};
      {{AE({V("data"),ref(int),(43#5,43#8,!1)},{CS(ref(unit),{"0"N,int,(43#12,43#15,!1)}),ref(unit),(43#12,43#15,!1)}),ref(int),(43#5,43#15,!1)}
      ,(43#5,43#15,!1)};
      {{AE({V("data"),ref(int),(45#5,45#8,!1)},{CS(ref(int),{SC((<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"alloca"),[int],[{BO(*,{"10"N,int,(45#26,45#27,!1)},{SO(int),int,(45#29,45#39,!1)}),int,(45#26,45#39,!1)}]),class((,"%undef")),(45#19,45#40,!1)}),ref(int),(45#12,45#40,!1)}),ref(int),(45#5,45#40,!1)}
      ,(45#5,45#40,!1)};
      {[
         {VD("source",int,([{"10"N,int,(47#20,47#21,!1)}],[{"0"N,int,(47#27,47#27,!1)}]))
         ,(47#13,47#22,!1)};
         {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"memmove"),[ref(int),arr(int),int],[{V("data"),ref(int),(49#17,49#20,!1)},{V("source"),arr(int),(49#23,49#28,!1)},{BO(*,{"10"N,int,(49#31,49#32,!1)},{SO(int),int,(49#34,49#44,!1)}),int,(49#31,49#44,!1)}])
         ,(49#9,49#45,!1)};
         {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"printIntLine"),[int],[{AA({V("data"),ref(int),(50#22,50#25,!1)},[{"0"N,int,(50#27,50#27,!1)}]),int,(50#22,50#28,!1)}])
         ,(50#9,50#29,!1)}
         ]
      ,(46#5,51#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(40#1,52#1,!1)}
   )
   ,(40#1,52#1,!1)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01",
   FN([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01_good"):unit,[],[],
   {[
      {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01">,"goodG2B"),[],[])
      ,(56#5,56#13,!1)};
      {RE0
      ,(?)}
      ]
   ,(54#1,57#1,!1)}
   )
   ,(54#1,57#1,!1)},

   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp",
   CL([struct],(,_twoIntsStruct),[])
   {
      ([public],"intOne":int,(92#9,92#14,!2));
      ([public],"intTwo":int,(93#9,93#14,!2))
   }
   ,(90#1,94#16,!2)}

,


   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp",
   [
      M("/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.c\nLabel Definition File: CWE121_Stack_Based_Buffer_Overflow__CWE131.label.xml\nTemplate File: sources-sink-01.tmpl.c\n*/",1,(1#0,1#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp")),
      M("/*\n * @description\n * CWE: 121 Stack Based Buffer Overflow\n * BadSource:  Allocate memory without using sizeof(int)\n * GoodSource: Allocate memory using sizeof(int)\n * Sink: memmove\n *    BadSink : Copy array to data using memmove()\n * Flow Variant: 01 Baseline\n *\n * */",6,(6#0,6#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp")),
      M("/* FLAW: Allocate memory without using sizeof(int) */",25,(25#0,25#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp")),
      M("/* POTENTIAL FLAW: Possible buffer overflow if data was not allocated correctly in the source */",29,(29#0,29#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp")),
      M("/* OMITBAD */",35,(35#0,35#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp")),
      M("/* goodG2B uses the GoodSource with the BadSink */",39,(39#0,39#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp")),
      M("/* FIX: Allocate memory using sizeof(int) */",44,(44#0,44#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp")),
      M("/* POTENTIAL FLAW: Possible buffer overflow if data was not allocated correctly in the source */",48,(48#0,48#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp")),
      M("/* OMITGOOD */",59,(59#0,59#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp")),
      M("/* Below is the main(). It is only used when building this testcase on\n * its own for testing or for building a binary to use in testing binary\n * analysis tools. It is not used when compiling all the testcases as one\n * application, which is how source code analysis tools are tested.\n */",61,(61#0,61#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp")),
      M("/* seed randomness */",71,(71#0,71#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp")),
      M("/* OMITGOOD */",77,(77#0,77#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp")),
      M("/* OMITBAD */",82,(82#0,82#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE131_memmove_01.cpp"))
   ]
   }
]