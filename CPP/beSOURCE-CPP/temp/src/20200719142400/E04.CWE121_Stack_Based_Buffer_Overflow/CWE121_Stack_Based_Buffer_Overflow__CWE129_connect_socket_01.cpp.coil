{
   ("filename", "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp");
   ("language", "CPP");
   ("include", "std_testcase.h");
   ("include", "<stdio.h>");
   ("include", "<stdlib.h>");
   ("include", "<stddef.h>");
   ("include", "<time.h>");
   ("include", "<limits.h>");
   ("include", "<string.h>");
   ("include", "<stdint.h>");
   ("include", "<stdint.h>");
   ("include", "<ctype.h>");
   ("include", "<fcntl.h>");
   ("include", "<sys/types.h>");
   ("include", "<sys/stat.h>");
   ("include", "std_testcase_io.h");
   ("include", "std_testcase.h");
   ("include", "<sys/types.h>");
   ("include", "<sys/socket.h>");
   ("include", "<netinet/in.h>");
   ("include", "<arpa/inet.h>");
   ("include", "<unistd.h>");
}
{
   (!3, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase_io.h");
   (!2, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h");
   (!1, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp");
}
[
   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp",
   MD("__asm__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp",
   MD("__attribute__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp",
   MD("va_start(list)",["list"],"list = (char *) &va_alist")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp",
   MD("va_end(list)",["list"],"va_end(list)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp",
   MD("va_arg(list,mode)",["list","mode"],"va_arg(list,(mode)null)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp",
   MD("offsetof(st,m)",["st","m"],"((size_t)(&((st *)0)->m))")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp",
   MD("RAND32()",[],"((rand()<<30) ^ (rand()<<15) ^ rand())")
   ,(84#0,84#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp",
   MD("RAND64()",[],"(((int64_t)rand()<<60) ^ ((int64_t)rand()<<45) ^ ((int64_t)rand()<<30) ^ ((int64_t)rand()<<15) ^ (int64_t)rand())")
   ,(87#0,87#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   SF([extern,const,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"GLOBAL_CONST_TRUE")
   ,(103#18,103#34,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   SF([extern,const,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"GLOBAL_CONST_FALSE")
   ,(104#18,104#35,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   SF([extern,const,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"GLOBAL_CONST_FIVE")
   ,(105#18,105#34,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   SF([extern,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"globalTrue")
   ,(110#12,110#21,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   SF([extern,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"globalFalse")
   ,(111#12,111#22,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   SF([extern,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"globalFive")
   ,(112#12,112#21,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   SF([extern,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"globalArgc")
   ,(55#12,55#21,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   SF([extern,extern],ref(ref(char)),<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"globalArgv")
   ,(56#12,56#24,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   SI(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,
   {[
      {;
      ,(1#1,275#1,!1)};
      {RE0
      ,(?)}
      ]
   ,(1#1,275#1,!1)}
   )
   ,(1#1,275#1,!1)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printLine"):unit,[(mod(ref(char),[const]):"line",(14#16,14#32,!3))],[]
   )
   ,(14#1,14#34,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printWLine"):unit,[(mod(ref(wchar),[const]):"line",(16#17,16#36,!3))],[]
   )
   ,(16#1,16#38,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printIntLine"):unit,[(int:"intNumber",(18#20,18#32,!3))],[]
   )
   ,(18#1,18#34,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printShortLine"):unit,[(short:"shortNumber",(20#22,20#38,!3))],[]
   )
   ,(20#1,20#40,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printFloatLine"):unit,[(float:"floatNumber",(22#22,22#38,!3))],[]
   )
   ,(22#1,22#40,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printLongLine"):unit,[(long:"longNumber",(24#20,24#34,!3))],[]
   )
   ,(24#1,24#36,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printLongLongLine"):unit,[(class((,int64_t)):"longLongIntNumber",(26#24,26#48,!3))],[]
   )
   ,(26#1,26#50,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printSizeTLine"):unit,[(class((,size_t)):"sizeTNumber",(28#21,28#38,!3))],[]
   )
   ,(28#1,28#40,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printHexCharLine"):unit,[(char:"charHex",(30#23,30#34,!3))],[]
   )
   ,(30#1,30#36,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printWcharLine"):unit,[(wchar:"wideChar",(32#21,32#36,!3))],[]
   )
   ,(32#1,32#38,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printUnsignedLine"):unit,[(uint:"unsignedNumber",(34#24,34#46,!3))],[]
   )
   ,(34#1,34#48,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printHexUnsignedCharLine"):unit,[(uchar:"unsignedCharacter",(36#31,36#61,!3))],[]
   )
   ,(36#1,36#63,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printDoubleLine"):unit,[(double:"doubleNumber",(38#22,38#40,!3))],[]
   )
   ,(38#1,38#42,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printStructLine"):unit,[(mod(ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),[const]):"structTwoIntsStruct",(40#22,40#62,!3))],[]
   )
   ,(40#1,40#64,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printBytesLine"):unit,[(mod(ref(uchar),[const]):"bytes",(42#21,42#47,!3)),(class((,size_t)):"numBytes",(42#50,42#64,!3))],[]
   )
   ,(42#1,42#66,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"decodeHexChars"):class((,size_t)),[(ref(uchar):"bytes",(44#23,44#43,!3)),(class((,size_t)):"numBytes",(44#46,44#60,!3)),(mod(ref(char),[const]):"hex",(44#63,44#78,!3))],[]
   )
   ,(44#1,44#80,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"decodeHexWChars"):class((,size_t)),[(ref(uchar):"bytes",(46#24,46#44,!3)),(class((,size_t)):"numBytes",(46#47,46#61,!3)),(mod(ref(wchar),[const]):"hex",(46#64,46#82,!3))],[]
   )
   ,(46#1,46#84,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"globalReturnsTrue"):int,[],[]
   )
   ,(48#1,48#24,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"globalReturnsFalse"):int,[],[]
   )
   ,(50#1,50#25,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"globalReturnsTrueOrFalse"):int,[],[]
   )
   ,(52#1,52#31,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   FN([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01_bad"):unit,[],[],
   {[
      {VD("data",int)
      ,(46#9,46#12,!1)};
      {{AE({V("data"),int,(48#5,48#8,!1)},{UO(-,{"1"N,int,(48#13,48#13,!1)}),int,(48#12,48#13,!1)}),int,(48#5,48#13,!1)}
      ,(48#5,48#13,!1)};
      {[
         {VD("recvResult",int)
         ,(54#13,54#22,!1)};
         {VD("service",mod(class((,sockaddr_in)),[struct]))
         ,(55#28,55#34,!1)};
         {VD("connectSocket",int,{UO(-,{"1"N,int,(56#30,56#30,!1)}),int,(56#29,56#30,!1)})
         ,(56#13,56#25,!1)};
         {VD("inputBuffer",char,([{BO(+,{BO(*,{"3"N,int,(57#27,57#27,!1)},{SO({V("data"),int,(57#38,57#41,!1)}),int,(57#31,57#42,!1)}),int,(57#27,57#42,!1)},{"2"N,int,(57#46,57#46,!1)}),int,(57#26,57#47,!1)}]))
         ,(57#14,57#48,!1)};
         {DW(L11,
            {[
               {{AE({V("connectSocket"),int,(68#13,68#25,!1)},{SC((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"socket"),[class((,"%undef")),class((,"%undef")),class((,"%undef"))],[{V("AF_INET"),class((,"%undef")),(68#36,68#42,!1)},{V("SOCK_STREAM"),class((,"%undef")),(68#45,68#55,!1)},{V("IPPROTO_TCP"),class((,"%undef")),(68#58,68#68,!1)}]),class((,"%undef")),(68#29,68#69,!1)}),int,(68#13,68#69,!1)}
               ,(68#13,68#69,!1)};
               {IF0({BO(==,{V("connectSocket"),int,(69#17,69#29,!1)},{UO(-,{"1"N,int,(69#35,69#35,!1)}),int,(69#34,69#35,!1)}),bool,(69#17,69#35,!1)},
                  {[
                     {BR @ 
                     ,(71#17,71#22,!1)}
                     ]
                  ,(70#13,72#13,!1)})
               ,(69#13,72#13,!1)};
               {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"memset"),[ref(mod(class((,sockaddr_in)),[struct])),int,int],[{&{V("service"),mod(class((,sockaddr_in)),[struct]),(73#21,73#27,!1)},ref(mod(class((,sockaddr_in)),[struct])),(73#20,73#27,!1)},{"0"N,int,(73#30,73#30,!1)},{SO({V("service"),mod(class((,sockaddr_in)),[struct]),(73#40,73#46,!1)}),int,(73#33,73#47,!1)}])
               ,(73#13,73#48,!1)};
               {{AE({OA({V("service"),mod(class((,sockaddr_in)),[struct]),(74#13,74#19,!1)},"sin_family"),class((,"%undef")),(74#13,74#30,!1)},{V("AF_INET"),class((,"%undef")),(74#34,74#40,!1)}),class((,"%undef")),(74#13,74#40,!1)}
               ,(74#13,74#40,!1)};
               {{AE({OA({OA({V("service"),mod(class((,sockaddr_in)),[struct]),(75#13,75#19,!1)},"sin_addr"),class((,"%undef")),(75#13,75#28,!1)},"s_addr"),class((,"%undef")),(75#13,75#35,!1)},{SC((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"inet_addr"),[string],[{"127.0.0.1"S,string,(75#49,75#59,!1)}]),class((,"%undef")),(75#39,75#60,!1)}),class((,"%undef")),(75#13,75#60,!1)}
               ,(75#13,75#60,!1)};
               {{AE({OA({V("service"),mod(class((,sockaddr_in)),[struct]),(76#13,76#19,!1)},"sin_port"),class((,"%undef")),(76#13,76#28,!1)},{SC((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"htons"),[int],[{"27015"N,int,(76#38,76#42,!1)}]),class((,"%undef")),(76#32,76#43,!1)}),class((,"%undef")),(76#13,76#43,!1)}
               ,(76#13,76#43,!1)};
               {IF0({BO(==,{SC((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"connect"),[int,ref(mod(class((,sockaddr)),[struct])),int],[{V("connectSocket"),int,(77#25,77#37,!1)},{CS(ref(mod(class((,sockaddr)),[struct])),{&{V("service"),mod(class((,sockaddr_in)),[struct]),(77#59,77#65,!1)},ref(mod(class((,sockaddr_in)),[struct])),(77#58,77#65,!1)}),ref(mod(class((,sockaddr)),[struct])),(77#40,77#65,!1)},{SO({V("service"),mod(class((,sockaddr_in)),[struct]),(77#75,77#81,!1)}),int,(77#68,77#82,!1)}]),class((,"%undef")),(77#17,77#83,!1)},{UO(-,{"1"N,int,(77#89,77#89,!1)}),int,(77#88,77#89,!1)}),bool,(77#17,77#89,!1)},
                  {[
                     {BR @ 
                     ,(79#17,79#22,!1)}
                     ]
                  ,(78#13,80#13,!1)})
               ,(77#13,80#13,!1)};
               {{AE({V("recvResult"),int,(83#13,83#22,!1)},{SC((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"recv"),[int,arr(char),int,int],[{V("connectSocket"),int,(83#31,83#43,!1)},{V("inputBuffer"),arr(char),(83#46,83#56,!1)},{BO(-,{BO(+,{BO(*,{"3"N,int,(83#60,83#60,!1)},{SO({V("data"),int,(83#71,83#74,!1)}),int,(83#64,83#75,!1)}),int,(83#60,83#75,!1)},{"2"N,int,(83#79,83#79,!1)}),int,(83#59,83#80,!1)},{"1"N,int,(83#84,83#84,!1)}),int,(83#60,83#84,!1)},{"0"N,int,(83#87,83#87,!1)}]),class((,"%undef")),(83#26,83#88,!1)}),int,(83#13,83#88,!1)}
               ,(83#13,83#88,!1)};
               {IF0({BO(||,{BO(==,{V("recvResult"),int,(84#17,84#26,!1)},{UO(-,{"1"N,int,(84#32,84#32,!1)}),int,(84#31,84#32,!1)}),bool,(84#17,84#32,!1)},{BO(==,{V("recvResult"),int,(84#37,84#46,!1)},{"0"N,int,(84#51,84#51,!1)}),bool,(84#37,84#51,!1)}),bool,(84#17,84#51,!1)},
                  {[
                     {BR @ 
                     ,(86#17,86#22,!1)}
                     ]
                  ,(85#13,87#13,!1)})
               ,(84#13,87#13,!1)};
               {{AE({AA({V("inputBuffer"),arr(char),(89#13,89#23,!1)},[{V("recvResult"),int,(89#25,89#34,!1)}]),char,(89#13,89#35,!1)},{"\0"C,char,(89#39,89#42,!1)}),char,(89#13,89#42,!1)}
               ,(89#13,89#42,!1)};
               {{AE({V("data"),int,(91#13,91#16,!1)},{SC((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"atoi"),[arr(char)],[{V("inputBuffer"),arr(char),(91#25,91#35,!1)}]),class((,"%undef")),(91#20,91#36,!1)}),int,(91#13,91#36,!1)}
               ,(91#13,91#36,!1)}
               ]
            ,(59#9,92#9,!1)},
            {"0"N,int,(93#16,93#16,!1)})
         ,(58#9,93#18,!1)};
         {IF0({BO(!=,{V("connectSocket"),int,(94#13,94#25,!1)},{UO(-,{"1"N,int,(94#31,94#31,!1)}),int,(94#30,94#31,!1)}),bool,(94#13,94#31,!1)},
            {[
               {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"close"),[int],[{V("connectSocket"),int,(96#19,96#31,!1)}])
               ,(96#13,96#32,!1)}
               ]
            ,(95#9,97#9,!1)})
         ,(94#9,97#9,!1)}
         ]
      ,(49#5,104#5,!1)};
      {[
         {VD("i",int)
         ,(106#13,106#13,!1)};
         {VD("buffer",int,([{"10"N,int,(107#20,107#21,!1)}],[{"0"N,int,(107#28,107#28,!1)}]))
         ,(107#13,107#22,!1)};
         {IF({BO(>=,{V("data"),int,(110#13,110#16,!1)},{"0"N,int,(110#21,110#21,!1)}),bool,(110#13,110#21,!1)},
            {[
               {{AE({AA({V("buffer"),arr(int),(112#13,112#18,!1)},[{V("data"),int,(112#20,112#23,!1)}]),int,(112#13,112#24,!1)},{"1"N,int,(112#28,112#28,!1)}),int,(112#13,112#28,!1)}
               ,(112#13,112#28,!1)};
               {FL(L12,
                  {[
                     {{AE({V("i"),int,(114#17,114#17,!1)},{"0"N,int,(114#21,114#21,!1)}),int,(114#17,114#21,!1)}
                     ,(114#17,114#21,!1)}
                  ]
                  ,(114#13,117#13,!1)},{BO(<,{V("i"),int,(114#24,114#24,!1)},{"10"N,int,(114#28,114#29,!1)}),bool,(114#24,114#29,!1)},
                  {[
                     {{IPO({V("i"),int,(114#32,114#32,!1)}),int,(114#32,114#34,!1)}
                     ,(114#32,114#34,!1)}
                  ]
                  ,(114#13,117#13,!1)},
                  {[
                     {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printIntLine"),[int],[{AA({V("buffer"),arr(int),(116#30,116#35,!1)},[{V("i"),int,(116#37,116#37,!1)}]),int,(116#30,116#38,!1)}])
                     ,(116#17,116#39,!1)}
                     ]
                  ,(115#13,117#13,!1)})
               ,(114#13,117#13,!1)}
               ]
            ,(111#9,118#9,!1)},
            {[
               {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printLine"),[mod(ref(char),[const])],[{"ERROR: Array index is negative."S,string,(121#23,121#55,!1)}])
               ,(121#13,121#56,!1)}
               ]
            ,(120#9,122#9,!1)})
         ,(110#9,122#9,!1)}
         ]
      ,(105#5,123#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(44#1,124#1,!1)}
   )
   ,(44#1,124#1,!1)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   FN([public,static],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"goodG2B"):mod(unit,[static]),[],[],
   {[
      {VD("data",int)
      ,(133#9,133#12,!1)};
      {{AE({V("data"),int,(135#5,135#8,!1)},{UO(-,{"1"N,int,(135#13,135#13,!1)}),int,(135#12,135#13,!1)}),int,(135#5,135#13,!1)}
      ,(135#5,135#13,!1)};
      {{AE({V("data"),int,(138#5,138#8,!1)},{"7"N,int,(138#12,138#12,!1)}),int,(138#5,138#12,!1)}
      ,(138#5,138#12,!1)};
      {[
         {VD("i",int)
         ,(140#13,140#13,!1)};
         {VD("buffer",int,([{"10"N,int,(141#20,141#21,!1)}],[{"0"N,int,(141#28,141#28,!1)}]))
         ,(141#13,141#22,!1)};
         {IF({BO(>=,{V("data"),int,(144#13,144#16,!1)},{"0"N,int,(144#21,144#21,!1)}),bool,(144#13,144#21,!1)},
            {[
               {{AE({AA({V("buffer"),arr(int),(146#13,146#18,!1)},[{V("data"),int,(146#20,146#23,!1)}]),int,(146#13,146#24,!1)},{"1"N,int,(146#28,146#28,!1)}),int,(146#13,146#28,!1)}
               ,(146#13,146#28,!1)};
               {FL(L13,
                  {[
                     {{AE({V("i"),int,(148#17,148#17,!1)},{"0"N,int,(148#21,148#21,!1)}),int,(148#17,148#21,!1)}
                     ,(148#17,148#21,!1)}
                  ]
                  ,(148#13,151#13,!1)},{BO(<,{V("i"),int,(148#24,148#24,!1)},{"10"N,int,(148#28,148#29,!1)}),bool,(148#24,148#29,!1)},
                  {[
                     {{IPO({V("i"),int,(148#32,148#32,!1)}),int,(148#32,148#34,!1)}
                     ,(148#32,148#34,!1)}
                  ]
                  ,(148#13,151#13,!1)},
                  {[
                     {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printIntLine"),[int],[{AA({V("buffer"),arr(int),(150#30,150#35,!1)},[{V("i"),int,(150#37,150#37,!1)}]),int,(150#30,150#38,!1)}])
                     ,(150#17,150#39,!1)}
                     ]
                  ,(149#13,151#13,!1)})
               ,(148#13,151#13,!1)}
               ]
            ,(145#9,152#9,!1)},
            {[
               {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printLine"),[mod(ref(char),[const])],[{"ERROR: Array index is negative."S,string,(155#23,155#55,!1)}])
               ,(155#13,155#56,!1)}
               ]
            ,(154#9,156#9,!1)})
         ,(144#9,156#9,!1)}
         ]
      ,(139#5,157#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(131#1,158#1,!1)}
   )
   ,(131#1,158#1,!1)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   FN([public,static],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"goodB2G"):mod(unit,[static]),[],[],
   {[
      {VD("data",int)
      ,(163#9,163#12,!1)};
      {{AE({V("data"),int,(165#5,165#8,!1)},{UO(-,{"1"N,int,(165#13,165#13,!1)}),int,(165#12,165#13,!1)}),int,(165#5,165#13,!1)}
      ,(165#5,165#13,!1)};
      {[
         {VD("recvResult",int)
         ,(171#13,171#22,!1)};
         {VD("service",mod(class((,sockaddr_in)),[struct]))
         ,(172#28,172#34,!1)};
         {VD("connectSocket",int,{UO(-,{"1"N,int,(173#30,173#30,!1)}),int,(173#29,173#30,!1)})
         ,(173#13,173#25,!1)};
         {VD("inputBuffer",char,([{BO(+,{BO(*,{"3"N,int,(174#27,174#27,!1)},{SO({V("data"),int,(174#38,174#41,!1)}),int,(174#31,174#42,!1)}),int,(174#27,174#42,!1)},{"2"N,int,(174#46,174#46,!1)}),int,(174#26,174#47,!1)}]))
         ,(174#14,174#48,!1)};
         {DW(L14,
            {[
               {{AE({V("connectSocket"),int,(185#13,185#25,!1)},{SC((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"socket"),[class((,"%undef")),class((,"%undef")),class((,"%undef"))],[{V("AF_INET"),class((,"%undef")),(185#36,185#42,!1)},{V("SOCK_STREAM"),class((,"%undef")),(185#45,185#55,!1)},{V("IPPROTO_TCP"),class((,"%undef")),(185#58,185#68,!1)}]),class((,"%undef")),(185#29,185#69,!1)}),int,(185#13,185#69,!1)}
               ,(185#13,185#69,!1)};
               {IF0({BO(==,{V("connectSocket"),int,(186#17,186#29,!1)},{UO(-,{"1"N,int,(186#35,186#35,!1)}),int,(186#34,186#35,!1)}),bool,(186#17,186#35,!1)},
                  {[
                     {BR @ 
                     ,(188#17,188#22,!1)}
                     ]
                  ,(187#13,189#13,!1)})
               ,(186#13,189#13,!1)};
               {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"memset"),[ref(mod(class((,sockaddr_in)),[struct])),int,int],[{&{V("service"),mod(class((,sockaddr_in)),[struct]),(190#21,190#27,!1)},ref(mod(class((,sockaddr_in)),[struct])),(190#20,190#27,!1)},{"0"N,int,(190#30,190#30,!1)},{SO({V("service"),mod(class((,sockaddr_in)),[struct]),(190#40,190#46,!1)}),int,(190#33,190#47,!1)}])
               ,(190#13,190#48,!1)};
               {{AE({OA({V("service"),mod(class((,sockaddr_in)),[struct]),(191#13,191#19,!1)},"sin_family"),class((,"%undef")),(191#13,191#30,!1)},{V("AF_INET"),class((,"%undef")),(191#34,191#40,!1)}),class((,"%undef")),(191#13,191#40,!1)}
               ,(191#13,191#40,!1)};
               {{AE({OA({OA({V("service"),mod(class((,sockaddr_in)),[struct]),(192#13,192#19,!1)},"sin_addr"),class((,"%undef")),(192#13,192#28,!1)},"s_addr"),class((,"%undef")),(192#13,192#35,!1)},{SC((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"inet_addr"),[string],[{"127.0.0.1"S,string,(192#49,192#59,!1)}]),class((,"%undef")),(192#39,192#60,!1)}),class((,"%undef")),(192#13,192#60,!1)}
               ,(192#13,192#60,!1)};
               {{AE({OA({V("service"),mod(class((,sockaddr_in)),[struct]),(193#13,193#19,!1)},"sin_port"),class((,"%undef")),(193#13,193#28,!1)},{SC((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"htons"),[int],[{"27015"N,int,(193#38,193#42,!1)}]),class((,"%undef")),(193#32,193#43,!1)}),class((,"%undef")),(193#13,193#43,!1)}
               ,(193#13,193#43,!1)};
               {IF0({BO(==,{SC((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"connect"),[int,ref(mod(class((,sockaddr)),[struct])),int],[{V("connectSocket"),int,(194#25,194#37,!1)},{CS(ref(mod(class((,sockaddr)),[struct])),{&{V("service"),mod(class((,sockaddr_in)),[struct]),(194#59,194#65,!1)},ref(mod(class((,sockaddr_in)),[struct])),(194#58,194#65,!1)}),ref(mod(class((,sockaddr)),[struct])),(194#40,194#65,!1)},{SO({V("service"),mod(class((,sockaddr_in)),[struct]),(194#75,194#81,!1)}),int,(194#68,194#82,!1)}]),class((,"%undef")),(194#17,194#83,!1)},{UO(-,{"1"N,int,(194#89,194#89,!1)}),int,(194#88,194#89,!1)}),bool,(194#17,194#89,!1)},
                  {[
                     {BR @ 
                     ,(196#17,196#22,!1)}
                     ]
                  ,(195#13,197#13,!1)})
               ,(194#13,197#13,!1)};
               {{AE({V("recvResult"),int,(200#13,200#22,!1)},{SC((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"recv"),[int,arr(char),int,int],[{V("connectSocket"),int,(200#31,200#43,!1)},{V("inputBuffer"),arr(char),(200#46,200#56,!1)},{BO(-,{BO(+,{BO(*,{"3"N,int,(200#60,200#60,!1)},{SO({V("data"),int,(200#71,200#74,!1)}),int,(200#64,200#75,!1)}),int,(200#60,200#75,!1)},{"2"N,int,(200#79,200#79,!1)}),int,(200#59,200#80,!1)},{"1"N,int,(200#84,200#84,!1)}),int,(200#60,200#84,!1)},{"0"N,int,(200#87,200#87,!1)}]),class((,"%undef")),(200#26,200#88,!1)}),int,(200#13,200#88,!1)}
               ,(200#13,200#88,!1)};
               {IF0({BO(||,{BO(==,{V("recvResult"),int,(201#17,201#26,!1)},{UO(-,{"1"N,int,(201#32,201#32,!1)}),int,(201#31,201#32,!1)}),bool,(201#17,201#32,!1)},{BO(==,{V("recvResult"),int,(201#37,201#46,!1)},{"0"N,int,(201#51,201#51,!1)}),bool,(201#37,201#51,!1)}),bool,(201#17,201#51,!1)},
                  {[
                     {BR @ 
                     ,(203#17,203#22,!1)}
                     ]
                  ,(202#13,204#13,!1)})
               ,(201#13,204#13,!1)};
               {{AE({AA({V("inputBuffer"),arr(char),(206#13,206#23,!1)},[{V("recvResult"),int,(206#25,206#34,!1)}]),char,(206#13,206#35,!1)},{"\0"C,char,(206#39,206#42,!1)}),char,(206#13,206#42,!1)}
               ,(206#13,206#42,!1)};
               {{AE({V("data"),int,(208#13,208#16,!1)},{SC((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"atoi"),[arr(char)],[{V("inputBuffer"),arr(char),(208#25,208#35,!1)}]),class((,"%undef")),(208#20,208#36,!1)}),int,(208#13,208#36,!1)}
               ,(208#13,208#36,!1)}
               ]
            ,(176#9,209#9,!1)},
            {"0"N,int,(210#16,210#16,!1)})
         ,(175#9,210#18,!1)};
         {IF0({BO(!=,{V("connectSocket"),int,(211#13,211#25,!1)},{UO(-,{"1"N,int,(211#31,211#31,!1)}),int,(211#30,211#31,!1)}),bool,(211#13,211#31,!1)},
            {[
               {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"close"),[int],[{V("connectSocket"),int,(213#19,213#31,!1)}])
               ,(213#13,213#32,!1)}
               ]
            ,(212#9,214#9,!1)})
         ,(211#9,214#9,!1)}
         ]
      ,(166#5,221#5,!1)};
      {[
         {VD("i",int)
         ,(223#13,223#13,!1)};
         {VD("buffer",int,([{"10"N,int,(224#20,224#21,!1)}],[{"0"N,int,(224#28,224#28,!1)}]))
         ,(224#13,224#22,!1)};
         {IF({BO(&&,{BO(>=,{V("data"),int,(226#13,226#16,!1)},{"0"N,int,(226#21,226#21,!1)}),bool,(226#13,226#21,!1)},{BO(<,{V("data"),int,(226#26,226#29,!1)},{"10"N,int,(226#33,226#36,!1)}),bool,(226#26,226#36,!1)}),bool,(226#13,226#36,!1)},
            {[
               {{AE({AA({V("buffer"),arr(int),(228#13,228#18,!1)},[{V("data"),int,(228#20,228#23,!1)}]),int,(228#13,228#24,!1)},{"1"N,int,(228#28,228#28,!1)}),int,(228#13,228#28,!1)}
               ,(228#13,228#28,!1)};
               {FL(L15,
                  {[
                     {{AE({V("i"),int,(230#17,230#17,!1)},{"0"N,int,(230#21,230#21,!1)}),int,(230#17,230#21,!1)}
                     ,(230#17,230#21,!1)}
                  ]
                  ,(230#13,233#13,!1)},{BO(<,{V("i"),int,(230#24,230#24,!1)},{"10"N,int,(230#28,230#29,!1)}),bool,(230#24,230#29,!1)},
                  {[
                     {{IPO({V("i"),int,(230#32,230#32,!1)}),int,(230#32,230#34,!1)}
                     ,(230#32,230#34,!1)}
                  ]
                  ,(230#13,233#13,!1)},
                  {[
                     {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printIntLine"),[int],[{AA({V("buffer"),arr(int),(232#30,232#35,!1)},[{V("i"),int,(232#37,232#37,!1)}]),int,(232#30,232#38,!1)}])
                     ,(232#17,232#39,!1)}
                     ]
                  ,(231#13,233#13,!1)})
               ,(230#13,233#13,!1)}
               ]
            ,(227#9,234#9,!1)},
            {[
               {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"printLine"),[mod(ref(char),[const])],[{"ERROR: Array index is out-of-bounds"S,string,(237#23,237#59,!1)}])
               ,(237#13,237#60,!1)}
               ]
            ,(236#9,238#9,!1)})
         ,(226#9,238#9,!1)}
         ]
      ,(222#5,239#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(161#1,240#1,!1)}
   )
   ,(161#1,240#1,!1)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01",
   FN([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01_good"):unit,[],[],
   {[
      {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"goodG2B"),[],[])
      ,(244#5,244#13,!1)};
      {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01">,"goodB2G"),[],[])
      ,(245#5,245#13,!1)};
      {RE0
      ,(?)}
      ]
   ,(242#1,246#1,!1)}
   )
   ,(242#1,246#1,!1)},

   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp",
   CL([struct],(,_twoIntsStruct),[])
   {
      ([public],"intOne":int,(92#9,92#14,!2));
      ([public],"intTwo":int,(93#9,93#14,!2))
   }
   ,(90#1,94#16,!2)}

,


   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp",
   [
      M("/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.c\nLabel Definition File: CWE121_Stack_Based_Buffer_Overflow__CWE129.label.xml\nTemplate File: sources-sinks-01.tmpl.c\n*/",1,(1#0,1#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/*\n * @description\n * CWE: 121 Stack Based Buffer Overflow\n * BadSource: connect_socket Read data using a connect socket (client side)\n * GoodSource: Larger than zero but less than 10\n * Sinks:\n *    GoodSink: Ensure the array index is valid\n *    BadSink : Improperly check the array index by not checking the upper bound\n * Flow Variant: 01 Baseline\n *\n * */",6,(6#0,6#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* include ws2_32.lib when linking */",24,(24#0,24#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* NOT _WIN32 */",26,(26#0,26#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* Initialize data */",47,(47#0,47#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* POTENTIAL FLAW: Read data using a connect socket */",67,(67#0,67#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* Abort on error or the connection was closed, make sure to recv one\n             * less char than is in the recv_buf in order to append a terminator */",81,(81#0,81#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* NUL-terminate the string */",88,(88#0,88#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* Convert to int */",90,(90#0,90#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* POTENTIAL FLAW: Attempt to write to an index of the array that is above the upper bound\n        * This code does check to see if the array index is negative */",108,(108#0,108#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* Print the array values */",113,(113#0,113#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* OMITBAD */",126,(126#0,126#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* goodG2B uses the GoodSource with the BadSink */",130,(130#0,130#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* Initialize data */",134,(134#0,134#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* FIX: Use a value greater than 0, but less than 10 to avoid attempting to\n     * access an index of the array in the sink that is out-of-bounds */",136,(136#0,136#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* POTENTIAL FLAW: Attempt to write to an index of the array that is above the upper bound\n        * This code does check to see if the array index is negative */",142,(142#0,142#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* Print the array values */",147,(147#0,147#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* goodB2G uses the BadSource with the GoodSink */",160,(160#0,160#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* Initialize data */",164,(164#0,164#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* POTENTIAL FLAW: Read data using a connect socket */",184,(184#0,184#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* Abort on error or the connection was closed, make sure to recv one\n             * less char than is in the recv_buf in order to append a terminator */",198,(198#0,198#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* NUL-terminate the string */",205,(205#0,205#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* Convert to int */",207,(207#0,207#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* FIX: Properly validate the array index and prevent a buffer overflow */",225,(225#0,225#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* Print the array values */",229,(229#0,229#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* OMITGOOD */",248,(248#0,248#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */",250,(250#0,250#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* seed randomness */",259,(259#0,259#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* OMITGOOD */",265,(265#0,265#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp")),
      M("/* OMITBAD */",270,(270#0,270#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_01.cpp"))
   ]
   }
]