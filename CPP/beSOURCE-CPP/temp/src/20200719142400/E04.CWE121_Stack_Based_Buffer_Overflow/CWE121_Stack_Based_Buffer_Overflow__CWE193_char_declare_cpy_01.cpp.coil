{
   ("filename", "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp");
   ("language", "CPP");
   ("include", "std_testcase.h");
   ("include", "<stdio.h>");
   ("include", "<stdlib.h>");
   ("include", "<stddef.h>");
   ("include", "<time.h>");
   ("include", "<limits.h>");
   ("include", "<string.h>");
   ("include", "<stdint.h>");
   ("include", "<stdint.h>");
   ("include", "<ctype.h>");
   ("include", "<fcntl.h>");
   ("include", "<sys/types.h>");
   ("include", "<sys/stat.h>");
   ("include", "std_testcase_io.h");
   ("include", "std_testcase.h");
   ("include", "<wchar.h>");
}
{
   (!3, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase_io.h");
   (!2, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h");
   (!1, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp");
}
[
   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp",
   MD("__asm__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp",
   MD("__attribute__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp",
   MD("va_start(list)",["list"],"list = (char *) &va_alist")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp",
   MD("va_end(list)",["list"],"va_end(list)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp",
   MD("va_arg(list,mode)",["list","mode"],"va_arg(list,(mode)null)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp",
   MD("offsetof(st,m)",["st","m"],"((size_t)(&((st *)0)->m))")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp",
   MD("RAND32()",[],"((rand()<<30) ^ (rand()<<15) ^ rand())")
   ,(84#0,84#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp",
   MD("RAND64()",[],"(((int64_t)rand()<<60) ^ ((int64_t)rand()<<45) ^ ((int64_t)rand()<<30) ^ ((int64_t)rand()<<15) ^ (int64_t)rand())")
   ,(87#0,87#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   SF([extern,const,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"GLOBAL_CONST_TRUE")
   ,(103#18,103#34,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   SF([extern,const,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"GLOBAL_CONST_FALSE")
   ,(104#18,104#35,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   SF([extern,const,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"GLOBAL_CONST_FIVE")
   ,(105#18,105#34,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   SF([extern,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"globalTrue")
   ,(110#12,110#21,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   SF([extern,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"globalFalse")
   ,(111#12,111#22,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   SF([extern,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"globalFive")
   ,(112#12,112#21,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   SF([extern,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"globalArgc")
   ,(55#12,55#21,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   SF([extern,extern],ref(ref(char)),<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"globalArgv")
   ,(56#12,56#24,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   SI(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,
   {[
      {;
      ,(1#1,100#1,!1)};
      {RE0
      ,(?)}
      ]
   ,(1#1,100#1,!1)}
   )
   ,(1#1,100#1,!1)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"printLine"):unit,[(mod(ref(char),[const]):"line",(14#16,14#32,!3))],[]
   )
   ,(14#1,14#34,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"printWLine"):unit,[(mod(ref(wchar),[const]):"line",(16#17,16#36,!3))],[]
   )
   ,(16#1,16#38,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"printIntLine"):unit,[(int:"intNumber",(18#20,18#32,!3))],[]
   )
   ,(18#1,18#34,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"printShortLine"):unit,[(short:"shortNumber",(20#22,20#38,!3))],[]
   )
   ,(20#1,20#40,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"printFloatLine"):unit,[(float:"floatNumber",(22#22,22#38,!3))],[]
   )
   ,(22#1,22#40,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"printLongLine"):unit,[(long:"longNumber",(24#20,24#34,!3))],[]
   )
   ,(24#1,24#36,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"printLongLongLine"):unit,[(class((,int64_t)):"longLongIntNumber",(26#24,26#48,!3))],[]
   )
   ,(26#1,26#50,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"printSizeTLine"):unit,[(class((,size_t)):"sizeTNumber",(28#21,28#38,!3))],[]
   )
   ,(28#1,28#40,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"printHexCharLine"):unit,[(char:"charHex",(30#23,30#34,!3))],[]
   )
   ,(30#1,30#36,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"printWcharLine"):unit,[(wchar:"wideChar",(32#21,32#36,!3))],[]
   )
   ,(32#1,32#38,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"printUnsignedLine"):unit,[(uint:"unsignedNumber",(34#24,34#46,!3))],[]
   )
   ,(34#1,34#48,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"printHexUnsignedCharLine"):unit,[(uchar:"unsignedCharacter",(36#31,36#61,!3))],[]
   )
   ,(36#1,36#63,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"printDoubleLine"):unit,[(double:"doubleNumber",(38#22,38#40,!3))],[]
   )
   ,(38#1,38#42,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"printStructLine"):unit,[(mod(ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),[const]):"structTwoIntsStruct",(40#22,40#62,!3))],[]
   )
   ,(40#1,40#64,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"printBytesLine"):unit,[(mod(ref(uchar),[const]):"bytes",(42#21,42#47,!3)),(class((,size_t)):"numBytes",(42#50,42#64,!3))],[]
   )
   ,(42#1,42#66,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"decodeHexChars"):class((,size_t)),[(ref(uchar):"bytes",(44#23,44#43,!3)),(class((,size_t)):"numBytes",(44#46,44#60,!3)),(mod(ref(char),[const]):"hex",(44#63,44#78,!3))],[]
   )
   ,(44#1,44#80,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"decodeHexWChars"):class((,size_t)),[(ref(uchar):"bytes",(46#24,46#44,!3)),(class((,size_t)):"numBytes",(46#47,46#61,!3)),(mod(ref(wchar),[const]):"hex",(46#64,46#82,!3))],[]
   )
   ,(46#1,46#84,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"globalReturnsTrue"):int,[],[]
   )
   ,(48#1,48#24,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"globalReturnsFalse"):int,[],[]
   )
   ,(50#1,50#25,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"globalReturnsTrueOrFalse"):int,[],[]
   )
   ,(52#1,52#31,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   FN([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01_bad"):unit,[],[],
   {[
      {VD("data",ref(char))
      ,(30#10,30#15,!1)};
      {VD("dataBadBuffer",char,([{"10"N,int,(31#24,31#25,!1)}]))
      ,(31#10,31#26,!1)};
      {VD("dataGoodBuffer",char,([{BO(+,{"10"N,int,(32#25,32#26,!1)},{"1"N,int,(32#28,32#28,!1)}),int,(32#25,32#28,!1)}]))
      ,(32#10,32#29,!1)};
      {{AE({V("data"),ref(char),(35#5,35#8,!1)},{V("dataBadBuffer"),arr(char),(35#12,35#24,!1)}),ref(char),(35#5,35#24,!1)}
      ,(35#5,35#24,!1)};
      {{AE({AA({V("data"),ref(char),(36#5,36#8,!1)},[{"0"N,int,(36#10,36#10,!1)}]),char,(36#5,36#11,!1)},{"\0"C,char,(36#15,36#18,!1)}),char,(36#5,36#18,!1)}
      ,(36#5,36#18,!1)};
      {[
         {VD("source",char,([{BO(+,{"10"N,int,(38#21,38#22,!1)},{"1"N,int,(38#24,38#24,!1)}),int,(38#21,38#24,!1)}],[{"AAAAAAAAAA"S,string,(38#29,38#40,!1)}]))
         ,(38#14,38#25,!1)};
         {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"strcpy"),[ref(char),arr(char)],[{V("data"),ref(char),(40#16,40#19,!1)},{V("source"),arr(char),(40#22,40#27,!1)}])
         ,(40#9,40#28,!1)};
         {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"printLine"),[mod(ref(char),[const])],[{V("data"),ref(char),(41#19,41#22,!1)}])
         ,(41#9,41#23,!1)}
         ]
      ,(37#5,42#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(28#1,43#1,!1)}
   )
   ,(28#1,43#1,!1)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   FN([public,static],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"goodG2B"):mod(unit,[static]),[],[],
   {[
      {VD("data",ref(char))
      ,(52#10,52#15,!1)};
      {VD("dataBadBuffer",char,([{"10"N,int,(53#24,53#25,!1)}]))
      ,(53#10,53#26,!1)};
      {VD("dataGoodBuffer",char,([{BO(+,{"10"N,int,(54#25,54#26,!1)},{"1"N,int,(54#28,54#28,!1)}),int,(54#25,54#28,!1)}]))
      ,(54#10,54#29,!1)};
      {{AE({V("data"),ref(char),(57#5,57#8,!1)},{V("dataGoodBuffer"),arr(char),(57#12,57#25,!1)}),ref(char),(57#5,57#25,!1)}
      ,(57#5,57#25,!1)};
      {{AE({AA({V("data"),ref(char),(58#5,58#8,!1)},[{"0"N,int,(58#10,58#10,!1)}]),char,(58#5,58#11,!1)},{"\0"C,char,(58#15,58#18,!1)}),char,(58#5,58#18,!1)}
      ,(58#5,58#18,!1)};
      {[
         {VD("source",char,([{BO(+,{"10"N,int,(60#21,60#22,!1)},{"1"N,int,(60#24,60#24,!1)}),int,(60#21,60#24,!1)}],[{"AAAAAAAAAA"S,string,(60#29,60#40,!1)}]))
         ,(60#14,60#25,!1)};
         {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"strcpy"),[ref(char),arr(char)],[{V("data"),ref(char),(62#16,62#19,!1)},{V("source"),arr(char),(62#22,62#27,!1)}])
         ,(62#9,62#28,!1)};
         {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"printLine"),[mod(ref(char),[const])],[{V("data"),ref(char),(63#19,63#22,!1)}])
         ,(63#9,63#23,!1)}
         ]
      ,(59#5,64#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(50#1,65#1,!1)}
   )
   ,(50#1,65#1,!1)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01",
   FN([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01_good"):unit,[],[],
   {[
      {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01">,"goodG2B"),[],[])
      ,(69#5,69#13,!1)};
      {RE0
      ,(?)}
      ]
   ,(67#1,70#1,!1)}
   )
   ,(67#1,70#1,!1)},

   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp",
   CL([struct],(,_twoIntsStruct),[])
   {
      ([public],"intOne":int,(92#9,92#14,!2));
      ([public],"intTwo":int,(93#9,93#14,!2))
   }
   ,(90#1,94#16,!2)}

,


   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp",
   [
      M("/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.c\nLabel Definition File: CWE121_Stack_Based_Buffer_Overflow__CWE193.label.xml\nTemplate File: sources-sink-01.tmpl.c\n*/",1,(1#0,1#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp")),
      M("/*\n * @description\n * CWE: 121 Stack Based Buffer Overflow\n * BadSource:  Point data to a buffer that does not have space for a NULL terminator\n * GoodSource: Point data to a buffer that includes space for a NULL terminator\n * Sink: cpy\n *    BadSink : Copy string to data using strcpy()\n * Flow Variant: 01 Baseline\n *\n * */",6,(6#0,6#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp")),
      M("/* MAINTENANCE NOTE: The length of this string should equal the 10 */",23,(23#0,23#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp")),
      M("/* FLAW: Set a pointer to a buffer that does not leave room for a NULL terminator when performing\n     * string copies in the sinks  */",33,(33#0,33#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp")),
      M("/* null terminate */",36,(36#0,36#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp")),
      M("/* POTENTIAL FLAW: data may not have enough space to hold source */",39,(39#0,39#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp")),
      M("/* OMITBAD */",45,(45#0,45#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp")),
      M("/* goodG2B uses the GoodSource with the BadSink */",49,(49#0,49#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp")),
      M("/* FIX: Set a pointer to a buffer that leaves room for a NULL terminator when performing\n     * string copies in the sinks  */",55,(55#0,55#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp")),
      M("/* null terminate */",58,(58#0,58#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp")),
      M("/* POTENTIAL FLAW: data may not have enough space to hold source */",61,(61#0,61#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp")),
      M("/* OMITGOOD */",72,(72#0,72#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp")),
      M("/* Below is the main(). It is only used when building this testcase on\n * its own for testing or for building a binary to use in testing binary\n * analysis tools. It is not used when compiling all the testcases as one\n * application, which is how source code analysis tools are tested.\n */",74,(74#0,74#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp")),
      M("/* seed randomness */",84,(84#0,84#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp")),
      M("/* OMITGOOD */",90,(90#0,90#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp")),
      M("/* OMITBAD */",95,(95#0,95#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_01.cpp"))
   ]
   }
]