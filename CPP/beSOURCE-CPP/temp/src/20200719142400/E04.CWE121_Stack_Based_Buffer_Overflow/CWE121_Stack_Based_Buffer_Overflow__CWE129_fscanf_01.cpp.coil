{
   ("filename", "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp");
   ("language", "CPP");
   ("include", "std_testcase.h");
   ("include", "<stdio.h>");
   ("include", "<stdlib.h>");
   ("include", "<stddef.h>");
   ("include", "<time.h>");
   ("include", "<limits.h>");
   ("include", "<string.h>");
   ("include", "<stdint.h>");
   ("include", "<stdint.h>");
   ("include", "<ctype.h>");
   ("include", "<fcntl.h>");
   ("include", "<sys/types.h>");
   ("include", "<sys/stat.h>");
   ("include", "std_testcase_io.h");
   ("include", "std_testcase.h");
}
{
   (!3, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase_io.h");
   (!2, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h");
   (!1, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp");
}
[
   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp",
   MD("__asm__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp",
   MD("__attribute__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp",
   MD("va_start(list)",["list"],"list = (char *) &va_alist")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp",
   MD("va_end(list)",["list"],"va_end(list)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp",
   MD("va_arg(list,mode)",["list","mode"],"va_arg(list,(mode)null)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp",
   MD("offsetof(st,m)",["st","m"],"((size_t)(&((st *)0)->m))")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp",
   MD("RAND32()",[],"((rand()<<30) ^ (rand()<<15) ^ rand())")
   ,(84#0,84#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp",
   MD("RAND64()",[],"(((int64_t)rand()<<60) ^ ((int64_t)rand()<<45) ^ ((int64_t)rand()<<30) ^ ((int64_t)rand()<<15) ^ (int64_t)rand())")
   ,(87#0,87#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   SF([extern,const,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"GLOBAL_CONST_TRUE")
   ,(103#18,103#34,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   SF([extern,const,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"GLOBAL_CONST_FALSE")
   ,(104#18,104#35,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   SF([extern,const,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"GLOBAL_CONST_FIVE")
   ,(105#18,105#34,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   SF([extern,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"globalTrue")
   ,(110#12,110#21,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   SF([extern,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"globalFalse")
   ,(111#12,111#22,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   SF([extern,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"globalFive")
   ,(112#12,112#21,!2)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   SF([extern,extern],int,<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"globalArgc")
   ,(55#12,55#21,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   SF([extern,extern],ref(ref(char)),<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"globalArgv")
   ,(56#12,56#24,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   SI(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,
   {[
      {;
      ,(1#1,145#1,!1)};
      {RE0
      ,(?)}
      ]
   ,(1#1,145#1,!1)}
   )
   ,(1#1,145#1,!1)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printLine"):unit,[(mod(ref(char),[const]):"line",(14#16,14#32,!3))],[]
   )
   ,(14#1,14#34,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printWLine"):unit,[(mod(ref(wchar),[const]):"line",(16#17,16#36,!3))],[]
   )
   ,(16#1,16#38,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printIntLine"):unit,[(int:"intNumber",(18#20,18#32,!3))],[]
   )
   ,(18#1,18#34,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printShortLine"):unit,[(short:"shortNumber",(20#22,20#38,!3))],[]
   )
   ,(20#1,20#40,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printFloatLine"):unit,[(float:"floatNumber",(22#22,22#38,!3))],[]
   )
   ,(22#1,22#40,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printLongLine"):unit,[(long:"longNumber",(24#20,24#34,!3))],[]
   )
   ,(24#1,24#36,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printLongLongLine"):unit,[(class((,int64_t)):"longLongIntNumber",(26#24,26#48,!3))],[]
   )
   ,(26#1,26#50,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printSizeTLine"):unit,[(class((,size_t)):"sizeTNumber",(28#21,28#38,!3))],[]
   )
   ,(28#1,28#40,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printHexCharLine"):unit,[(char:"charHex",(30#23,30#34,!3))],[]
   )
   ,(30#1,30#36,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printWcharLine"):unit,[(wchar:"wideChar",(32#21,32#36,!3))],[]
   )
   ,(32#1,32#38,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printUnsignedLine"):unit,[(uint:"unsignedNumber",(34#24,34#46,!3))],[]
   )
   ,(34#1,34#48,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printHexUnsignedCharLine"):unit,[(uchar:"unsignedCharacter",(36#31,36#61,!3))],[]
   )
   ,(36#1,36#63,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printDoubleLine"):unit,[(double:"doubleNumber",(38#22,38#40,!3))],[]
   )
   ,(38#1,38#42,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printStructLine"):unit,[(mod(ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),[const]):"structTwoIntsStruct",(40#22,40#62,!3))],[]
   )
   ,(40#1,40#64,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printBytesLine"):unit,[(mod(ref(uchar),[const]):"bytes",(42#21,42#47,!3)),(class((,size_t)):"numBytes",(42#50,42#64,!3))],[]
   )
   ,(42#1,42#66,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"decodeHexChars"):class((,size_t)),[(ref(uchar):"bytes",(44#23,44#43,!3)),(class((,size_t)):"numBytes",(44#46,44#60,!3)),(mod(ref(char),[const]):"hex",(44#63,44#78,!3))],[]
   )
   ,(44#1,44#80,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"decodeHexWChars"):class((,size_t)),[(ref(uchar):"bytes",(46#24,46#44,!3)),(class((,size_t)):"numBytes",(46#47,46#61,!3)),(mod(ref(wchar),[const]):"hex",(46#64,46#82,!3))],[]
   )
   ,(46#1,46#84,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"globalReturnsTrue"):int,[],[]
   )
   ,(48#1,48#24,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"globalReturnsFalse"):int,[],[]
   )
   ,(50#1,50#25,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   PT([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"globalReturnsTrueOrFalse"):int,[],[]
   )
   ,(52#1,52#31,!3)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   FN([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01_bad"):unit,[],[],
   {[
      {VD("data",int)
      ,(24#9,24#12,!1)};
      {{AE({V("data"),int,(26#5,26#8,!1)},{UO(-,{"1"N,int,(26#13,26#13,!1)}),int,(26#12,26#13,!1)}),int,(26#5,26#13,!1)}
      ,(26#5,26#13,!1)};
      {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"fscanf"),[class((,"%undef")),string,ref(int)],[{V("stdin"),class((,"%undef")),(28#12,28#16,!1)},{"%d"S,string,(28#19,28#22,!1)},{&{V("data"),int,(28#26,28#29,!1)},ref(int),(28#25,28#29,!1)}])
      ,(28#5,28#30,!1)};
      {[
         {VD("i",int)
         ,(30#13,30#13,!1)};
         {VD("buffer",int,([{"10"N,int,(31#20,31#21,!1)}],[{"0"N,int,(31#28,31#28,!1)}]))
         ,(31#13,31#22,!1)};
         {IF({BO(>=,{V("data"),int,(34#13,34#16,!1)},{"0"N,int,(34#21,34#21,!1)}),bool,(34#13,34#21,!1)},
            {[
               {{AE({AA({V("buffer"),arr(int),(36#13,36#18,!1)},[{V("data"),int,(36#20,36#23,!1)}]),int,(36#13,36#24,!1)},{"1"N,int,(36#28,36#28,!1)}),int,(36#13,36#28,!1)}
               ,(36#13,36#28,!1)};
               {FL(L21,
                  {[
                     {{AE({V("i"),int,(38#17,38#17,!1)},{"0"N,int,(38#21,38#21,!1)}),int,(38#17,38#21,!1)}
                     ,(38#17,38#21,!1)}
                  ]
                  ,(38#13,41#13,!1)},{BO(<,{V("i"),int,(38#24,38#24,!1)},{"10"N,int,(38#28,38#29,!1)}),bool,(38#24,38#29,!1)},
                  {[
                     {{IPO({V("i"),int,(38#32,38#32,!1)}),int,(38#32,38#34,!1)}
                     ,(38#32,38#34,!1)}
                  ]
                  ,(38#13,41#13,!1)},
                  {[
                     {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printIntLine"),[int],[{AA({V("buffer"),arr(int),(40#30,40#35,!1)},[{V("i"),int,(40#37,40#37,!1)}]),int,(40#30,40#38,!1)}])
                     ,(40#17,40#39,!1)}
                     ]
                  ,(39#13,41#13,!1)})
               ,(38#13,41#13,!1)}
               ]
            ,(35#9,42#9,!1)},
            {[
               {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printLine"),[mod(ref(char),[const])],[{"ERROR: Array index is negative."S,string,(45#23,45#55,!1)}])
               ,(45#13,45#56,!1)}
               ]
            ,(44#9,46#9,!1)})
         ,(34#9,46#9,!1)}
         ]
      ,(29#5,47#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(22#1,48#1,!1)}
   )
   ,(22#1,48#1,!1)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   FN([public,static],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"goodG2B"):mod(unit,[static]),[],[],
   {[
      {VD("data",int)
      ,(57#9,57#12,!1)};
      {{AE({V("data"),int,(59#5,59#8,!1)},{UO(-,{"1"N,int,(59#13,59#13,!1)}),int,(59#12,59#13,!1)}),int,(59#5,59#13,!1)}
      ,(59#5,59#13,!1)};
      {{AE({V("data"),int,(62#5,62#8,!1)},{"7"N,int,(62#12,62#12,!1)}),int,(62#5,62#12,!1)}
      ,(62#5,62#12,!1)};
      {[
         {VD("i",int)
         ,(64#13,64#13,!1)};
         {VD("buffer",int,([{"10"N,int,(65#20,65#21,!1)}],[{"0"N,int,(65#28,65#28,!1)}]))
         ,(65#13,65#22,!1)};
         {IF({BO(>=,{V("data"),int,(68#13,68#16,!1)},{"0"N,int,(68#21,68#21,!1)}),bool,(68#13,68#21,!1)},
            {[
               {{AE({AA({V("buffer"),arr(int),(70#13,70#18,!1)},[{V("data"),int,(70#20,70#23,!1)}]),int,(70#13,70#24,!1)},{"1"N,int,(70#28,70#28,!1)}),int,(70#13,70#28,!1)}
               ,(70#13,70#28,!1)};
               {FL(L22,
                  {[
                     {{AE({V("i"),int,(72#17,72#17,!1)},{"0"N,int,(72#21,72#21,!1)}),int,(72#17,72#21,!1)}
                     ,(72#17,72#21,!1)}
                  ]
                  ,(72#13,75#13,!1)},{BO(<,{V("i"),int,(72#24,72#24,!1)},{"10"N,int,(72#28,72#29,!1)}),bool,(72#24,72#29,!1)},
                  {[
                     {{IPO({V("i"),int,(72#32,72#32,!1)}),int,(72#32,72#34,!1)}
                     ,(72#32,72#34,!1)}
                  ]
                  ,(72#13,75#13,!1)},
                  {[
                     {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printIntLine"),[int],[{AA({V("buffer"),arr(int),(74#30,74#35,!1)},[{V("i"),int,(74#37,74#37,!1)}]),int,(74#30,74#38,!1)}])
                     ,(74#17,74#39,!1)}
                     ]
                  ,(73#13,75#13,!1)})
               ,(72#13,75#13,!1)}
               ]
            ,(69#9,76#9,!1)},
            {[
               {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printLine"),[mod(ref(char),[const])],[{"ERROR: Array index is negative."S,string,(79#23,79#55,!1)}])
               ,(79#13,79#56,!1)}
               ]
            ,(78#9,80#9,!1)})
         ,(68#9,80#9,!1)}
         ]
      ,(63#5,81#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(55#1,82#1,!1)}
   )
   ,(55#1,82#1,!1)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   FN([public,static],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"goodB2G"):mod(unit,[static]),[],[],
   {[
      {VD("data",int)
      ,(87#9,87#12,!1)};
      {{AE({V("data"),int,(89#5,89#8,!1)},{UO(-,{"1"N,int,(89#13,89#13,!1)}),int,(89#12,89#13,!1)}),int,(89#5,89#13,!1)}
      ,(89#5,89#13,!1)};
      {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"fscanf"),[class((,"%undef")),string,ref(int)],[{V("stdin"),class((,"%undef")),(91#12,91#16,!1)},{"%d"S,string,(91#19,91#22,!1)},{&{V("data"),int,(91#26,91#29,!1)},ref(int),(91#25,91#29,!1)}])
      ,(91#5,91#30,!1)};
      {[
         {VD("i",int)
         ,(93#13,93#13,!1)};
         {VD("buffer",int,([{"10"N,int,(94#20,94#21,!1)}],[{"0"N,int,(94#28,94#28,!1)}]))
         ,(94#13,94#22,!1)};
         {IF({BO(&&,{BO(>=,{V("data"),int,(96#13,96#16,!1)},{"0"N,int,(96#21,96#21,!1)}),bool,(96#13,96#21,!1)},{BO(<,{V("data"),int,(96#26,96#29,!1)},{"10"N,int,(96#33,96#36,!1)}),bool,(96#26,96#36,!1)}),bool,(96#13,96#36,!1)},
            {[
               {{AE({AA({V("buffer"),arr(int),(98#13,98#18,!1)},[{V("data"),int,(98#20,98#23,!1)}]),int,(98#13,98#24,!1)},{"1"N,int,(98#28,98#28,!1)}),int,(98#13,98#28,!1)}
               ,(98#13,98#28,!1)};
               {FL(L23,
                  {[
                     {{AE({V("i"),int,(100#17,100#17,!1)},{"0"N,int,(100#21,100#21,!1)}),int,(100#17,100#21,!1)}
                     ,(100#17,100#21,!1)}
                  ]
                  ,(100#13,103#13,!1)},{BO(<,{V("i"),int,(100#24,100#24,!1)},{"10"N,int,(100#28,100#29,!1)}),bool,(100#24,100#29,!1)},
                  {[
                     {{IPO({V("i"),int,(100#32,100#32,!1)}),int,(100#32,100#34,!1)}
                     ,(100#32,100#34,!1)}
                  ]
                  ,(100#13,103#13,!1)},
                  {[
                     {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printIntLine"),[int],[{AA({V("buffer"),arr(int),(102#30,102#35,!1)},[{V("i"),int,(102#37,102#37,!1)}]),int,(102#30,102#38,!1)}])
                     ,(102#17,102#39,!1)}
                     ]
                  ,(101#13,103#13,!1)})
               ,(100#13,103#13,!1)}
               ]
            ,(97#9,104#9,!1)},
            {[
               {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"printLine"),[mod(ref(char),[const])],[{"ERROR: Array index is out-of-bounds"S,string,(107#23,107#59,!1)}])
               ,(107#13,107#60,!1)}
               ]
            ,(106#9,108#9,!1)})
         ,(96#9,108#9,!1)}
         ]
      ,(92#5,109#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(85#1,110#1,!1)}
   )
   ,(85#1,110#1,!1)},

   {"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01",
   FN([public],(<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01_good"):unit,[],[],
   {[
      {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"goodG2B"),[],[])
      ,(114#5,114#13,!1)};
      {PC0((<"CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01">,"goodB2G"),[],[])
      ,(115#5,115#13,!1)};
      {RE0
      ,(?)}
      ]
   ,(112#1,116#1,!1)}
   )
   ,(112#1,116#1,!1)},

   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp",
   CL([struct],(,_twoIntsStruct),[])
   {
      ([public],"intOne":int,(92#9,92#14,!2));
      ([public],"intTwo":int,(93#9,93#14,!2))
   }
   ,(90#1,94#16,!2)}

,


   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp",
   [
      M("/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.c\nLabel Definition File: CWE121_Stack_Based_Buffer_Overflow__CWE129.label.xml\nTemplate File: sources-sinks-01.tmpl.c\n*/",1,(1#0,1#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/*\n * @description\n * CWE: 121 Stack Based Buffer Overflow\n * BadSource: fscanf Read data from the console using fscanf()\n * GoodSource: Larger than zero but less than 10\n * Sinks:\n *    GoodSink: Ensure the array index is valid\n *    BadSink : Improperly check the array index by not checking the upper bound\n * Flow Variant: 01 Baseline\n *\n * */",6,(6#0,6#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* Initialize data */",25,(25#0,25#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* POTENTIAL FLAW: Read data from the console using fscanf() */",27,(27#0,27#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* POTENTIAL FLAW: Attempt to write to an index of the array that is above the upper bound\n        * This code does check to see if the array index is negative */",32,(32#0,32#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* Print the array values */",37,(37#0,37#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* OMITBAD */",50,(50#0,50#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* goodG2B uses the GoodSource with the BadSink */",54,(54#0,54#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* Initialize data */",58,(58#0,58#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* FIX: Use a value greater than 0, but less than 10 to avoid attempting to\n     * access an index of the array in the sink that is out-of-bounds */",60,(60#0,60#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* POTENTIAL FLAW: Attempt to write to an index of the array that is above the upper bound\n        * This code does check to see if the array index is negative */",66,(66#0,66#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* Print the array values */",71,(71#0,71#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* goodB2G uses the BadSource with the GoodSink */",84,(84#0,84#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* Initialize data */",88,(88#0,88#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* POTENTIAL FLAW: Read data from the console using fscanf() */",90,(90#0,90#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* FIX: Properly validate the array index and prevent a buffer overflow */",95,(95#0,95#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* Print the array values */",99,(99#0,99#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* OMITGOOD */",118,(118#0,118#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */",120,(120#0,120#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* seed randomness */",129,(129#0,129#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* OMITGOOD */",135,(135#0,135#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp")),
      M("/* OMITBAD */",140,(140#0,140#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E04.CWE121_Stack_Based_Buffer_Overflow/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.cpp"))
   ]
   }
]