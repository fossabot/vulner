{
   ("filename", "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp");
   ("language", "CPP");
   ("include", "std_testcase.h");
   ("include", "<stdio.h>");
   ("include", "<stdlib.h>");
   ("include", "<stddef.h>");
   ("include", "<time.h>");
   ("include", "<limits.h>");
   ("include", "<string.h>");
   ("include", "<stdint.h>");
   ("include", "<stdint.h>");
   ("include", "<ctype.h>");
   ("include", "<fcntl.h>");
   ("include", "<sys/types.h>");
   ("include", "<sys/stat.h>");
   ("include", "std_testcase_io.h");
   ("include", "std_testcase.h");
   ("include", "<wchar.h>");
}
{
   (!3, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase_io.h");
   (!2, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h");
   (!1, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp");
}
[
   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp",
   MD("__asm__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp",
   MD("__attribute__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp",
   MD("va_start(list)",["list"],"list = (char *) &va_alist")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp",
   MD("va_end(list)",["list"],"va_end(list)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp",
   MD("va_arg(list,mode)",["list","mode"],"va_arg(list,(mode)null)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp",
   MD("offsetof(st,m)",["st","m"],"((size_t)(&((st *)0)->m))")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp",
   MD("RAND32()",[],"((rand()<<30) ^ (rand()<<15) ^ rand())")
   ,(84#0,84#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp",
   MD("RAND64()",[],"(((int64_t)rand()<<60) ^ ((int64_t)rand()<<45) ^ ((int64_t)rand()<<30) ^ ((int64_t)rand()<<15) ^ (int64_t)rand())")
   ,(87#0,87#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"CWE416_Use_After_Free__malloc_free_struct_01",
   SF([extern,const,extern],int,<"CWE416_Use_After_Free__malloc_free_struct_01">,"GLOBAL_CONST_TRUE")
   ,(103#18,103#34,!2)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   SF([extern,const,extern],int,<"CWE416_Use_After_Free__malloc_free_struct_01">,"GLOBAL_CONST_FALSE")
   ,(104#18,104#35,!2)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   SF([extern,const,extern],int,<"CWE416_Use_After_Free__malloc_free_struct_01">,"GLOBAL_CONST_FIVE")
   ,(105#18,105#34,!2)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   SF([extern,extern],int,<"CWE416_Use_After_Free__malloc_free_struct_01">,"globalTrue")
   ,(110#12,110#21,!2)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   SF([extern,extern],int,<"CWE416_Use_After_Free__malloc_free_struct_01">,"globalFalse")
   ,(111#12,111#22,!2)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   SF([extern,extern],int,<"CWE416_Use_After_Free__malloc_free_struct_01">,"globalFive")
   ,(112#12,112#21,!2)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   SF([extern,extern],int,<"CWE416_Use_After_Free__malloc_free_struct_01">,"globalArgc")
   ,(55#12,55#21,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   SF([extern,extern],ref(ref(char)),<"CWE416_Use_After_Free__malloc_free_struct_01">,"globalArgv")
   ,(56#12,56#24,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   SI(<"CWE416_Use_After_Free__malloc_free_struct_01">,
   {[
      {;
      ,(1#1,126#1,!1)};
      {RE0
      ,(?)}
      ]
   ,(1#1,126#1,!1)}
   )
   ,(1#1,126#1,!1)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"printLine"):unit,[(mod(ref(char),[const]):"line",(14#16,14#32,!3))],[]
   )
   ,(14#1,14#34,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"printWLine"):unit,[(mod(ref(wchar),[const]):"line",(16#17,16#36,!3))],[]
   )
   ,(16#1,16#38,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"printIntLine"):unit,[(int:"intNumber",(18#20,18#32,!3))],[]
   )
   ,(18#1,18#34,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"printShortLine"):unit,[(short:"shortNumber",(20#22,20#38,!3))],[]
   )
   ,(20#1,20#40,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"printFloatLine"):unit,[(float:"floatNumber",(22#22,22#38,!3))],[]
   )
   ,(22#1,22#40,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"printLongLine"):unit,[(long:"longNumber",(24#20,24#34,!3))],[]
   )
   ,(24#1,24#36,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"printLongLongLine"):unit,[(class((,int64_t)):"longLongIntNumber",(26#24,26#48,!3))],[]
   )
   ,(26#1,26#50,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"printSizeTLine"):unit,[(class((,size_t)):"sizeTNumber",(28#21,28#38,!3))],[]
   )
   ,(28#1,28#40,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"printHexCharLine"):unit,[(char:"charHex",(30#23,30#34,!3))],[]
   )
   ,(30#1,30#36,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"printWcharLine"):unit,[(wchar:"wideChar",(32#21,32#36,!3))],[]
   )
   ,(32#1,32#38,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"printUnsignedLine"):unit,[(uint:"unsignedNumber",(34#24,34#46,!3))],[]
   )
   ,(34#1,34#48,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"printHexUnsignedCharLine"):unit,[(uchar:"unsignedCharacter",(36#31,36#61,!3))],[]
   )
   ,(36#1,36#63,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"printDoubleLine"):unit,[(double:"doubleNumber",(38#22,38#40,!3))],[]
   )
   ,(38#1,38#42,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"printStructLine"):unit,[(mod(ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),[const]):"structTwoIntsStruct",(40#22,40#62,!3))],[]
   )
   ,(40#1,40#64,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"printBytesLine"):unit,[(mod(ref(uchar),[const]):"bytes",(42#21,42#47,!3)),(class((,size_t)):"numBytes",(42#50,42#64,!3))],[]
   )
   ,(42#1,42#66,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"decodeHexChars"):class((,size_t)),[(ref(uchar):"bytes",(44#23,44#43,!3)),(class((,size_t)):"numBytes",(44#46,44#60,!3)),(mod(ref(char),[const]):"hex",(44#63,44#78,!3))],[]
   )
   ,(44#1,44#80,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"decodeHexWChars"):class((,size_t)),[(ref(uchar):"bytes",(46#24,46#44,!3)),(class((,size_t)):"numBytes",(46#47,46#61,!3)),(mod(ref(wchar),[const]):"hex",(46#64,46#82,!3))],[]
   )
   ,(46#1,46#84,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"globalReturnsTrue"):int,[],[]
   )
   ,(48#1,48#24,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"globalReturnsFalse"):int,[],[]
   )
   ,(50#1,50#25,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   PT([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"globalReturnsTrueOrFalse"):int,[],[]
   )
   ,(52#1,52#31,!3)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   FN([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"CWE416_Use_After_Free__malloc_free_struct_01_bad"):unit,[],[],
   {[
      {VD("data",ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))))
      ,(26#19,26#24,!1)};
      {{AE({V("data"),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(28#5,28#8,!1)},{CS(ref(unit),{"0"N,int,(28#12,28#15,!1)}),ref(unit),(28#12,28#15,!1)}),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(28#5,28#15,!1)}
      ,(28#5,28#15,!1)};
      {{AE({V("data"),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(29#5,29#8,!1)},{CS(ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),{SC((<"CWE416_Use_After_Free__malloc_free_struct_01">,"malloc"),[int],[{BO(*,{"100"N,int,(29#36,29#38,!1)},{SO(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),int,(29#40,29#60,!1)}),int,(29#36,29#60,!1)}]),class((,"%undef")),(29#29,29#61,!1)}),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(29#12,29#61,!1)}),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(29#5,29#61,!1)}
      ,(29#5,29#61,!1)};
      {[
         {VD("i",class((,size_t)))
         ,(31#16,31#16,!1)};
         {FL(L148,
            {[
               {{AE({V("i"),class((,size_t)),(32#13,32#13,!1)},{"0"N,int,(32#17,32#17,!1)}),class((,size_t)),(32#13,32#17,!1)}
               ,(32#13,32#17,!1)}
            ]
            ,(32#9,36#9,!1)},{BO(<,{V("i"),class((,size_t)),(32#20,32#20,!1)},{"100"N,int,(32#24,32#26,!1)}),bool,(32#20,32#26,!1)},
            {[
               {{IPO({V("i"),class((,size_t)),(32#29,32#29,!1)}),class((,size_t)),(32#29,32#31,!1)}
               ,(32#29,32#31,!1)}
            ]
            ,(32#9,36#9,!1)},
            {[
               {{AE({OA({AA({V("data"),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(34#13,34#16,!1)},[{V("i"),class((,size_t)),(34#18,34#18,!1)}]),alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct])),(34#13,34#19,!1)},"intOne"),int,(34#13,34#26,!1)},{"1"N,int,(34#30,34#30,!1)}),int,(34#13,34#30,!1)}
               ,(34#13,34#30,!1)};
               {{AE({OA({AA({V("data"),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(35#13,35#16,!1)},[{V("i"),class((,size_t)),(35#18,35#18,!1)}]),alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct])),(35#13,35#19,!1)},"intTwo"),int,(35#13,35#26,!1)},{"2"N,int,(35#30,35#30,!1)}),int,(35#13,35#30,!1)}
               ,(35#13,35#30,!1)}
               ]
            ,(33#9,36#9,!1)})
         ,(32#9,36#9,!1)}
         ]
      ,(30#5,37#5,!1)};
      {PC0((<"CWE416_Use_After_Free__malloc_free_struct_01">,"free"),[ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct])))],[{V("data"),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(39#10,39#13,!1)}])
      ,(39#5,39#14,!1)};
      {PC0((<"CWE416_Use_After_Free__malloc_free_struct_01">,"printStructLine"),[mod(ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),[const])],[{&{AA({V("data"),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(41#22,41#25,!1)},[{"0"N,int,(41#27,41#27,!1)}]),alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct])),(41#22,41#28,!1)},ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(41#21,41#28,!1)}])
      ,(41#5,41#29,!1)};
      {RE0
      ,(?)}
      ]
   ,(24#1,43#1,!1)}
   )
   ,(24#1,43#1,!1)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   FN([public,static],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"goodG2B"):mod(unit,[static]),[],[],
   {[
      {VD("data",ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))))
      ,(52#19,52#24,!1)};
      {{AE({V("data"),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(54#5,54#8,!1)},{CS(ref(unit),{"0"N,int,(54#12,54#15,!1)}),ref(unit),(54#12,54#15,!1)}),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(54#5,54#15,!1)}
      ,(54#5,54#15,!1)};
      {{AE({V("data"),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(55#5,55#8,!1)},{CS(ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),{SC((<"CWE416_Use_After_Free__malloc_free_struct_01">,"malloc"),[int],[{BO(*,{"100"N,int,(55#36,55#38,!1)},{SO(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),int,(55#40,55#60,!1)}),int,(55#36,55#60,!1)}]),class((,"%undef")),(55#29,55#61,!1)}),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(55#12,55#61,!1)}),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(55#5,55#61,!1)}
      ,(55#5,55#61,!1)};
      {[
         {VD("i",class((,size_t)))
         ,(57#16,57#16,!1)};
         {FL(L149,
            {[
               {{AE({V("i"),class((,size_t)),(58#13,58#13,!1)},{"0"N,int,(58#17,58#17,!1)}),class((,size_t)),(58#13,58#17,!1)}
               ,(58#13,58#17,!1)}
            ]
            ,(58#9,62#9,!1)},{BO(<,{V("i"),class((,size_t)),(58#20,58#20,!1)},{"100"N,int,(58#24,58#26,!1)}),bool,(58#20,58#26,!1)},
            {[
               {{IPO({V("i"),class((,size_t)),(58#29,58#29,!1)}),class((,size_t)),(58#29,58#31,!1)}
               ,(58#29,58#31,!1)}
            ]
            ,(58#9,62#9,!1)},
            {[
               {{AE({OA({AA({V("data"),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(60#13,60#16,!1)},[{V("i"),class((,size_t)),(60#18,60#18,!1)}]),alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct])),(60#13,60#19,!1)},"intOne"),int,(60#13,60#26,!1)},{"1"N,int,(60#30,60#30,!1)}),int,(60#13,60#30,!1)}
               ,(60#13,60#30,!1)};
               {{AE({OA({AA({V("data"),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(61#13,61#16,!1)},[{V("i"),class((,size_t)),(61#18,61#18,!1)}]),alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct])),(61#13,61#19,!1)},"intTwo"),int,(61#13,61#26,!1)},{"2"N,int,(61#30,61#30,!1)}),int,(61#13,61#30,!1)}
               ,(61#13,61#30,!1)}
               ]
            ,(59#9,62#9,!1)})
         ,(58#9,62#9,!1)}
         ]
      ,(56#5,63#5,!1)};
      {PC0((<"CWE416_Use_After_Free__malloc_free_struct_01">,"printStructLine"),[mod(ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),[const])],[{&{AA({V("data"),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(66#22,66#25,!1)},[{"0"N,int,(66#27,66#27,!1)}]),alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct])),(66#22,66#28,!1)},ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(66#21,66#28,!1)}])
      ,(66#5,66#29,!1)};
      {RE0
      ,(?)}
      ]
   ,(50#1,68#1,!1)}
   )
   ,(50#1,68#1,!1)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   FN([public,static],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"goodB2G"):mod(unit,[static]),[],[],
   {[
      {VD("data",ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))))
      ,(73#19,73#24,!1)};
      {{AE({V("data"),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(75#5,75#8,!1)},{CS(ref(unit),{"0"N,int,(75#12,75#15,!1)}),ref(unit),(75#12,75#15,!1)}),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(75#5,75#15,!1)}
      ,(75#5,75#15,!1)};
      {{AE({V("data"),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(76#5,76#8,!1)},{CS(ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),{SC((<"CWE416_Use_After_Free__malloc_free_struct_01">,"malloc"),[int],[{BO(*,{"100"N,int,(76#36,76#38,!1)},{SO(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),int,(76#40,76#60,!1)}),int,(76#36,76#60,!1)}]),class((,"%undef")),(76#29,76#61,!1)}),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(76#12,76#61,!1)}),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(76#5,76#61,!1)}
      ,(76#5,76#61,!1)};
      {[
         {VD("i",class((,size_t)))
         ,(78#16,78#16,!1)};
         {FL(L150,
            {[
               {{AE({V("i"),class((,size_t)),(79#13,79#13,!1)},{"0"N,int,(79#17,79#17,!1)}),class((,size_t)),(79#13,79#17,!1)}
               ,(79#13,79#17,!1)}
            ]
            ,(79#9,83#9,!1)},{BO(<,{V("i"),class((,size_t)),(79#20,79#20,!1)},{"100"N,int,(79#24,79#26,!1)}),bool,(79#20,79#26,!1)},
            {[
               {{IPO({V("i"),class((,size_t)),(79#29,79#29,!1)}),class((,size_t)),(79#29,79#31,!1)}
               ,(79#29,79#31,!1)}
            ]
            ,(79#9,83#9,!1)},
            {[
               {{AE({OA({AA({V("data"),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(81#13,81#16,!1)},[{V("i"),class((,size_t)),(81#18,81#18,!1)}]),alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct])),(81#13,81#19,!1)},"intOne"),int,(81#13,81#26,!1)},{"1"N,int,(81#30,81#30,!1)}),int,(81#13,81#30,!1)}
               ,(81#13,81#30,!1)};
               {{AE({OA({AA({V("data"),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(82#13,82#16,!1)},[{V("i"),class((,size_t)),(82#18,82#18,!1)}]),alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct])),(82#13,82#19,!1)},"intTwo"),int,(82#13,82#26,!1)},{"2"N,int,(82#30,82#30,!1)}),int,(82#13,82#30,!1)}
               ,(82#13,82#30,!1)}
               ]
            ,(80#9,83#9,!1)})
         ,(79#9,83#9,!1)}
         ]
      ,(77#5,84#5,!1)};
      {PC0((<"CWE416_Use_After_Free__malloc_free_struct_01">,"free"),[ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct])))],[{V("data"),ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),(86#10,86#13,!1)}])
      ,(86#5,86#14,!1)};
      {RE0
      ,(?)}
      ]
   ,(71#1,91#1,!1)}
   )
   ,(71#1,91#1,!1)},

   {"CWE416_Use_After_Free__malloc_free_struct_01",
   FN([public],(<"CWE416_Use_After_Free__malloc_free_struct_01">,"CWE416_Use_After_Free__malloc_free_struct_01_good"):unit,[],[],
   {[
      {PC0((<"CWE416_Use_After_Free__malloc_free_struct_01">,"goodG2B"),[],[])
      ,(95#5,95#13,!1)};
      {PC0((<"CWE416_Use_After_Free__malloc_free_struct_01">,"goodB2G"),[],[])
      ,(96#5,96#13,!1)};
      {RE0
      ,(?)}
      ]
   ,(93#1,97#1,!1)}
   )
   ,(93#1,97#1,!1)},

   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp",
   CL([struct],(,_twoIntsStruct),[])
   {
      ([public],"intOne":int,(92#9,92#14,!2));
      ([public],"intTwo":int,(93#9,93#14,!2))
   }
   ,(90#1,94#16,!2)}

,


   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp",
   [
      M("/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE416_Use_After_Free__malloc_free_struct_01.c\nLabel Definition File: CWE416_Use_After_Free__malloc_free.label.xml\nTemplate File: sources-sinks-01.tmpl.c\n*/",1,(1#0,1#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/*\n * @description\n * CWE: 416 Use After Free\n * BadSource:  Allocate data using malloc(), initialize memory block, and Deallocate data using free()\n * GoodSource: Allocate data using malloc() and initialize memory block\n * Sinks:\n *    GoodSink: Do nothing\n *    BadSink : Use data\n * Flow Variant: 01 Baseline\n *\n * */",6,(6#0,6#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* Initialize data */",27,(27#0,27#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* POTENTIAL FLAW: Free data in the source - the bad sink attempts to use data */",38,(38#0,38#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* POTENTIAL FLAW: Use of data that may have been freed */",40,(40#0,40#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* POTENTIAL INCIDENTAL - Possible memory leak here if data was not freed */",42,(42#0,42#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* OMITBAD */",45,(45#0,45#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* goodG2B uses the GoodSource with the BadSink */",49,(49#0,49#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* Initialize data */",53,(53#0,53#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* FIX: Do not free data in the source */",64,(64#0,64#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* POTENTIAL FLAW: Use of data that may have been freed */",65,(65#0,65#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* POTENTIAL INCIDENTAL - Possible memory leak here if data was not freed */",67,(67#0,67#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* goodB2G uses the BadSource with the GoodSink */",70,(70#0,70#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* Initialize data */",74,(74#0,74#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* POTENTIAL FLAW: Free data in the source - the bad sink attempts to use data */",85,(85#0,85#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* FIX: Don't use data that may have been freed already */",87,(87#0,87#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* POTENTIAL INCIDENTAL - Possible memory leak here if data was not freed */",88,(88#0,88#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* do nothing */",89,(89#0,89#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* empty statement needed for some flow variants */",90,(90#0,90#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* OMITGOOD */",99,(99#0,99#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */",101,(101#0,101#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* seed randomness */",110,(110#0,110#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* OMITGOOD */",116,(116#0,116#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp")),
      M("/* OMITBAD */",121,(121#0,121#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E18.CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.cpp"))
   ]
   }
]