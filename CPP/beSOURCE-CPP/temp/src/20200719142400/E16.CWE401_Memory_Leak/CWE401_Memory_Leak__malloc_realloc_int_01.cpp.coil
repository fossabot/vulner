{
   ("filename", "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp");
   ("language", "CPP");
   ("include", "std_testcase.h");
   ("include", "<stdio.h>");
   ("include", "<stdlib.h>");
   ("include", "<stddef.h>");
   ("include", "<time.h>");
   ("include", "<limits.h>");
   ("include", "<string.h>");
   ("include", "<stdint.h>");
   ("include", "<stdint.h>");
   ("include", "<ctype.h>");
   ("include", "<fcntl.h>");
   ("include", "<sys/types.h>");
   ("include", "<sys/stat.h>");
   ("include", "std_testcase_io.h");
   ("include", "std_testcase.h");
   ("include", "<wchar.h>");
}
{
   (!3, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase_io.h");
   (!2, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h");
   (!1, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp");
}
[
   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp",
   MD("__asm__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp",
   MD("__attribute__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp",
   MD("va_start(list)",["list"],"list = (char *) &va_alist")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp",
   MD("va_end(list)",["list"],"va_end(list)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp",
   MD("va_arg(list,mode)",["list","mode"],"va_arg(list,(mode)null)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp",
   MD("offsetof(st,m)",["st","m"],"((size_t)(&((st *)0)->m))")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp",
   MD("RAND32()",[],"((rand()<<30) ^ (rand()<<15) ^ rand())")
   ,(84#0,84#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp",
   MD("RAND64()",[],"(((int64_t)rand()<<60) ^ ((int64_t)rand()<<45) ^ ((int64_t)rand()<<30) ^ ((int64_t)rand()<<15) ^ (int64_t)rand())")
   ,(87#0,87#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   SF([extern,const,extern],int,<"CWE401_Memory_Leak__malloc_realloc_int_01">,"GLOBAL_CONST_TRUE")
   ,(103#18,103#34,!2)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   SF([extern,const,extern],int,<"CWE401_Memory_Leak__malloc_realloc_int_01">,"GLOBAL_CONST_FALSE")
   ,(104#18,104#35,!2)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   SF([extern,const,extern],int,<"CWE401_Memory_Leak__malloc_realloc_int_01">,"GLOBAL_CONST_FIVE")
   ,(105#18,105#34,!2)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   SF([extern,extern],int,<"CWE401_Memory_Leak__malloc_realloc_int_01">,"globalTrue")
   ,(110#12,110#21,!2)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   SF([extern,extern],int,<"CWE401_Memory_Leak__malloc_realloc_int_01">,"globalFalse")
   ,(111#12,111#22,!2)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   SF([extern,extern],int,<"CWE401_Memory_Leak__malloc_realloc_int_01">,"globalFive")
   ,(112#12,112#21,!2)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   SF([extern,extern],int,<"CWE401_Memory_Leak__malloc_realloc_int_01">,"globalArgc")
   ,(55#12,55#21,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   SF([extern,extern],ref(ref(char)),<"CWE401_Memory_Leak__malloc_realloc_int_01">,"globalArgv")
   ,(56#12,56#24,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   SI(<"CWE401_Memory_Leak__malloc_realloc_int_01">,
   {[
      {;
      ,(1#1,101#1,!1)};
      {RE0
      ,(?)}
      ]
   ,(1#1,101#1,!1)}
   )
   ,(1#1,101#1,!1)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"printLine"):unit,[(mod(ref(char),[const]):"line",(14#16,14#32,!3))],[]
   )
   ,(14#1,14#34,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"printWLine"):unit,[(mod(ref(wchar),[const]):"line",(16#17,16#36,!3))],[]
   )
   ,(16#1,16#38,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"printIntLine"):unit,[(int:"intNumber",(18#20,18#32,!3))],[]
   )
   ,(18#1,18#34,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"printShortLine"):unit,[(short:"shortNumber",(20#22,20#38,!3))],[]
   )
   ,(20#1,20#40,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"printFloatLine"):unit,[(float:"floatNumber",(22#22,22#38,!3))],[]
   )
   ,(22#1,22#40,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"printLongLine"):unit,[(long:"longNumber",(24#20,24#34,!3))],[]
   )
   ,(24#1,24#36,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"printLongLongLine"):unit,[(class((,int64_t)):"longLongIntNumber",(26#24,26#48,!3))],[]
   )
   ,(26#1,26#50,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"printSizeTLine"):unit,[(class((,size_t)):"sizeTNumber",(28#21,28#38,!3))],[]
   )
   ,(28#1,28#40,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"printHexCharLine"):unit,[(char:"charHex",(30#23,30#34,!3))],[]
   )
   ,(30#1,30#36,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"printWcharLine"):unit,[(wchar:"wideChar",(32#21,32#36,!3))],[]
   )
   ,(32#1,32#38,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"printUnsignedLine"):unit,[(uint:"unsignedNumber",(34#24,34#46,!3))],[]
   )
   ,(34#1,34#48,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"printHexUnsignedCharLine"):unit,[(uchar:"unsignedCharacter",(36#31,36#61,!3))],[]
   )
   ,(36#1,36#63,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"printDoubleLine"):unit,[(double:"doubleNumber",(38#22,38#40,!3))],[]
   )
   ,(38#1,38#42,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"printStructLine"):unit,[(mod(ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),[const]):"structTwoIntsStruct",(40#22,40#62,!3))],[]
   )
   ,(40#1,40#64,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"printBytesLine"):unit,[(mod(ref(uchar),[const]):"bytes",(42#21,42#47,!3)),(class((,size_t)):"numBytes",(42#50,42#64,!3))],[]
   )
   ,(42#1,42#66,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"decodeHexChars"):class((,size_t)),[(ref(uchar):"bytes",(44#23,44#43,!3)),(class((,size_t)):"numBytes",(44#46,44#60,!3)),(mod(ref(char),[const]):"hex",(44#63,44#78,!3))],[]
   )
   ,(44#1,44#80,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"decodeHexWChars"):class((,size_t)),[(ref(uchar):"bytes",(46#24,46#44,!3)),(class((,size_t)):"numBytes",(46#47,46#61,!3)),(mod(ref(wchar),[const]):"hex",(46#64,46#82,!3))],[]
   )
   ,(46#1,46#84,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"globalReturnsTrue"):int,[],[]
   )
   ,(48#1,48#24,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"globalReturnsFalse"):int,[],[]
   )
   ,(50#1,50#25,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   PT([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"globalReturnsTrueOrFalse"):int,[],[]
   )
   ,(52#1,52#31,!3)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   FN([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"CWE401_Memory_Leak__malloc_realloc_int_01_bad"):unit,[],[],
   {[
      {[
         {VD("data",ref(int),{CS(ref(int),{SC((<"CWE401_Memory_Leak__malloc_realloc_int_01">,"malloc"),[int],[{BO(*,{"100"N,int,(27#36,27#38,!1)},{SO(int),int,(27#40,27#50,!1)}),int,(27#36,27#50,!1)}]),class((,"%undef")),(27#29,27#51,!1)}),ref(int),(27#22,27#51,!1)})
         ,(27#13,27#18,!1)};
         {{AE({AA({V("data"),ref(int),(29#9,29#12,!1)},[{"0"N,int,(29#14,29#14,!1)}]),int,(29#9,29#15,!1)},{"5"N,int,(29#19,29#19,!1)}),int,(29#9,29#19,!1)}
         ,(29#9,29#19,!1)};
         {PC0((<"CWE401_Memory_Leak__malloc_realloc_int_01">,"printIntLine"),[int],[{AA({V("data"),ref(int),(30#22,30#25,!1)},[{"0"N,int,(30#27,30#27,!1)}]),int,(30#22,30#28,!1)}])
         ,(30#9,30#29,!1)};
         {{AE({V("data"),ref(int),(32#9,32#12,!1)},{CS(ref(int),{SC((<"CWE401_Memory_Leak__malloc_realloc_int_01">,"realloc"),[ref(int),int],[{V("data"),ref(int),(32#31,32#34,!1)},{BO(*,{"130000"N,int,(32#37,32#44,!1)},{SO(int),int,(32#46,32#56,!1)}),int,(32#38,32#56,!1)}]),class((,"%undef")),(32#23,32#57,!1)}),ref(int),(32#16,32#57,!1)}),ref(int),(32#9,32#57,!1)}
         ,(32#9,32#57,!1)};
         {IF0({BO(!=,{V("data"),ref(int),(33#13,33#16,!1)},{CS(ref(unit),{"0"N,int,(33#21,33#24,!1)}),ref(unit),(33#21,33#24,!1)}),bool,(33#13,33#24,!1)},
            {[
               {{AE({AA({V("data"),ref(int),(36#13,36#16,!1)},[{"0"N,int,(36#18,36#18,!1)}]),int,(36#13,36#19,!1)},{"10"N,int,(36#23,36#24,!1)}),int,(36#13,36#24,!1)}
               ,(36#13,36#24,!1)};
               {PC0((<"CWE401_Memory_Leak__malloc_realloc_int_01">,"printIntLine"),[int],[{AA({V("data"),ref(int),(37#26,37#29,!1)},[{"0"N,int,(37#31,37#31,!1)}]),int,(37#26,37#32,!1)}])
               ,(37#13,37#33,!1)};
               {PC0((<"CWE401_Memory_Leak__malloc_realloc_int_01">,"free"),[ref(int)],[{V("data"),ref(int),(38#18,38#21,!1)}])
               ,(38#13,38#22,!1)}
               ]
            ,(34#9,39#9,!1)})
         ,(33#9,39#9,!1)}
         ]
      ,(26#5,40#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(24#1,41#1,!1)}
   )
   ,(24#1,41#1,!1)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   FN([public,static],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"good1"):mod(unit,[static]),[],[],
   {[
      {[
         {VD("data",ref(int),{CS(ref(int),{SC((<"CWE401_Memory_Leak__malloc_realloc_int_01">,"malloc"),[int],[{BO(*,{"100"N,int,(50#36,50#38,!1)},{SO(int),int,(50#40,50#50,!1)}),int,(50#36,50#50,!1)}]),class((,"%undef")),(50#29,50#51,!1)}),ref(int),(50#22,50#51,!1)})
         ,(50#13,50#18,!1)};
         {VD("tmpData",ref(int))
         ,(51#13,51#21,!1)};
         {{AE({AA({V("data"),ref(int),(53#9,53#12,!1)},[{"0"N,int,(53#14,53#14,!1)}]),int,(53#9,53#15,!1)},{"5"N,int,(53#19,53#19,!1)}),int,(53#9,53#19,!1)}
         ,(53#9,53#19,!1)};
         {PC0((<"CWE401_Memory_Leak__malloc_realloc_int_01">,"printIntLine"),[int],[{AA({V("data"),ref(int),(54#22,54#25,!1)},[{"0"N,int,(54#27,54#27,!1)}]),int,(54#22,54#28,!1)}])
         ,(54#9,54#29,!1)};
         {{AE({V("tmpData"),ref(int),(55#9,55#15,!1)},{CS(ref(int),{SC((<"CWE401_Memory_Leak__malloc_realloc_int_01">,"realloc"),[ref(int),int],[{V("data"),ref(int),(55#34,55#37,!1)},{BO(*,{"130000"N,int,(55#40,55#47,!1)},{SO(int),int,(55#49,55#59,!1)}),int,(55#41,55#59,!1)}]),class((,"%undef")),(55#26,55#60,!1)}),ref(int),(55#19,55#60,!1)}),ref(int),(55#9,55#60,!1)}
         ,(55#9,55#60,!1)};
         {IF0({BO(!=,{V("tmpData"),ref(int),(58#13,58#19,!1)},{CS(ref(unit),{"0"N,int,(58#24,58#27,!1)}),ref(unit),(58#24,58#27,!1)}),bool,(58#13,58#27,!1)},
            {[
               {{AE({V("data"),ref(int),(60#13,60#16,!1)},{V("tmpData"),ref(int),(60#20,60#26,!1)}),ref(int),(60#13,60#26,!1)}
               ,(60#13,60#26,!1)};
               {{AE({AA({V("data"),ref(int),(62#13,62#16,!1)},[{"0"N,int,(62#18,62#18,!1)}]),int,(62#13,62#19,!1)},{"10"N,int,(62#23,62#24,!1)}),int,(62#13,62#24,!1)}
               ,(62#13,62#24,!1)};
               {PC0((<"CWE401_Memory_Leak__malloc_realloc_int_01">,"printIntLine"),[int],[{AA({V("data"),ref(int),(63#26,63#29,!1)},[{"0"N,int,(63#31,63#31,!1)}]),int,(63#26,63#32,!1)}])
               ,(63#13,63#33,!1)}
               ]
            ,(59#9,64#9,!1)})
         ,(58#9,64#9,!1)};
         {PC0((<"CWE401_Memory_Leak__malloc_realloc_int_01">,"free"),[ref(int)],[{V("data"),ref(int),(65#14,65#17,!1)}])
         ,(65#9,65#18,!1)}
         ]
      ,(49#5,66#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(47#1,67#1,!1)}
   )
   ,(47#1,67#1,!1)},

   {"CWE401_Memory_Leak__malloc_realloc_int_01",
   FN([public],(<"CWE401_Memory_Leak__malloc_realloc_int_01">,"CWE401_Memory_Leak__malloc_realloc_int_01_good"):unit,[],[],
   {[
      {PC0((<"CWE401_Memory_Leak__malloc_realloc_int_01">,"good1"),[],[])
      ,(71#5,71#11,!1)};
      {RE0
      ,(?)}
      ]
   ,(69#1,72#1,!1)}
   )
   ,(69#1,72#1,!1)},

   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp",
   CL([struct],(,_twoIntsStruct),[])
   {
      ([public],"intOne":int,(92#9,92#14,!2));
      ([public],"intTwo":int,(93#9,93#14,!2))
   }
   ,(90#1,94#16,!2)}

,


   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp",
   [
      M("/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE401_Memory_Leak__malloc_realloc_int_01.c\nLabel Definition File: CWE401_Memory_Leak__malloc_realloc.label.xml\nTemplate File: point-flaw-01.tmpl.c\n*/",1,(1#0,1#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp")),
      M("/*\n * @description\n * CWE: 401 Memory Leak\n * Sinks:\n *    GoodSink: Ensure the memory block pointed to by data is always freed\n *    BadSink : malloc() and use then realloc() and use data before free()\n * Flow Variant: 01 Baseline\n *\n * */",6,(6#0,6#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp")),
      M("/* Initialize and make use of data */",28,(28#0,28#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp")),
      M("/* FLAW: If realloc() fails, the initial memory block will not be freed() */",31,(31#0,31#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp")),
      M("/* Reinitialize and make use of data */",35,(35#0,35#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp")),
      M("/* OMITBAD */",43,(43#0,43#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp")),
      M("/* Initialize and make use of data */",52,(52#0,52#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp")),
      M("/* FIX: Ensure realloc() was successful before assigning data to the memory block\n        * allocated with realloc() */",56,(56#0,56#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp")),
      M("/* Reinitialize and make use of data */",61,(61#0,61#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp")),
      M("/* OMITGOOD */",74,(74#0,74#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp")),
      M("/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */",76,(76#0,76#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp")),
      M("/* seed randomness */",85,(85#0,85#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp")),
      M("/* OMITGOOD */",91,(91#0,91#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp")),
      M("/* OMITBAD */",96,(96#0,96#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E16.CWE401_Memory_Leak/CWE401_Memory_Leak__malloc_realloc_int_01.cpp"))
   ]
   }
]