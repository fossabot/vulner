{
   ("filename", "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp");
   ("language", "CPP");
   ("include", "std_testcase.h");
   ("include", "<stdio.h>");
   ("include", "<stdlib.h>");
   ("include", "<stddef.h>");
   ("include", "<time.h>");
   ("include", "<limits.h>");
   ("include", "<string.h>");
   ("include", "<stdint.h>");
   ("include", "<stdint.h>");
   ("include", "<ctype.h>");
   ("include", "<fcntl.h>");
   ("include", "<sys/types.h>");
   ("include", "<sys/stat.h>");
   ("include", "std_testcase_io.h");
   ("include", "std_testcase.h");
   ("include", "<math.h>");
}
{
   (!3, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase_io.h");
   (!2, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h");
   (!1, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp");
}
[
   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp",
   MD("__asm__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp",
   MD("__attribute__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp",
   MD("va_start(list)",["list"],"list = (char *) &va_alist")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp",
   MD("va_end(list)",["list"],"va_end(list)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp",
   MD("va_arg(list,mode)",["list","mode"],"va_arg(list,(mode)null)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp",
   MD("offsetof(st,m)",["st","m"],"((size_t)(&((st *)0)->m))")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp",
   MD("RAND32()",[],"((rand()<<30) ^ (rand()<<15) ^ rand())")
   ,(84#0,84#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp",
   MD("RAND64()",[],"(((int64_t)rand()<<60) ^ ((int64_t)rand()<<45) ^ ((int64_t)rand()<<30) ^ ((int64_t)rand()<<15) ^ (int64_t)rand())")
   ,(87#0,87#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"CWE369_Divide_by_Zero__float_fgets_01",
   SF([extern,const,extern],int,<"CWE369_Divide_by_Zero__float_fgets_01">,"GLOBAL_CONST_TRUE")
   ,(103#18,103#34,!2)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   SF([extern,const,extern],int,<"CWE369_Divide_by_Zero__float_fgets_01">,"GLOBAL_CONST_FALSE")
   ,(104#18,104#35,!2)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   SF([extern,const,extern],int,<"CWE369_Divide_by_Zero__float_fgets_01">,"GLOBAL_CONST_FIVE")
   ,(105#18,105#34,!2)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__float_fgets_01">,"globalTrue")
   ,(110#12,110#21,!2)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__float_fgets_01">,"globalFalse")
   ,(111#12,111#22,!2)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__float_fgets_01">,"globalFive")
   ,(112#12,112#21,!2)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__float_fgets_01">,"globalArgc")
   ,(55#12,55#21,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   SF([extern,extern],ref(ref(char)),<"CWE369_Divide_by_Zero__float_fgets_01">,"globalArgv")
   ,(56#12,56#24,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   SI(<"CWE369_Divide_by_Zero__float_fgets_01">,
   {[
      {;
      ,(1#1,134#1,!1)};
      {RE0
      ,(?)}
      ]
   ,(1#1,134#1,!1)}
   )
   ,(1#1,134#1,!1)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"printLine"):unit,[(mod(ref(char),[const]):"line",(14#16,14#32,!3))],[]
   )
   ,(14#1,14#34,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"printWLine"):unit,[(mod(ref(wchar),[const]):"line",(16#17,16#36,!3))],[]
   )
   ,(16#1,16#38,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"printIntLine"):unit,[(int:"intNumber",(18#20,18#32,!3))],[]
   )
   ,(18#1,18#34,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"printShortLine"):unit,[(short:"shortNumber",(20#22,20#38,!3))],[]
   )
   ,(20#1,20#40,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"printFloatLine"):unit,[(float:"floatNumber",(22#22,22#38,!3))],[]
   )
   ,(22#1,22#40,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"printLongLine"):unit,[(long:"longNumber",(24#20,24#34,!3))],[]
   )
   ,(24#1,24#36,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"printLongLongLine"):unit,[(class((,int64_t)):"longLongIntNumber",(26#24,26#48,!3))],[]
   )
   ,(26#1,26#50,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"printSizeTLine"):unit,[(class((,size_t)):"sizeTNumber",(28#21,28#38,!3))],[]
   )
   ,(28#1,28#40,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"printHexCharLine"):unit,[(char:"charHex",(30#23,30#34,!3))],[]
   )
   ,(30#1,30#36,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"printWcharLine"):unit,[(wchar:"wideChar",(32#21,32#36,!3))],[]
   )
   ,(32#1,32#38,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"printUnsignedLine"):unit,[(uint:"unsignedNumber",(34#24,34#46,!3))],[]
   )
   ,(34#1,34#48,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"printHexUnsignedCharLine"):unit,[(uchar:"unsignedCharacter",(36#31,36#61,!3))],[]
   )
   ,(36#1,36#63,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"printDoubleLine"):unit,[(double:"doubleNumber",(38#22,38#40,!3))],[]
   )
   ,(38#1,38#42,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"printStructLine"):unit,[(mod(ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),[const]):"structTwoIntsStruct",(40#22,40#62,!3))],[]
   )
   ,(40#1,40#64,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"printBytesLine"):unit,[(mod(ref(uchar),[const]):"bytes",(42#21,42#47,!3)),(class((,size_t)):"numBytes",(42#50,42#64,!3))],[]
   )
   ,(42#1,42#66,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"decodeHexChars"):class((,size_t)),[(ref(uchar):"bytes",(44#23,44#43,!3)),(class((,size_t)):"numBytes",(44#46,44#60,!3)),(mod(ref(char),[const]):"hex",(44#63,44#78,!3))],[]
   )
   ,(44#1,44#80,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"decodeHexWChars"):class((,size_t)),[(ref(uchar):"bytes",(46#24,46#44,!3)),(class((,size_t)):"numBytes",(46#47,46#61,!3)),(mod(ref(wchar),[const]):"hex",(46#64,46#82,!3))],[]
   )
   ,(46#1,46#84,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"globalReturnsTrue"):int,[],[]
   )
   ,(48#1,48#24,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"globalReturnsFalse"):int,[],[]
   )
   ,(50#1,50#25,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"globalReturnsTrueOrFalse"):int,[],[]
   )
   ,(52#1,52#31,!3)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   FN([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"CWE369_Divide_by_Zero__float_fgets_01_bad"):unit,[],[],
   {[
      {VD("data",float)
      ,(28#11,28#14,!1)};
      {{AE({V("data"),float,(30#5,30#8,!1)},{"0.0"N,float,(30#12,30#15,!1)}),float,(30#5,30#15,!1)}
      ,(30#5,30#15,!1)};
      {[
         {VD("inputBuffer",char,([{"20"N,int,(32#26,32#27,!1)}]))
         ,(32#14,32#28,!1)};
         {IF({BO(!=,{SC((<"CWE369_Divide_by_Zero__float_fgets_01">,"fgets"),[arr(char),int,class((,"%undef"))],[{V("inputBuffer"),arr(char),(34#19,34#29,!1)},{"20"N,int,(34#32,34#33,!1)},{V("stdin"),class((,"%undef")),(34#36,34#40,!1)}]),class((,"%undef")),(34#13,34#41,!1)},{CS(ref(unit),{"0"N,int,(34#46,34#49,!1)}),ref(unit),(34#46,34#49,!1)}),bool,(34#13,34#49,!1)},
            {[
               {{AE({V("data"),float,(37#13,37#16,!1)},{CS(float,{SC((<"CWE369_Divide_by_Zero__float_fgets_01">,"atof"),[arr(char)],[{V("inputBuffer"),arr(char),(37#32,37#42,!1)}]),class((,"%undef")),(37#27,37#43,!1)}),float,(37#20,37#43,!1)}),float,(37#13,37#43,!1)}
               ,(37#13,37#43,!1)}
               ]
            ,(35#9,38#9,!1)},
            {[
               {PC0((<"CWE369_Divide_by_Zero__float_fgets_01">,"printLine"),[mod(ref(char),[const])],[{"fgets() failed."S,string,(41#23,41#39,!1)}])
               ,(41#13,41#40,!1)}
               ]
            ,(40#9,42#9,!1)})
         ,(34#9,42#9,!1)}
         ]
      ,(31#5,43#5,!1)};
      {[
         {VD("result",int,{CS(int,{BO(/,{"100.0"N,float,(46#28,46#32,!1)},{V("data"),float,(46#36,46#39,!1)}),float,(46#27,46#40,!1)}),int,(46#22,46#40,!1)})
         ,(46#13,46#18,!1)};
         {PC0((<"CWE369_Divide_by_Zero__float_fgets_01">,"printIntLine"),[int],[{V("result"),int,(47#22,47#27,!1)}])
         ,(47#9,47#28,!1)}
         ]
      ,(44#5,48#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(26#1,49#1,!1)}
   )
   ,(26#1,49#1,!1)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   FN([public,static],(<"CWE369_Divide_by_Zero__float_fgets_01">,"goodG2B"):mod(unit,[static]),[],[],
   {[
      {VD("data",float)
      ,(58#11,58#14,!1)};
      {{AE({V("data"),float,(60#5,60#8,!1)},{"0.0"N,float,(60#12,60#15,!1)}),float,(60#5,60#15,!1)}
      ,(60#5,60#15,!1)};
      {{AE({V("data"),float,(62#5,62#8,!1)},{"2.0"N,float,(62#12,62#15,!1)}),float,(62#5,62#15,!1)}
      ,(62#5,62#15,!1)};
      {[
         {VD("result",int,{CS(int,{BO(/,{"100.0"N,float,(65#28,65#32,!1)},{V("data"),float,(65#36,65#39,!1)}),float,(65#27,65#40,!1)}),int,(65#22,65#40,!1)})
         ,(65#13,65#18,!1)};
         {PC0((<"CWE369_Divide_by_Zero__float_fgets_01">,"printIntLine"),[int],[{V("result"),int,(66#22,66#27,!1)}])
         ,(66#9,66#28,!1)}
         ]
      ,(63#5,67#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(56#1,68#1,!1)}
   )
   ,(56#1,68#1,!1)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   FN([public,static],(<"CWE369_Divide_by_Zero__float_fgets_01">,"goodB2G"):mod(unit,[static]),[],[],
   {[
      {VD("data",float)
      ,(73#11,73#14,!1)};
      {{AE({V("data"),float,(75#5,75#8,!1)},{"0.0"N,float,(75#12,75#15,!1)}),float,(75#5,75#15,!1)}
      ,(75#5,75#15,!1)};
      {[
         {VD("inputBuffer",char,([{"20"N,int,(77#26,77#27,!1)}]))
         ,(77#14,77#28,!1)};
         {IF({BO(!=,{SC((<"CWE369_Divide_by_Zero__float_fgets_01">,"fgets"),[arr(char),int,class((,"%undef"))],[{V("inputBuffer"),arr(char),(79#19,79#29,!1)},{"20"N,int,(79#32,79#33,!1)},{V("stdin"),class((,"%undef")),(79#36,79#40,!1)}]),class((,"%undef")),(79#13,79#41,!1)},{CS(ref(unit),{"0"N,int,(79#46,79#49,!1)}),ref(unit),(79#46,79#49,!1)}),bool,(79#13,79#49,!1)},
            {[
               {{AE({V("data"),float,(82#13,82#16,!1)},{CS(float,{SC((<"CWE369_Divide_by_Zero__float_fgets_01">,"atof"),[arr(char)],[{V("inputBuffer"),arr(char),(82#32,82#42,!1)}]),class((,"%undef")),(82#27,82#43,!1)}),float,(82#20,82#43,!1)}),float,(82#13,82#43,!1)}
               ,(82#13,82#43,!1)}
               ]
            ,(80#9,83#9,!1)},
            {[
               {PC0((<"CWE369_Divide_by_Zero__float_fgets_01">,"printLine"),[mod(ref(char),[const])],[{"fgets() failed."S,string,(86#23,86#39,!1)}])
               ,(86#13,86#40,!1)}
               ]
            ,(85#9,87#9,!1)})
         ,(79#9,87#9,!1)}
         ]
      ,(76#5,88#5,!1)};
      {IF({BO(>,{SC((<"CWE369_Divide_by_Zero__float_fgets_01">,"fabs"),[float],[{V("data"),float,(90#13,90#16,!1)}]),class((,"%undef")),(90#8,90#17,!1)},{"0.000001"N,float,(90#21,90#28,!1)}),bool,(90#8,90#28,!1)},
         {[
            {VD("result",int,{CS(int,{BO(/,{"100.0"N,float,(92#28,92#32,!1)},{V("data"),float,(92#36,92#39,!1)}),float,(92#27,92#40,!1)}),int,(92#22,92#40,!1)})
            ,(92#13,92#18,!1)};
            {PC0((<"CWE369_Divide_by_Zero__float_fgets_01">,"printIntLine"),[int],[{V("result"),int,(93#22,93#27,!1)}])
            ,(93#9,93#28,!1)}
            ]
         ,(91#5,94#5,!1)},
         {[
            {PC0((<"CWE369_Divide_by_Zero__float_fgets_01">,"printLine"),[mod(ref(char),[const])],[{"This would result in a divide by zero"S,string,(97#19,97#57,!1)}])
            ,(97#9,97#58,!1)}
            ]
         ,(96#5,98#5,!1)})
      ,(90#5,98#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(71#1,99#1,!1)}
   )
   ,(71#1,99#1,!1)},

   {"CWE369_Divide_by_Zero__float_fgets_01",
   FN([public],(<"CWE369_Divide_by_Zero__float_fgets_01">,"CWE369_Divide_by_Zero__float_fgets_01_good"):unit,[],[],
   {[
      {PC0((<"CWE369_Divide_by_Zero__float_fgets_01">,"goodG2B"),[],[])
      ,(103#5,103#13,!1)};
      {PC0((<"CWE369_Divide_by_Zero__float_fgets_01">,"goodB2G"),[],[])
      ,(104#5,104#13,!1)};
      {RE0
      ,(?)}
      ]
   ,(101#1,105#1,!1)}
   )
   ,(101#1,105#1,!1)},

   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp",
   CL([struct],(,_twoIntsStruct),[])
   {
      ([public],"intOne":int,(92#9,92#14,!2));
      ([public],"intTwo":int,(93#9,93#14,!2))
   }
   ,(90#1,94#16,!2)}

,


   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp",
   [
      M("/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE369_Divide_by_Zero__float_fgets_01.c\nLabel Definition File: CWE369_Divide_by_Zero__float.label.xml\nTemplate File: sources-sinks-01.tmpl.c\n*/",1,(1#0,1#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/*\n * @description\n * CWE: 369 Divide by Zero\n * BadSource: fgets Read data from the console using fgets()\n * GoodSource: A hardcoded non-zero number (two)\n * Sinks:\n *    GoodSink: Check value of or near zero before dividing\n *    BadSink : Divide a constant by data\n * Flow Variant: 01 Baseline\n *\n * */",6,(6#0,6#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/* Initialize data */",29,(29#0,29#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/* POTENTIAL FLAW: Use a value input from the console using fgets() */",33,(33#0,33#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/* Convert to float */",36,(36#0,36#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/* POTENTIAL FLAW: Possibly divide by zero */",45,(45#0,45#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/* OMITBAD */",51,(51#0,51#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/* goodG2B uses the GoodSource with the BadSink */",55,(55#0,55#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/* Initialize data */",59,(59#0,59#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/* FIX: Use a hardcoded number that won't a divide by zero */",61,(61#0,61#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/* POTENTIAL FLAW: Possibly divide by zero */",64,(64#0,64#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/* goodB2G uses the BadSource with the GoodSink */",70,(70#0,70#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/* Initialize data */",74,(74#0,74#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/* POTENTIAL FLAW: Use a value input from the console using fgets() */",78,(78#0,78#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/* Convert to float */",81,(81#0,81#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/* FIX: Check for value of or near zero before dividing */",89,(89#0,89#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/* OMITGOOD */",107,(107#0,107#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */",109,(109#0,109#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/* seed randomness */",118,(118#0,118#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/* OMITGOOD */",124,(124#0,124#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp")),
      M("/* OMITBAD */",129,(129#0,129#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fgets_01.cpp"))
   ]
   }
]