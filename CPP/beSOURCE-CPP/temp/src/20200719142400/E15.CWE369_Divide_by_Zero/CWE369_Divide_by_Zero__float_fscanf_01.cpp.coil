{
   ("filename", "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp");
   ("language", "CPP");
   ("include", "std_testcase.h");
   ("include", "<stdio.h>");
   ("include", "<stdlib.h>");
   ("include", "<stddef.h>");
   ("include", "<time.h>");
   ("include", "<limits.h>");
   ("include", "<string.h>");
   ("include", "<stdint.h>");
   ("include", "<stdint.h>");
   ("include", "<ctype.h>");
   ("include", "<fcntl.h>");
   ("include", "<sys/types.h>");
   ("include", "<sys/stat.h>");
   ("include", "std_testcase_io.h");
   ("include", "std_testcase.h");
   ("include", "<math.h>");
}
{
   (!3, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase_io.h");
   (!2, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h");
   (!1, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp");
}
[
   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp",
   MD("__asm__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp",
   MD("__attribute__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp",
   MD("va_start(list)",["list"],"list = (char *) &va_alist")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp",
   MD("va_end(list)",["list"],"va_end(list)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp",
   MD("va_arg(list,mode)",["list","mode"],"va_arg(list,(mode)null)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp",
   MD("offsetof(st,m)",["st","m"],"((size_t)(&((st *)0)->m))")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp",
   MD("RAND32()",[],"((rand()<<30) ^ (rand()<<15) ^ rand())")
   ,(84#0,84#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp",
   MD("RAND64()",[],"(((int64_t)rand()<<60) ^ ((int64_t)rand()<<45) ^ ((int64_t)rand()<<30) ^ ((int64_t)rand()<<15) ^ (int64_t)rand())")
   ,(87#0,87#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"CWE369_Divide_by_Zero__float_fscanf_01",
   SF([extern,const,extern],int,<"CWE369_Divide_by_Zero__float_fscanf_01">,"GLOBAL_CONST_TRUE")
   ,(103#18,103#34,!2)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   SF([extern,const,extern],int,<"CWE369_Divide_by_Zero__float_fscanf_01">,"GLOBAL_CONST_FALSE")
   ,(104#18,104#35,!2)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   SF([extern,const,extern],int,<"CWE369_Divide_by_Zero__float_fscanf_01">,"GLOBAL_CONST_FIVE")
   ,(105#18,105#34,!2)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__float_fscanf_01">,"globalTrue")
   ,(110#12,110#21,!2)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__float_fscanf_01">,"globalFalse")
   ,(111#12,111#22,!2)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__float_fscanf_01">,"globalFive")
   ,(112#12,112#21,!2)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__float_fscanf_01">,"globalArgc")
   ,(55#12,55#21,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   SF([extern,extern],ref(ref(char)),<"CWE369_Divide_by_Zero__float_fscanf_01">,"globalArgv")
   ,(56#12,56#24,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   SI(<"CWE369_Divide_by_Zero__float_fscanf_01">,
   {[
      {;
      ,(1#1,110#1,!1)};
      {RE0
      ,(?)}
      ]
   ,(1#1,110#1,!1)}
   )
   ,(1#1,110#1,!1)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"printLine"):unit,[(mod(ref(char),[const]):"line",(14#16,14#32,!3))],[]
   )
   ,(14#1,14#34,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"printWLine"):unit,[(mod(ref(wchar),[const]):"line",(16#17,16#36,!3))],[]
   )
   ,(16#1,16#38,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"printIntLine"):unit,[(int:"intNumber",(18#20,18#32,!3))],[]
   )
   ,(18#1,18#34,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"printShortLine"):unit,[(short:"shortNumber",(20#22,20#38,!3))],[]
   )
   ,(20#1,20#40,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"printFloatLine"):unit,[(float:"floatNumber",(22#22,22#38,!3))],[]
   )
   ,(22#1,22#40,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"printLongLine"):unit,[(long:"longNumber",(24#20,24#34,!3))],[]
   )
   ,(24#1,24#36,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"printLongLongLine"):unit,[(class((,int64_t)):"longLongIntNumber",(26#24,26#48,!3))],[]
   )
   ,(26#1,26#50,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"printSizeTLine"):unit,[(class((,size_t)):"sizeTNumber",(28#21,28#38,!3))],[]
   )
   ,(28#1,28#40,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"printHexCharLine"):unit,[(char:"charHex",(30#23,30#34,!3))],[]
   )
   ,(30#1,30#36,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"printWcharLine"):unit,[(wchar:"wideChar",(32#21,32#36,!3))],[]
   )
   ,(32#1,32#38,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"printUnsignedLine"):unit,[(uint:"unsignedNumber",(34#24,34#46,!3))],[]
   )
   ,(34#1,34#48,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"printHexUnsignedCharLine"):unit,[(uchar:"unsignedCharacter",(36#31,36#61,!3))],[]
   )
   ,(36#1,36#63,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"printDoubleLine"):unit,[(double:"doubleNumber",(38#22,38#40,!3))],[]
   )
   ,(38#1,38#42,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"printStructLine"):unit,[(mod(ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),[const]):"structTwoIntsStruct",(40#22,40#62,!3))],[]
   )
   ,(40#1,40#64,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"printBytesLine"):unit,[(mod(ref(uchar),[const]):"bytes",(42#21,42#47,!3)),(class((,size_t)):"numBytes",(42#50,42#64,!3))],[]
   )
   ,(42#1,42#66,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"decodeHexChars"):class((,size_t)),[(ref(uchar):"bytes",(44#23,44#43,!3)),(class((,size_t)):"numBytes",(44#46,44#60,!3)),(mod(ref(char),[const]):"hex",(44#63,44#78,!3))],[]
   )
   ,(44#1,44#80,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"decodeHexWChars"):class((,size_t)),[(ref(uchar):"bytes",(46#24,46#44,!3)),(class((,size_t)):"numBytes",(46#47,46#61,!3)),(mod(ref(wchar),[const]):"hex",(46#64,46#82,!3))],[]
   )
   ,(46#1,46#84,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"globalReturnsTrue"):int,[],[]
   )
   ,(48#1,48#24,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"globalReturnsFalse"):int,[],[]
   )
   ,(50#1,50#25,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"globalReturnsTrueOrFalse"):int,[],[]
   )
   ,(52#1,52#31,!3)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   FN([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"CWE369_Divide_by_Zero__float_fscanf_01_bad"):unit,[],[],
   {[
      {VD("data",float)
      ,(26#11,26#14,!1)};
      {{AE({V("data"),float,(28#5,28#8,!1)},{"0.0"N,float,(28#12,28#15,!1)}),float,(28#5,28#15,!1)}
      ,(28#5,28#15,!1)};
      {PC0((<"CWE369_Divide_by_Zero__float_fscanf_01">,"fscanf"),[class((,"%undef")),string,ref(float)],[{V("stdin"),class((,"%undef")),(30#13,30#17,!1)},{"%f"S,string,(30#20,30#23,!1)},{&{V("data"),float,(30#27,30#30,!1)},ref(float),(30#26,30#30,!1)}])
      ,(30#5,30#31,!1)};
      {[
         {VD("result",int,{CS(int,{BO(/,{"100.0"N,float,(33#28,33#32,!1)},{V("data"),float,(33#36,33#39,!1)}),float,(33#27,33#40,!1)}),int,(33#22,33#40,!1)})
         ,(33#13,33#18,!1)};
         {PC0((<"CWE369_Divide_by_Zero__float_fscanf_01">,"printIntLine"),[int],[{V("result"),int,(34#22,34#27,!1)}])
         ,(34#9,34#28,!1)}
         ]
      ,(31#5,35#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(24#1,36#1,!1)}
   )
   ,(24#1,36#1,!1)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   FN([public,static],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"goodG2B"):mod(unit,[static]),[],[],
   {[
      {VD("data",float)
      ,(45#11,45#14,!1)};
      {{AE({V("data"),float,(47#5,47#8,!1)},{"0.0"N,float,(47#12,47#15,!1)}),float,(47#5,47#15,!1)}
      ,(47#5,47#15,!1)};
      {{AE({V("data"),float,(49#5,49#8,!1)},{"2.0"N,float,(49#12,49#15,!1)}),float,(49#5,49#15,!1)}
      ,(49#5,49#15,!1)};
      {[
         {VD("result",int,{CS(int,{BO(/,{"100.0"N,float,(52#28,52#32,!1)},{V("data"),float,(52#36,52#39,!1)}),float,(52#27,52#40,!1)}),int,(52#22,52#40,!1)})
         ,(52#13,52#18,!1)};
         {PC0((<"CWE369_Divide_by_Zero__float_fscanf_01">,"printIntLine"),[int],[{V("result"),int,(53#22,53#27,!1)}])
         ,(53#9,53#28,!1)}
         ]
      ,(50#5,54#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(43#1,55#1,!1)}
   )
   ,(43#1,55#1,!1)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   FN([public,static],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"goodB2G"):mod(unit,[static]),[],[],
   {[
      {VD("data",float)
      ,(60#11,60#14,!1)};
      {{AE({V("data"),float,(62#5,62#8,!1)},{"0.0"N,float,(62#12,62#15,!1)}),float,(62#5,62#15,!1)}
      ,(62#5,62#15,!1)};
      {PC0((<"CWE369_Divide_by_Zero__float_fscanf_01">,"fscanf"),[class((,"%undef")),string,ref(float)],[{V("stdin"),class((,"%undef")),(64#13,64#17,!1)},{"%f"S,string,(64#20,64#23,!1)},{&{V("data"),float,(64#27,64#30,!1)},ref(float),(64#26,64#30,!1)}])
      ,(64#5,64#31,!1)};
      {IF({BO(>,{SC((<"CWE369_Divide_by_Zero__float_fscanf_01">,"fabs"),[float],[{V("data"),float,(66#13,66#16,!1)}]),class((,"%undef")),(66#8,66#17,!1)},{"0.000001"N,float,(66#21,66#28,!1)}),bool,(66#8,66#28,!1)},
         {[
            {VD("result",int,{CS(int,{BO(/,{"100.0"N,float,(68#28,68#32,!1)},{V("data"),float,(68#36,68#39,!1)}),float,(68#27,68#40,!1)}),int,(68#22,68#40,!1)})
            ,(68#13,68#18,!1)};
            {PC0((<"CWE369_Divide_by_Zero__float_fscanf_01">,"printIntLine"),[int],[{V("result"),int,(69#22,69#27,!1)}])
            ,(69#9,69#28,!1)}
            ]
         ,(67#5,70#5,!1)},
         {[
            {PC0((<"CWE369_Divide_by_Zero__float_fscanf_01">,"printLine"),[mod(ref(char),[const])],[{"This would result in a divide by zero"S,string,(73#19,73#57,!1)}])
            ,(73#9,73#58,!1)}
            ]
         ,(72#5,74#5,!1)})
      ,(66#5,74#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(58#1,75#1,!1)}
   )
   ,(58#1,75#1,!1)},

   {"CWE369_Divide_by_Zero__float_fscanf_01",
   FN([public],(<"CWE369_Divide_by_Zero__float_fscanf_01">,"CWE369_Divide_by_Zero__float_fscanf_01_good"):unit,[],[],
   {[
      {PC0((<"CWE369_Divide_by_Zero__float_fscanf_01">,"goodG2B"),[],[])
      ,(79#5,79#13,!1)};
      {PC0((<"CWE369_Divide_by_Zero__float_fscanf_01">,"goodB2G"),[],[])
      ,(80#5,80#13,!1)};
      {RE0
      ,(?)}
      ]
   ,(77#1,81#1,!1)}
   )
   ,(77#1,81#1,!1)},

   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp",
   CL([struct],(,_twoIntsStruct),[])
   {
      ([public],"intOne":int,(92#9,92#14,!2));
      ([public],"intTwo":int,(93#9,93#14,!2))
   }
   ,(90#1,94#16,!2)}

,


   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp",
   [
      M("/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE369_Divide_by_Zero__float_fscanf_01.c\nLabel Definition File: CWE369_Divide_by_Zero__float.label.xml\nTemplate File: sources-sinks-01.tmpl.c\n*/",1,(1#0,1#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp")),
      M("/*\n * @description\n * CWE: 369 Divide by Zero\n * BadSource: fscanf Read data from the console using fscanf()\n * GoodSource: A hardcoded non-zero number (two)\n * Sinks:\n *    GoodSink: Check value of or near zero before dividing\n *    BadSink : Divide a constant by data\n * Flow Variant: 01 Baseline\n *\n * */",6,(6#0,6#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp")),
      M("/* Initialize data */",27,(27#0,27#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp")),
      M("/* POTENTIAL FLAW: Use a value input from the console using fscanf() */",29,(29#0,29#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp")),
      M("/* POTENTIAL FLAW: Possibly divide by zero */",32,(32#0,32#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp")),
      M("/* OMITBAD */",38,(38#0,38#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp")),
      M("/* goodG2B uses the GoodSource with the BadSink */",42,(42#0,42#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp")),
      M("/* Initialize data */",46,(46#0,46#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp")),
      M("/* FIX: Use a hardcoded number that won't a divide by zero */",48,(48#0,48#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp")),
      M("/* POTENTIAL FLAW: Possibly divide by zero */",51,(51#0,51#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp")),
      M("/* goodB2G uses the BadSource with the GoodSink */",57,(57#0,57#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp")),
      M("/* Initialize data */",61,(61#0,61#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp")),
      M("/* POTENTIAL FLAW: Use a value input from the console using fscanf() */",63,(63#0,63#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp")),
      M("/* FIX: Check for value of or near zero before dividing */",65,(65#0,65#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp")),
      M("/* OMITGOOD */",83,(83#0,83#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp")),
      M("/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */",85,(85#0,85#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp")),
      M("/* seed randomness */",94,(94#0,94#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp")),
      M("/* OMITGOOD */",100,(100#0,100#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp")),
      M("/* OMITBAD */",105,(105#0,105#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_fscanf_01.cpp"))
   ]
   }
]