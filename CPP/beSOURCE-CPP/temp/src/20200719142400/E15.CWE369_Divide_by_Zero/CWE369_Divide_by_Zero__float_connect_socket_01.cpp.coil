{
   ("filename", "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp");
   ("language", "CPP");
   ("include", "std_testcase.h");
   ("include", "<stdio.h>");
   ("include", "<stdlib.h>");
   ("include", "<stddef.h>");
   ("include", "<time.h>");
   ("include", "<limits.h>");
   ("include", "<string.h>");
   ("include", "<stdint.h>");
   ("include", "<stdint.h>");
   ("include", "<ctype.h>");
   ("include", "<fcntl.h>");
   ("include", "<sys/types.h>");
   ("include", "<sys/stat.h>");
   ("include", "std_testcase_io.h");
   ("include", "std_testcase.h");
   ("include", "<math.h>");
   ("include", "<sys/types.h>");
   ("include", "<sys/socket.h>");
   ("include", "<netinet/in.h>");
   ("include", "<arpa/inet.h>");
   ("include", "<unistd.h>");
}
{
   (!3, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase_io.h");
   (!2, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h");
   (!1, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp");
}
[
   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp",
   MD("__asm__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp",
   MD("__attribute__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp",
   MD("va_start(list)",["list"],"list = (char *) &va_alist")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp",
   MD("va_end(list)",["list"],"va_end(list)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp",
   MD("va_arg(list,mode)",["list","mode"],"va_arg(list,(mode)null)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp",
   MD("offsetof(st,m)",["st","m"],"((size_t)(&((st *)0)->m))")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp",
   MD("RAND32()",[],"((rand()<<30) ^ (rand()<<15) ^ rand())")
   ,(84#0,84#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp",
   MD("RAND64()",[],"(((int64_t)rand()<<60) ^ ((int64_t)rand()<<45) ^ ((int64_t)rand()<<30) ^ ((int64_t)rand()<<15) ^ (int64_t)rand())")
   ,(87#0,87#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   SF([extern,const,extern],int,<"CWE369_Divide_by_Zero__float_connect_socket_01">,"GLOBAL_CONST_TRUE")
   ,(103#18,103#34,!2)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   SF([extern,const,extern],int,<"CWE369_Divide_by_Zero__float_connect_socket_01">,"GLOBAL_CONST_FALSE")
   ,(104#18,104#35,!2)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   SF([extern,const,extern],int,<"CWE369_Divide_by_Zero__float_connect_socket_01">,"GLOBAL_CONST_FIVE")
   ,(105#18,105#34,!2)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__float_connect_socket_01">,"globalTrue")
   ,(110#12,110#21,!2)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__float_connect_socket_01">,"globalFalse")
   ,(111#12,111#22,!2)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__float_connect_socket_01">,"globalFive")
   ,(112#12,112#21,!2)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__float_connect_socket_01">,"globalArgc")
   ,(55#12,55#21,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   SF([extern,extern],ref(ref(char)),<"CWE369_Divide_by_Zero__float_connect_socket_01">,"globalArgv")
   ,(56#12,56#24,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   SI(<"CWE369_Divide_by_Zero__float_connect_socket_01">,
   {[
      {;
      ,(1#1,240#1,!1)};
      {RE0
      ,(?)}
      ]
   ,(1#1,240#1,!1)}
   )
   ,(1#1,240#1,!1)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"printLine"):unit,[(mod(ref(char),[const]):"line",(14#16,14#32,!3))],[]
   )
   ,(14#1,14#34,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"printWLine"):unit,[(mod(ref(wchar),[const]):"line",(16#17,16#36,!3))],[]
   )
   ,(16#1,16#38,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"printIntLine"):unit,[(int:"intNumber",(18#20,18#32,!3))],[]
   )
   ,(18#1,18#34,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"printShortLine"):unit,[(short:"shortNumber",(20#22,20#38,!3))],[]
   )
   ,(20#1,20#40,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"printFloatLine"):unit,[(float:"floatNumber",(22#22,22#38,!3))],[]
   )
   ,(22#1,22#40,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"printLongLine"):unit,[(long:"longNumber",(24#20,24#34,!3))],[]
   )
   ,(24#1,24#36,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"printLongLongLine"):unit,[(class((,int64_t)):"longLongIntNumber",(26#24,26#48,!3))],[]
   )
   ,(26#1,26#50,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"printSizeTLine"):unit,[(class((,size_t)):"sizeTNumber",(28#21,28#38,!3))],[]
   )
   ,(28#1,28#40,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"printHexCharLine"):unit,[(char:"charHex",(30#23,30#34,!3))],[]
   )
   ,(30#1,30#36,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"printWcharLine"):unit,[(wchar:"wideChar",(32#21,32#36,!3))],[]
   )
   ,(32#1,32#38,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"printUnsignedLine"):unit,[(uint:"unsignedNumber",(34#24,34#46,!3))],[]
   )
   ,(34#1,34#48,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"printHexUnsignedCharLine"):unit,[(uchar:"unsignedCharacter",(36#31,36#61,!3))],[]
   )
   ,(36#1,36#63,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"printDoubleLine"):unit,[(double:"doubleNumber",(38#22,38#40,!3))],[]
   )
   ,(38#1,38#42,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"printStructLine"):unit,[(mod(ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),[const]):"structTwoIntsStruct",(40#22,40#62,!3))],[]
   )
   ,(40#1,40#64,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"printBytesLine"):unit,[(mod(ref(uchar),[const]):"bytes",(42#21,42#47,!3)),(class((,size_t)):"numBytes",(42#50,42#64,!3))],[]
   )
   ,(42#1,42#66,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"decodeHexChars"):class((,size_t)),[(ref(uchar):"bytes",(44#23,44#43,!3)),(class((,size_t)):"numBytes",(44#46,44#60,!3)),(mod(ref(char),[const]):"hex",(44#63,44#78,!3))],[]
   )
   ,(44#1,44#80,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"decodeHexWChars"):class((,size_t)),[(ref(uchar):"bytes",(46#24,46#44,!3)),(class((,size_t)):"numBytes",(46#47,46#61,!3)),(mod(ref(wchar),[const]):"hex",(46#64,46#82,!3))],[]
   )
   ,(46#1,46#84,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"globalReturnsTrue"):int,[],[]
   )
   ,(48#1,48#24,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"globalReturnsFalse"):int,[],[]
   )
   ,(50#1,50#25,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"globalReturnsTrueOrFalse"):int,[],[]
   )
   ,(52#1,52#31,!3)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   FN([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"CWE369_Divide_by_Zero__float_connect_socket_01_bad"):unit,[],[],
   {[
      {VD("data",float)
      ,(48#11,48#14,!1)};
      {{AE({V("data"),float,(50#5,50#8,!1)},{"0.0"N,float,(50#12,50#15,!1)}),float,(50#5,50#15,!1)}
      ,(50#5,50#15,!1)};
      {[
         {VD("recvResult",int)
         ,(56#13,56#22,!1)};
         {VD("service",mod(class((,sockaddr_in)),[struct]))
         ,(57#28,57#34,!1)};
         {VD("connectSocket",int,{UO(-,{"1"N,int,(58#30,58#30,!1)}),int,(58#29,58#30,!1)})
         ,(58#13,58#25,!1)};
         {VD("inputBuffer",char,([{"20"N,int,(59#26,59#27,!1)}]))
         ,(59#14,59#28,!1)};
         {DW(L35,
            {[
               {{AE({V("connectSocket"),int,(69#13,69#25,!1)},{SC((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"socket"),[class((,"%undef")),class((,"%undef")),class((,"%undef"))],[{V("AF_INET"),class((,"%undef")),(69#36,69#42,!1)},{V("SOCK_STREAM"),class((,"%undef")),(69#45,69#55,!1)},{V("IPPROTO_TCP"),class((,"%undef")),(69#58,69#68,!1)}]),class((,"%undef")),(69#29,69#69,!1)}),int,(69#13,69#69,!1)}
               ,(69#13,69#69,!1)};
               {IF0({BO(==,{V("connectSocket"),int,(70#17,70#29,!1)},{UO(-,{"1"N,int,(70#35,70#35,!1)}),int,(70#34,70#35,!1)}),bool,(70#17,70#35,!1)},
                  {[
                     {BR @ 
                     ,(72#17,72#22,!1)}
                     ]
                  ,(71#13,73#13,!1)})
               ,(70#13,73#13,!1)};
               {PC0((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"memset"),[ref(mod(class((,sockaddr_in)),[struct])),int,int],[{&{V("service"),mod(class((,sockaddr_in)),[struct]),(74#21,74#27,!1)},ref(mod(class((,sockaddr_in)),[struct])),(74#20,74#27,!1)},{"0"N,int,(74#30,74#30,!1)},{SO({V("service"),mod(class((,sockaddr_in)),[struct]),(74#40,74#46,!1)}),int,(74#33,74#47,!1)}])
               ,(74#13,74#48,!1)};
               {{AE({OA({V("service"),mod(class((,sockaddr_in)),[struct]),(75#13,75#19,!1)},"sin_family"),class((,"%undef")),(75#13,75#30,!1)},{V("AF_INET"),class((,"%undef")),(75#34,75#40,!1)}),class((,"%undef")),(75#13,75#40,!1)}
               ,(75#13,75#40,!1)};
               {{AE({OA({OA({V("service"),mod(class((,sockaddr_in)),[struct]),(76#13,76#19,!1)},"sin_addr"),class((,"%undef")),(76#13,76#28,!1)},"s_addr"),class((,"%undef")),(76#13,76#35,!1)},{SC((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"inet_addr"),[string],[{"127.0.0.1"S,string,(76#49,76#59,!1)}]),class((,"%undef")),(76#39,76#60,!1)}),class((,"%undef")),(76#13,76#60,!1)}
               ,(76#13,76#60,!1)};
               {{AE({OA({V("service"),mod(class((,sockaddr_in)),[struct]),(77#13,77#19,!1)},"sin_port"),class((,"%undef")),(77#13,77#28,!1)},{SC((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"htons"),[int],[{"27015"N,int,(77#38,77#42,!1)}]),class((,"%undef")),(77#32,77#43,!1)}),class((,"%undef")),(77#13,77#43,!1)}
               ,(77#13,77#43,!1)};
               {IF0({BO(==,{SC((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"connect"),[int,ref(mod(class((,sockaddr)),[struct])),int],[{V("connectSocket"),int,(78#25,78#37,!1)},{CS(ref(mod(class((,sockaddr)),[struct])),{&{V("service"),mod(class((,sockaddr_in)),[struct]),(78#59,78#65,!1)},ref(mod(class((,sockaddr_in)),[struct])),(78#58,78#65,!1)}),ref(mod(class((,sockaddr)),[struct])),(78#40,78#65,!1)},{SO({V("service"),mod(class((,sockaddr_in)),[struct]),(78#75,78#81,!1)}),int,(78#68,78#82,!1)}]),class((,"%undef")),(78#17,78#83,!1)},{UO(-,{"1"N,int,(78#89,78#89,!1)}),int,(78#88,78#89,!1)}),bool,(78#17,78#89,!1)},
                  {[
                     {BR @ 
                     ,(80#17,80#22,!1)}
                     ]
                  ,(79#13,81#13,!1)})
               ,(78#13,81#13,!1)};
               {{AE({V("recvResult"),int,(85#13,85#22,!1)},{SC((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"recv"),[int,arr(char),int,int],[{V("connectSocket"),int,(85#31,85#43,!1)},{V("inputBuffer"),arr(char),(85#46,85#56,!1)},{BO(-,{"20"N,int,(85#59,85#60,!1)},{"1"N,int,(85#64,85#64,!1)}),int,(85#59,85#64,!1)},{"0"N,int,(85#67,85#67,!1)}]),class((,"%undef")),(85#26,85#68,!1)}),int,(85#13,85#68,!1)}
               ,(85#13,85#68,!1)};
               {IF0({BO(||,{BO(==,{V("recvResult"),int,(86#17,86#26,!1)},{UO(-,{"1"N,int,(86#32,86#32,!1)}),int,(86#31,86#32,!1)}),bool,(86#17,86#32,!1)},{BO(==,{V("recvResult"),int,(86#37,86#46,!1)},{"0"N,int,(86#51,86#51,!1)}),bool,(86#37,86#51,!1)}),bool,(86#17,86#51,!1)},
                  {[
                     {BR @ 
                     ,(88#17,88#22,!1)}
                     ]
                  ,(87#13,89#13,!1)})
               ,(86#13,89#13,!1)};
               {{AE({AA({V("inputBuffer"),arr(char),(91#13,91#23,!1)},[{V("recvResult"),int,(91#25,91#34,!1)}]),char,(91#13,91#35,!1)},{"\0"C,char,(91#39,91#42,!1)}),char,(91#13,91#42,!1)}
               ,(91#13,91#42,!1)};
               {{AE({V("data"),float,(93#13,93#16,!1)},{CS(float,{SC((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"atof"),[arr(char)],[{V("inputBuffer"),arr(char),(93#32,93#42,!1)}]),class((,"%undef")),(93#27,93#43,!1)}),float,(93#20,93#43,!1)}),float,(93#13,93#43,!1)}
               ,(93#13,93#43,!1)}
               ]
            ,(61#9,94#9,!1)},
            {"0"N,int,(95#16,95#16,!1)})
         ,(60#9,95#18,!1)};
         {IF0({BO(!=,{V("connectSocket"),int,(96#13,96#25,!1)},{UO(-,{"1"N,int,(96#31,96#31,!1)}),int,(96#30,96#31,!1)}),bool,(96#13,96#31,!1)},
            {[
               {PC0((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"close"),[int],[{V("connectSocket"),int,(98#19,98#31,!1)}])
               ,(98#13,98#32,!1)}
               ]
            ,(97#9,99#9,!1)})
         ,(96#9,99#9,!1)}
         ]
      ,(51#5,106#5,!1)};
      {[
         {VD("result",int,{CS(int,{BO(/,{"100.0"N,float,(109#28,109#32,!1)},{V("data"),float,(109#36,109#39,!1)}),float,(109#27,109#40,!1)}),int,(109#22,109#40,!1)})
         ,(109#13,109#18,!1)};
         {PC0((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"printIntLine"),[int],[{V("result"),int,(110#22,110#27,!1)}])
         ,(110#9,110#28,!1)}
         ]
      ,(107#5,111#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(46#1,112#1,!1)}
   )
   ,(46#1,112#1,!1)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   FN([public,static],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"goodG2B"):mod(unit,[static]),[],[],
   {[
      {VD("data",float)
      ,(121#11,121#14,!1)};
      {{AE({V("data"),float,(123#5,123#8,!1)},{"0.0"N,float,(123#12,123#15,!1)}),float,(123#5,123#15,!1)}
      ,(123#5,123#15,!1)};
      {{AE({V("data"),float,(125#5,125#8,!1)},{"2.0"N,float,(125#12,125#15,!1)}),float,(125#5,125#15,!1)}
      ,(125#5,125#15,!1)};
      {[
         {VD("result",int,{CS(int,{BO(/,{"100.0"N,float,(128#28,128#32,!1)},{V("data"),float,(128#36,128#39,!1)}),float,(128#27,128#40,!1)}),int,(128#22,128#40,!1)})
         ,(128#13,128#18,!1)};
         {PC0((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"printIntLine"),[int],[{V("result"),int,(129#22,129#27,!1)}])
         ,(129#9,129#28,!1)}
         ]
      ,(126#5,130#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(119#1,131#1,!1)}
   )
   ,(119#1,131#1,!1)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   FN([public,static],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"goodB2G"):mod(unit,[static]),[],[],
   {[
      {VD("data",float)
      ,(136#11,136#14,!1)};
      {{AE({V("data"),float,(138#5,138#8,!1)},{"0.0"N,float,(138#12,138#15,!1)}),float,(138#5,138#15,!1)}
      ,(138#5,138#15,!1)};
      {[
         {VD("recvResult",int)
         ,(144#13,144#22,!1)};
         {VD("service",mod(class((,sockaddr_in)),[struct]))
         ,(145#28,145#34,!1)};
         {VD("connectSocket",int,{UO(-,{"1"N,int,(146#30,146#30,!1)}),int,(146#29,146#30,!1)})
         ,(146#13,146#25,!1)};
         {VD("inputBuffer",char,([{"20"N,int,(147#26,147#27,!1)}]))
         ,(147#14,147#28,!1)};
         {DW(L36,
            {[
               {{AE({V("connectSocket"),int,(157#13,157#25,!1)},{SC((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"socket"),[class((,"%undef")),class((,"%undef")),class((,"%undef"))],[{V("AF_INET"),class((,"%undef")),(157#36,157#42,!1)},{V("SOCK_STREAM"),class((,"%undef")),(157#45,157#55,!1)},{V("IPPROTO_TCP"),class((,"%undef")),(157#58,157#68,!1)}]),class((,"%undef")),(157#29,157#69,!1)}),int,(157#13,157#69,!1)}
               ,(157#13,157#69,!1)};
               {IF0({BO(==,{V("connectSocket"),int,(158#17,158#29,!1)},{UO(-,{"1"N,int,(158#35,158#35,!1)}),int,(158#34,158#35,!1)}),bool,(158#17,158#35,!1)},
                  {[
                     {BR @ 
                     ,(160#17,160#22,!1)}
                     ]
                  ,(159#13,161#13,!1)})
               ,(158#13,161#13,!1)};
               {PC0((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"memset"),[ref(mod(class((,sockaddr_in)),[struct])),int,int],[{&{V("service"),mod(class((,sockaddr_in)),[struct]),(162#21,162#27,!1)},ref(mod(class((,sockaddr_in)),[struct])),(162#20,162#27,!1)},{"0"N,int,(162#30,162#30,!1)},{SO({V("service"),mod(class((,sockaddr_in)),[struct]),(162#40,162#46,!1)}),int,(162#33,162#47,!1)}])
               ,(162#13,162#48,!1)};
               {{AE({OA({V("service"),mod(class((,sockaddr_in)),[struct]),(163#13,163#19,!1)},"sin_family"),class((,"%undef")),(163#13,163#30,!1)},{V("AF_INET"),class((,"%undef")),(163#34,163#40,!1)}),class((,"%undef")),(163#13,163#40,!1)}
               ,(163#13,163#40,!1)};
               {{AE({OA({OA({V("service"),mod(class((,sockaddr_in)),[struct]),(164#13,164#19,!1)},"sin_addr"),class((,"%undef")),(164#13,164#28,!1)},"s_addr"),class((,"%undef")),(164#13,164#35,!1)},{SC((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"inet_addr"),[string],[{"127.0.0.1"S,string,(164#49,164#59,!1)}]),class((,"%undef")),(164#39,164#60,!1)}),class((,"%undef")),(164#13,164#60,!1)}
               ,(164#13,164#60,!1)};
               {{AE({OA({V("service"),mod(class((,sockaddr_in)),[struct]),(165#13,165#19,!1)},"sin_port"),class((,"%undef")),(165#13,165#28,!1)},{SC((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"htons"),[int],[{"27015"N,int,(165#38,165#42,!1)}]),class((,"%undef")),(165#32,165#43,!1)}),class((,"%undef")),(165#13,165#43,!1)}
               ,(165#13,165#43,!1)};
               {IF0({BO(==,{SC((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"connect"),[int,ref(mod(class((,sockaddr)),[struct])),int],[{V("connectSocket"),int,(166#25,166#37,!1)},{CS(ref(mod(class((,sockaddr)),[struct])),{&{V("service"),mod(class((,sockaddr_in)),[struct]),(166#59,166#65,!1)},ref(mod(class((,sockaddr_in)),[struct])),(166#58,166#65,!1)}),ref(mod(class((,sockaddr)),[struct])),(166#40,166#65,!1)},{SO({V("service"),mod(class((,sockaddr_in)),[struct]),(166#75,166#81,!1)}),int,(166#68,166#82,!1)}]),class((,"%undef")),(166#17,166#83,!1)},{UO(-,{"1"N,int,(166#89,166#89,!1)}),int,(166#88,166#89,!1)}),bool,(166#17,166#89,!1)},
                  {[
                     {BR @ 
                     ,(168#17,168#22,!1)}
                     ]
                  ,(167#13,169#13,!1)})
               ,(166#13,169#13,!1)};
               {{AE({V("recvResult"),int,(173#13,173#22,!1)},{SC((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"recv"),[int,arr(char),int,int],[{V("connectSocket"),int,(173#31,173#43,!1)},{V("inputBuffer"),arr(char),(173#46,173#56,!1)},{BO(-,{"20"N,int,(173#59,173#60,!1)},{"1"N,int,(173#64,173#64,!1)}),int,(173#59,173#64,!1)},{"0"N,int,(173#67,173#67,!1)}]),class((,"%undef")),(173#26,173#68,!1)}),int,(173#13,173#68,!1)}
               ,(173#13,173#68,!1)};
               {IF0({BO(||,{BO(==,{V("recvResult"),int,(174#17,174#26,!1)},{UO(-,{"1"N,int,(174#32,174#32,!1)}),int,(174#31,174#32,!1)}),bool,(174#17,174#32,!1)},{BO(==,{V("recvResult"),int,(174#37,174#46,!1)},{"0"N,int,(174#51,174#51,!1)}),bool,(174#37,174#51,!1)}),bool,(174#17,174#51,!1)},
                  {[
                     {BR @ 
                     ,(176#17,176#22,!1)}
                     ]
                  ,(175#13,177#13,!1)})
               ,(174#13,177#13,!1)};
               {{AE({AA({V("inputBuffer"),arr(char),(179#13,179#23,!1)},[{V("recvResult"),int,(179#25,179#34,!1)}]),char,(179#13,179#35,!1)},{"\0"C,char,(179#39,179#42,!1)}),char,(179#13,179#42,!1)}
               ,(179#13,179#42,!1)};
               {{AE({V("data"),float,(181#13,181#16,!1)},{CS(float,{SC((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"atof"),[arr(char)],[{V("inputBuffer"),arr(char),(181#32,181#42,!1)}]),class((,"%undef")),(181#27,181#43,!1)}),float,(181#20,181#43,!1)}),float,(181#13,181#43,!1)}
               ,(181#13,181#43,!1)}
               ]
            ,(149#9,182#9,!1)},
            {"0"N,int,(183#16,183#16,!1)})
         ,(148#9,183#18,!1)};
         {IF0({BO(!=,{V("connectSocket"),int,(184#13,184#25,!1)},{UO(-,{"1"N,int,(184#31,184#31,!1)}),int,(184#30,184#31,!1)}),bool,(184#13,184#31,!1)},
            {[
               {PC0((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"close"),[int],[{V("connectSocket"),int,(186#19,186#31,!1)}])
               ,(186#13,186#32,!1)}
               ]
            ,(185#9,187#9,!1)})
         ,(184#9,187#9,!1)}
         ]
      ,(139#5,194#5,!1)};
      {IF({BO(>,{SC((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"fabs"),[float],[{V("data"),float,(196#13,196#16,!1)}]),class((,"%undef")),(196#8,196#17,!1)},{"0.000001"N,float,(196#21,196#28,!1)}),bool,(196#8,196#28,!1)},
         {[
            {VD("result",int,{CS(int,{BO(/,{"100.0"N,float,(198#28,198#32,!1)},{V("data"),float,(198#36,198#39,!1)}),float,(198#27,198#40,!1)}),int,(198#22,198#40,!1)})
            ,(198#13,198#18,!1)};
            {PC0((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"printIntLine"),[int],[{V("result"),int,(199#22,199#27,!1)}])
            ,(199#9,199#28,!1)}
            ]
         ,(197#5,200#5,!1)},
         {[
            {PC0((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"printLine"),[mod(ref(char),[const])],[{"This would result in a divide by zero"S,string,(203#19,203#57,!1)}])
            ,(203#9,203#58,!1)}
            ]
         ,(202#5,204#5,!1)})
      ,(196#5,204#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(134#1,205#1,!1)}
   )
   ,(134#1,205#1,!1)},

   {"CWE369_Divide_by_Zero__float_connect_socket_01",
   FN([public],(<"CWE369_Divide_by_Zero__float_connect_socket_01">,"CWE369_Divide_by_Zero__float_connect_socket_01_good"):unit,[],[],
   {[
      {PC0((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"goodG2B"),[],[])
      ,(209#5,209#13,!1)};
      {PC0((<"CWE369_Divide_by_Zero__float_connect_socket_01">,"goodB2G"),[],[])
      ,(210#5,210#13,!1)};
      {RE0
      ,(?)}
      ]
   ,(207#1,211#1,!1)}
   )
   ,(207#1,211#1,!1)},

   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp",
   CL([struct],(,_twoIntsStruct),[])
   {
      ([public],"intOne":int,(92#9,92#14,!2));
      ([public],"intTwo":int,(93#9,93#14,!2))
   }
   ,(90#1,94#16,!2)}

,


   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp",
   [
      M("/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE369_Divide_by_Zero__float_connect_socket_01.c\nLabel Definition File: CWE369_Divide_by_Zero__float.label.xml\nTemplate File: sources-sinks-01.tmpl.c\n*/",1,(1#0,1#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/*\n * @description\n * CWE: 369 Divide by Zero\n * BadSource: connect_socket Read data using a connect socket (client side)\n * GoodSource: A hardcoded non-zero number (two)\n * Sinks:\n *    GoodSink: Check value of or near zero before dividing\n *    BadSink : Divide a constant by data\n * Flow Variant: 01 Baseline\n *\n * */",6,(6#0,6#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* include ws2_32.lib when linking */",26,(26#0,26#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* NOT _WIN32 */",28,(28#0,28#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* Initialize data */",49,(49#0,49#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* Abort on error or the connection was closed, make sure to recv one\n             * less char than is in the recv_buf in order to append a terminator */",82,(82#0,82#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* POTENTIAL FLAW: Use a value input from the network */",84,(84#0,84#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* NUL-terminate string */",90,(90#0,90#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* Convert to float */",92,(92#0,92#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* POTENTIAL FLAW: Possibly divide by zero */",108,(108#0,108#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* OMITBAD */",114,(114#0,114#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* goodG2B uses the GoodSource with the BadSink */",118,(118#0,118#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* Initialize data */",122,(122#0,122#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* FIX: Use a hardcoded number that won't a divide by zero */",124,(124#0,124#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* POTENTIAL FLAW: Possibly divide by zero */",127,(127#0,127#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* goodB2G uses the BadSource with the GoodSink */",133,(133#0,133#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* Initialize data */",137,(137#0,137#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* Abort on error or the connection was closed, make sure to recv one\n             * less char than is in the recv_buf in order to append a terminator */",170,(170#0,170#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* POTENTIAL FLAW: Use a value input from the network */",172,(172#0,172#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* NUL-terminate string */",178,(178#0,178#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* Convert to float */",180,(180#0,180#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* FIX: Check for value of or near zero before dividing */",195,(195#0,195#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* OMITGOOD */",213,(213#0,213#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */",215,(215#0,215#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* seed randomness */",224,(224#0,224#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* OMITGOOD */",230,(230#0,230#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp")),
      M("/* OMITBAD */",235,(235#0,235#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_connect_socket_01.cpp"))
   ]
   }
]