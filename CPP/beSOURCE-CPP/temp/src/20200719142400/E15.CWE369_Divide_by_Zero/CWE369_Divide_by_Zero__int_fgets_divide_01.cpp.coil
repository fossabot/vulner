{
   ("filename", "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp");
   ("language", "CPP");
   ("include", "std_testcase.h");
   ("include", "<stdio.h>");
   ("include", "<stdlib.h>");
   ("include", "<stddef.h>");
   ("include", "<time.h>");
   ("include", "<limits.h>");
   ("include", "<string.h>");
   ("include", "<stdint.h>");
   ("include", "<stdint.h>");
   ("include", "<ctype.h>");
   ("include", "<fcntl.h>");
   ("include", "<sys/types.h>");
   ("include", "<sys/stat.h>");
   ("include", "std_testcase_io.h");
   ("include", "std_testcase.h");
}
{
   (!3, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase_io.h");
   (!2, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h");
   (!1, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp");
}
[
   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp",
   MD("__asm__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp",
   MD("__attribute__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp",
   MD("va_start(list)",["list"],"list = (char *) &va_alist")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp",
   MD("va_end(list)",["list"],"va_end(list)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp",
   MD("va_arg(list,mode)",["list","mode"],"va_arg(list,(mode)null)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp",
   MD("offsetof(st,m)",["st","m"],"((size_t)(&((st *)0)->m))")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp",
   MD("RAND32()",[],"((rand()<<30) ^ (rand()<<15) ^ rand())")
   ,(84#0,84#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp",
   MD("RAND64()",[],"(((int64_t)rand()<<60) ^ ((int64_t)rand()<<45) ^ ((int64_t)rand()<<30) ^ ((int64_t)rand()<<15) ^ (int64_t)rand())")
   ,(87#0,87#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   SF([extern,const,extern],int,<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"GLOBAL_CONST_TRUE")
   ,(103#18,103#34,!2)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   SF([extern,const,extern],int,<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"GLOBAL_CONST_FALSE")
   ,(104#18,104#35,!2)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   SF([extern,const,extern],int,<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"GLOBAL_CONST_FIVE")
   ,(105#18,105#34,!2)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"globalTrue")
   ,(110#12,110#21,!2)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"globalFalse")
   ,(111#12,111#22,!2)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"globalFive")
   ,(112#12,112#21,!2)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"globalArgc")
   ,(55#12,55#21,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   SF([extern,extern],ref(ref(char)),<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"globalArgv")
   ,(56#12,56#24,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   SI(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,
   {[
      {;
      ,(1#1,125#1,!1)};
      {RE0
      ,(?)}
      ]
   ,(1#1,125#1,!1)}
   )
   ,(1#1,125#1,!1)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printLine"):unit,[(mod(ref(char),[const]):"line",(14#16,14#32,!3))],[]
   )
   ,(14#1,14#34,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printWLine"):unit,[(mod(ref(wchar),[const]):"line",(16#17,16#36,!3))],[]
   )
   ,(16#1,16#38,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printIntLine"):unit,[(int:"intNumber",(18#20,18#32,!3))],[]
   )
   ,(18#1,18#34,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printShortLine"):unit,[(short:"shortNumber",(20#22,20#38,!3))],[]
   )
   ,(20#1,20#40,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printFloatLine"):unit,[(float:"floatNumber",(22#22,22#38,!3))],[]
   )
   ,(22#1,22#40,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printLongLine"):unit,[(long:"longNumber",(24#20,24#34,!3))],[]
   )
   ,(24#1,24#36,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printLongLongLine"):unit,[(class((,int64_t)):"longLongIntNumber",(26#24,26#48,!3))],[]
   )
   ,(26#1,26#50,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printSizeTLine"):unit,[(class((,size_t)):"sizeTNumber",(28#21,28#38,!3))],[]
   )
   ,(28#1,28#40,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printHexCharLine"):unit,[(char:"charHex",(30#23,30#34,!3))],[]
   )
   ,(30#1,30#36,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printWcharLine"):unit,[(wchar:"wideChar",(32#21,32#36,!3))],[]
   )
   ,(32#1,32#38,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printUnsignedLine"):unit,[(uint:"unsignedNumber",(34#24,34#46,!3))],[]
   )
   ,(34#1,34#48,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printHexUnsignedCharLine"):unit,[(uchar:"unsignedCharacter",(36#31,36#61,!3))],[]
   )
   ,(36#1,36#63,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printDoubleLine"):unit,[(double:"doubleNumber",(38#22,38#40,!3))],[]
   )
   ,(38#1,38#42,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printStructLine"):unit,[(mod(ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),[const]):"structTwoIntsStruct",(40#22,40#62,!3))],[]
   )
   ,(40#1,40#64,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printBytesLine"):unit,[(mod(ref(uchar),[const]):"bytes",(42#21,42#47,!3)),(class((,size_t)):"numBytes",(42#50,42#64,!3))],[]
   )
   ,(42#1,42#66,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"decodeHexChars"):class((,size_t)),[(ref(uchar):"bytes",(44#23,44#43,!3)),(class((,size_t)):"numBytes",(44#46,44#60,!3)),(mod(ref(char),[const]):"hex",(44#63,44#78,!3))],[]
   )
   ,(44#1,44#80,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"decodeHexWChars"):class((,size_t)),[(ref(uchar):"bytes",(46#24,46#44,!3)),(class((,size_t)):"numBytes",(46#47,46#61,!3)),(mod(ref(wchar),[const]):"hex",(46#64,46#82,!3))],[]
   )
   ,(46#1,46#84,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"globalReturnsTrue"):int,[],[]
   )
   ,(48#1,48#24,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"globalReturnsFalse"):int,[],[]
   )
   ,(50#1,50#25,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   PT([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"globalReturnsTrueOrFalse"):int,[],[]
   )
   ,(52#1,52#31,!3)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   FN([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"CWE369_Divide_by_Zero__int_fgets_divide_01_bad"):unit,[],[],
   {[
      {VD("data",int)
      ,(26#9,26#12,!1)};
      {{AE({V("data"),int,(28#5,28#8,!1)},{UO(-,{"1"N,int,(28#13,28#13,!1)}),int,(28#12,28#13,!1)}),int,(28#5,28#13,!1)}
      ,(28#5,28#13,!1)};
      {[
         {VD("inputBuffer",char,([{BO(+,{BO(*,{"3"N,int,(30#27,30#27,!1)},{SO({V("data"),int,(30#38,30#41,!1)}),int,(30#31,30#42,!1)}),int,(30#27,30#42,!1)},{"2"N,int,(30#46,30#46,!1)}),int,(30#26,30#47,!1)}],[{""S,string,(30#52,30#53,!1)}]))
         ,(30#14,30#48,!1)};
         {IF({BO(!=,{SC((<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"fgets"),[arr(char),int,class((,"%undef"))],[{V("inputBuffer"),arr(char),(32#19,32#29,!1)},{BO(+,{BO(*,{"3"N,int,(32#33,32#33,!1)},{SO({V("data"),int,(32#44,32#47,!1)}),int,(32#37,32#48,!1)}),int,(32#33,32#48,!1)},{"2"N,int,(32#52,32#52,!1)}),int,(32#32,32#53,!1)},{V("stdin"),class((,"%undef")),(32#56,32#60,!1)}]),class((,"%undef")),(32#13,32#61,!1)},{CS(ref(unit),{"0"N,int,(32#66,32#69,!1)}),ref(unit),(32#66,32#69,!1)}),bool,(32#13,32#69,!1)},
            {[
               {{AE({V("data"),int,(35#13,35#16,!1)},{SC((<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"atoi"),[arr(char)],[{V("inputBuffer"),arr(char),(35#25,35#35,!1)}]),class((,"%undef")),(35#20,35#36,!1)}),int,(35#13,35#36,!1)}
               ,(35#13,35#36,!1)}
               ]
            ,(33#9,36#9,!1)},
            {[
               {PC0((<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printLine"),[mod(ref(char),[const])],[{"fgets() failed."S,string,(39#23,39#39,!1)}])
               ,(39#13,39#40,!1)}
               ]
            ,(38#9,40#9,!1)})
         ,(32#9,40#9,!1)}
         ]
      ,(29#5,41#5,!1)};
      {PC0((<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printIntLine"),[int],[{BO(/,{"100"N,int,(43#18,43#20,!1)},{V("data"),int,(43#24,43#27,!1)}),int,(43#18,43#27,!1)}])
      ,(43#5,43#28,!1)};
      {RE0
      ,(?)}
      ]
   ,(24#1,44#1,!1)}
   )
   ,(24#1,44#1,!1)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   FN([public,static],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"goodG2B"):mod(unit,[static]),[],[],
   {[
      {VD("data",int)
      ,(53#9,53#12,!1)};
      {{AE({V("data"),int,(55#5,55#8,!1)},{UO(-,{"1"N,int,(55#13,55#13,!1)}),int,(55#12,55#13,!1)}),int,(55#5,55#13,!1)}
      ,(55#5,55#13,!1)};
      {{AE({V("data"),int,(57#5,57#8,!1)},{"7"N,int,(57#12,57#12,!1)}),int,(57#5,57#12,!1)}
      ,(57#5,57#12,!1)};
      {PC0((<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printIntLine"),[int],[{BO(/,{"100"N,int,(59#18,59#20,!1)},{V("data"),int,(59#24,59#27,!1)}),int,(59#18,59#27,!1)}])
      ,(59#5,59#28,!1)};
      {RE0
      ,(?)}
      ]
   ,(51#1,60#1,!1)}
   )
   ,(51#1,60#1,!1)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   FN([public,static],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"goodB2G"):mod(unit,[static]),[],[],
   {[
      {VD("data",int)
      ,(65#9,65#12,!1)};
      {{AE({V("data"),int,(67#5,67#8,!1)},{UO(-,{"1"N,int,(67#13,67#13,!1)}),int,(67#12,67#13,!1)}),int,(67#5,67#13,!1)}
      ,(67#5,67#13,!1)};
      {[
         {VD("inputBuffer",char,([{BO(+,{BO(*,{"3"N,int,(69#27,69#27,!1)},{SO({V("data"),int,(69#38,69#41,!1)}),int,(69#31,69#42,!1)}),int,(69#27,69#42,!1)},{"2"N,int,(69#46,69#46,!1)}),int,(69#26,69#47,!1)}],[{""S,string,(69#52,69#53,!1)}]))
         ,(69#14,69#48,!1)};
         {IF({BO(!=,{SC((<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"fgets"),[arr(char),int,class((,"%undef"))],[{V("inputBuffer"),arr(char),(71#19,71#29,!1)},{BO(+,{BO(*,{"3"N,int,(71#33,71#33,!1)},{SO({V("data"),int,(71#44,71#47,!1)}),int,(71#37,71#48,!1)}),int,(71#33,71#48,!1)},{"2"N,int,(71#52,71#52,!1)}),int,(71#32,71#53,!1)},{V("stdin"),class((,"%undef")),(71#56,71#60,!1)}]),class((,"%undef")),(71#13,71#61,!1)},{CS(ref(unit),{"0"N,int,(71#66,71#69,!1)}),ref(unit),(71#66,71#69,!1)}),bool,(71#13,71#69,!1)},
            {[
               {{AE({V("data"),int,(74#13,74#16,!1)},{SC((<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"atoi"),[arr(char)],[{V("inputBuffer"),arr(char),(74#25,74#35,!1)}]),class((,"%undef")),(74#20,74#36,!1)}),int,(74#13,74#36,!1)}
               ,(74#13,74#36,!1)}
               ]
            ,(72#9,75#9,!1)},
            {[
               {PC0((<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printLine"),[mod(ref(char),[const])],[{"fgets() failed."S,string,(78#23,78#39,!1)}])
               ,(78#13,78#40,!1)}
               ]
            ,(77#9,79#9,!1)})
         ,(71#9,79#9,!1)}
         ]
      ,(68#5,80#5,!1)};
      {IF({BO(!=,{V("data"),int,(82#9,82#12,!1)},{"0"N,int,(82#17,82#17,!1)}),bool,(82#9,82#17,!1)},
         {[
            {PC0((<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printIntLine"),[int],[{BO(/,{"100"N,int,(84#22,84#24,!1)},{V("data"),int,(84#28,84#31,!1)}),int,(84#22,84#31,!1)}])
            ,(84#9,84#32,!1)}
            ]
         ,(83#5,85#5,!1)},
         {[
            {PC0((<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"printLine"),[mod(ref(char),[const])],[{"This would result in a divide by zero"S,string,(88#19,88#57,!1)}])
            ,(88#9,88#58,!1)}
            ]
         ,(87#5,89#5,!1)})
      ,(82#5,89#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(63#1,90#1,!1)}
   )
   ,(63#1,90#1,!1)},

   {"CWE369_Divide_by_Zero__int_fgets_divide_01",
   FN([public],(<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"CWE369_Divide_by_Zero__int_fgets_divide_01_good"):unit,[],[],
   {[
      {PC0((<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"goodG2B"),[],[])
      ,(94#5,94#13,!1)};
      {PC0((<"CWE369_Divide_by_Zero__int_fgets_divide_01">,"goodB2G"),[],[])
      ,(95#5,95#13,!1)};
      {RE0
      ,(?)}
      ]
   ,(92#1,96#1,!1)}
   )
   ,(92#1,96#1,!1)},

   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp",
   CL([struct],(,_twoIntsStruct),[])
   {
      ([public],"intOne":int,(92#9,92#14,!2));
      ([public],"intTwo":int,(93#9,93#14,!2))
   }
   ,(90#1,94#16,!2)}

,


   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp",
   [
      M("/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE369_Divide_by_Zero__int_fgets_divide_01.c\nLabel Definition File: CWE369_Divide_by_Zero__int.label.xml\nTemplate File: sources-sinks-01.tmpl.c\n*/",1,(1#0,1#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/*\n * @description\n * CWE: 369 Divide by Zero\n * BadSource: fgets Read data from the console using fgets()\n * GoodSource: Non-zero\n * Sinks: divide\n *    GoodSink: Check for zero before dividing\n *    BadSink : Divide a constant by data\n * Flow Variant: 01 Baseline\n *\n * */",6,(6#0,6#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/* Initialize data */",27,(27#0,27#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/* POTENTIAL FLAW: Read data from the console using fgets() */",31,(31#0,31#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/* Convert to int */",34,(34#0,34#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/* POTENTIAL FLAW: Possibly divide by zero */",42,(42#0,42#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/* OMITBAD */",46,(46#0,46#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/* goodG2B uses the GoodSource with the BadSink */",50,(50#0,50#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/* Initialize data */",54,(54#0,54#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/* FIX: Use a value not equal to zero */",56,(56#0,56#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/* POTENTIAL FLAW: Possibly divide by zero */",58,(58#0,58#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/* goodB2G uses the BadSource with the GoodSink */",62,(62#0,62#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/* Initialize data */",66,(66#0,66#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/* POTENTIAL FLAW: Read data from the console using fgets() */",70,(70#0,70#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/* Convert to int */",73,(73#0,73#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/* FIX: test for a zero denominator */",81,(81#0,81#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/* OMITGOOD */",98,(98#0,98#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */",100,(100#0,100#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/* seed randomness */",109,(109#0,109#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/* OMITGOOD */",115,(115#0,115#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp")),
      M("/* OMITBAD */",120,(120#0,120#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__int_fgets_divide_01.cpp"))
   ]
   }
]