{
   ("filename", "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp");
   ("language", "CPP");
   ("include", "std_testcase.h");
   ("include", "<stdio.h>");
   ("include", "<stdlib.h>");
   ("include", "<stddef.h>");
   ("include", "<time.h>");
   ("include", "<limits.h>");
   ("include", "<string.h>");
   ("include", "<stdint.h>");
   ("include", "<stdint.h>");
   ("include", "<ctype.h>");
   ("include", "<fcntl.h>");
   ("include", "<sys/types.h>");
   ("include", "<sys/stat.h>");
   ("include", "std_testcase_io.h");
   ("include", "std_testcase.h");
   ("include", "<math.h>");
   ("include", "<sys/types.h>");
   ("include", "<sys/socket.h>");
   ("include", "<netinet/in.h>");
   ("include", "<arpa/inet.h>");
   ("include", "<unistd.h>");
}
{
   (!3, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase_io.h");
   (!2, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h");
   (!1, "C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp");
}
[
   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp",
   MD("__asm__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp",
   MD("__attribute__(x)",["x"],"")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp",
   MD("va_start(list)",["list"],"list = (char *) &va_alist")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp",
   MD("va_end(list)",["list"],"va_end(list)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp",
   MD("va_arg(list,mode)",["list","mode"],"va_arg(list,(mode)null)")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp",
   MD("offsetof(st,m)",["st","m"],"((size_t)(&((st *)0)->m))")
   ,(1#0,1#0,"<built-in>")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp",
   MD("RAND32()",[],"((rand()<<30) ^ (rand()<<15) ^ rand())")
   ,(84#0,84#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp",
   MD("RAND64()",[],"(((int64_t)rand()<<60) ^ ((int64_t)rand()<<45) ^ ((int64_t)rand()<<30) ^ ((int64_t)rand()<<15) ^ (int64_t)rand())")
   ,(87#0,87#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/testcasesupport/std_testcase.h")}



,   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   SF([extern,const,extern],int,<"CWE369_Divide_by_Zero__float_listenSocket_01">,"GLOBAL_CONST_TRUE")
   ,(103#18,103#34,!2)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   SF([extern,const,extern],int,<"CWE369_Divide_by_Zero__float_listenSocket_01">,"GLOBAL_CONST_FALSE")
   ,(104#18,104#35,!2)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   SF([extern,const,extern],int,<"CWE369_Divide_by_Zero__float_listenSocket_01">,"GLOBAL_CONST_FIVE")
   ,(105#18,105#34,!2)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__float_listenSocket_01">,"globalTrue")
   ,(110#12,110#21,!2)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__float_listenSocket_01">,"globalFalse")
   ,(111#12,111#22,!2)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__float_listenSocket_01">,"globalFive")
   ,(112#12,112#21,!2)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   SF([extern,extern],int,<"CWE369_Divide_by_Zero__float_listenSocket_01">,"globalArgc")
   ,(55#12,55#21,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   SF([extern,extern],ref(ref(char)),<"CWE369_Divide_by_Zero__float_listenSocket_01">,"globalArgv")
   ,(56#12,56#24,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   SI(<"CWE369_Divide_by_Zero__float_listenSocket_01">,
   {[
      {;
      ,(1#1,266#1,!1)};
      {RE0
      ,(?)}
      ]
   ,(1#1,266#1,!1)}
   )
   ,(1#1,266#1,!1)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"printLine"):unit,[(mod(ref(char),[const]):"line",(14#16,14#32,!3))],[]
   )
   ,(14#1,14#34,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"printWLine"):unit,[(mod(ref(wchar),[const]):"line",(16#17,16#36,!3))],[]
   )
   ,(16#1,16#38,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"printIntLine"):unit,[(int:"intNumber",(18#20,18#32,!3))],[]
   )
   ,(18#1,18#34,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"printShortLine"):unit,[(short:"shortNumber",(20#22,20#38,!3))],[]
   )
   ,(20#1,20#40,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"printFloatLine"):unit,[(float:"floatNumber",(22#22,22#38,!3))],[]
   )
   ,(22#1,22#40,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"printLongLine"):unit,[(long:"longNumber",(24#20,24#34,!3))],[]
   )
   ,(24#1,24#36,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"printLongLongLine"):unit,[(class((,int64_t)):"longLongIntNumber",(26#24,26#48,!3))],[]
   )
   ,(26#1,26#50,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"printSizeTLine"):unit,[(class((,size_t)):"sizeTNumber",(28#21,28#38,!3))],[]
   )
   ,(28#1,28#40,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"printHexCharLine"):unit,[(char:"charHex",(30#23,30#34,!3))],[]
   )
   ,(30#1,30#36,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"printWcharLine"):unit,[(wchar:"wideChar",(32#21,32#36,!3))],[]
   )
   ,(32#1,32#38,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"printUnsignedLine"):unit,[(uint:"unsignedNumber",(34#24,34#46,!3))],[]
   )
   ,(34#1,34#48,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"printHexUnsignedCharLine"):unit,[(uchar:"unsignedCharacter",(36#31,36#61,!3))],[]
   )
   ,(36#1,36#63,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"printDoubleLine"):unit,[(double:"doubleNumber",(38#22,38#40,!3))],[]
   )
   ,(38#1,38#42,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"printStructLine"):unit,[(mod(ref(alias("twoIntsStruct",mod(record((,_twoIntsStruct)),[struct]))),[const]):"structTwoIntsStruct",(40#22,40#62,!3))],[]
   )
   ,(40#1,40#64,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"printBytesLine"):unit,[(mod(ref(uchar),[const]):"bytes",(42#21,42#47,!3)),(class((,size_t)):"numBytes",(42#50,42#64,!3))],[]
   )
   ,(42#1,42#66,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"decodeHexChars"):class((,size_t)),[(ref(uchar):"bytes",(44#23,44#43,!3)),(class((,size_t)):"numBytes",(44#46,44#60,!3)),(mod(ref(char),[const]):"hex",(44#63,44#78,!3))],[]
   )
   ,(44#1,44#80,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"decodeHexWChars"):class((,size_t)),[(ref(uchar):"bytes",(46#24,46#44,!3)),(class((,size_t)):"numBytes",(46#47,46#61,!3)),(mod(ref(wchar),[const]):"hex",(46#64,46#82,!3))],[]
   )
   ,(46#1,46#84,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"globalReturnsTrue"):int,[],[]
   )
   ,(48#1,48#24,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"globalReturnsFalse"):int,[],[]
   )
   ,(50#1,50#25,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   PT([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"globalReturnsTrueOrFalse"):int,[],[]
   )
   ,(52#1,52#31,!3)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   FN([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"CWE369_Divide_by_Zero__float_listenSocket_01_bad"):unit,[],[],
   {[
      {VD("data",float)
      ,(48#11,48#14,!1)};
      {{AE({V("data"),float,(50#5,50#8,!1)},{"0.0"N,float,(50#12,50#15,!1)}),float,(50#5,50#15,!1)}
      ,(50#5,50#15,!1)};
      {[
         {VD("recvResult",int)
         ,(56#13,56#22,!1)};
         {VD("service",mod(class((,sockaddr_in)),[struct]))
         ,(57#28,57#34,!1)};
         {VD("listenSocket",int,{UO(-,{"1"N,int,(58#29,58#29,!1)}),int,(58#28,58#29,!1)})
         ,(58#13,58#24,!1)};
         {VD("acceptSocket",int,{UO(-,{"1"N,int,(59#29,59#29,!1)}),int,(59#28,59#29,!1)})
         ,(59#13,59#24,!1)};
         {VD("inputBuffer",char,([{"20"N,int,(60#26,60#27,!1)}]))
         ,(60#14,60#28,!1)};
         {DW(L75,
            {[
               {{AE({V("listenSocket"),int,(70#13,70#24,!1)},{SC((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"socket"),[class((,"%undef")),class((,"%undef")),class((,"%undef"))],[{V("AF_INET"),class((,"%undef")),(70#35,70#41,!1)},{V("SOCK_STREAM"),class((,"%undef")),(70#44,70#54,!1)},{V("IPPROTO_TCP"),class((,"%undef")),(70#57,70#67,!1)}]),class((,"%undef")),(70#28,70#68,!1)}),int,(70#13,70#68,!1)}
               ,(70#13,70#68,!1)};
               {IF0({BO(==,{V("listenSocket"),int,(71#17,71#28,!1)},{UO(-,{"1"N,int,(71#34,71#34,!1)}),int,(71#33,71#34,!1)}),bool,(71#17,71#34,!1)},
                  {[
                     {BR @ 
                     ,(73#17,73#22,!1)}
                     ]
                  ,(72#13,74#13,!1)})
               ,(71#13,74#13,!1)};
               {PC0((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"memset"),[ref(mod(class((,sockaddr_in)),[struct])),int,int],[{&{V("service"),mod(class((,sockaddr_in)),[struct]),(75#21,75#27,!1)},ref(mod(class((,sockaddr_in)),[struct])),(75#20,75#27,!1)},{"0"N,int,(75#30,75#30,!1)},{SO({V("service"),mod(class((,sockaddr_in)),[struct]),(75#40,75#46,!1)}),int,(75#33,75#47,!1)}])
               ,(75#13,75#48,!1)};
               {{AE({OA({V("service"),mod(class((,sockaddr_in)),[struct]),(76#13,76#19,!1)},"sin_family"),class((,"%undef")),(76#13,76#30,!1)},{V("AF_INET"),class((,"%undef")),(76#34,76#40,!1)}),class((,"%undef")),(76#13,76#40,!1)}
               ,(76#13,76#40,!1)};
               {{AE({OA({OA({V("service"),mod(class((,sockaddr_in)),[struct]),(77#13,77#19,!1)},"sin_addr"),class((,"%undef")),(77#13,77#28,!1)},"s_addr"),class((,"%undef")),(77#13,77#35,!1)},{V("INADDR_ANY"),class((,"%undef")),(77#39,77#48,!1)}),class((,"%undef")),(77#13,77#48,!1)}
               ,(77#13,77#48,!1)};
               {{AE({OA({V("service"),mod(class((,sockaddr_in)),[struct]),(78#13,78#19,!1)},"sin_port"),class((,"%undef")),(78#13,78#28,!1)},{SC((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"htons"),[int],[{"27015"N,int,(78#38,78#42,!1)}]),class((,"%undef")),(78#32,78#43,!1)}),class((,"%undef")),(78#13,78#43,!1)}
               ,(78#13,78#43,!1)};
               {IF0({BO(==,{SC((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"bind"),[int,ref(mod(class((,sockaddr)),[struct])),int],[{V("listenSocket"),int,(79#22,79#33,!1)},{CS(ref(mod(class((,sockaddr)),[struct])),{&{V("service"),mod(class((,sockaddr_in)),[struct]),(79#55,79#61,!1)},ref(mod(class((,sockaddr_in)),[struct])),(79#54,79#61,!1)}),ref(mod(class((,sockaddr)),[struct])),(79#36,79#61,!1)},{SO({V("service"),mod(class((,sockaddr_in)),[struct]),(79#71,79#77,!1)}),int,(79#64,79#78,!1)}]),class((,"%undef")),(79#17,79#79,!1)},{UO(-,{"1"N,int,(79#85,79#85,!1)}),int,(79#84,79#85,!1)}),bool,(79#17,79#85,!1)},
                  {[
                     {BR @ 
                     ,(81#17,81#22,!1)}
                     ]
                  ,(80#13,82#13,!1)})
               ,(79#13,82#13,!1)};
               {IF0({BO(==,{SC((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"listen"),[int,int],[{V("listenSocket"),int,(83#24,83#35,!1)},{"5"N,int,(83#38,83#38,!1)}]),class((,"%undef")),(83#17,83#39,!1)},{UO(-,{"1"N,int,(83#45,83#45,!1)}),int,(83#44,83#45,!1)}),bool,(83#17,83#45,!1)},
                  {[
                     {BR @ 
                     ,(85#17,85#22,!1)}
                     ]
                  ,(84#13,86#13,!1)})
               ,(83#13,86#13,!1)};
               {{AE({V("acceptSocket"),int,(87#13,87#24,!1)},{SC((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"accept"),[int,ref(unit),ref(unit)],[{V("listenSocket"),int,(87#35,87#46,!1)},{CS(ref(unit),{"0"N,int,(87#49,87#52,!1)}),ref(unit),(87#49,87#52,!1)},{CS(ref(unit),{"0"N,int,(87#55,87#58,!1)}),ref(unit),(87#55,87#58,!1)}]),class((,"%undef")),(87#28,87#59,!1)}),int,(87#13,87#59,!1)}
               ,(87#13,87#59,!1)};
               {IF0({BO(==,{V("acceptSocket"),int,(88#17,88#28,!1)},{UO(-,{"1"N,int,(88#34,88#34,!1)}),int,(88#33,88#34,!1)}),bool,(88#17,88#34,!1)},
                  {[
                     {BR @ 
                     ,(90#17,90#22,!1)}
                     ]
                  ,(89#13,91#13,!1)})
               ,(88#13,91#13,!1)};
               {{AE({V("recvResult"),int,(94#13,94#22,!1)},{SC((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"recv"),[int,arr(char),int,int],[{V("acceptSocket"),int,(94#31,94#42,!1)},{V("inputBuffer"),arr(char),(94#45,94#55,!1)},{BO(-,{"20"N,int,(94#58,94#59,!1)},{"1"N,int,(94#63,94#63,!1)}),int,(94#58,94#63,!1)},{"0"N,int,(94#66,94#66,!1)}]),class((,"%undef")),(94#26,94#67,!1)}),int,(94#13,94#67,!1)}
               ,(94#13,94#67,!1)};
               {IF0({BO(||,{BO(==,{V("recvResult"),int,(95#17,95#26,!1)},{UO(-,{"1"N,int,(95#32,95#32,!1)}),int,(95#31,95#32,!1)}),bool,(95#17,95#32,!1)},{BO(==,{V("recvResult"),int,(95#37,95#46,!1)},{"0"N,int,(95#51,95#51,!1)}),bool,(95#37,95#51,!1)}),bool,(95#17,95#51,!1)},
                  {[
                     {BR @ 
                     ,(97#17,97#22,!1)}
                     ]
                  ,(96#13,98#13,!1)})
               ,(95#13,98#13,!1)};
               {{AE({AA({V("inputBuffer"),arr(char),(100#13,100#23,!1)},[{V("recvResult"),int,(100#25,100#34,!1)}]),char,(100#13,100#35,!1)},{"\0"C,char,(100#39,100#42,!1)}),char,(100#13,100#42,!1)}
               ,(100#13,100#42,!1)};
               {{AE({V("data"),float,(102#13,102#16,!1)},{CS(float,{SC((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"atof"),[arr(char)],[{V("inputBuffer"),arr(char),(102#32,102#42,!1)}]),class((,"%undef")),(102#27,102#43,!1)}),float,(102#20,102#43,!1)}),float,(102#13,102#43,!1)}
               ,(102#13,102#43,!1)}
               ]
            ,(62#9,103#9,!1)},
            {"0"N,int,(104#16,104#16,!1)})
         ,(61#9,104#18,!1)};
         {IF0({BO(!=,{V("listenSocket"),int,(105#13,105#24,!1)},{UO(-,{"1"N,int,(105#30,105#30,!1)}),int,(105#29,105#30,!1)}),bool,(105#13,105#30,!1)},
            {[
               {PC0((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"close"),[int],[{V("listenSocket"),int,(107#19,107#30,!1)}])
               ,(107#13,107#31,!1)}
               ]
            ,(106#9,108#9,!1)})
         ,(105#9,108#9,!1)};
         {IF0({BO(!=,{V("acceptSocket"),int,(109#13,109#24,!1)},{UO(-,{"1"N,int,(109#30,109#30,!1)}),int,(109#29,109#30,!1)}),bool,(109#13,109#30,!1)},
            {[
               {PC0((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"close"),[int],[{V("acceptSocket"),int,(111#19,111#30,!1)}])
               ,(111#13,111#31,!1)}
               ]
            ,(110#9,112#9,!1)})
         ,(109#9,112#9,!1)}
         ]
      ,(51#5,119#5,!1)};
      {[
         {VD("result",int,{CS(int,{BO(/,{"100.0"N,float,(122#28,122#32,!1)},{V("data"),float,(122#36,122#39,!1)}),float,(122#27,122#40,!1)}),int,(122#22,122#40,!1)})
         ,(122#13,122#18,!1)};
         {PC0((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"printIntLine"),[int],[{V("result"),int,(123#22,123#27,!1)}])
         ,(123#9,123#28,!1)}
         ]
      ,(120#5,124#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(46#1,125#1,!1)}
   )
   ,(46#1,125#1,!1)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   FN([public,static],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"goodG2B"):mod(unit,[static]),[],[],
   {[
      {VD("data",float)
      ,(134#11,134#14,!1)};
      {{AE({V("data"),float,(136#5,136#8,!1)},{"0.0"N,float,(136#12,136#15,!1)}),float,(136#5,136#15,!1)}
      ,(136#5,136#15,!1)};
      {{AE({V("data"),float,(138#5,138#8,!1)},{"2.0"N,float,(138#12,138#15,!1)}),float,(138#5,138#15,!1)}
      ,(138#5,138#15,!1)};
      {[
         {VD("result",int,{CS(int,{BO(/,{"100.0"N,float,(141#28,141#32,!1)},{V("data"),float,(141#36,141#39,!1)}),float,(141#27,141#40,!1)}),int,(141#22,141#40,!1)})
         ,(141#13,141#18,!1)};
         {PC0((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"printIntLine"),[int],[{V("result"),int,(142#22,142#27,!1)}])
         ,(142#9,142#28,!1)}
         ]
      ,(139#5,143#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(132#1,144#1,!1)}
   )
   ,(132#1,144#1,!1)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   FN([public,static],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"goodB2G"):mod(unit,[static]),[],[],
   {[
      {VD("data",float)
      ,(149#11,149#14,!1)};
      {{AE({V("data"),float,(151#5,151#8,!1)},{"0.0"N,float,(151#12,151#15,!1)}),float,(151#5,151#15,!1)}
      ,(151#5,151#15,!1)};
      {[
         {VD("recvResult",int)
         ,(157#13,157#22,!1)};
         {VD("service",mod(class((,sockaddr_in)),[struct]))
         ,(158#28,158#34,!1)};
         {VD("listenSocket",int,{UO(-,{"1"N,int,(159#29,159#29,!1)}),int,(159#28,159#29,!1)})
         ,(159#13,159#24,!1)};
         {VD("acceptSocket",int,{UO(-,{"1"N,int,(160#29,160#29,!1)}),int,(160#28,160#29,!1)})
         ,(160#13,160#24,!1)};
         {VD("inputBuffer",char,([{"20"N,int,(161#26,161#27,!1)}]))
         ,(161#14,161#28,!1)};
         {DW(L76,
            {[
               {{AE({V("listenSocket"),int,(171#13,171#24,!1)},{SC((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"socket"),[class((,"%undef")),class((,"%undef")),class((,"%undef"))],[{V("AF_INET"),class((,"%undef")),(171#35,171#41,!1)},{V("SOCK_STREAM"),class((,"%undef")),(171#44,171#54,!1)},{V("IPPROTO_TCP"),class((,"%undef")),(171#57,171#67,!1)}]),class((,"%undef")),(171#28,171#68,!1)}),int,(171#13,171#68,!1)}
               ,(171#13,171#68,!1)};
               {IF0({BO(==,{V("listenSocket"),int,(172#17,172#28,!1)},{UO(-,{"1"N,int,(172#34,172#34,!1)}),int,(172#33,172#34,!1)}),bool,(172#17,172#34,!1)},
                  {[
                     {BR @ 
                     ,(174#17,174#22,!1)}
                     ]
                  ,(173#13,175#13,!1)})
               ,(172#13,175#13,!1)};
               {PC0((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"memset"),[ref(mod(class((,sockaddr_in)),[struct])),int,int],[{&{V("service"),mod(class((,sockaddr_in)),[struct]),(176#21,176#27,!1)},ref(mod(class((,sockaddr_in)),[struct])),(176#20,176#27,!1)},{"0"N,int,(176#30,176#30,!1)},{SO({V("service"),mod(class((,sockaddr_in)),[struct]),(176#40,176#46,!1)}),int,(176#33,176#47,!1)}])
               ,(176#13,176#48,!1)};
               {{AE({OA({V("service"),mod(class((,sockaddr_in)),[struct]),(177#13,177#19,!1)},"sin_family"),class((,"%undef")),(177#13,177#30,!1)},{V("AF_INET"),class((,"%undef")),(177#34,177#40,!1)}),class((,"%undef")),(177#13,177#40,!1)}
               ,(177#13,177#40,!1)};
               {{AE({OA({OA({V("service"),mod(class((,sockaddr_in)),[struct]),(178#13,178#19,!1)},"sin_addr"),class((,"%undef")),(178#13,178#28,!1)},"s_addr"),class((,"%undef")),(178#13,178#35,!1)},{V("INADDR_ANY"),class((,"%undef")),(178#39,178#48,!1)}),class((,"%undef")),(178#13,178#48,!1)}
               ,(178#13,178#48,!1)};
               {{AE({OA({V("service"),mod(class((,sockaddr_in)),[struct]),(179#13,179#19,!1)},"sin_port"),class((,"%undef")),(179#13,179#28,!1)},{SC((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"htons"),[int],[{"27015"N,int,(179#38,179#42,!1)}]),class((,"%undef")),(179#32,179#43,!1)}),class((,"%undef")),(179#13,179#43,!1)}
               ,(179#13,179#43,!1)};
               {IF0({BO(==,{SC((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"bind"),[int,ref(mod(class((,sockaddr)),[struct])),int],[{V("listenSocket"),int,(180#22,180#33,!1)},{CS(ref(mod(class((,sockaddr)),[struct])),{&{V("service"),mod(class((,sockaddr_in)),[struct]),(180#55,180#61,!1)},ref(mod(class((,sockaddr_in)),[struct])),(180#54,180#61,!1)}),ref(mod(class((,sockaddr)),[struct])),(180#36,180#61,!1)},{SO({V("service"),mod(class((,sockaddr_in)),[struct]),(180#71,180#77,!1)}),int,(180#64,180#78,!1)}]),class((,"%undef")),(180#17,180#79,!1)},{UO(-,{"1"N,int,(180#85,180#85,!1)}),int,(180#84,180#85,!1)}),bool,(180#17,180#85,!1)},
                  {[
                     {BR @ 
                     ,(182#17,182#22,!1)}
                     ]
                  ,(181#13,183#13,!1)})
               ,(180#13,183#13,!1)};
               {IF0({BO(==,{SC((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"listen"),[int,int],[{V("listenSocket"),int,(184#24,184#35,!1)},{"5"N,int,(184#38,184#38,!1)}]),class((,"%undef")),(184#17,184#39,!1)},{UO(-,{"1"N,int,(184#45,184#45,!1)}),int,(184#44,184#45,!1)}),bool,(184#17,184#45,!1)},
                  {[
                     {BR @ 
                     ,(186#17,186#22,!1)}
                     ]
                  ,(185#13,187#13,!1)})
               ,(184#13,187#13,!1)};
               {{AE({V("acceptSocket"),int,(188#13,188#24,!1)},{SC((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"accept"),[int,ref(unit),ref(unit)],[{V("listenSocket"),int,(188#35,188#46,!1)},{CS(ref(unit),{"0"N,int,(188#49,188#52,!1)}),ref(unit),(188#49,188#52,!1)},{CS(ref(unit),{"0"N,int,(188#55,188#58,!1)}),ref(unit),(188#55,188#58,!1)}]),class((,"%undef")),(188#28,188#59,!1)}),int,(188#13,188#59,!1)}
               ,(188#13,188#59,!1)};
               {IF0({BO(==,{V("acceptSocket"),int,(189#17,189#28,!1)},{UO(-,{"1"N,int,(189#34,189#34,!1)}),int,(189#33,189#34,!1)}),bool,(189#17,189#34,!1)},
                  {[
                     {BR @ 
                     ,(191#17,191#22,!1)}
                     ]
                  ,(190#13,192#13,!1)})
               ,(189#13,192#13,!1)};
               {{AE({V("recvResult"),int,(195#13,195#22,!1)},{SC((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"recv"),[int,arr(char),int,int],[{V("acceptSocket"),int,(195#31,195#42,!1)},{V("inputBuffer"),arr(char),(195#45,195#55,!1)},{BO(-,{"20"N,int,(195#58,195#59,!1)},{"1"N,int,(195#63,195#63,!1)}),int,(195#58,195#63,!1)},{"0"N,int,(195#66,195#66,!1)}]),class((,"%undef")),(195#26,195#67,!1)}),int,(195#13,195#67,!1)}
               ,(195#13,195#67,!1)};
               {IF0({BO(||,{BO(==,{V("recvResult"),int,(196#17,196#26,!1)},{UO(-,{"1"N,int,(196#32,196#32,!1)}),int,(196#31,196#32,!1)}),bool,(196#17,196#32,!1)},{BO(==,{V("recvResult"),int,(196#37,196#46,!1)},{"0"N,int,(196#51,196#51,!1)}),bool,(196#37,196#51,!1)}),bool,(196#17,196#51,!1)},
                  {[
                     {BR @ 
                     ,(198#17,198#22,!1)}
                     ]
                  ,(197#13,199#13,!1)})
               ,(196#13,199#13,!1)};
               {{AE({AA({V("inputBuffer"),arr(char),(201#13,201#23,!1)},[{V("recvResult"),int,(201#25,201#34,!1)}]),char,(201#13,201#35,!1)},{"\0"C,char,(201#39,201#42,!1)}),char,(201#13,201#42,!1)}
               ,(201#13,201#42,!1)};
               {{AE({V("data"),float,(203#13,203#16,!1)},{CS(float,{SC((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"atof"),[arr(char)],[{V("inputBuffer"),arr(char),(203#32,203#42,!1)}]),class((,"%undef")),(203#27,203#43,!1)}),float,(203#20,203#43,!1)}),float,(203#13,203#43,!1)}
               ,(203#13,203#43,!1)}
               ]
            ,(163#9,204#9,!1)},
            {"0"N,int,(205#16,205#16,!1)})
         ,(162#9,205#18,!1)};
         {IF0({BO(!=,{V("listenSocket"),int,(206#13,206#24,!1)},{UO(-,{"1"N,int,(206#30,206#30,!1)}),int,(206#29,206#30,!1)}),bool,(206#13,206#30,!1)},
            {[
               {PC0((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"close"),[int],[{V("listenSocket"),int,(208#19,208#30,!1)}])
               ,(208#13,208#31,!1)}
               ]
            ,(207#9,209#9,!1)})
         ,(206#9,209#9,!1)};
         {IF0({BO(!=,{V("acceptSocket"),int,(210#13,210#24,!1)},{UO(-,{"1"N,int,(210#30,210#30,!1)}),int,(210#29,210#30,!1)}),bool,(210#13,210#30,!1)},
            {[
               {PC0((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"close"),[int],[{V("acceptSocket"),int,(212#19,212#30,!1)}])
               ,(212#13,212#31,!1)}
               ]
            ,(211#9,213#9,!1)})
         ,(210#9,213#9,!1)}
         ]
      ,(152#5,220#5,!1)};
      {IF({BO(>,{SC((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"fabs"),[float],[{V("data"),float,(222#13,222#16,!1)}]),class((,"%undef")),(222#8,222#17,!1)},{"0.000001"N,float,(222#21,222#28,!1)}),bool,(222#8,222#28,!1)},
         {[
            {VD("result",int,{CS(int,{BO(/,{"100.0"N,float,(224#28,224#32,!1)},{V("data"),float,(224#36,224#39,!1)}),float,(224#27,224#40,!1)}),int,(224#22,224#40,!1)})
            ,(224#13,224#18,!1)};
            {PC0((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"printIntLine"),[int],[{V("result"),int,(225#22,225#27,!1)}])
            ,(225#9,225#28,!1)}
            ]
         ,(223#5,226#5,!1)},
         {[
            {PC0((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"printLine"),[mod(ref(char),[const])],[{"This would result in a divide by zero"S,string,(229#19,229#57,!1)}])
            ,(229#9,229#58,!1)}
            ]
         ,(228#5,230#5,!1)})
      ,(222#5,230#5,!1)};
      {RE0
      ,(?)}
      ]
   ,(147#1,231#1,!1)}
   )
   ,(147#1,231#1,!1)},

   {"CWE369_Divide_by_Zero__float_listenSocket_01",
   FN([public],(<"CWE369_Divide_by_Zero__float_listenSocket_01">,"CWE369_Divide_by_Zero__float_listenSocket_01_good"):unit,[],[],
   {[
      {PC0((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"goodG2B"),[],[])
      ,(235#5,235#13,!1)};
      {PC0((<"CWE369_Divide_by_Zero__float_listenSocket_01">,"goodB2G"),[],[])
      ,(236#5,236#13,!1)};
      {RE0
      ,(?)}
      ]
   ,(233#1,237#1,!1)}
   )
   ,(233#1,237#1,!1)},

   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp",
   CL([struct],(,_twoIntsStruct),[])
   {
      ([public],"intOne":int,(92#9,92#14,!2));
      ([public],"intTwo":int,(93#9,93#14,!2))
   }
   ,(90#1,94#16,!2)}

,


   {"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp",
   [
      M("/* TEMPLATE GENERATED TESTCASE FILE\nFilename: CWE369_Divide_by_Zero__float_listenSocket_01.c\nLabel Definition File: CWE369_Divide_by_Zero__float.label.xml\nTemplate File: sources-sinks-01.tmpl.c\n*/",1,(1#0,1#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/*\n * @description\n * CWE: 369 Divide by Zero\n * BadSource: listenSocket Read data using a listen socket (server side)\n * GoodSource: A hardcoded non-zero number (two)\n * Sinks:\n *    GoodSink: Check value of or near zero before dividing\n *    BadSink : Divide a constant by data\n * Flow Variant: 01 Baseline\n *\n * */",6,(6#0,6#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* include ws2_32.lib when linking */",26,(26#0,26#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* Initialize data */",49,(49#0,49#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* Abort on error or the connection was closed */",92,(92#0,92#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* POTENTIAL FLAW: Use a value input from the network */",93,(93#0,93#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* NUL-terminate string */",99,(99#0,99#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* Convert to float */",101,(101#0,101#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* POTENTIAL FLAW: Possibly divide by zero */",121,(121#0,121#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* OMITBAD */",127,(127#0,127#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* goodG2B uses the GoodSource with the BadSink */",131,(131#0,131#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* Initialize data */",135,(135#0,135#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* FIX: Use a hardcoded number that won't a divide by zero */",137,(137#0,137#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* POTENTIAL FLAW: Possibly divide by zero */",140,(140#0,140#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* goodB2G uses the BadSource with the GoodSink */",146,(146#0,146#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* Initialize data */",150,(150#0,150#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* Abort on error or the connection was closed */",193,(193#0,193#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* POTENTIAL FLAW: Use a value input from the network */",194,(194#0,194#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* NUL-terminate string */",200,(200#0,200#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* Convert to float */",202,(202#0,202#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* FIX: Check for value of or near zero before dividing */",221,(221#0,221#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* OMITGOOD */",239,(239#0,239#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* Below is the main(). It is only used when building this testcase on\n   its own for testing or for building a binary to use in testing binary\n   analysis tools. It is not used when compiling all the testcases as one\n   application, which is how source code analysis tools are tested. */",241,(241#0,241#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* seed randomness */",250,(250#0,250#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* OMITGOOD */",256,(256#0,256#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp")),
      M("/* OMITBAD */",261,(261#0,261#0,"C:/Users/S&SSLAWKS/Desktop/Project/beSOURCE-CPP/src/20200719142400/E15.CWE369_Divide_by_Zero/CWE369_Divide_by_Zero__float_listenSocket_01.cpp"))
   ]
   }
]