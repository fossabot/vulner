namespace com.ti.oss.common.cdr.parser.epgw;

use com.ti.oss.common.types::*;

type EpgwCdr = FileHeader, tuple<
			int32         recordType,
			rstring       servedIMSI,
			rstring       ggsnAddress,
			uint32        chargingID,
			list<rstring> servingNodeAddress,
			rstring       apn,
			rstring       pdpPDNType,
			rstring       servedPDPPDNAddress,
			rstring       eTSIAddress,
			rstring       dynamicAddressFlag,
			rstring       recordOpeningTime,
			int32         duration,
			int32         causeForRecClosing,
			int32         recordSequenceNumber,
			rstring       nodeID,

			// recordExtensions - begin
			list<rstring> identifier,
//			list<rstring> significance,
//			list<rstring> creditRequestType,
//			list<rstring> creditRequestStatus,
//			list<rstring> creditResultCode,
//			list<rstring> ccRequestNumber,
//			list<rstring> creditControlSessionId,
//			list<rstring> ccsRealm,
//			list<rstring> policyRequestType,
//			list<rstring> policyRequestStatus,
//			list<rstring> policyResultCode,
//			list<rstring> policyStopTime,
//			list<rstring> pcsRealm,
//			list<rstring> policyControlSessionId,
//			list<rstring> userCategory,
//			list<rstring> ruleSpaceId,

			// to control serviceContainers
			list<int32>   serviceContainers_indexes,
			list<int32>   serviceContainers_sizes,
			list<int32>   serviceContainers_firstUri_indexes,

			// to control serviceContainers.listofURI
			list<int32>   listOfUri_indexes,
			list<int32>   listOfUri_sizes,
			
			// serviceContainers
			list<rstring> ratingGroupId,
//			list<rstring> serviceIdentifier,
//			list<rstring> serviceLocalSequenceNumber,
//			list<rstring> activeTimeMethod,
//			list<rstring> inactivity,
//			list<rstring> resolution,
//			list<rstring> serviceCcRequestNumber,
//			list<rstring> serviceSpecificUnits,

			// serviceContainers.listofURI
			//list<rstring> count,
			list<rstring> uri,
			//list<rstring> uriIdentifier,
			list<rstring> uriDataVolumeUplink,
			list<rstring> uriDataVolumeDownlink,
			//list<rstring> listofUriTimeStamps,

			// to control timeReports
//			list<int32>   timeReports_indexes,
//			list<int32>   timeReports_sizes,

			// timeReports
//			list<rstring> timeRatingGroupId,
//			list<rstring> timeStartTime,
//			list<rstring> endTime,
//			list<rstring> dataVolumeUplink,
//			list<rstring> dataVolumeDownlink,
			// recordExtensions - end

			uint32        localSequenceNumber,
			int32         apnSelectionMode,
			rstring       servedMSISDN,
			rstring       chargingCharacteristics,
			int32         chChSelectionMode,
			rstring       iMSsignalingContext,
			rstring       servingNodePLMNIdentifier,
			rstring       pSFreeFormatData,
			rstring       pSFFDAppendIndicator,
			rstring	      servedIMEISV,
			int32         rATType,
			rstring       mSTimeZone,
			rstring       userLocationInformation,

			// listOfServiceData - begin
			list<rstring> changeRatingGroupId,
//			list<rstring> changeResultCode,
//			list<rstring> changeLocalSequenceNumber,
//			list<rstring> timeOfFirstUsage,
//			list<rstring> timeOfLastUsage,
//			list<rstring> timeUsage,
//			list<rstring> serviceConditionChange,
			list<rstring> qCI,
			list<rstring> maxRequestedBandwithUL,
			list<rstring> maxRequestedBandwithDL,
			list<rstring> guaranteedBitrateUL,
			list<rstring> guaranteedBitrateDL,
			list<rstring> aRP,
//			list<rstring> sgsn_Address,
			list<rstring> datavolumeFBCUplink,
			list<rstring> datavolumeFBCDownlink,
//			list<rstring> changeTimeOfReport,
//			list<rstring> failureHandlingContinue,
//			list<rstring> changeServiceIdentifier,
//			list<rstring> changePSFreeFormatData,
//			list<rstring> changePSFFDAppendIndicator,
			//list<rstring> aFRecordInformation,
//			list<rstring> changeUserLocationInformation,
//			list<rstring> numberOfEvents,
			//list<rstring> eventTimeStamps,
			// listOfServiceData - end

			//list<int32>   servingNodeType,
			rstring       p_GWPLMNTIdentifier,
			rstring       startTime,
			rstring       stopTime,
			int32         pDNConnectionID,
			rstring       servedPDPPDNAddressExt,
			rstring       eTSIAddressExt,
			boolean		  endOfData
		>;

type EpgwCdrSchema = EpgwCdr epgwCdr, FileHeader fHeader;

type EpgwCdrWithROP = tuple<EpgwCdr epgwCdr, float64 startROP, float64 endROP, boolean changed, boolean waitEnd>;
		