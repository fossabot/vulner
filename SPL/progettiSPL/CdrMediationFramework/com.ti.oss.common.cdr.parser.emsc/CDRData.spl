namespace com.ti.oss.common.cdr.parser.emsc;

// from MediationFramework
use com.ti.oss.common.types::*;


type EOD = tuple<boolean endOfData>;


type EmscCdr = FileHeader, EOD, tuple<
			boolean compositeCdr,
			uint64  composite_call_data_record_ID,

			int16   callModule,                                      // ASN.1 PDU tag
			uint64  call_module_ID,

			boolean isEventModule,
// ------------------------------------------------------------------
// BIG DATA fields for EventModule - begin
// ------------------------------------------------------------------
			// eventModule - begin
			list<int16>   eventModule,                               // ASN.1 PDU tag
			list<uint64>  event_module_ID,

			list<rstring> genericChargingDigits,
			list<rstring> genericChargingNumbers,
			list<rstring> serviceFeatureCode,
			list<boolean> eventInIncompleteCallDataIndicator,
			list<rstring> freeFormatData,

			list<rstring> eventTrafficActivityCode,
			list<boolean> eventIsdnIncompleteCallDataIndicator,
			// eventModule - end
// ------------------------------------------------------------------
// BIG DATA fields for EventModule - end
// ------------------------------------------------------------------


// ------------------------------------------------------------------
// fields for KPI - begin
// ------------------------------------------------------------------
			int32   callPosition,									 // -1 if misssing
			rstring networkCallReference,
			int32   tariffClass,									 // -1 if misssing
			rstring calledPartyNumber,
			rstring calledPartyMSISDN,
			rstring calledPartyNumberOICK,							 // from calledPartyNumber
			int32   calledPartyNumberTON,							 // from calledPartyNumber
			int32   subscriptionType,								 // -1 if misssing

			rstring serviceCentreAddress,
			rstring camelSMSCAddress,
			rstring destinationAddress,
			int32   sMSresult,										 // -1 if misssing

			rstring callIdentificationNumber,
			rstring timeforStartofCharge,
			rstring chargeableDuration,
			int32   tariffSwitchInd,								 // -1 if misssing
			int32   disconnectingParty,								 // -1 if misssing
			int32   faultCode,										 // -1 if misssing
			int32   internalCauseandLoc,							 // -1 if misssing
			int32   cause,											 // -1 if misssing
			int32   location,										 // -1 if misssing
			int32   accessType,										 // -1 if misssing
			rstring callingSubscriberIMSI,
			rstring callingSubscriberIMEISV,
			rstring firstCallingLocationInformation,
			rstring lastCallingLocationInformation,
			rstring outgoingRoute,
			rstring calledSubscriberIMSI,
			rstring calledSubscriberIMEISV,
			rstring firstCalledLocationInformation,
			rstring lastCalledLocationInformation,
			rstring incomingRoute,
			rstring firstCallingLocationInformationExtension,
			rstring firstCalledLocationInformationExtension,
// ------------------------------------------------------------------
// fields for KPI - end
// ------------------------------------------------------------------


// ------------------------------------------------------------------
// BIG DATA fields for CallModule - begin
// ------------------------------------------------------------------
			rstring mMEName,
			boolean ccbsCallIndicator,
			rstring mMEIdentity,
			int32   sRVCCIndicator,								// -1 if misssing
			int32   sRVCCAlertingIndicator,						// -1 if misssing				
			rstring pChargingVectorRelated,
			rstring emergencyServiceCategory,

			rstring dateforStartofCharge,
			rstring tAC,
			rstring callingPartyNumber,
			rstring callingPartyMSISDN,
			rstring callingSubscriberIMEI,
			int32   teleServiceCode,								 // -1 if misssing
			int32   bearerServiceCode,								 // -1 if misssing
			rstring calledGenericIMSI,
			rstring calledMobileStationRoamingNumber,
			uint32  bCUIdentifier,									 // 0 if misssing
			int32   transparencyIndicator,							 // -1 if misssing
			rstring calledPartyMNPInfo,
			int32   iNMarkingofMS,									 // -1 if misssing
			boolean lastPartialOutput,
			int32   partialOutputRecNum,							 // -1 if misssing
			int32   radioChannelProperty,							 // -1 if misssing
			boolean incompleteCallDataIndicator,

			// bCSMTDPData1	- begin
			int32   serviceKey,										 // -1 if misssing
			rstring gsmSCFAddress,
			// bCSMTDPData1	- end

			rstring gSMCallReferenceNumber,
			rstring mSCAddress,
			int32   rANAPCauseCode,									 // -1 if misssing
			int32   bSSMAPCauseCode,								 // -1 if misssing
			boolean multimediaCall,
			int32   guaranteedBitrate,								 // -1 if misssing
			int32   trafficClass,									 // -1 if misssing
			int32   maxBitRateDownlink,								 // -1 if misssing
			int32   maxBitRateUplink,								 // -1 if misssing
			rstring userToUserInformation,
			int32   roamingPriorityLevel,							 // -1 if misssing
			rstring outgoingPChargingVector,
			int32   iUCodec,										 // -1 if misssing
			int32   bladeId,										 // -1 if misssing
			boolean buddyBladeIndicator,
			boolean trafficIsolationIndicator,
			
			rstring calledSubscriberIMEI,
			rstring originalCalledNumber,
			int32   redirectionCounter,								 // -1 if misssing
			rstring mobileStationRoamingNumber,
			int32   presentationAndScreeningInd,					 // -1 if misssing
			int32   relatedCallNumber,								 // -1 if misssing

			rstring trafficActivityCode,
			rstring chargedCallingPartyNumber,
			rstring networkProvidedCallingPartyNum,
			rstring userProvidedCallingPartyNum,

			boolean mCASMSIndicator,
			rstring reroutedToServiceCentreAddress,

			rstring originatingAddress,

			int32   iNServiceTrigger,								 // -1 if misssing
			rstring levelOfCamelService,

			rstring redirectingNumber,
			rstring redirectingIMSI,
			boolean cAMELInitiatedCallForwarding,
			int32   optimalRoutingType,								 // -1 if misssing
			boolean optimalRoutingInvocationFailed,

			// multimediaInformation - begin
			int32   userRate,										 // -1 if misssing
			int32   asyncSyncIndicator,								 // -1 if misssing
			int32   uILayer1Protocol,								 // -1 if misssing
			// multimediaInformation - end

			rstring incomingPChargingVector
// ------------------------------------------------------------------
// BIG DATA fields for CallModule - end
// ------------------------------------------------------------------
		>;


type EmscCdrWithROP = tuple<EmscCdr emscCdr, rstring nameOutputFile, float64 startROP, float64 endROP, boolean changed, boolean waitEnd>;
