namespace com.ti.oss.pm.mediation.ericsson.e3g.utils;

use com.ti.oss.pm.mediation.ericsson.e3g.utils::* ;
use com.ti.oss.common.event::* ;
use com.ti.oss.common.alarm::* ;
use com.ti.oss.common.types::* ;
use com.ti.oss.common.pm.process::* ;
use com.ti.oss.common.pm.writer.omes::* ;
use com.ti.oss.common.writer::*;

public composite EnricherWithWriter (input In0; output EnrichEvent, EnrichAlarm, OWEvent, OWAlarm, FileExportEvent, FileExportAlarm)
{
	graph
		(stream<MeasHeader mHeader, MeasData mData, FileTrailer trailer>
			EnrichedMeasBlock ; stream<Event e> EnrichEvent ; stream<Alarm alarm>
			EnrichAlarm) as E3gNewEnricher = Enricher(In0 as I)
		{
			param
				mediationId : getCompileTimeValue("mediationId") ;
				dnPrefix : "Network-TI" ;
				fileSuffix : ".xml" ;
				rootRdnElemLevel : 2 ;
				importIdlBugLogic : true ;
				
			config
				placement : partitionColocation("E3gEnricher" + (rstring)getChannel());
			
		}

		(stream<Event e> OWEvent ; stream<Alarm alarm> OWAlarm ; stream<FileHeader h,
			FileTrailer t> OTrailer) as E3gNewOMeSWriter =
			OMeSWriter(EnrichedMeasBlock as I)
		{
			param
				mediationId : getCompileTimeValue("mediationId") ;
				addNewLine : false ;

				// config 
				// placement : partitionColocation("e3g-POMeSWriter") ;
				// placement : host("cmst1n1"), partitionColocation("e3g-POMeSWriter") ;
			

		}
		
		(stream<Event e> FileExportEvent ; stream<Alarm alarm> FileExportAlarm) as
			NorthboundFileExport = FileExport(OTrailer	as I)
		{
			param
				mediationId : getCompileTimeValue("mediationId") ;
			
		}
		
		
		
}