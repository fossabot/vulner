namespace application ;

use com.ibm.streams.timeseries.analysis::STD2 ;

/**
 * This sample demonstrates how to generate random time series data
 * and analyze it using the STD2 opeator. The generated time series data
 * contain season, trend and residual components. 
 */
composite STD2Random
{
	graph
		(stream<float64 data> DataStream) as DataSource = Custom()
		{
			logic
				state :
				{
					float64 duration = 1.0f ; // 1 second
					float64 sample_rate = 1000 ; // 1000 samples / sec
					float64 num_seasons = 20 ;
					float64 amplitude = 100 ;
					float64 delta = 1.0 / sample_rate ;
				}

				onProcess :
				{
					mutable float64 t = 0.0 ;
					mutable float64 trend = 1f ;
					while(t < duration)
					{
						mutable float64 y = 0.0;
						y += amplitude * sin(num_seasons * 2f * PI() * t) ; // seasonal component
						y += trend; // trend component
						y += 200f * random(); // residual component

						// update trend and time
						trend += 1f ;
						t += delta ;

						submit({ data = y }, DataStream) ;
					}
				}
		}

		(stream<float64 data, float64 season, float64 trend, float64 residual>
			STDStream) as STD2Op = STD2(DataStream)
		{
			param
				inputTimeSeries : data ;
				seasonLength : 50u ;
				algorithm : Additive ;
				numSeasons : 20u ;
			output
				STDStream : season = season(), trend = trend(), residual = residuals() ;
		}

		() as STD2ResultSink = FileSink(STDStream)
		{
			param
				file : "random_results.csv" ;
				format : csv ;
		}

}


