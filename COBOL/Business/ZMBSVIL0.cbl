       IDENTIFICATION DIVISION.
       PROGRAM-ID. ZMBSVIL0.
      *------------------------------------------------------------*
      * ELENCO  AGGIORNAMENTI                                      *
      *-------+---------+------------------------------------------*
      *  PROG | $-DATA  | DESCRIZIONE                              *    00006000
      *-------+---------+------------------------------------------*
      * 000003| 12091997| VALORIZZAZIONE FLAG DIVISORE INTERESSI   *
      *       |         | DA ZFI071301/08 SE VALORIZZATO ALTRIMENTI*
      *       |         | DA DIV-FDVSINT                           *
      *-------+---------+------------------------------------------*
      * 000007| 16091997| CONTROLLO ICAU > O < DI 20 MILIONI DI    *
      *       |         | LIRE PER DECIDERE QUALE CODICE CAUSALE   *
      *       |         | ASSEGNARE E' SBAGLIATO. INFATTI L'IMPORTO*
      *       |         | ICAU NON SEMPRE E' ESPRESSO IN LIRE.     *
      *       |         | QUINDI IL CONTROLLO DEVE ESSERE FATTO CON*
      *       |         | IL SUO CONTROVALORE ESPRESSO NELLA DIVISA*
      *       |         | BASE                                     *
      *-------+---------+------------------------------------------*
      * 000031| 10101997| INSERITO PER IL CONTROLLO DELLA DATA     *
      *       |         | CONTABILE SE FESTIVO O NO LA GESTIONE DI *
      *       |         | ERRORE BLOCCANTE O NON BLOCCANTE IN      *
      *       |         | FUNZIONE DI UN NUOVO CAMPO NEGLI         *
      *       |         | ALTRI FLAG DELLA CONFG                   *
      *-------+---------+------------------------------------------*
      * 000041| 14101997| INSERIMENTO CHIAMATA ROUTINE ZMBNOPER    *
      *       |         | (NUMERAZIONE OPERAZIONE).                *
      *-------+---------+------------------------------------------*
      * 000079| 16121997| ERRATA VALORIZZAZIONE RICORRENZA PER     *
      *       |         | LEGGERE LA SIGLA PAESE NEI MOVIMENTI     *
      *       |         | CAUSALI                                  *
      *-------+---------+------------------------------------------*
      * 000081| 24121997| ADEGUAMENTO NUOVE LUNGHEZZE TABELLE      *
      *-------+---------+------------------------------------------*
      * 000088| 09011998| NON SI DEVE IMPOSTARE LA DATA DI REGOLA- *
      *       |         | MENTO CON LA DATA DEL RAPPORTO           *
      *-------+---------+------------------------------------------*
      * 000104| 22011998| NORMALIZZAZIONE DEL CAMPO NNDGSET PER    *
      *       |         | TOGLIERE GLI ZERI NON SIGNIFICATIVI      *
      *-------+---------+------------------------------------------*
      * 000110| 26011998| MODIFICATA SEGNALAZIONE ERRORE S025      *
      *-------+---------+------------------------------------------*
      * 000142| 25031998| AGGIUSTAMENTI PER CAUSALI 4/97           *
      *-------+---------+------------------------------------------*
      * BPEL26| 28041998| STABELLAMENTI                            *
      *-------+---------+------------------------------------------*
      * 000164| 14051998| AGGIUSTAMENTI PER CAUSALI 4/97           *
      *-------+---------+------------------------------------------*
      * BPER10| 26051998| INSERITA INSERT SU ARDAT PER +100        *
      *       |         | SU UPDATE                                *
      *-------+---------+------------------------------------------*
      * 000187| 18061998| AGGIUSTAMENTI PER CAUSALI 4/97 DOPO      *
      *       |         | ULTERIORI CHIARIMENTI UIC                *
      *-------+---------+------------------------------------------*
      * 000188| 18061998| VALUTA DI REGOLAMENTO = DATA SPOT  SE    *
      *       |         | RISULTA MAGGIORE DI DATA SPOT            *
      *-------+---------+------------------------------------------*
      * 000198| 01071998| GESTIONE MASSIMO E MINIMO NELLE SPESE    *
      *-------+---------+------------------------------------------*
      * 000172| 08071998| MODIFICHE PER EURO                       *
      *-------+---------+------------------------------------------*
      * 000202| 19081998| GESTIONE RITENUTE FISCALI E CAPITAL GAIN *
      *-------+---------+------------------------------------------*
      * 000213| 28071998| NON VALORIZZAVA CORRETTAMENTE DEI CAMPI  *
      *-------+---------+------------------------------------------*
      * 000214| 29071998| ERRATA UTILIZZAZIONE DEGLI INDICI        *
      *-------+---------+------------------------------------------*
      * CAR301| 15101998| VALORIZZATO SETTORE CLIENTE RESIDENTE    *
      *       |         | PER CAUSALE FISSA                        *
      *       |         | POSTO PARI A 245 IL SETTORE DELLE        *
      *       |         | BANCHE NON RESIDENTI (SOLO PER DEPOSITI) *
      *-------+---------+------------------------------------------*
      * CAR355| 29101998| IMPORTO ORIGINE SULLA CAUSALE POSTO A 0  *
      *-------+---------+------------------------------------------*
      * 000241| 02111998| ANOMALIE IMPLEMENTAZIONI EURO            *
      *-------+---------+------------------------------------------*
      * APV029| 02111998| PERMILLARE : USA UN CAMPO DI APPOGGIO    *
      *       |         | CON POCHI DECIMALI                       *
      *-------+---------+------------------------------------------*
      * APV035| 09111998| PERMILLARE : ERRATO CALCOLO IMPORTO SPESA*
      *-------+---------+------------------------------------------*
      * APV038|   111998|                                          *
      *-------+---------+------------------------------------------*
      * CAR401| 16111998| CONTROLLO DATA FESTIVA NON BLOCCANTE IN  *
      *       |         | FUNZIONE DI UN FLAG IN CONFIGURAZIONE    *
      *-------+---------+------------------------------------------*
      * CAR417| 25111998| ANOMALIE IMPLEMENTAZIONI EURO.           *
      *-------+---------+------------------------------------------*
      * 000247| 24111998| NON VENIVA VALORIZZATO WRK-CAMBIO-TRANSIT*
      *-------+---------+------------------------------------------*
      * 000252| 02121998| ANOMALIE EURO                            *
      *-------+---------+------------------------------------------*
      * CAR443| 10121998| ANOMALIE EURO                            *
      *-------+---------+------------------------------------------*
      * BAV158| 18121998| ERRORI DECIMALI PERMILLARE               *
      *-------+---------+------------------------------------------*
      * 000255| 22121998| ERRORI CONTROVALORI RIFERIMENTI          *
      *       |         | ERRATA ATTRIBUZIONE MOVIMENTO DI CONTRO- *
      *       |         | PARTITA PER I RAPPORTI FITTIZI           *
      *-------+---------+------------------------------------------*
      * 000256| 23121998| NUOVO TVOXCND = 11 PER BB                *
      *-------+---------+------------------------------------------*
      * CAR508| 29121998| ARROTONDAMENTO DAL 7 AL 6 DECIMALE PER LE*
      *       |         | PARITA' A TERMINE A PRONTI               *
      *-------+---------+------------------------------------------*
      * BDR136| 30121998| ARROTONDAMENTO CTV LISTINO ERRATO        *
      *-------+---------+------------------------------------------*
      * BPER49| 08011999| ERRATO CONTROLLO DECIMALI RITENUTA       *
      *       |         | FISCALE                                  *
      *-------+---------+------------------------------------------*
      * CAR566| 08011999| CONTROLLO SU SETTE DECIMALI PER PARITA'  *
      *       |         | A TERMINE/PRONTI NELLA ZONA DIVISE       *
      *-------+---------+------------------------------------------*
      * BPEL68| 20011999| ANOMALIA EURO RICOPRIVA LA PARITA FISSA  *
      *-------+---------+------------------------------------------*
      * BPEL69| 21011999| SE NON C'E' RITENUTA PRECEDENTE SALTARE  *
      *-------+---------+------------------------------------------*
      * APV066| 01021999| SE DATA VALUTA DI REGOLAMENTO E'         *
      *       |         | INFERIORE A DATA ESECUZIONE OPERAZIONE   *
      *       |         | VIENE FORZATA DATA ESECUZIONE OPERAZIONE *
      *       |         | IN DATA VALUTA DI REGOLAMENTO            *
      *-------+---------+------------------------------------------*
      * 000280| 26011999| NELLA QUADRATURA FASCIA B-C FACEVA IL    *
      *       |         | TEST SULL'IMPORTO SEGNATO E NON SUL      *
      *       |         | VALORE ASSOLUTO                          *
      *-------+---------+------------------------------------------*
      * 000281| 01021999| IMPOSTAZIONE DIVISORE PER GLI INTERESSI  *
      *       |         | IN FUNZIONE SE ANNO BISESTILE O NO       *
      *-------+---------+------------------------------------------*
      * APV071| 08021999| DVALNOA: PER I C/PARTITE SE IL MOVIMENTO *
      *       |         | HA DVALNOA MINORE DI RAPP-DVALNOA FORZARE*
      *-------+---------+------------------------------------------*
      * 000286| 08021999| DVALNOA: PER I C/PARTITE SE IL MOVIMENTO *
      *       |         | HA DVALNOA MINORE DI RAPP-DVALNOA FORZARE*
      *       |         | MOVP-DVALNOA = RAPP-DVALNOA              *
      *-------+---------+------------------------------------------*
      * 000288| 10021999| IMPOSTAZIONE DIVISORE PER GLI INTERESSI  *
      *       |         | IN FUNZIONE SE ANNO BISESTILE O NO       *
      *       |         | ULTERIORE IMPLEMENTAZIONE                *
      *-------+---------+------------------------------------------*
      * 000292| 18021999| LA VALUTA DI REGOLAMENTO FORZATA PER IL  *
      *       |         | C/PARTITA DEVE ESSERE RIBALTATA SU TUTTI *
      *       |         | I MOVIMENTI CHE COMPONGONO L'OPERAZIONE  *
      *-------+---------+------------------------------------------*
      * 000293| 18021999| COMMISSIONI DI NEGOZIAZIONE SE VIENE     *
      *       |         | FORZATO IL PERMILLARE SI DEVE COMUNQUE   *
      *       |         | CONSIDERARE IL MINIMO E MASSIMO DELLA    *
      *       |         | SPESA PREVISTI DALLA CONDIZIONE          *
      *-------+---------+------------------------------------------*
      * BPEL84| 0510    |ASTERISCATA LA CAR508 TRONCAVA AL SESTO   *
      *       |         |DECIMALE E ARROTONDAVA                    *
      *-------+---------+------------------------------------------*
      * 000307| 08041999| INIZIALIZZAZIONE CAMPO WRK-DVALNOA       *
      *-------+---------+------------------------------------------*
      * 000344| 20121999| NUOVA NORMATIVA PER IL CALCOLO RITENUTA  *
      *       |         | FISCALE (CAPITAL GAIN)                   *
      *-------+---------+------------------------------------------*
      * CAR981| 04012000| NUMERO OPERAZIONE ASSENTE SU MODELLO X   *
      *       |         | CONTABILIZZAZIONE SCARTATE.              *
      *-------+----------------------------------------------------*
      * CAR982| 10012000| RESO NON BLOCCANTE IL MESSAGGIO 'S110'.  *
      *       |         | SE ACCESSO ALLA FOREX VERIFICA CHE       *
      *       |         | CSIGDBASE E' FESTIVO.                    *
      *       |         | L'ACCESSO ALLA FOREX VA FATTO PER        *
      *       |         | CSIGDCON. INOLTRE DIVISO IL MEX 'S110'   *
      *       |         | IN (S110, S11A, S11B, S11C, S11D, S11E   *
      *       |         |     S11F, S11G)                          *
      *-------+----------------------------------------------------*
      * 000335| 26101999|MODIFICATO CALCOLO INTERESSI.             *
      *       |         |SE BANCA IL DIVISORE E' SEMPRE 36500.     *
      *-------+---------+------------------------------------------*
      * CAR275| 31072000| CONTROLLO STATO RAPPORTO                 *
      *-------+---------+------------------------------------------*
      * 000376| 03082000| PRIMO INTERVENTO X CAUSALI 2000          *
      *-------+---------+------------------------------------------*
      * 000377| 09082000| INTERVENTO DEFINITIVO X CAUSALI 2000     *
      *-------+---------+------------------------------------------*
      * 000317| 09082000|SE TRATTASI DI SOTTOCONTI DIVERSI DA CONTI*
      *       |         |ATTESA E CONTI DI FINANZIAMENTO VERIFICA  *
      *       |         |LA RESIDENZA DEI SOTTOCONTI DI CTP PER    *
      *       |         |ATTRIBUIRE IL PAESE ALLE CAUSALI FISSE    *
      *-------+---------+------------------------------------------*
      * 000386| 24072000| ELIMINAZIONE GESTIONE CAMPO OBMTX-FINTPNE*
      *-------+---------+------------------------------------------*
      * 000388| 08092000| GESTIONE CAUSALI MULTIPLE                *
      *-------+---------+------------------------------------------*
      * 000389| 08092000| ERRATA VALORIZZAZIONE CAMPI MOVC-SETTEMITVM
      *       |         | E MOVC-CSIGPAEMIT                        *
      *-------+---------+------------------------------------------*
      * APV157| 19092000| ANOMALIA NUOVE CAUSALI VALUTARIE         *
      *-------+---------+------------------------------------------*
      * APV160| 22092000| CORRETTA GESTIONE ERRORE IN CASO DI PAESE*
      *                 | ERRATO PER CAUSALE FINANZIARIA           *
      *-------+---------+------------------------------------------*
      * 000394| 16102000| ADEGUAMENTI PER GESTIONE CAUSALI ECONOMI-*
      *       |         | CHE E CAUSALI FISSE                      *
      *-------+---------+------------------------------------------*
      * 000411| 27112000| MODIFICHE SULLA VALORIZZAZIONE DEI CAMPI *
      *       |         | CSIGPAE E CSIGPAEMIT PER I 'MES'         *
      *-------+---------+------------------------------------------*
      * BDRTC1| 30102000| GESTIONE TRAVELLERS CHEQUE               *
      *-------+---------+------------------------------------------*
      * BPL016| 30112000| IL CAMPO W-NUM-TEST DEVE ESSERE PIC 9(2) *
      *-------+---------+------------------------------------------*
      * 000419| 14122000| AGGIUSTAMENTI PER GESTIONE CAUSALI       *
      *       |         | ECONOMICHE                               *
      *-------+---------+------------------------------------------*
      * BPL022| 17012001| ERRATO TEST SU CAMPO TCAUF-TTPFX         *
      *-------+---------+------------------------------------------*
      * BPL025| 21022001| GESTIONE COPERTURA T/C PER DATA CARICO   *
      *-------+---------+------------------------------------------*
      * APV115| 18111999|GESTIONE SOTTOVOCE MATRICE 62             *
      *-------+---------+------------------------------------------*
      * CSE059| 02032001| IL CONTROLLO NON DEVE ESSERE FATTO PER   *
      *       |         | PROCESSI DI PROROGA                      *
      *-------+---------+------------------------------------------*
      * BPL026| 05032001| STABELLAMENTO PER W-CAU = 0 SE LA CAUSALE*
      *       |         | NON E" IMPOSTATA DALLA ZCA12????         *
      *-------+---------+------------------------------------------*
      * 000362| 13032001| NON VALORIZZAVA IL CAMPO  MOVP-CCAUNOP   *
      *-------+---------+------------------------------------------*
      * 000433| 10042001|  INSERITO CONTROLLO PER CSIGPAE          *
      *       |         |  VALORIZZATO E DIVERSO DA 'IT' SE        *
      *       |         |  OBMTX-FPAEREGOL = 'D'                   *
      *       |         |  CENSITI DUE NUOVI CODICI ERRORE         *
      *       |         |  S209 - S210                             *
      *-------+---------+------------------------------------------*
      * CSE150| 23042001|  IN RIFERIMENTO ALLA 000433 SE LA FIGURA *
      *       |         |  TRATTATA E' UN NON CENSITO VIENE IMPOST.*
      *       |         |  PER DEFAULT 1 SU TIPO-FIGURA (CLIENTE)  *
      *-------+---------+------------------------------------------*
      * 000431| 22032001|  INSERITO CONTROLLO PER CSIGEMIT         *
      *       |         |  COMPRESO TRA 800 E 999 SE CODICE CAUSALE*
      *       |         |  DI INPUT = 6620 (ORGANISMO INTERNAZION) *
      *       |         |  ERRORE S207                             *
      *       |         |  PER LE ALTRE CAUSALI NON SI PUO'        *
      *       |         |  UTILIZZARE UN CSIGPAE                   *
      *       |         |  COMPRESO TRA 800 E 999                  *
      *       |         |  ERRORE S208                             *
      *-------+---------+------------------------------------------*
      * 000434| 18042001|  CAUSALI VALUTARIE:                      *
      *       |         |  ERRATA GESTIONE TOBSG-CMPPAE = 'F'      *
      *       |         |  NON PREVEDEVA I C/RECIPROCI NON GESTITI *
      *       |         |  DALL'ESTERO                             *
      *-------+---------+------------------------------------------*
      * 000312| 04051999| CAUSALI VALUTARIE MOVIMENTI ECONOMICI    *
      *       |         | ERRATA IMPOSTAZIONE CHIAVE TCAEC         *
      *-------+---------+------------------------------------------*
      * APV203| 18072001| ATTRIBUIVA SEMPRE LA SPESA MASSIMA, SE   *
      *       |         | SI TRATTAVA DI UNA SPESA FISSA IN LIRE   *
      *-------+---------+------------------------------------------*
      * BPL035| 03082001| ANOMALIA CAUSALI C/ECONOMICI PER PROCESSI*
      *       |         | ORO                                      *
      *-------+---------+------------------------------------------*
      * 000452| 05092001| CAUSALI: NON VALORIZZAVA CORRETTAMENTE IL*
      *       |         | CAMPO TTRC1 DURANTE LA GENERAZIONE DELLE *
      *       |         | CAUSALI FISSE E GENERAVA CAUSALI CON IM- *
      *       |         | PORTO A ZERO *
      *-------+---------+------------------------------------------*
      * EUR001| 15052001| ADEGUAMENTO EURO 2002                    *
      *-------+---------+------------------------------------------*
      * EUR004| 15102001| EURO2002: CONTROLLA LA DIVISA SOLO SE    *
      *       |         | VIENE VALORIZZATA                        *
      *-------+---------+------------------------------------------*
      * EUR005| 30102001| ADEGUAMENTO EURO 2002: PER SPESE FISSE IN*
      *       |         | VALUTA, SI DEVE CERCARE IL CAMBIO NEL    *
      *       |         | SEGUENTE ORDINE:                         *
      *       |         | SE DIVISA SPESA = DIVISA MOVIMENTO PATR. *
      *       |         |    CAMBIO SPESA = CAMBIO MOVIMENTO PATR. *
      *       |         | SE DIVISA SPESA = DIVISA ZONA DIVISE     *
      *       |         |    CAMBIO SPESA = CAMBIO ZONA DIVISE     *
      *       |         | SE DIVISA SPESA = DIVISA ZONA ORDINE     *
      *       |         |    CAMBIO SPESA = CAMBIO ZONA ORDINE     *
      *       |         | SE DIVISA SPESA = DIVERSA DALLE PRECEDENT*
      *       |         |    CAMBIO SPESA = LEGGO SUI CAMBI        *
      *-------+---------+------------------------------------------*
      * APV234| 28012002| LE CAUSALI DIGITATE DELLA SERIE 3XXX     *
      *       |         | SONO AMMESSE SOLO NEI PROCESSI 7160      *
      *       |         | 7161 PER LE ATTIVIT{ RIMPATRIATE         *
      *-------+---------+------------------------------------------*
      * APV255| 11022002| CHIAMO LA ZMBRCVS0 SOLO SE NON CI SONO   *
      *       |         | ERRORI BLOCCANTI                         *
      *-------+---------+------------------------------------------*
      * BPL056| 19072002| ANOMALIE MATRICE VALUTARIA PCS.TARGET    *
      *-------+---------+------------------------------------------*
      * BPO002| 21012004| AGGIORNAMENTO NCON E NCCO A 13           *
      *-------+---------+------------------------------------------*
      * BPO039| 14042004| RIPORTATA RELEASE DI INTESA BAVF40       *
      *                 | REVISIONE BAV110. ERRORE S092:               *
      *                 | 1)BLOCCANTE: SE MOVIM. DARE E SOMMA SPESE HA *
      *                 | SEGNO MENO (COSTI). SE MOVIM AVERE E SOMMA SP*
      *                 | ESE HA SEGNO PIU' (RICAVI)                   *
      *                 | 2)NON BLOCCANTE SE MOVIM DARE E SOMMA SPESE  *
      *                 | HA SEGNO PIU' (RICAVI). SE MOVIM AVERE E SOMM*
      *                 | A SPESE HA SEGNO MENO (COSTI).               *
      * BPO041| 15042004| RIPORTATA RELEASE DI INTESA BAV147       *
      *                   VALORIZZATO CAMPO NUOVO OPE-FLUSSOPRV    *
      *-------+---------+------------------------------------------*
      * BPO083| 28092004| CAUSALI FISSE PER CONTO ECONOMICO        *
      *                   IN CASO DI BANCA RESIDENTE E PAESE ESTERO*
      *                   NON GENERAVA CAUSALE                     *
      *-------+---------+------------------------------------------*
      * BPO095| 12112004 GESTIONE LISTINO 'L' PER RIVALORIZZAZIONE *
      *                  CAR275                                    *
      *                  NON RICOPRO FLUSSO PRV DI OPE SE FLUSSO   *
      *                  'RIVALO' 'ANNULL' 'ANNUBU' 'ANNUES' 'ANNUBE'
      *-------+---------+------------------------------------------*
      * BPO105| 12122004 GESTIONE CAUSALI PER C/NOSTRO EURO        *
      *                  INTESTATO A RESIDENTI                     *
      *-------+---------+------------------------------------------*
      * BPO097| 22122004 GESTIONE CAMPO OPE-CANTRASM               *
      *                  RIPORTATE RELEASE BAVC43 (PARZIALE)       *
      *-------+---------+------------------------------------------*
      * BPO115| 18012005 GESTIONE CAUSALI C/ECONOMICI REGOLAMENTO  *
      *                  VIA TARGET. SEGNALARE SOLO SE CONTROPARTE *
      *                  NON RESIDENTE                             *
      *-------+---------+------------------------------------------*
      * BPO133| 09022005 ELIMINATO ERRORE BLOCCANTE S210           *
      *-------+---------+------------------------------------------*
      *-------+---------+------------------------------------------*
      * BPO239| 28072005 PER TIPO STC 400 INTESTATO A BANCA NO RES *
      *                  SI INCROCIAVA UNO SVILUPPO CAUSALI ERRATO *
      *                  LA BANCA NON RESIDENTE DEVE ESSERE SEGNA  *
      *                  LATA COME FOSSE CLIENTE????               *
      *-------+---------+------------------------------------------*
      * BPO271| 29092005 MODIFICATA DESCRIZIONE ERRORE S150        *
      *-------+---------+------------------------------------------*
      * BPO313! 29122005! RIPORTATA RELEASE SDM002 SISEB DATA MART *    00327700
      *       !         ! IMPLEMENTAZIONE PER GENERAZIONE IMPEGNI  *    00327800
      *       !         ! E RISCHI                                 *    00327900
      *                 ! RIPORTATA RELEASE SDM008 SISEB DATA MART      00328000
      *       !         ! IMPLEMENTAZIONI VARIE:                        00328100
      *       !         ! - INS. II/RR S/C 990/991 PER S/C 310,324      00328200
      *       !         ! - PER STORNO NEWDVALNOA=DOGG +                00328300
      *       !         !    II/RR GENERATI RIBALTANDO DA MOVP STORNATA 00328400
      *       !         ! RIPORTATA SDM012 SDM013 SDM014 SDM016         00328500
      *-------+---------+------------------------------------------*
      * BPO336! 15022006! MODIFICATA CONDIZIONE ERRORE S208        *    00328700
      *       !         ! PER CAUSALE 7010/8706 DEVE ACCETTARE     *    00328800
      *       !         ! ANCHE PAESI CON CODICE UIC > 800         *    00328900
      *-------+---------+------------------------------------------*
      * BPO422! 11082006! AGGIUNTI CONTROLLI PER CODICI UIC 589    *    00329100
      *       !         ! SE CAUSALE = 6620                        *    00329200
      *-------+---------+------------------------------------------*
      * BPOXXX! 15092006! COME VALUTA DI REGOLAMENTO DI PARTENZA,PER    00329500
      *       !         ! OGNI SINGOLO MOVIMENTO VIENE UTILIZZATA LA    00329600
      *       !         ! VALUTA ECONOMICA DEL MOVIMENTO           *    00329700
      *-------+---------+------------------------------------------*    00329800
      * BPO469! 21122006! RIPORTATA RELEASE 000224 PER OPER.       *    00329900
      *       !         ! NON CONCLUSA                             *    00330000
      *-------+---------+------------------------------------------*    00330100
      * BPO484! 11012007! RIPORTATA RELEASE BAVI92                 *    00330200
      *-------+---------+------------------------------------------*    00330400
      * BPO496! 09062006! RIPORTATA SDM021                         *    00330500
      *       !         ! INS. GEST. PER OPERAZIONI A VECCHIO (FCON=3)  00330600
      *       |         | + GESTIONE PCS 1006                      *    00330700
      *-------+---------+------------ -----------------------------*    00330800
      * BPO515! 12032006! RIPORTATA RELEASE BAVG90 - MODIFICATA    *
      *       |         ! CHIAMATA A ZMBCOND0                      *
      *-------+---------+------------ -----------------------------*    00330800
      * BPO564! 03072007! PER I BONIFICI NON DEVE GIRARE LA        *
      *       |         ! ROUTINE IMR00 PER NON SCHIACCIARE        *
      *       |         ! LA VALUTA DI REGOLAMENTO                 *
      *-------+---------+------------ -----------------------------*    00330800
      * BPO720! 18082009! PER REST E REJET NO CONTROL SCAMBIO CIFRA*
      *-------+---------+------------------------------------------*
      * BPO741! 21042010! ABROGAZIONE CVA / CVS                    *
      *-------+---------+------------------------------------------*
      * APE001! 17042015! CARTA CONTO                              *
      *-------+---------+------------------------------------------*
      *-------+---------+------------------------------------------*
      * BPOA02! 18012016! VALORIZZAZIONE OPE-OESCOPE CON ZOP020801 *
      *                   PER OPERAZIONI NON CONCLUSE              *
      *-------+---------+------------------------------------------*
      * APE003! 03032016! TOLTO DISPLAY 'CI PASSO'                 *
      *-------+---------+------------------------------------------*
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           DECIMAL-POINT IS COMMA.

       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
       DATA DIVISION.
       FILE SECTION.
       WORKING-STORAGE SECTION.
000388*---------------- AREA PER CAUSALI MULTIPLE
000388 01 IND-MULT                    PIC 9(03) VALUE ZEROS.
000388 01 WRK-TIPO-MOV                PIC 9(01) VALUE ZERO.
000388 01 CONTA-DARE                  PIC 9(03) VALUE ZEROS.
000388 01 CONTA-AVERE                 PIC 9(03) VALUE ZEROS.
000388 01 IND-MOV-DARE                PIC 9(03) VALUE ZEROS.
000388 01 IND-MOV-AVERE               PIC 9(03) VALUE ZEROS.
000388 01 WRK-CAU-MULTIPLE            PIC 9(01) VALUE ZERO.
000388 01 WRK-SINGOLO.
000388    02 WRK-SINGOLO-TTRC1        PIC X(2).
000388    02 WRK-SINGOLO-TTPFX        PIC X(3).
000388    02 WRK-SINGOLO-TMOV         PIC 9(1).
000388    02 WRK-SINGOLO-CNATCON      PIC 9(1).
000388    02 WRK-SINGOLO-TTFLAGS      PIC X(2).
000388    02 WRK-SINGOLO-TTFIG        PIC X(5).
000388    02 WRK-SINGOLO-TTCNT2       PIC X(5).
000388    02 WRK-SINGOLO-CSIGPAE      PIC X(2).
000388    02 WRK-SINGOLO-CIST         PIC 9(4).
000388    02 WRK-SINGOLO-DIPOPE       PIC 9(5).
000388    02 WRK-SINGOLO-NUMOPE       PIC 9(7).
000388    02 WRK-SINGOLO-NPRGMOVP     PIC 9(2).
000388    02 WRK-SINGOLO-NSUBMOVP     PIC 9(2).
000388    02 WRK-SINGOLO-CISO         PIC X(3).
000388    02 WRK-SINGOLO-FINOUT       PIC X(3).
000388    02 WRK-SINGOLO-IMOV         PIC S9(15)V9(03).
000388
000388 01 WRK-MOVIMENTI-MULTIPLI.
000388    02 WRK-ELE-MULTIPLI OCCURS 20.
000388       03 WRK-MULTIPLO-TTRC1        PIC X(2).
000388       03 WRK-MULTIPLO-TTPFX        PIC X(3).
000388       03 WRK-MULTIPLO-TMOV         PIC 9(1).
000388       03 WRK-MULTIPLO-CNATCON      PIC 9(1).
000388       03 WRK-MULTIPLO-TTFLAGS      PIC X(2).
000388       03 WRK-MULTIPLO-TTFIG        PIC X(5).
000388       03 WRK-MULTIPLO-TTCNT2       PIC X(5).
000388       03 WRK-MULTIPLO-CSIGPAE      PIC X(2).
000388       03 WRK-MULTIPLO-CIST         PIC 9(4).
000388       03 WRK-MULTIPLO-DIPOPE       PIC 9(5).
000388       03 WRK-MULTIPLO-NUMOPE       PIC 9(7).
000388       03 WRK-MULTIPLO-NPRGMOVP     PIC 9(2).
000388       03 WRK-MULTIPLO-NSUBMOVP     PIC 9(2).
000388       03 WRK-MULTIPLO-CISO         PIC X(3).
000388       03 WRK-MULTIPLO-FINOUT       PIC X(3).
000388       03 WRK-MULTIPLO-IMOV         PIC S9(15)V9(03).
000388
000388 01 WRK-AREA-LAVORO.
000388    02 WRK-AREA-LAV OCCURS 2.
000388       03 WRK-LAVORO-TTRC1        PIC X(2).
000388       03 WRK-LAVORO-TTPFX        PIC X(3).
000388       03 WRK-LAVORO-TMOV         PIC 9(1).
000388       03 WRK-LAVORO-CNATCON      PIC 9(1).
000388       03 WRK-LAVORO-TTFLAGS      PIC X(2).
000388       03 WRK-LAVORO-TTFIG        PIC X(5).
000388       03 WRK-LAVORO-TTCNT2       PIC X(5).
000388       03 WRK-LAVORO-CSIGPAE      PIC X(2).
000388       03 WRK-LAVORO-CIST         PIC 9(4).
000388       03 WRK-LAVORO-DIPOPE       PIC 9(5).
000388       03 WRK-LAVORO-NUMOPE       PIC 9(7).
000388       03 WRK-LAVORO-NPRGMOVP     PIC 9(2).
000388       03 WRK-LAVORO-NSUBMOVP     PIC 9(2).
000388       03 WRK-LAVORO-CISO         PIC X(3).
000388       03 WRK-LAVORO-FINOUT       PIC X(3).
000388       03 WRK-LAVORO-IMOV         PIC S9(15)V9(03).
000394 01  WRK-DCLTBAMOVC.
000394     03 WRK-MOVC-CCAUIC     PIC S9(5)V COMP-3      VALUE ZEROS.
000394     03 WRK-MOVC-CDPZGINT   PIC S9(5)V COMP-3      VALUE ZEROS.
000394     03 WRK-MOVC-CISO       PIC X(3)               VALUE SPACES.
000394     03 WRK-MOVC-CIST       PIC S9(4)V COMP-3      VALUE ZEROS.
000394     03 WRK-MOVC-CSIGPAE    PIC X(2)               VALUE SPACES.
000394     03 WRK-MOVC-DIPOPE     PIC S9(5)V COMP-3      VALUE ZEROS.
000394     03 WRK-MOVC-ICAU       PIC S9(15)V9(3) COMP-3 VALUE ZEROS.
000394     03 WRK-MOVC-NNDGSTA    PIC X(16)              VALUE SPACES.
000394     03 WRK-MOVC-NPRGMOVP   PIC S9(4)V COMP-3      VALUE ZEROS.
000394     03 WRK-MOVC-NPRGRIGA   PIC S9(3)V COMP-3      VALUE ZEROS.
000394     03 WRK-MOVC-NSUBMOVP   PIC S9(1)V COMP-3      VALUE ZEROS.
000394     03 WRK-MOVC-NUMOPE     PIC S9(7)V COMP-3      VALUE ZEROS.
000394     03 WRK-MOVC-TCODCAU    PIC S9(1)V COMP-3      VALUE ZEROS.
000394     03 WRK-MOVC-TMOVCAU    PIC X(1)               VALUE SPACES.
000394     03 WRK-MOVC-SETTCLRES  PIC X(3)               VALUE SPACES.
000394     03 WRK-MOVC-SETTEMITVM PIC X(3)               VALUE SPACES.
000394     03 WRK-MOVC-CSIGPAEMIT PIC X(2)               VALUE SPACES.
000394     03 WRK-MOVC-CODABI     PIC S9(5)V COMP-3      VALUE ZEROS.
000394     03 WRK-MOVC-ICAUORI    PIC S9(15)V9(3) COMP-3 VALUE ZEROS.
000394     03 WRK-MOVC-VMATRICE   PIC X(5)               VALUE SPACES.
000394     03 WRK-MOVC-CTITOLO    PIC X(12)              VALUE SPACES.

000394 01  WRK-IND-TBAMOVC              PIC 9(2)   VALUE  ZEROS.

APV255 01  W-CONTROLLO                  PIC X(2)   VALUE  SPACES.

000377 01  WRK-DER-SETTORE              PIC X(03)  VALUE  SPACES.
000377 01  WRK-DER-SETTORECL            PIC X(03)  VALUE  SPACES.
000377 01  WRK-DER-STATO                PIC X(02)  VALUE  SPACES.
000377 01  WRK-NUOVE-SV                 PIC 9(02)  VALUE  ZEROES.
       01  WRK-UPDATE.
          03  WRK-UPDATE-AOPE            PIC X(01) VALUE  SPACES.
          03  WRK-UPDATE-AMOVP           PIC X(01) VALUE  SPACES.
          03  WRK-UPDATE-AMOVC           PIC X(01) VALUE  SPACES.
          03  WRK-UPDATE-AMOVE           PIC X(01) VALUE  SPACES.
          03  WRK-UPDATE-ADISTI          PIC X(01) VALUE  SPACES.
          03  WRK-UPDATE-ARDAT           PIC X(01) VALUE  SPACES.
000202*--- CONTIENE L'AREA DI PASSAGGIO PER INTERFACCIA ANAGRAFICA
000202 01  AREA-INTERFACCE.
000202     02  AREA-SQLCODE  PIC S9(9) COMP.
000202     02  AREA-DESCERR  PIC X(79).
000202     02  AREA-TABELLA  PIC X(997).
                                                                        00444000
SDM002 01  IR-CAMPI-COMODO.                                             00444100
SDM002     03  IR-CISO                    PIC  X(03)       VALUE SPACES.00444200
SDM002     03  IR-CISOCTP                 PIC  X(03)       VALUE SPACES.00444300
SDM002     03  IR-CSTC                    PIC  9(05)       VALUE ZEROS. 00444400
SDM002     03  IR-VCND                    PIC  9(04)       VALUE ZEROS. 00444500
SDM002     03  IR-FLITVAL                 PIC  9(01)       VALUE ZEROS. 00444600
SDM002     03  IR-TNDGSET                 PIC  9(01)       VALUE ZEROS. 00444700
SDM002     03  IR-FRSD                    PIC  9(01)       VALUE ZEROS. 00444800
SDM002     03  IR-TIPO-RACC               PIC  X(04)       VALUE SPACES.00444900
SDM002     03  IR-ISPSVAL                 PIC S9(15)V9(3)  VALUE ZEROS. 00445000
SDM002     03  IR-ICTVLISPS               PIC S9(15)V9(3)  VALUE ZEROS. 00445100
SDM002     03  IR-FVLZMOV                 PIC S9(15)V9(3)  VALUE ZEROS. 00445200
SDM012     03  IR-VEDI-CC                 PIC  X(02)       VALUE SPACES.00445300
SDM014     03  IR-MOV-SOSP                PIC  X(02)       VALUE SPACES.00445400
SDM002     03  SAVE-DCLTBAMOVE            PIC  X(200)      VALUE SPACES.00445500
SDM002     03  SAVE-DCLTBTABSC            PIC  X(319)      VALUE SPACES.00445600
SDM002     03  SAVE-DCLTBADIV             PIC  X(114)      VALUE SPACES.00445700
SDM002     03  SAVE-DCLTBTRACPA           PIC  X(061)      VALUE SPACES.00445800
SDM002                                                                  00445900

120297*--- CONTIENE IL DETTAGLIO DEL CAMPO CONFG-ALTRI-FLAG
120297     COPY ZMWCONFG.
000172*---------------------------- AREA DI COMUNICAZIONE ZMBCTV00
CAR371 01  WCM-DFHCOMMAREA.
000172     COPY ZMWCTV00.
SDM002*----  AREA DI PASSAGGIO ROUTINE IMPEGNI E RISCHI                 00449100
SDM002     COPY ZMWIMR00.                                               00449200

       01  WRK-FINE-INTAB                PIC X(02) VALUE  SPACES.
       01  WRK-TVOXCND                   PIC 9(02) VALUE  ZEROES.
       01  WRK-IND-INTAB                 PIC 9(05) VALUE  ZEROES.
       01  WRK-TABELLA-MOVP.
          02  WRK-TAB-MOVP        OCCURS 35.
              03 WRK-INTAB-NMOVP         PIC 9(4) VALUE ZEROES.
              03 WRK-INTAB-SUBMOVP       PIC 9(1) VALUE ZEROES.
              03 WRK-INTAB-OPER-P        PIC X(1) VALUE SPACES.
140597*       03 WRK-INTAB-NPRGRIGA-E    PIC 9(3) VALUE ZEROES.
       01  WRK-TABELLA-MOVE.
          02  WRK-TAB-MOVE        OCCURS 35.
              03 WRK-INTAB-NMOVE         PIC 9(4) VALUE ZEROES.
              03 WRK-INTAB-SUBMOVE       PIC 9(1) VALUE ZEROES.
              03 WRK-INTAB-NRIGE         PIC 9(3) VALUE ZEROES.
              03 WRK-INTAB-OPER-E        PIC X(1) VALUE SPACES.
       01  WRK-TABELLA-MOVC.
          02  WRK-TAB-MOVC        OCCURS 35.
              03 WRK-INTAB-NMOVC         PIC 9(4) VALUE ZEROES.
              03 WRK-INTAB-SUBMOVC       PIC 9(1) VALUE ZEROES.
              03 WRK-INTAB-NRIGC         PIC 9(3) VALUE ZEROES.
              03 WRK-INTAB-OPER-C        PIC X(1) VALUE SPACES.
       01  WRK-TABELLA-DISTI.
          02  WRK-TAB-DISTI       OCCURS 35.
              03 WRK-INTAB-NDISTI        PIC 9(4) VALUE ZEROES.
              03 WRK-INTAB-SUBDISTI      PIC 9(1) VALUE ZEROES.
              03 WRK-INTAB-NRIGDISTI     PIC 9(3) VALUE ZEROES.
              03 WRK-INTAB-OPER-DISTI    PIC X(1) VALUE SPACES.

       01  WRK-MOVP-PER-MOVE.
          02  WRK-MOVP-MOVE       OCCURS 35.
             03 W-COM-NPRGMOVP           PIC 9(4) VALUE ZEROES.
             03 W-COM-NSUBMOVP           PIC 9(1) VALUE ZEROES.
             03 W-COM-ISPSVAL            PIC S9(15)V9(03) VALUE 0.
             03 W-COM-ICTVSPS            PIC S9(15)V9(03) VALUE 0.
000172       03 W-COM-ICTVLISPS          PIC S9(15)V9(03) VALUE 0.
      *---------------------------- CAMPI UTILIZZATI PER NUMERARE IL
      *---------------------------- PROGRESSIVO RIGA DI ZM.TBAMOVC
       01  WRK-TAB-RIGA-MOVC.
          02  WRK-RIGA-MOVC        OCCURS 35.
              03 WRK-R-MOVC-NMOVP        PIC 9(4) VALUE ZEROES.
              03 WRK-R-MOVC-SUBMOVP      PIC 9(1) VALUE ZEROES.
              03 WRK-R-MOVC-NPRGRIGA-C   PIC 9(3) VALUE ZEROES.
      *---------------------------- TABELLA DI APPOGGIO INDIRIZZO RAPP
280497 01  WRK-TAB-RIGA-INDRA.
 ""       02  WRK-ELE-INDRA        OCCURS 15.
 ""           03 WRK-ELE-CIST-INDRA      PIC 9(5)  VALUE ZEROES.
 ""           03 WRK-ELE-CSTC-INDRA      PIC 9(5)  VALUE ZEROES.
 ""           03 WRK-ELE-CISO-INDRA      PIC X(3)  VALUE SPACES.
 ""           03 WRK-ELE-NNDGSET-INDRA   PIC X(16) VALUE ZEROES.
010797*       03 WRK-ELE-NSUFABT-INDRA   PIC 9(1)  VALUE ZEROES.
010297        03 WRK-ELE-NSUFABT-INDRA   PIC 9(2)  VALUE ZEROES.
 ""           03 WRK-ELE-CDPZ-INDRA      PIC 9(5)  VALUE ZEROES.
 ""           03 WRK-ELE-NPRGOPE-INDRA   PIC 9(7)  VALUE ZEROES.
 ""           03 WRK-ELE-TTNDG-INDRA     PIC X(3)  VALUE SPACES.
280497        03 WRK-ELE-FCONF-INDRA     PIC X(1)  VALUE SPACES.
       01 WRK-DATA-MOD                   PIC 9(08) VALUE ZEROES.
       01             REDEFINES WRK-DATA-MOD.
           03  WRK-AA-MOD                PIC 9(04).
           03  WRK-MM-MOD                PIC 9(02).
           03  WRK-GG-MOD                PIC 9(02).
       01  WRK-DATA-MODX REDEFINES WRK-DATA-MOD PIC X(08).
       01  WRK-DATA-GGMM-1               PIC 9(08) VALUE ZEROES.
       01  WRK-DATA-GGMM-1X REDEFINES WRK-DATA-GGMM-1 PIC X(08).
       01  WRK-DATA-GGMM-2               PIC 9(08) VALUE ZEROES.
       01  WRK-DATA-GGMM-2X REDEFINES WRK-DATA-GGMM-2 PIC X(08).
       01  WRK-GIORNI                    PIC 9(08) VALUE ZEROES.
       01  WRK-GIORNI1                   PIC 9(08) VALUE ZEROES.
       01  WRK-CASO2                     PIC X(02) VALUE  SPACES.
       01  WRK-VALUNIQUA-PIU             PIC S9(4) VALUE ZEROES.
       01  WRK-VALUNIQUA-MENO            PIC S9(4) VALUE ZEROES.
BDR136*01  WRK-VARREUR-PIU               PIC S9(4) VALUE ZEROES.
BDR136*01  WRK-VARREUR-MENO              PIC S9(4) VALUE ZEROES.
BDR136 01  WRK-VARREUR-PIU               PIC S9(4)V9(4) VALUE ZEROES.
BDR136 01  WRK-VARREUR-MENO              PIC S9(4)V9(4) VALUE ZEROES.
       01  WRK-ZEC1131                   PIC X(02) VALUE  SPACES.
       01  WRK-FINE-WNCSVP               PIC X(02) VALUE  SPACES.
       01  WRK-FINE-WNCSVC               PIC X(02) VALUE  SPACES.
       01  WRK-FINE-WNCSVE               PIC X(02) VALUE  SPACES.
       01  WRK-IND-LETTI-E               PIC 9(05) VALUE  ZEROES.
       01  WRK-IND-LETTI-C               PIC 9(05) VALUE  ZEROES.
       01  WRK-IND-LETTI-P               PIC 9(05) VALUE  ZEROES.
       01  WRK-IND                       PIC 9(05) VALUE  ZEROES.
       01  WRK-IND-IND                   PIC 9(05) VALUE  ZEROES.
       01  WRK-ICTMOV-VALASS             PIC 9(15)V9(3) COMP-3.
000241 01  WRK-ICTVLIS-VALASS            PIC 9(15)V9(3) COMP-3.
       01  WRK-MOVP-NPRGMOVP             PIC 9(4) VALUE ZEROES.
       01  WRK-IMOV-VALASS               PIC 9(15)V9(3) COMP-3.
       01  WRK-ISPSVAL-VALASS            PIC 9(15)V9(3) COMP-3.
       01  WRK-MOVE-CDIVCAP              PIC X(003) VALUE SPACES.
       01  WRK-MOVE-ICABCAP              PIC 9(6)V9(7) COMP-3.
       01  WRK-IND-MOVP                  PIC 9(02) VALUE  ZEROES.
       01  WRK-MOVE-ISPSVAL              PIC S9(15)V9(03) VALUE 0.
BPEL26 01  WRK-STATUS-ARAPP              PIC X(01) VALUE SPACES.
000172 01  WRK-N-M-2                     PIC 9(02) VALUE 0.
BPO741 01  WRK-FLAG-ABROG                PIC X(01) VALUE SPACES.
       01  WRK-DFHCOMMAREA.
           COPY ZMWFOREX.
000041     COPY ZMWNOPER.
       01  WRK-DCLTBAMOVP.
           02  WRK-MOVP        OCCURS 35.
               03 WRK-NPRGMOVP           PIC 9(4) VALUE ZEROES.
               03 WRK-INDICE             PIC 9(5) VALUE ZEROES.
       01  WS-DCLTBAMOVP.
           02  WS-AREA-MOVP    OCCURS 35.
000081*        03  WS-TAB-TBAMOVP            PIC X(500).
BPO002*        03  WS-TAB-TBAMOVP            PIC X(550).
SDM002*BPO002  03  WS-TAB-TBAMOVP            PIC X(580).                00556000
SDM002         03  WS-TAB-TBAMOVP            PIC X(800).                00556100
               03  WS-STATUS-TBAMOVP         PIC X.
               03  WS-TAB-TTSTC              PIC X(02).
               03  WS-TAB-TTDIV              PIC X(03).
               03  WS-TAB-TTIMP              PIC X(02).
140597         03  WS-TAB-NPRGRIGA-E         PIC 9(3) VALUE ZEROES.
000081*01  WRK-TAB-TBAMOVP                   PIC X(501).
BPO002*01  WRK-TAB-TBAMOVP                   PIC X(550).
SDM002*BPO002 01  WRK-TAB-TBAMOVP                   PIC X(580).         00564000
SDM002 01  WRK-TAB-TBAMOVP                   PIC X(800).                00564100
       01  WS-DCLTBAMOVE.
           03  WS-TAB-TBAMOVE                PIC X(200)   OCCURS 35.
       01  WS-DCLTBAMOVC.
000142*    03  WS-TAB-TBAMOVC                OCCURS 50.
000142     02  WS-AREA-MOVC                  OCCURS 50.
000142       03  WS-TAB-TBAMOVC.
               05 WS-MOVC-CCAUIC             PIC S9(5)V COMP-3.
               05 WS-MOVC-CDPZGINT           PIC S9(5)V COMP-3.
               05 WS-MOVC-CISO               PIC X(3).
               05 WS-MOVC-CIST               PIC S9(4)V COMP-3.
               05 WS-MOVC-CSIGPAE            PIC X(2).
               05 WS-MOVC-DIPOPE             PIC S9(5)V COMP-3.
               05 WS-MOVC-ICAU               PIC S9(15)V9(3) COMP-3.
               05 WS-MOVC-NNDGSTA            PIC X(16).
               05 WS-MOVC-NPRGMOVP           PIC S9(4)V COMP-3.
               05 WS-MOVC-NPRGRIGA           PIC S9(3)V COMP-3.
               05 WS-MOVC-NSUBMOVP           PIC S9(1)V COMP-3.
               05 WS-MOVC-NUMOPE             PIC S9(7)V COMP-3.
               05 WS-MOVC-TCODCAU            PIC S9(1)V COMP-3.
               05 WS-MOVC-TMOVCAU            PIC X.
000081         05 WS-MOVC-SETTCLRES          PIC X(3).
000081         05 WS-MOVC-SETTEMITVM         PIC X(3).
000081         05 WS-MOVC-CSIGPAEMIT         PIC X(2).
000081         05 WS-MOVC-CODABI             PIC S9(5).
000081         05 WS-MOVC-ICAUORI            PIC S9(15)V9(3).
000081         05 WS-MOVC-VMATRICE           PIC X(5).
000142       03  WS-TAB-CAUSALE-FISSA        PIC X(1).
       01  W-TAB-IND.
           03  W-ELE-IND             OCCURS 35.
               05 INDD                       PIC 9(003).
       01  W-TAB-TABSC.
           03  W-ELE-TABSC           OCCURS 35.
               05                            PIC X(042).
               05 W-ELE-CIST                 PIC S9(004) COMP-3.
               05                            PIC X(029).
               05 W-ELE-CSTC                 PIC S9(005) COMP-3.
      *        05                            PIC X(197).
EUR001*000081  05                            PIC X(229).
EUR001         05                            PIC X(242).
       01  W-TAB-QUADR-CAU.
           03  W-ELE-QUADR-CAU  OCCURS 20.
               05  W-TAB-DIV-CAU             PIC X(003).
               05  W-TAB-PNE-CAU             PIC S9(15)V9(3) COMP-3.
               05  W-TAB-PNI-CAU             PIC S9(15)V9(3) COMP-3.
               05  W-TAB-CPNE-CAU            PIC S9(15)V9(3) COMP-3.
               05  W-TAB-CPNI-CAU            PIC S9(15)V9(3) COMP-3.
       01  W-TAB-QUADR-A.
           03  W-ELE-QUADR-A    OCCURS 20.
               05  W-TAB-DIV-A               PIC X(003).
               05  W-TAB-IMOV-A              PIC S9(15)V9(3) COMP-3.
       01  W-TAB-QUADR-B.
           03  W-ELE-QUADR-B    OCCURS 20.
               05  W-TAB-DIV-B               PIC X(003).
               05  W-TAB-IMOV-B              PIC S9(15)V9(3) COMP-3.
       01  W-DCLTBAMOVP-A.
           03 W-MOVP-CIST-A                  PIC S9(4)V COMP-3.
           03 W-MOVP-NUMOPE-A                PIC S9(7)V COMP-3.
           03 W-MOVP-DIPOPE-A                PIC S9(5)V COMP-3.
           03 W-MOVP-NPRGMOVP-A              PIC S9(4)V COMP-3.
           03 W-MOVP-NSUBMOVP-A              PIC S9(1)V COMP-3.
           03 W-MOVP-ICTMOV-A                PIC S9(15)V9(3) COMP-3.
000172     03 W-MOVP-ICTVLIS-A               PIC S9(15)V9(3) COMP-3.
       01  W-DCLTBAMOVP-B.
           03 W-MOVP-CIST-B                  PIC S9(4)V COMP-3.
           03 W-MOVP-NUMOPE-B                PIC S9(7)V COMP-3.
           03 W-MOVP-DIPOPE-B                PIC S9(5)V COMP-3.
           03 W-MOVP-NPRGMOVP-B              PIC S9(4)V COMP-3.
           03 W-MOVP-NSUBMOVP-B              PIC S9(1)V COMP-3.
           03 W-MOVP-ICTMOV-B                PIC S9(15)V9(3) COMP-3.
000172     03 W-MOVP-ICTVLIS-B               PIC S9(15)V9(3) COMP-3.
       01  W-DCLTBAMOVP-C.
           03 W-MOVP-CIST-C                  PIC S9(4)V COMP-3.
           03 W-MOVP-NUMOPE-C                PIC S9(7)V COMP-3.
           03 W-MOVP-DIPOPE-C                PIC S9(5)V COMP-3.
           03 W-MOVP-NPRGMOVP-C              PIC S9(4)V COMP-3.
           03 W-MOVP-NSUBMOVP-C              PIC S9(1)V COMP-3.
           03 W-MOVP-ICTMOV-C                PIC S9(15)V9(3) COMP-3.
000172     03 W-MOVP-ICTVLIS-C               PIC S9(15)V9(3) COMP-3.
000007 01  WRK-LICMB-ICABTLF              PIC S9(06)V9(7) VALUE ZEROES.
000007 01  WRK-CTV-ICAU                   PIC S9(15)V9(3) VALUE ZEROES.
       01  WRK-COM-VALORE                    PIC S9(018) VALUE ZEROS.
       01  WRK-COM-VALORE-X REDEFINES WRK-COM-VALORE PIC X(018).
       01  WRK-NDCLDIV                       PIC 9(01) VALUE ZEROES.
       01  WRK-DIVISA-ERR                    PIC X(02) VALUE SPACES.
       01  WRK-ZDV1301-VAL                   PIC X(02) VALUE SPACES.
       01  WRK-NUM-10I-3DEC               PIC S9(010)V9(003) VALUE 0.
       01  WRK-NO-CSTC                     PIC X(01) VALUE SPACES.
       01  WRK-COMODO.
APE001*    03  W-TPCOLL               PIC X(02).
APE001     03  W-TPCOLL               PIC X(01).
APE001*    03  W-CPROD                PIC X(01) VALUE SPACES.
APE001     03  W-CPROD                PIC X(02) VALUE SPACES.
APE001     03  W-IDENT                PIC X(35) VALUE SPACES.
APE001     03  W-FILAPP               PIC 9(05) VALUE ZEROES.
EUR005     03  WRK-DIVISA-MOVIMENTO   PIC X(03) VALUE SPACES.
EUR005     03  WRK-CAMBIO-MOVIMENTO   PIC 9(06)V9(7) VALUE ZEROES.
EUR001     03  WRK-DATA-VALIDITA      PIC 9(08) VALUE ZEROES.
EUR001     03  WRK-DIVISA-UEM         PIC X(01) VALUE SPACES.
EUR001     03  WRK-MOVP-DVALNOA       PIC 9(08) VALUE ZEROES.
BPEL68     03  WRK-CTV00-PARITA       PIC 9(13) VALUE ZEROES.
BPEL68     03  WRK-CTV00-PARITA-INT   PIC 9(02) VALUE ZEROES.
BPEL68     03  WRK-CTV00-PARITA-DEC   PIC 9(02) VALUE ZEROES.
BPEL68     03  WRK-CTV00-TQUOLIS      PIC 9(01) VALUE ZEROES.
CAR417     03  WRK-NPRGMOVP-MAX       PIC 9(04) VALUE ZEROES.
000292     03  WRK-DVALNOA            PIC 9(08) VALUE ZEROES.
CAR417     03  WRK-RAPPORTO-FITTIZIO  PIC X(01) VALUE SPACES.
CAR443     03  WRK-PARITA-FITTIZIO    PIC S9(6)V9(7) VALUE ZEROES.
CAR443     03  WRK-PARITA-EFFETTIVO   PIC S9(6)V9(7) VALUE ZEROES.
CAR443     03  WRK-IND1               PIC S9(5) VALUE ZEROES.
CAR508     03  WRK-COM1-9             PIC 9(13) VALUE ZEROES.
CAR508     03  WRK-COM1  REDEFINES WRK-COM1-9.
CAR508         07  WRK-COM1-10        PIC 9(10).
CAR508         07  WRK-COM1-11        PIC 9(01).
CAR508         07  WRK-COM1-RESTO     PIC 9(02).
           03  WRK-DATASPOT       PIC 9(08) VALUE ZEROES.
           03              REDEFINES WRK-DATASPOT.
              05  WRK-AASPOT      PIC 9(04).
              05  WRK-MMSPOT      PIC 9(02).
              05  WRK-GGSPOT      PIC 9(02).
020797     03  WRK-DATA1          PIC 9(08) VALUE ZEROES.
 "         03              REDEFINES WRK-DATA1.
 "            05  WRK-ANNO1       PIC 9(04).
 "            05  WRK-MESE1       PIC 9(02).
 "            05  WRK-FILL1       PIC 9(02).
 "         03  WRK-DATA2          PIC 9(08) VALUE ZEROES.
 "         03              REDEFINES WRK-DATA2.
 "            05  WRK-ANNO2       PIC 9(04).
 "            05  WRK-MESE2       PIC 9(02).
020797        05  WRK-FILL2       PIC 9(02).
           03  WRK-DATASPOT-360   PIC 9(08) VALUE ZEROES.
000188     03  WRK-DIVISA-SPOT    PIC X(03) VALUE SPACES.
CAR275     03  WRK-RAPPORTO       PIC X(02) VALUE SPACES.
CAR275     03  WRK-TROVATO-RAPPORTO  PIC X(02) VALUE SPACES.
CAR275     03  WRK-RIVALORIZZAZIONE  PIC X(02) VALUE SPACES.
CAR275     03  WRK-ANNULLAMENTO      PIC X(02) VALUE SPACES.
CAR275     03  WRK-FLUSSO-MIR        PIC X(02) VALUE SPACES.
BPOA02     03 W-COMODO-TIME.
BPOA02        05  W-COMODO-DATA.
BPOA02            07 W-AAAA-DATA       PIC 9999.
BPOA02            07                   PIC X.
BPOA02            07 W-MM-DATA         PIC 99.
BPOA02            07                   PIC X.
BPOA02            07 W-DD-DATA         PIC 99.
BPOA02        05                       PIC X.
BPOA02        05  W-COMODO-ORA.
BPOA02            07 W-HH-ORA          PIC 99.
BPOA02            07                   PIC X.
BPOA02            07 W-MM-ORA          PIC 99.
BPOA02            07                   PIC X.
BPOA02            07 W-SS-ORA          PIC 99.
BPOA02            07                   PIC X.
BPOA02            07 W-NNNN-ORA        PIC 999.
BPOA02     03  W-ORA-COMODO.
BPOA02         05 W-HH-COMODO          PIC 99.
BPOA02         05 W-MM-COMODO          PIC 99.
BPOA02         05 W-SS-COMODO          PIC 99.
BPOA02         05 W-NNNN-COMODO        PIC 999.
BPOA02     03  W-ORA-COMODO-RED REDEFINES
BPOA02                    W-ORA-COMODO PIC 9(9).
      *------------------ AREA CODICI RITORNO DB2
           COPY ZMWSQLRC.
      *------------------ AREA DI COMODO COMUNE
           COPY ZMWCOMUN.
      *------------------ AREA DI COMODO COMUNE PER ERRORI
           COPY ZMWERROR.
      *------------------ AREA DI COMODO ROUTINES
       01  WK-ROUTINES.
      *------------------ AREA DI COMODO PER ZMBSGSCA
           COPY ZMWSGSCA.
      *------------------ AREA DI COMODO PER CONTROLLO DATA
           COPY ZMWCTRDT.
BAVG90*------------------ AREA DI COMODO PER COPY ZMWCOND0
BAVG90     COPY ZMCCOND0.
BAVG90*------------------ AREA DI COMODO PER CONTROLLO NUMERICITA'
BAVG90     COPY ZMWCTRNM.
      *------------------ RIDEFINIZIONI VARCHAR
           COPY ZMWNCSVP.
           COPY ZMWNCSVE.
999999*    COPY ZMWNCSVC.
           COPY ZMWPRSDA.
      *-------------------------- AREA PER REDEFINES ZM.TBWPRKCS
000092     COPY ZMWPRKSC.                                               TS000277
000092     COPY ZMWPRCSC.                                               TS000278
           COPY ZMWPRKCS.
           COPY ZMWPRCLI.
           COPY ZMWRDAT.
           COPY ZMWDMSG.
      *    COPY ZMXPCBIO.
      *------------------ FUNZIONI DLI
           COPY ZMWDLIFU.
      *------------------ AREAE DI COMODO
       01  W-TAB-NPRGMOVP.
           03 W-ELE-NPRGMOVP  OCCURS 50.
              05 W-NUM-PROG-MOV             PIC  S9(04) COMP-3.
              05 W-NUM-PROG-RIG             PIC  S9(03) COMP-3.
              05 W-NUM-PROG-SUB             PIC  S9(01) COMP-3.
       01  W-AREA-COMODO.
000335     03 ME-PARO                       PIC S9(18) VALUE ZEROES.
           03 WRK-RICO                      PIC 9(002) VALUE ZEROES.
           03 WRK-FINE-TI                   PIC X(002) VALUE SPACES.
           03 WRK-DTFIN                     PIC 9(08) VALUE ZEROES.
           03             REDEFINES WRK-DTFIN.
              05  WRK-NN4-DTFIN             PIC 9(04).
              05  WRK-NN3-DTFIN             PIC 9(03).
              05  WRK-NN1-DTFIN             PIC 9(01).
           03 WRK-GGSPS                     PIC S9(4) VALUE ZEROES.
           03 WRK-GG-VISTA                  PIC S9(4) VALUE ZEROES.
           03 WRK-GG-NOVISTA                PIC S9(4) VALUE ZEROES.
           03 IND-KCS                       PIC 9(002).
           03 W-COM-COORD                   PIC X(06) VALUE SPACES.
           03 W-TAPPO                       PIC  9(1) VALUE 0.
           03 W-CAUSA-IMOV                  PIC S9(15)V9(03) VALUE 0.
           03 W-LORDO-IMOV                  PIC S9(15)V9(03) VALUE 0.
           03 W-LORDO-ICTMOV                PIC S9(15)V9(03) VALUE 0.
000172     03 W-LORDO-ICTVLIS               PIC S9(15)V9(03) VALUE 0.
           03 W-NO-TTCECO                   PIC  X(01)    VALUE SPACES.
           03 W-SI-ESCE                     PIC  X(01)    VALUE SPACES.
           03 W-SALTA-AL-SUCCESSIVO         PIC  X(01)    VALUE SPACES.
           03 W-SWN1                        PIC S9(01)    VALUE 0.
           03 W-SWN2                        PIC S9(01)    VALUE 0.
           03 W-SWN3                        PIC S9(01)    VALUE 0.
           03 W-NNDGSET                     PIC  X(16)    VALUE SPACES.
           03 W-TROVATO                     PIC  X(01)    VALUE SPACES.
           03 W-P1-P2                       PIC  X(02)    VALUE SPACES.
           03 W-P1                          PIC  X(01)    VALUE SPACES.
           03 W-P2                          PIC  X(01)    VALUE SPACES.
           03 W-TROVATO-CSTC                PIC  X(02)    VALUE SPACES.
           03 W-TROVATO-MOVC                PIC  X(02)    VALUE SPACES.
           03 W-LAST-LABEL                  PIC  X(04)    VALUE SPACES.
           03 W-COORD-SW                    PIC  X(06)    VALUE SPACES.
           03 W-DIVA                        PIC  X(03)    VALUE SPACES.
000172     03 W-DIVA-IN-OUT                 PIC  9(01)    VALUE ZEROES.
           03 W-DIV                         PIC  9(05)    VALUE 0.
           03 W-COORD-DIV                   PIC  X(06)    VALUE SPACES.
           03 W-CAU                         PIC  9(05)    VALUE 0.
           03 W-COORD-CAU                   PIC  X(06)    VALUE SPACES.
           03 W-CEC                         PIC  9(05)    VALUE 0.
           03 W-COORD-CEC                   PIC  X(06)    VALUE SPACES.
           03 W-DIP                         PIC  9(05)    VALUE 0.
           03 W-COORD-DIP                   PIC  X(06)    VALUE SPACES.
           03 W-COORD-COM                   PIC  X(06)    VALUE SPACES.
           03 W-SW                          PIC  9(05)    VALUE 0.
           03 W-SF                          PIC  9(05)    VALUE 0.
           03 W-COORD-SF                    PIC  X(06)    VALUE SPACES.
           03 W-NDG                         PIC  9(05)    VALUE 0.
           03 WRK-NDG                       PIC  9(02)    VALUE 0.
000107     03 WRK-NDG-X                     PIC  X(16)    VALUE SPACES.
000107     03 WRK-IND-NDG                   PIC  S9(03)   VALUE 0.
000107     03 INDRIC                        PIC  S9(03)   VALUE 0.
           03 W-COORD-NDG                   PIC  X(06)    VALUE SPACES.
           03 W-STC                         PIC  9(05)    VALUE 0.
           03 W-COORD-STC                   PIC  X(06)    VALUE SPACES.
           03 W-RIF                         PIC  9(05)    VALUE 0.
           03 W-COORD-RIF                   PIC  X(06)    VALUE SPACES.
           03 W-QUANDO                      PIC  X(01)    VALUE SPACES.
           03 W-NO-CASI                     PIC  X(02)    VALUE SPACES.
           03 MOVP-NON-TROVATO              PIC  X(02)    VALUE SPACES.
           03 W-ISRT-MOVP                   PIC  X(02)    VALUE SPACES.
           03 W-ISRT-MOVE                   PIC  X(02)    VALUE SPACES.
           03 W-ISRT-MOVC                   PIC  X(02)    VALUE SPACES.
           03 INDP                          PIC  9(05)        VALUE  0.
           03 INDE                          PIC  9(05)        VALUE  0.
           03 INDC                          PIC  9(05)        VALUE  0.
           03 INDX                          PIC  9(05)        VALUE  0.
           03 W-CTR-LETTI                   PIC  9(05)        VALUE  0.
           03 W-DIPOPE                      PIC  9(05)        VALUE  0.
           03 W-CAMBIO                      PIC  S9(11)V9(07) VALUE +0.
           03 W-PNE                         PIC  S9(15)V9(03) VALUE +0.
           03 W-PNI                         PIC  S9(15)V9(03) VALUE +0.
           03 C-PNE                         PIC  S9(15)V9(03) VALUE +0.
           03 C-PNI                         PIC  S9(15)V9(03) VALUE +0.
160697     03 WK-RITE-DEC3                  PIC  S9(15)V9(03) VALUE +0.
           03 WK-COMO-DEC1                  PIC  S9(15)V9(03) VALUE +0.
           03 WK-COMO-DEC2                  PIC  S9(15)V9(03) VALUE +0.
           03 WK-COMO-DEC3                  PIC  S9(11)V9(07) VALUE +0.
           03 WK-COMO-DEC4                  PIC  S9(11)V9(07) VALUE +0.
           03 WK-COMO-DEC5                  PIC  S9(11)V9(07) VALUE +0.
           03 WK-COMO-DEC6                  PIC  S9(11)V9(07) VALUE +0.
           03 W-TROVATA-DIV                 PIC  X(02) VALUE SPACES.
BPL016*    03 W-NUM-TEST                    PIC  9(01) VALUE ZEROS.
BPL016     03 W-NUM-TEST                    PIC  9(02) VALUE ZEROS.
           03 W-SEGNO                       PIC  X(01) VALUE SPACES.
           03 W-DIFF                        PIC  9(05)       VALUE 0.
           03 W-CHI-SQUADRA                 PIC  X(01) VALUE SPACES.
           03 W-CUICBCA                     PIC  9(05)       VALUE 0.
           03 W-LAST-NPRGMOVP               PIC  9(04)       VALUE 0.
           03 W-LAST-NSUBMOVP               PIC  9(01)       VALUE 0.
           03 W-LAST-NPRGRIGA               PIC  9(04)       VALUE 0.
           03 W-NPRGMOVP-CERCA              PIC  9(04)       VALUE 0.
           03 W-NSUBMOVP-CERCA              PIC  9(01)       VALUE 0.
           03 W-CMODUIC                     PIC  9(03)       VALUE 0.
000280     03 W-MOVP-ICTMOV-B-ASS           PIC  9(15)V9(03) VALUE 0.
000280     03 W-MOVP-ICTMOV-C-ASS           PIC  9(15)V9(03) VALUE 0.
000280     03 W-MOVP-ICTVLIS-B-ASS          PIC  9(15)V9(03) VALUE 0.
000280     03 W-MOVP-ICTVLIS-C-ASS          PIC  9(15)V9(03) VALUE 0.
000280     03 W-MOVP-ICTMOV-ASS             PIC  9(15)V9(03) VALUE 0.
000280     03 W-MOVP-ICTVLIS-ASS            PIC  9(15)V9(03) VALUE 0.
           03 W-TOT-ICTMOV-A                PIC S9(15)V9(03) VALUE 0.
           03 W-TOT-ICTMOV-B                PIC S9(15)V9(03) VALUE 0.
           03 W-TOT-ICTMOV-C                PIC S9(15)V9(03) VALUE 0.
           03 W-NOSEGN-ICTMOV-A             PIC  9(15)V9(03) VALUE 0.
           03 W-NOSEGN-ICTMOV-B             PIC  9(15)V9(03) VALUE 0.
000172     03 W-TOT-ICTVLIS-A               PIC S9(15)V9(03) VALUE 0.
000172     03 W-TOT-ICTVLIS-B               PIC S9(15)V9(03) VALUE 0.
000172     03 W-TOT-ICTVLIS-C               PIC S9(15)V9(03) VALUE 0.
000172     03 W-NOSEGN-ICTVLIS-A            PIC  9(15)V9(03) VALUE 0.
000172     03 W-NOSEGN-ICTVLIS-B            PIC  9(15)V9(03) VALUE 0.
           03 WRK-ICTVSPS                   PIC S9(15)V9(03) VALUE 0.
000172     03 WRK-ICTVLISPS                 PIC S9(15)V9(03) VALUE 0.
000172     03 WRK-DIVLIS                    PIC S9(15)V9(03) VALUE 0.
000172     03 WRK-DIVCON                    PIC S9(15)V9(03) VALUE 0.
000172     03 WRK-IMAXSPS                   PIC S9(15)V9(03) VALUE 0.
000172     03 WRK-IMINSPS                   PIC S9(15)V9(03) VALUE 0.
000172     03 WRK-IMAXSPS-C                 PIC S9(15)V9(03) VALUE 0.
000172     03 WRK-IMINSPS-C                 PIC S9(15)V9(03) VALUE 0.
           03 WRK-ISPSVAL                   PIC S9(15)V9(03) VALUE 0.
           03 WRK-ISPSVAL-TRANSIT           PIC S9(15)V9(03) VALUE 0.
APW029     03 WRK-ISPSVAL-TRANSIT-P         PIC S9(10)V9(08) VALUE 0.
000241     03 WRK-ISPSVAL-TRANSIT-A         PIC S9(10)V9(03) VALUE 0.
000241     03 WRK-DIFFERENZA                PIC V9(3) VALUE 0.
000241     03 WRK-DIFFERENZA-X REDEFINES
000241        WRK-DIFFERENZA                PIC X(3).
           03 WRK-CAMBIO-TRANSIT            PIC S9(6)V9(7) VALUE 0.
           03 WRK-DEC-ORD                   PIC 9(01) VALUE ZEROS.
           03 WRK-FORZA-MAX-MIN             PIC X(01) VALUE SPACES.
000172     03 WRK-FORZA                     PIC X(03) VALUE SPACES.
           03 W-COM-ICAU1                   PIC S9(15)V9(03) VALUE 0.
           03 W-COM-ICAU2                   PIC S9(15)V9(03) VALUE 0.
           03 W-COM-ICAU3                   PIC S9(15)V9(03) VALUE 0.
           03 W-COM-QTA                     PIC 9(18) VALUE 0.
           03 W-COMODO-NUM                  PIC 9(18) VALUE 0.
           03 W-EXPERFORM                   PIC X(02) VALUE SPACES.
           03 WRK-CNTR-CAMPO123             PIC X(02) VALUE SPACES.
BPL056     03 WRK-PAETG                     PIC X(02) VALUE SPACES.
           03 W-F-EX                        PIC X(02) VALUE SPACES.
           03 W-FRSD                        PIC 9(01) VALUE ZEROES.
           03 W-TNDGSET                     PIC 9(01) VALUE ZEROES.
           03 W-DECSIGBASE                  PIC 9(01) VALUE ZEROS.
000172     03 W-DECSIGCON                   PIC 9(01) VALUE ZEROS.
           03 W-CSIGDBASE                   PIC X(03) VALUE SPACES.
000172     03 W-CSIGDCON                    PIC X(03) VALUE SPACES.
000172     03 W-PARITAFIS                   PIC S9(06)V9(07) VALUE 0.
000172     03 W-FINOUT                      PIC 9(01) VALUE 0.
           03 W-DIVORD                      PIC X(03) VALUE SPACES.
           03 W-CPCS-MOD                    PIC S9(04) COMP-3 VALUE 0.
           03 W-ERRORE                      PIC X(02) VALUE SPACES.
           03 WRK-TTNDG                     PIC X(03) VALUE SPACES.
           03 WRK-CNTL-OK                   PIC X(02) VALUE SPACES.
           03 W-X                           PIC X(01) VALUE SPACES.
           03 W-IE                          PIC X(03) VALUE SPACES.
           03 W-FCIFSW                      PIC 9(01) VALUE 0.
           03 W-SWFBCH                      PIC X(03) VALUE SPACES.
           03 W-XXXN.
              05 W-XXXN-X                   PIC X(03) VALUE SPACES.
              05 W-XXXN-N                   PIC 9(01) VALUE 0.
           03 W-XXNN.
              05 W-XXNN-X                   PIC X(02) VALUE SPACES.
              05 W-XXNN-N                   PIC 9(02) VALUE 0.
           03 W-XXN.
              05 W-XXN-X                    PIC X(02) VALUE SPACES.
              05 W-XXN-N                    PIC 9(01) VALUE 0.
           03 W-XNN.
              05 W-XNN-X                    PIC X(01) VALUE 'F'.
              05 W-XNN-N                    PIC 9(02) VALUE 0.
           03 W-XN.
              05 W-XN-X                   PIC X(01) VALUE SPACES.
              05 W-XN-N                   PIC 9(01) VALUE 0.
           03 W-NUMOPE                      PIC 9(07) VALUE 0.
           03 WK-NUMOPE                     PIC 9(07) VALUE 0.
           03 WK-DIPOPE                     PIC 9(05) VALUE 0.
           03 W-ICTMOV                      PIC S9(15)V9(03) VALUE 0.
000172     03 W-ICTVLIS                     PIC S9(15)V9(03) VALUE 0.
           03 W-CTR-ASCARA                  PIC 9(07) VALUE 0.
           03 W-OK-NUMOPE                   PIC X(01) VALUE SPACES.
      *
000092*---------------------------                                      TS000434
000092     03 W-AREA-CAUSALI-98.                                        TS000435
000092*---------------------------                                      TS000436
"             05 IND21                   PIC S9(3).                     TS000437
"             05 IND22                   PIC S9(3).                     TS000438
"             05 WRK-C                   PIC  9(1).                     TS000439
000142*       05 WRK-ERRORE              PIC  X(7).                     TS000439
000142        05 WRK-ERRORE              PIC  X(4).                     TS000439
000142        05 WRK-CAUSALE-FISSA       PIC  X(1).                     TS000439
000142        05 MOVC-NON-TROVATO        PIC  X(02).
000092        05 WRK-FINE-WPRKSC         PIC  X(02).                    TS000440
000213        05 WRK-SETTEMITVM          PIC  X(03).
000213        05 WRK-CSIGPAEMIT          PIC  X(02).
000213        05 WRK-SETTCLRES           PIC  X(03).
CAR301        05 WRK-SETTCLRES-9         PIC  9(04).
CAR301        05 WRK-SETTCLRES-4.
CAR301           07 FILLER               PIC  X(01).
CAR301           07 WRK-SETTCLRES-3      PIC  9(03).
000092        05 WRK-FINE-WPRCSC         PIC  X(02).                    TS000441
"             05 WRK-CAUSALI-FISSE       PIC  X(02).                    TS000441
"             05 WRK-NON-DIGITATO        PIC  X(02).                    TS000441
"             05 WRK-MOVIMENTO-TROVATO   PIC  X(02).                    TS000442
"             05 WRK-TROVATO-WPRCSC      PIC  X(02).                    TS000443
"             05 WRK-FLAG-CAU            PIC  9(01).                    TS000444
"             05 WRK-ORDINANTE           PIC  X(16).                    TS000445
"             05 WRK-TTFIG               PIC  X(05).                    TS000446
"             05 WRK-TIPONDG-ORD         PIC  9(01).                    TS000447
"             05 WRK-RESIDENZA-ORD       PIC  9(01).                    TS000448
"             05 WRK-TIPONDG-FIGURA      PIC  9(01).                    TS000449
"             05 WRK-RESIDENZA-FIGURA    PIC  9(01).                    TS000450
"             05 WRK-CTIPSTC             PIC  9(05).                    TS000451
"             05 WRK-STCA                PIC  9(05).                    TS000452
"             05 WRK-STCB                PIC  9(05).                    TS000453
000142        05 WRK-CODABI              PIC  9(05).                    TS000453
000187        05 WRK-WORK-CTIPSTC        PIC  9(05).                    TS000453
"             05 WRK-INOUT               PIC  9(01).                    TS000454
"             05 WRK-PAE                 PIC  X(01).                    TS000455
"             05 WRK-DIVA                PIC  X(03).                    TS000456
"             05 WRK-TIPOA               PIC  9(03).                    TS000457
"             05 WRK-DIVB                PIC  X(03).                    TS000458
"             05 WRK-TIPOB               PIC  9(03).                    TS000459
"             05 WRK-TTRC                PIC  X(03).                    TS000460
"             05 WRK-TTIMPCAU            PIC  X(04).                    TS000461
"             05 WRK-CABIBCA             PIC  9(05).                    TS000462
"             05 WRK-CSIGPAE             PIC  X(02).                    TS000462
000142        05 WRK-SETTORE             PIC  9(03).                    TS000462
000142        05 WRK-CASSA               PIC  X(02).                    TS000462
000142        05 WRK-DIVISA-A            PIC  9(01).                    TS000462
000376*----------------TABELLA PER CAUSALI AUTOMATICHE
000376        05 WRK-CAU-2000-NOMOV.
000376           07 WRK-ELEMENTO OCCURS 10 TIMES.
000377              10 WRK-CAU-2000-NO-NPRGMOVP   PIC 9(04).
000377              10 WRK-CAU-2000-NO-NSUBMOVP   PIC 9(01).
000376        05 WRK-CAU-2000-TABELLA.
000376           07 WRK-ELEMENTO OCCURS 20 TIMES.
000376              10 WRK-CAU-2000-TTRC1        PIC X(2).
000376              10 WRK-CAU-2000-TTPFX        PIC X(3).
000376              10 WRK-CAU-2000-TMOV         PIC 9(1).
000376              10 WRK-CAU-2000-CNATCON      PIC 9(1).
000376              10 WRK-CAU-2000-TTFLAGS      PIC X(2).
000376              10 WRK-CAU-2000-TTFIG        PIC X(5).
000376              10 WRK-CAU-2000-TTCNT2       PIC X(5).
000376              10 WRK-CAU-2000-CSIGPAE      PIC X(2).
000376              10 WRK-CAU-2000-CIST         PIC 9(4).
000376              10 WRK-CAU-2000-DIPOPE       PIC 9(5).
000376              10 WRK-CAU-2000-NUMOPE       PIC 9(7).
000376              10 WRK-CAU-2000-NPRGMOVP     PIC 9(2).
000376              10 WRK-CAU-2000-NSUBMOVP     PIC 9(2).
000376              10 WRK-CAU-2000-CISO         PIC X(3).
000376              10 WRK-CAU-2000-FINOUT       PIC X(3).
000377              10 WRK-CAU-2000-IMOV         PIC S9(15)V9(03).
000376*----------------FLAG DI ATTIVAZIONE CAUSALI 2000
000376        05 WRK-CAU-2000-COMODI.
000377           07 WRK-NOMOV               PIC 9(02).
000376           07 IND-CAU                 PIC 9(02).
000376           07 WRK-IMOVCAU             PIC S9(15)V9(03).
000376           07 WRK-CATTECO             PIC 9(06).
000376           07 WRK-FINE-MOVIMENTI      PIC X(02).
000376           07 WRK-FLAG-CAU-2000       PIC 9(01).
000377           07 WRK-CAU-2000-NDG1       PIC X(02).
000376           07 WRK-CAU-2000-CTIPSTC    PIC 9(05).
000376           07 WRK-CAU-2000-FRSDSTC    PIC 9(01).
000376           07 WRK-CAU-2000-FRSTNDG    PIC 9(01).
000376           07 WRK-CAU-2000-FTPGEST    PIC 9(01).
000376           07 WRK-CAU-2000-CODABI     PIC 9(05).
000376           07 WRK-CAU-2000-SWFNDG     PIC X(04).
000376           07 WRK-CAU-2000-CSTC       PIC 9(05).
BPO115           07 WRK-CSTC-CTP            PIC 9(05).
BPO115           07 WRK-FRSDSTC-CTP         PIC 9(01).
000092*--------------------------------- AREA CASO SVILUPPO CAUSALI     TS000463
"             05 WRK-WPRKSC.                                            TS000464
"     *-------------------------------------------------------------    TS000465
"                07 WRK-KSC-TTCNT2       PIC  X(05).                    TS000466
"                07 WRK-KSC-TTRC1        PIC  X(02).                    TS000467
"     *--------------------------------- AREA CASO SVILUPPO CAUSALI     TS000463
"             05 WRK-WPRCSC.                                            TS000464
"     *-------------------------------------------------------------    TS000465
"                07 WRK-CSC-CPCS         PIC  9(05).                    TS000466
"                07 WRK-CSC-TSGLN        PIC  X(02).                    TS000467
"                07 WRK-CSC-TTINTES      PIC  X(01).                    TS000468
"                07 WRK-CSC-TTCNT1       PIC  X(05).                    TS000469
"                07 WRK-CSC-TTCNT2       PIC  X(05).                    TS000470
"                07 WRK-CSC-TTRESPAE     PIC  X(04).                    TS000471
"                07 WRK-CSC-TTRC1        PIC  X(02).                    TS000472
"                07 WRK-CSC-TTRC2        PIC  X(02).                    TS000473
"                07 WRK-CSC-TTLITVALA    PIC  X(03).                    TS000474
"                07 WRK-CSC-TTLITVALB    PIC  X(03).                    TS000475
000092           07 WRK-CSC-TTFIG        PIC  X(05).                    TS000476
      *                                                                 TS000477
000202*---------------------------
000202     03 W-AREA-RITENUTA.
000202*---------------------------
000202        05 WRK-DATA-DICHIARAZIONE-RIT  PIC 9(8).
000202        05 WRK-DATA-SCADENZA-RIT.
000202           07 WRK-ANNO-SCADENZA-RIT    PIC 9(4).
000202           07 WRK-MESE-SCADENZA-RIT    PIC 9(2).
000202           07 WRK-GIORNO-SCADENZA-RIT  PIC 9(2).
000202        05 WRK-FCAPGAIN-RIT            PIC X(2).
000202        05 WRK-FRSD-RIT                PIC 9(1).
000202        05 WRK-CSIGPAE-RIT             PIC X(2).
000202        05 WRK-INDICATORE-RIT          PIC X(2).
000202        05 WRK-PAESE-RIT               PIC X(2).
000202        05 WRK-CSTC-RIT                PIC 9(5).
000202        05 WRK-CDPZ-RIT                PIC 9(5).
000202        05 WRK-CISO-RIT                PIC X(3).
000202        05 WRK-NNDGSET-RIT             PIC X(16).
000202        05 WRK-NSUFABT-RIT             PIC 9(2).
000202        05 WRK-NPRGOPE-RIT             PIC 9(7).
000344        05 WRK-AUTOCERTIFICAZIONE      PIC 9(2).
      *
000092*--------  AREA CAUSALI-98 - VALORI PREDEFINITI ------            TS000478
"      01 WRK-MAX-KSC    PIC 9(02)   VALUE 20.                          TS000479
"      01 WRK-MAX-CSC    PIC 9(02)   VALUE 30.                          TS000480
000092*------------------------ AREA PER ERRORI SU TABELLA MATRICI -    TS000481
BPO271 01 WCM-ERR-MTX-BP.
BPO271    05                    PIC X(21) VALUE 'CAUSALE INCONGRUENTE '.
BPO271    05                     PIC X(22) VALUE 'CON NATURA OPERAZ.'.
BPO271    05                     PIC X(03) VALUE 'MTX'.
BPO271    05  WCM-MTX-VOCE-BP    PIC X(05) VALUE ZEROES.
BPO271    05                     PIC X(01) VALUE '-'.
BPO271    05  WCM-MTX-SVOCE-BP   PIC 9(02).
000092 01 WCM-ERR-MTX.
000092    05                 PIC X(19) VALUE ' MATRICE  -  VOCE :'.
000092    05  WCM-MTX-VOCE   PIC X(05) VALUE ZEROES.
000092    05  WCM-MTX-DESCR  PIC X(51) VALUE SPACES.
000092    05          REDEFINES   WCM-MTX-DESCR.
000092        07  WCM-MTX-DESCR1   PIC X(15).
000092        07  WCM-MTX-SVOCE    PIC 9(02).
000092        07  WCM-MTX-DESCR2   PIC X(34).
000092        07        REDEFINES WCM-MTX-DESCR2.
000092            09  WCM-MTX-DESCR3   PIC X(08).
000092            09  WCM-MTC-3         PIC X(03).
000092            09  WCM-MTX-DESCR4   PIC X(21).
000092*---------------------------                                      TS000481
BDRTC1*--------------- MODIFICHE TC ---------------------------------
BDRTC1 01  WS-ZFL101901                  PIC  X(003)    VALUE  SPACES.
BDRTC1 01  WS-DECOD-DA                   PIC  X(016)    VALUE  SPACES.
BDRTC1 01  WS-DECOD-A                    PIC  X(016)    VALUE  SPACES.
BDRTC1*
BDRTC1*  COMPONENTI DEL NOME DEL MODELLO
BDRTC1*
BDRTC1 01  WRK-TAB-DA-A                  PIC  X(044)    VALUE
BDRTC1       '04052122252629303334373841424546495053545758'.
BDRTC1 01  FILLER  REDEFINES  WRK-TAB-DA-A.
BDRTC1     03  FILLER    OCCURS  11  TIMES.
BDRTC1         05  ELE-DA                PIC  XX.
BDRTC1         05  ELE-A                 PIC  XX.
BDRTC1*
BDRTC1 01  WRK-TAB-TAGLIO-QTA            PIC  X(044)    VALUE
BDRTC1       '02031920232427283132353639404344474851525556'.
BDRTC1 01  FILLER  REDEFINES  WRK-TAB-TAGLIO-QTA.
BDRTC1     03  FILLER    OCCURS  11  TIMES.
BDRTC1         05  ELE-TAGLIO            PIC  XX.
BDRTC1         05  ELE-QTA               PIC  XX.
BDRTC1*
BDRTC1 01  IDX-DA                        PIC  9(005)  VALUE  ZEROES.
BDRTC1 01  MAX-IDX-DA                    PIC  9(005)  VALUE  11.
BDRTC1*
BDRTC1*  VALORI DEI CAMPI DEL MODELLO
BDRTC1*
BDRTC1 01  WRK-TAB-TRANCE.
BDRTC1     03  FILLER    OCCURS  11  TIMES.
BDRTC1         05  TRANCE-DA             PIC  X(016).
BDRTC1         05  TRANCE-A              PIC  X(016).
BDRTC1         05  TRANCE-TAGLIO         PIC  9(005)V9(003).
BDRTC1         05  TRANCE-QTA            PIC  9(005).
BDRTC1*
BDRTC1 01  IDX-TRA                       PIC  9(005)  VALUE  ZEROES.
BDRTC1 01  MAX-IDX-TRA                   PIC  9(005)  VALUE  11.
BDRTC1*
BDRTC1 01  FILLER.
BDRTC1     COPY  ZMWNUMTC.
BDRTC1*
BDRTC1     COPY  ZMWNRCAR.
      *
           EXEC SQL INCLUDE ZMICOMUN END-EXEC.
      *---------------------------                                      TS000481
           EXEC SQL INCLUDE SQLCA END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBWCONFG
120297     EXEC SQL INCLUDE ZMGCONFG END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBTZINTE
120297     EXEC SQL INCLUDE ZMGZINTE END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBTTKCSV( WPRKCS)
           EXEC SQL INCLUDE ZMGPRKCS  END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBTTCSVI
           EXEC SQL INCLUDE ZMGTCSVI END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBWPRCLI
           EXEC SQL INCLUDE ZMGPRCLI END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBWNCSVP
           EXEC SQL INCLUDE ZMGNCSVP END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBWNCSVE
           EXEC SQL INCLUDE ZMGNCSVE END-EXEC.
999999*----------------  TRACCIATO RECORD TABELLA ZM.TBWNCSVC
999999*    EXEC SQL INCLUDE ZMGNCSVC END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBAMOVP
           EXEC SQL INCLUDE ZMGMOVP  END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBAMOVC
           EXEC SQL INCLUDE ZMGMOVC  END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBAMOVE
           EXEC SQL INCLUDE ZMGMOVE   END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBADISTI
           EXEC SQL INCLUDE ZMGDISTI  END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBAOPE
           EXEC SQL INCLUDE ZMGOPE    END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBTAPROC
           EXEC SQL INCLUDE ZMGAPROC  END-EXEC.
000041*----------------  TRACCIATO RECORD TABELLA ZM.TBTUTENO
000041*    EXEC SQL INCLUDE ZMGUTENO  END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBASCARA
           EXEC SQL INCLUDE ZMGSCARA  END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBARAPP
           EXEC SQL INCLUDE ZMGRAPP   END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBTABSC
           EXEC SQL INCLUDE ZMGABSC   END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBTACAOP
           EXEC SQL INCLUDE ZMGACAOP  END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBTISTI
           EXEC SQL INCLUDE ZMGISTI   END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBAINDRA
           EXEC SQL INCLUDE ZMGINDRA  END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBANAIND
           EXEC SQL INCLUDE ZMGNAIND  END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBADIV
           EXEC SQL INCLUDE ZMGDIV    END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBALICMB
           EXEC SQL INCLUDE ZMGLICMB  END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBAAUTAV
           EXEC SQL INCLUDE ZMGAUTAV  END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBTCAUSC
           EXEC SQL INCLUDE ZMGCAUSC  END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBTCAUIC
           EXEC SQL INCLUDE ZMGCAUIC  END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBTTRERR
           EXEC SQL INCLUDE ZMGTRERR  END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBARDAT
           EXEC SQL INCLUDE ZMGRDAT   END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBWPRSDA
           EXEC SQL INCLUDE ZMGPRSDA  END-EXEC.
      *----------------  TRACCIATO RECORD TABELLA ZM.TBANONIM(163)
           EXEC SQL INCLUDE ZMGNONIM  END-EXEC.
000202*----------------  TRACCIATO RECORD TABELLA ZM.TBTPAE(215)
000202     EXEC SQL INCLUDE ZMGPAE    END-EXEC.
000202*----------------  TRACCIATO RECORD TABELLA ZM.TBANAPOS(108)
000202     EXEC SQL INCLUDE ZMGNAPOS  END-EXEC.
000202*----------------  TRACCIATO RECORD TABELLA ZM.TBTALQRC(281)
000202     EXEC SQL INCLUDE ZMGALQRC  END-EXEC.
000202*----------------  TRACCIATO RECORD TABELLA ZM.TBATRTRC(187)
000202     EXEC SQL INCLUDE ZMGTRTRC  END-EXEC.
020797*------------------  TRACCIATO RECORD TABELLA ZM.TBAFOREX (102)
020797     EXEC SQL INCLUDE ZMGFOREX END-EXEC.
000092*------------------  TRACCIATO RECORD TABELLA ZM.TBTABCEC (205)   TS000549
000092     EXEC SQL INCLUDE ZMGABCEC END-EXEC.                          TS000550
000092*------------------  TRACCIATO RECORD TABELLA ZM.TBTTCAEC (2--)   TS000551
000092     EXEC SQL INCLUDE ZMGTCAEC END-EXEC.                          TS000552
000092*------------------  TRACCIATO RECORD TABELLA ZM.TBTCAUFX (273)   TS000553
000092     EXEC SQL INCLUDE ZMGTCAUF END-EXEC.                          TS000554
000092*------------------  TRACCIATO RECORD TABELLA ZM.TBWPRCSC (274)   TS000555
000092     EXEC SQL INCLUDE ZMGPRCSC END-EXEC.                          TS000556
000092*------------------  TRACCIATO RECORD TABELLA ZM.TBWPRKSC (275)   TS000557
000092     EXEC SQL INCLUDE ZMGPRKSC END-EXEC.                          TS000558
000092*------------------  TRACCIATO RECORD TABELLA ZM.TBTTOBSG (2--)   TS000559
000092     EXEC SQL INCLUDE ZMGTOBSG END-EXEC.                          TS000560
000092*------------------  TRACCIATO RECORD TABELLA ZM.TBTOBMTX (277)   TS000561
000092     EXEC SQL INCLUDE ZMGOBMTX END-EXEC.                          TS000562
000172*------------------  TRACCIATO RECORD TABELLA ZM.TBTRPEUR (282)   TS000561
000172     EXEC SQL INCLUDE ZMGRPEUR END-EXEC.                          TS000562
BPO313*------------------  TRACCIATO RECORD TABELLA ZM.TBTRACPA         01192100
BPO313     EXEC SQL INCLUDE ZMGRACPA END-EXEC.                          01192200
BPO313*------------------  TRACCIATO RECORD TABELLA ZM.TBTRACEC         01192300
BPO313     EXEC SQL INCLUDE ZMGRACEC END-EXEC.                          01192400
      *---------------------------------------------------------------*
      *  DICHIARAZIONI DEI CURSORI PER LE LETTURE DB2                 *
      *---------------------------------------------------------------*
      *----------------  DECLARE CURSOR CUR1 PER TABELLA TBASCARA
           EXEC SQL INCLUDE ZMC10701  END-EXEC.
      *----------------  DECLARE CURSOR CUR2 PER TABELLA TBASCARA
           EXEC SQL INCLUDE ZMC10705  END-EXEC.
999999*----------------  DECLARE CURSOR CUR3 PER TABELLA TBWNCSVC
999999*    EXEC SQL INCLUDE ZMC32301  END-EXEC.
      *----------------  DECLARE CURSOR CUR4 PER TABELLA TBWNCSVP
           EXEC SQL INCLUDE ZMC32101  END-EXEC.
      *----------------  DECLARE CURSOR CUR5 PER TABELLA TBWNCSVE
           EXEC SQL INCLUDE ZMC32201  END-EXEC.
      *----------------  DECLARE CURSOR CUR6 PER TABELLA TBAMOVP
           EXEC SQL INCLUDE ZMC11620  END-EXEC.
      *----------------  DECLARE CURSOR CUR7 PER TABELLA TBAMOVE
           EXEC SQL INCLUDE ZMC11910  END-EXEC.
      *----------------  DECLARE CURSOR CUR8 PER TABELLA TBAMOVC
           EXEC SQL INCLUDE ZMC12010  END-EXEC.
      *----------------  DECLARE CURSOR CUR9 PER TABELLA TBADISTI
           EXEC SQL INCLUDE ZMC11817  END-EXEC.
      *----------------  DECLARE CURSOR CUR10 PER TABELLA TBALICMB
           EXEC SQL INCLUDE ZMC10612  END-EXEC.
000092*----------------  DECLARE CURSOR CUR11 PER TABELLA TBWPRKSC      TS000586
000092     EXEC SQL INCLUDE ZMC27501  END-EXEC.                         TS000587
000092*----------------  DECLARE CURSOR CUR12 PER TABELLA TBWPRCSC      TS000588
000092     EXEC SQL INCLUDE ZMC27401  END-EXEC.                         TS000589
000092*                                                                 TS000590
000202*----------------  DECLARE CURSOR CUR19 PER TABELLA TBTALQRC
000202     EXEC SQL INCLUDE ZMC28101  END-EXEC.
      *
       LINKAGE SECTION.
      *
       01  DFHCOMMAREA.
           COPY ZMWLINKA.
           COPY ZMWCP001.
           COPY ZMWCP002.
           COPY ZMWCP003.
           COPY ZMWCP004.
           COPY ZMWCP005.
           COPY ZMWCP006.
           COPY ZMWCP007.
           COPY ZMWCP008.
           COPY ZMWCP009.
           COPY ZMWCP010.
           COPY ZMWCP011.
           COPY ZMWCP012.
           COPY ZMWCP013.
           COPY ZMWCP014.
           COPY ZMWCP015.
           COPY ZMWCP016.
           COPY ZMWCP017.
           COPY ZMWCP018.
           COPY ZMWCP019.
           COPY ZMWCP020.
           COPY ZMWCP021.
           COPY ZMWCP022.
           COPY ZMWCP023.
           COPY ZMWCP024.
      *
           EXEC SQL INCLUDE ZMYPROCE END-EXEC.
      *
           PERFORM 0000-INIZIO-PGM
              THRU 0000-INIZIO-PGM-END.
      *
           PERFORM 0050-LEGGI-WPRKCS
              THRU 0050-LEGGI-WPRKCS-END.
           IF W-NO-CASI = 'SI'
              MOVE ZEROES TO W-SQLCODE
              PERFORM 0150-ELABORA-DA-TTCLI
                 THRU 0150-ELABORA-DA-TTCLI-END
           ELSE
              INITIALIZE ZMWPRKCS
BPEL26        IF PRKCS-WTABKCS-LEN GREATER ZEROES
                 MOVE PRKCS-WTABKCS-TEXT(1:PRKCS-WTABKCS-LEN)
                                       TO ZMWPRKCS
BPEL26        END-IF
              PERFORM 0100-ELABORA-WPRKCS
                 THRU 0100-ELABORA-WPRKCS-END
                    VARYING IND-KCS FROM 1 BY 1
                       UNTIL IND-KCS GREATER W-MAX-KCS
                          OR WPRKCS-WTAB(IND-KCS) NOT GREATER SPACES
                          OR L-ERR-ERR OR W-EXIT.


APV255*-------------------------- CONTROLLO SE CI SONO ERRORI BLOCCANTI
APV255     IF L-COD-ERR-TAB GREATER SPACES
APV255        MOVE SPACES TO W-CONTROLLO
APV255        PERFORM VARYING IND10 FROM 1 BY 1
APV255          UNTIL IND10 > W-MAX-ERR
APV255             OR WCM-FINE-ERRORI = 'SI'
APV255
APV255          IF L-MAP-ERR(IND10) NOT GREATER SPACES
APV255             MOVE 'SI'          TO WCM-FINE-ERRORI
APV255          ELSE
APV255             IF L-MAP-ERR (IND10) NOT = 'A'
APV255                MOVE 'SI'       TO W-CONTROLLO
APV255             END-IF
APV255          END-IF
APV255        END-PERFORM
APV255     END-IF

120297     IF NOT L-ERR-ERR
120297     AND L-FASE GREATER 1
APV255     AND W-CONTROLLO = SPACES
120297        IF CONFG-FRCVS0 = 'S'
BPO741           IF WRK-FLAG-ABROG = 'T' AND
BPO741              CONFG-DATA-ABROG GREATER ZEROES
BPO741              IF MOVP-DVALNOA > CONFG-DATA-ABROG
BPO741                 NEXT SENTENCE
BPO741             END-IF
BPO741           ELSE
120297           MOVE 'ZMBRCVS0'  TO  ZINTE-CINTERF
APE003*          DISPLAY 'CI PASSO'
120297           PERFORM LEGGI-TZINTE
120297              THRU LEGGI-TZINTE-END
120297           IF W-SQL-OK
120297              MOVE ZINTE-WCINTERF  TO  WCM-CHIAMATO
120297              EXEC SQL INCLUDE ZMYCALLL END-EXEC
120297           END-IF
120297        END-IF
120297     END-IF.

           EXEC SQL INCLUDE ZMYGOBAK END-EXEC.
      *-----------------------------------------------------
      *    INIZIO ROUTINES
      *-----------------------------------------------------
       0000-INIZIO-PGM.
           INITIALIZE WCM-AREA-VARIABILE.
           INITIALIZE DCLTBAOPE.
           INITIALIZE W-TAB-IND.
           INITIALIZE W-AREA-COMODO.
           INITIALIZE W-TAB-NPRGMOVP.
           INITIALIZE WK-ROUTINES.
           INITIALIZE WRK-TAB-RIGA-MOVC.
           INITIALIZE WRK-TAB-RIGA-INDRA.
000307     INITIALIZE WRK-COMODO.
000388     INITIALIZE WRK-AREA-LAVORO.
000388     INITIALIZE WRK-SINGOLO.
000388     INITIALIZE WRK-MOVIMENTI-MULTIPLI.
           MOVE ALL ' '                          TO WS-DCLTBAMOVP.
           MOVE ALL ' '                          TO WS-DCLTBAMOVE.
           MOVE ALL ' '                          TO WS-DCLTBAMOVC.
           MOVE ALL ' '                          TO W-TAB-TABSC.
           MOVE 'NO'                             TO W-FLAG-EXIT.
           MOVE 'ZAA170101'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO W-CIST
           MOVE 'ZAA170201'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO W-DIPOPE.
           MOVE 'ZAA170601'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO PRKCS-CPCS
                                                    W-CPCS-MOD.
           MOVE 'ZAA170901'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO W-CSIGDBASE.
000172*------------------------------FORMATTA MODELLO PER PRELEVARE
000172*-----------------------------CSIGDCON (CODICE DIVISA CONTABILITA)
000172     MOVE 'ZAA173001'                    TO W-DECOD.
000172     COPY ZMZINDIR.
000172     MOVE MOD(M-I(IND1):M-L(IND1))       TO W-CSIGDCON.
           MOVE 'ZOR030201'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO W-DIVORD.
000172*------------------------------FORMATTA MODELLO PER PRELEVARE
000172*-----------------------------I DECIMALI DELLA DIVISA CONTABILITA
000172     MOVE 'ZAA173101'                      TO W-DECOD.
000172     COPY ZMZINDIR.
000172     COPY ZMZVALNM.
000172     MOVE W-COM-NUM                        TO W-DECSIGCON.

           MOVE 'ZAA171001'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO W-DECSIGBASE.

000172*------------------------------------------------PARITA' FISSA
000172     MOVE 'ZAA173601'     TO W-DECOD.
000172     COPY ZMZINDIR.
000172     COPY ZMZVALNM.
000172     COMPUTE W-PARITAFIS = W-COM-NUM / (10 ** M-D(IND1))
           INITIALIZE WRK-UPDATE.
           IF L-NUMOPE > ZEROS
              MOVE 'S'  TO WRK-UPDATE-AOPE
              MOVE 'S'  TO WRK-UPDATE-ARDAT
              PERFORM 1400-INTAB-NUMMOV
                 THRU 1400-INTAB-NUMMOV-END
           END-IF.
           MOVE L-AREA-IST                     TO DCLTBTISTI.
           MOVE L-AREA-APROC                   TO DCLTBTAPROC.
           MOVE L-AREA-CONFG                   TO DCLTBWCONFG.
           MOVE CONFG-ALTRIFLAG                TO ZMWCONFG.
EUR001     MOVE CONFG-ALTRIFLAG2               TO WCONFG-ALTRIFLAG2.
EUR001     MOVE CONFG-ALTRIFLAG3               TO WCONFG-ALTRIFLAG3.
BPEL68*TIPO QUOTAZIONE-------------
BPEL68     MOVE 'ZAA173301'    TO W-DECOD
BPEL68     COPY ZMZINDIR.
BPEL68     COPY ZMZVALNM.
BPEL68     COMPUTE WRK-CTV00-TQUOLIS = W-COM-NUM / (10 ** M-D(IND1))
BPEL68*PARITA' FISSA---------------
BPEL68     MOVE 'ZAA173601'     TO W-DECOD
BPEL68     COPY ZMZINDIR.
BPEL68     COPY ZMZVALNM.
BPEL68     MOVE W-COM-NUM     TO  WRK-CTV00-PARITA
BPEL68     COMPUTE WRK-CTV00-PARITA-INT = M-L(IND1) - M-D(IND1)
BPEL68     MOVE M-D(IND1)     TO WRK-CTV00-PARITA-DEC.
APE001     MOVE 'ZRA093101'                    TO W-DECOD
APE001     COPY ZMZINDIR.
APE001     MOVE MOD(M-I(IND1):M-L(IND1))       TO W-CPROD.
APE001     MOVE 'ZOP021401'                    TO W-DECOD
APE001     COPY ZMZINDIR.
APE001     MOVE MOD(M-I(IND1):M-L(IND1))       TO W-TPCOLL.
      *------------------------------------------- ORA INIZIO TRANS.
BPOA02     MOVE W-TIME            TO W-COMODO-TIME.
BPOA02     MOVE W-HH-ORA          TO W-HH-COMODO.
BPOA02     MOVE W-MM-ORA          TO W-MM-COMODO.
BPOA02     MOVE W-SS-ORA          TO W-SS-COMODO.
BPOA02     MOVE W-NNNN-ORA        TO W-NNNN-COMODO.
BPOA02     MOVE 'ZOP020801'       TO W-DECOD.
BPOA02     COPY ZMZINDIR.
BPOA02     COMPUTE W-COM1 = W-ORA-COMODO-RED * (10 ** M-D(IND1)).
BPOA02     COPY ZMZFMMOD.
BPOA02     .
       0000-INIZIO-PGM-END.
           EXIT.
BPOA02 0050-PRELEVA-TIMESTAMP.
BPOA02
BPOA02        MOVE W-CIST TO  ISTI-CIST.
BPOA02
BPOA02        EXEC SQL INCLUDE ZMS20402 END-EXEC
BPOA02
BPOA02        IF NOT W-SQL-OK
BPOA02           MOVE 8                          TO W-FLAG-ERR
BPOA02           MOVE '9999'                     TO W-COD-ERR
BPOA02           MOVE 'TBTISTI '                 TO L-NOME-TABELLA
BPOA02           MOVE W-SQLCODE                  TO L-CODICE-SQL
BPOA02           MOVE 'ZMBCLIC0'                 TO L-MODULO
BPOA02           MOVE '0050-PRELEVA-TIMESTAMP'   TO L-SUB-MODULO
BPOA02           PERFORM 9999-GESTIONE-ERRORE
BPOA02              THRU 9999-GESTIONE-ERRORE-END
BPOA02        END-IF.
BPOA02
BPOA02 0050-PRELEVA-TIMESTAMP-END.
BPOA02     EXIT.
      *
       0050-LEGGI-WPRKCS.
           EXEC SQL INCLUDE ZMS22601 END-EXEC.
           IF W-SQL-NON-TROVATO
              MOVE 'SI'                          TO W-NO-CASI
              MOVE ZEROS                         TO TCSVI-TTNCPATR
              MOVE ZEROS                         TO TCSVI-TTNCECON
              MOVE ZEROS                         TO TCSVI-TTNCCAU
           ELSE
              IF NOT W-SQL-OK
                 MOVE 8                          TO W-FLAG-ERR
                 MOVE '9999'                     TO W-COD-ERR
                 MOVE 'TBWPRKCS'                 TO L-NOME-TABELLA
                 MOVE W-SQLCODE                  TO L-CODICE-SQL
                 MOVE 'ZMBSVIL0'                 TO L-MODULO
                 MOVE '0050-LEGGI-WPRKCS'        TO L-SUB-MODULO
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
       0050-LEGGI-WPRKCS-END.
           EXIT.
      *------------------------------------------------------------
      * ELABORAZIONE DAL PASSO    TTCLI
      *------------------------------------------------------------
       0150-ELABORA-DA-TTCLI.
      *-------------------------------------- PER LE ALTRE RICORRENZE
      *-------------------------------------- ESEGUE DAL PASSO 5
           IF IND-KCS GREATER 1 AND
              APROC-PCSMUL NOT GREATER SPACES
              MOVE   '0600'                TO W-CICLO
           ELSE
              MOVE   '0400'                TO W-CICLO
           END-IF.
           PERFORM  UNTIL L-ERR-ERR OR W-EXIT
              EVALUATE W-CICLO
                 WHEN '0400'
                    PERFORM 0400-REGISTRA-OPE
                       THRU 0400-REGISTRA-OPE-END
                    IF W-NO-CASI = 'SI'
                       MOVE '1500'               TO W-CICLO
                    ELSE
                       MOVE '0500'               TO W-CICLO
                    END-IF
                 WHEN '0500'
000377              MOVE ZEROES     TO WRK-NOMOV
                    PERFORM 0500-REGISTRA-MOV
                       THRU 0500-REGISTRA-MOV-END
                    MOVE   '0600'                TO W-CICLO
      *------------------------------------------------- PASSO 5
                 WHEN '0600'
                    PERFORM 0600-REGISTRA-MOVP
                       THRU 0600-REGISTRA-MOVP-END
BPEL26*             IF M-S(IND-COM) = 'E'
BPEL26              IF IND-COM GREATER ZEROES AND M-S(IND-COM) = 'E'
                       MOVE 'SI'               TO W-FLAG-EXIT
                    ELSE
                       IF TCSVI-TTNCPATR NOT > 0
                          MOVE '1500'               TO W-CICLO
                       ELSE
                          MOVE   '0800'             TO W-CICLO
                       END-IF
                    END-IF
                 WHEN '0800'
      *------------------------------------------------- PASSO 6
                    IF L-FASE GREATER 1
                       PERFORM 0800-MOVIM-ECON
                          THRU 0800-MOVIM-ECON-END
BPL007*                IF M-S(IND-COM) NOT = 'E'
TAE007*                IF  IND-COM GREATER ZEROES
TAE007*                AND M-S(IND-COM) NOT = 'E'
TAE377*                   IF WRK-FLAG-CAU-2000 = 1
TAE377*                      PERFORM 0680-CAUSALI-AUTOMATICHE
TAE377*                         THRU 0680-CAUSALI-AUTOMATICHE-END
TAE377*                   END-IF
TAE377*                END-IF
                    END-IF
000172              MOVE '0900'               TO W-CICLO
000172           WHEN '0900'
000172              IF L-FASE GREATER 1
000172                 PERFORM 0900-MOV-PATRIM-DIVISE-IN
000172                    THRU 0900-MOV-PATRIM-DIVISE-IN-END
000172              END-IF
TAE   *             MOVE '1000'               TO W-CICLO
TAE                 MOVE '1100'               TO W-CICLO
                 WHEN '1000'
      *------------------------------------------------- PASSO 7
BDR...              IF L-FASE GREATER 1
                       PERFORM 1000-CAU-VALUT
                          THRU 1000-CAU-VALUT-END
BDR...              END-IF
                    MOVE   '1100'                TO W-CICLO
                 WHEN '1100'
      *------------------------------------------------- PASSO 8
                    IF L-FASE GREATER 1
                       PERFORM 1100-QUADRATURA
                          THRU 1100-QUADRATURA-END
000172                 PERFORM 1600-QUADRATURA-DVLIS
000172                    THRU 1600-QUADRATURA-DVLIS-END
                    END-IF
                    MOVE   '1500'                TO W-CICLO
                 WHEN '1500'
      *------------------------------------------------- PASSO 9
                    PERFORM 1500-ELABORA-TTCLI
                       THRU 1500-ELABORA-TTCLI-END
                    IF (W-NO-CASI = 'SI') OR
                       (W-SI-ESCE = 'S')
                       MOVE '3000'               TO W-CICLO
                    ELSE
                       MOVE '2000'               TO W-CICLO
                    END-IF
                 WHEN '2000'
                    PERFORM 2000-INSERIMENTI
                       THRU 2000-INSERIMENTI-END
                    MOVE   '3000'                TO W-CICLO
                 WHEN '3000'
                    PERFORM 3000-SALVA-DATI
                       THRU 3000-SALVA-DATI-END
                    MOVE 'SI'                    TO W-FLAG-EXIT
              END-EVALUATE
           END-PERFORM.
       0150-ELABORA-DA-TTCLI-END.
           EXIT.
      *------------------------------------------------------------
      * ELABORAZIONE DELLA TABELLA WPRKCS
      *------------------------------------------------------------
       0100-ELABORA-WPRKCS.
           MOVE '0200'               TO W-CICLO.
           IF IND-KCS = 2
              IF APROC-PCSMUL NOT GREATER SPACES
                 MOVE 'SI'                       TO W-FLAG-EXIT
                 MOVE 'E'                        TO M-S(IND-COM)
                 MOVE M-M(IND-COM)               TO W-MAP-ERR
                 MOVE W-COM-COORD                TO W-MOD-ERR
                 MOVE 'S084'                     TO W-COD-ERR
                 MOVE 'SI'                       TO W-FLAG-EXIT
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
                 GO TO 0100-ELABORA-WPRKCS-END
              ELSE
      *-------------------------------------- PER LE ALTRE RICORRENZE
      *-------------------------------------- ESEGUE IL PASSO 2
                 MOVE '0300'            TO W-CICLO.
           PERFORM  UNTIL L-ERR-ERR OR W-EXIT
              EVALUATE W-CICLO
                 WHEN '0200'
      *---------------------------------------------- PASSO 1
                    PERFORM 0200-CASI-SVILUPPO
                       THRU 0200-CASI-SVILUPPO-END
                    MOVE '0300'         TO W-CICLO
                 WHEN '0300'
      *---------------------------------------------- PASSO 2
                    PERFORM 0300-LEGGI-TTCSVI
                       THRU 0300-LEGGI-TTCSVI-END
                    MOVE '0400'         TO W-CICLO
                 WHEN '0400'
                    PERFORM 0150-ELABORA-DA-TTCLI
                       THRU 0150-ELABORA-DA-TTCLI-END
                    MOVE 'SI'           TO W-FLAG-EXIT
              END-EVALUATE
           END-PERFORM.
       0100-ELABORA-WPRKCS-END.
           EXIT.
      *------------------------------------------------------------
      * ELABORAZIONE DELLA TABELLA WPRKCS
      *------------------------------------------------------------
       0200-CASI-SVILUPPO.
           PERFORM 0205-ESAMINA-ZOP022101
              THRU 0205-ESAMINA-ZOP022101-END.
           PERFORM 0210-ESAMINA-TTSPECPCS
              THRU 0210-ESAMINA-TTSPECPCS-END.
           PERFORM 0215-ESAMINA-TTSPEIE
              THRU 0215-ESAMINA-TTSPEIE-END.
           PERFORM 0220-ESAMINA-TTDIVA
              THRU 0220-ESAMINA-TTDIVA-END.
           PERFORM 0225-ESAMINA-TTDIVB
              THRU 0225-ESAMINA-TTDIVB-END.
           PERFORM 0230-ESAMINA-TTDIVC
              THRU 0230-ESAMINA-TTDIVC-END.
           PERFORM 0235-ESAMINA-TTDIVD
              THRU 0235-ESAMINA-TTDIVD-END.
           PERFORM 0240-ESAMINA-TTDIVE
              THRU 0240-ESAMINA-TTDIVE-END.
           PERFORM 0245-ESAMINA-TTPADEB
              THRU 0245-ESAMINA-TTPADEB-END.
           PERFORM 0250-ESAMINA-TTPACRE
              THRU 0250-ESAMINA-TTPACRE-END.
           PERFORM 0255-ESAMINA-TTSTCA
              THRU 0255-ESAMINA-TTSTCA-END.
           PERFORM 0260-ESAMINA-TTSTCB
              THRU 0260-ESAMINA-TTSTCB-END.
           PERFORM 0265-ESAMINA-TTSTCC
              THRU 0265-ESAMINA-TTSTCC-END.
           PERFORM 0270-ESAMINA-TTSTCD
              THRU 0270-ESAMINA-TTSTCD-END.
           PERFORM 0275-ESAMINA-TTSTCE
              THRU 0275-ESAMINA-TTSTCE-END.
       0200-CASI-SVILUPPO-END.
           EXIT.
       0205-ESAMINA-ZOP022101.
           MOVE 'ZOP022101'   TO W-DECOD
           COPY ZMZINDIR.
000104***--- TOGLIE GLI ZERI NON SIGNIFICATIVI A SINISTRA
BPEL26     IF MOD(M-I(IND1):M-L(IND1)) > SPACES
000104        MOVE MOD(M-I(IND1):M-L(IND1))  TO  WRK-NDG-X
000104        PERFORM VARYING INDRIC FROM 1 BY 1
000104          UNTIL INDRIC > M-L(IND1)
BPEL26*         OR (WRK-NDG-X (INDRIC:1) > '0' AND SPACES)
BPEL26             OR WRK-NDG-X (INDRIC:1) > SPACES
000104        END-PERFORM
000104        COMPUTE WRK-IND-NDG = (M-L(IND1) - INDRIC) + 1
000104        MOVE SPACES         TO  MOD(M-I(IND1):M-L(IND1))
000104        MOVE WRK-NDG-X(INDRIC:WRK-IND-NDG)
000104                            TO MOD(M-I(IND1):M-L(IND1))
BPEL26     END-IF
           MOVE IND1          TO IND2
           MOVE 'ZOR031801'   TO W-DECOD
           COPY ZMZINDIR.
      *------------------------------------- SE ZOP022101 = ZOR031801
           IF MOD(M-I(IND2):M-L(IND2)) = MOD(M-I(IND1):M-L(IND1))
              MOVE 'ZOR031901'         TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM           TO W-SWN1
              MOVE 'ZOR032501'         TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM           TO W-SWN2
              IF W-SWN1 = 1 AND
                 W-SWN2 = 1
                 MOVE 'ZOP022201'      TO W-DECOD
                 COPY ZMZINDIR.
                 MOVE '1'              TO MOD(M-I(IND1):M-L(IND1))
              END-IF
              IF W-SWN1 = 2 AND
                 W-SWN2 = 1
                 MOVE 'ZOP022201'    TO W-DECOD
                 COPY ZMZINDIR.
                 MOVE '3'            TO MOD(M-I(IND1):M-L(IND1))
              END-IF
              IF W-SWN1 = 1 AND
                 W-SWN2 = 2
                 MOVE 'ZOP022201'                      TO W-DECOD
                 COPY ZMZINDIR.
                 MOVE '2'  TO MOD(M-I(IND1):M-L(IND1))
              END-IF
              IF W-SWN1 = 2 AND
                 W-SWN2 = 2
                 MOVE 'ZOP022201'                      TO W-DECOD
                 COPY ZMZINDIR.
                 MOVE '4'  TO MOD(M-I(IND1):M-L(IND1))
              END-IF
           END-IF.
           MOVE 'ZOP022101'   TO W-DECOD
           COPY ZMZINDIR.
           MOVE IND1          TO IND2
           MOVE SPACES        TO W-TROVATO
      *------------------------------------- SE ZOP022101 = ZOR031801
           PERFORM
              VARYING IND9 FROM 1 BY 1
                 UNTIL IND9 > WCM-INDMAX(06) OR
                       W-TROVATO = 'S'
                    MOVE 'ZND060101'                 TO W-DECOD
                    MOVE IND9                        TO C
                    COPY ZMZINDIR.
                    MOVE IND1                        TO IND3
      *--------------------------------------------------------------
      * IND2       INDIRIZZA  "ZOP022101"
      * IND3       INDIRIZZA  "ZND0601XX"
      * IND5       INDIRIZZA  "ZND0602XX"
      * IND6       INDIRIZZA  "ZND0608XX"
      *--------------------------------------------------------------
      *--------------------------------- SE ZOP022101 = ZND010101/10
                   IF MOD(M-I(IND2):M-L(IND2)) =
                                       MOD(M-I(IND1):M-L(IND1))
                      MOVE 'S'                      TO W-TROVATO
                      MOVE 'ZND060201'              TO W-DECOD
                      MOVE IND9                     TO C
                      COPY ZMZINDIR.
                      COPY ZMZVALNM.
                      MOVE W-COM-NUM                TO W-SWN1
                      MOVE 'ZND060801'              TO W-DECOD
                      MOVE IND9                     TO C
                      COPY ZMZINDIR.
                      COPY ZMZVALNM.
                      MOVE W-COM-NUM                TO W-SWN2
                      IF W-SWN1 = 1 AND
                         W-SWN2 = 1
                         MOVE 'ZOP022201'           TO W-DECOD
                         COPY ZMZINDIR.
                         MOVE '1'                   TO
                                           MOD(M-I(IND1):M-L(IND1))
                      END-IF
                      IF W-SWN1 = 2 AND
                         W-SWN2 = 1
                         MOVE 'ZOP022201'           TO W-DECOD
                         COPY ZMZINDIR.
                         MOVE '3'                   TO
                                           MOD(M-I(IND1):M-L(IND1))
                      END-IF
                      IF W-SWN1 = 1 AND
                         W-SWN2 = 2
                         MOVE 'ZOP022201'           TO W-DECOD
                         COPY ZMZINDIR.
                         MOVE '2'                   TO
                                           MOD(M-I(IND1):M-L(IND1))
                      END-IF
                      IF W-SWN1 = 2 AND
                         W-SWN2 = 2
                         MOVE 'ZOP022201'           TO W-DECOD
                         COPY ZMZINDIR.
                         MOVE '4'                   TO
                                            MOD(M-I(IND1):M-L(IND1))
                      END-IF
                   END-IF
           END-PERFORM.
       0205-ESAMINA-ZOP022101-END.
           EXIT.
       0210-ESAMINA-TTSPECPCS.
           EVALUATE WPRKCS-TTSPECPCS(IND-KCS)
             WHEN 'N'
               MOVE  0                         TO W-CPCS
             WHEN 'S'
               MOVE W-CPCS-MOD                 TO W-CPCS
             WHEN 'F'
               MOVE WPRKCS-TTCPCSF(IND-KCS)    TO W-CPCS
           END-EVALUATE.
       0210-ESAMINA-TTSPECPCS-END.
           EXIT.
       0215-ESAMINA-TTSPEIE.
           EVALUATE WPRKCS-TTSPEIE(IND-KCS)
             WHEN 'S'
               MOVE 'ZOP020101'                  TO W-DECOD
               COPY ZMZINDIR.
               MOVE MOD(M-I(IND1):M-L(IND1))     TO TCSVI-TTINTES
             WHEN 'N'
               MOVE  SPACES                      TO TCSVI-TTINTES
           END-EVALUATE.
       0215-ESAMINA-TTSPEIE-END.
           EXIT.
       0220-ESAMINA-TTDIVA.
           MOVE SPACES                           TO TCSVI-TTLITVALA
           IF WPRKCS-TTDIVA(IND-KCS) = 'ORD'
              MOVE W-DIVORD                      TO W-DIVA
000172*       IF  W-DIVORD = W-CSIGDBASE
000172*           MOVE W-CSIGDBASE               TO TCSVI-TTLITVALA
000172*------------------------------------------TRATTASI EUR/ITL O VAL
000172        MOVE 'ZOR036401'        TO W-DECOD
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        IF M-S(IND1) NOT = SPACES
000172           GO TO 0220-ESAMINA-TTDIVA-END
000172        END-IF
000172        MOVE W-COM-NUM                     TO W-DIVA-IN-OUT
000172        IF W-COM-NUM = 1 OR W-COM-NUM = 2
000172           MOVE 'ITL'                      TO TCSVI-TTLITVALA
              ELSE
                  MOVE 'VAL'                     TO TCSVI-TTLITVALA
              END-IF
           END-IF.
           IF WPRKCS-TTDIVA (IND-KCS) (1:2) = 'DV'
000172*----------------------------------------------------------------
000172* IND17      INDIRIZZA  "ZDI0401XX"
000172*----------------------------------------------------------------
              MOVE WPRKCS-TTDIVA(IND-KCS)        TO W-XXN
              MOVE 'ZDI040101'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
000172        MOVE IND1                          TO IND17
              IF M-S(IND1) NOT = SPACES
                 GO TO 0220-ESAMINA-TTDIVA-END
              END-IF
              MOVE MOD(M-I(IND1):M-L(IND1))      TO W-DIVA
000172*       IF MOD(M-I(IND1):M-L(IND1)) = W-CSIGDBASE
000172*          MOVE W-CSIGDBASE               TO TCSVI-TTLITVALA
000172*------------------------------------------TRATTASI EUR/ITL O VAL
000172        MOVE 'ZDI043301'        TO W-DECOD
000172        MOVE W-XXN-N            TO C
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        IF M-S(IND1) NOT = SPACES
000172           GO TO 0220-ESAMINA-TTDIVA-END
000172        END-IF
000172        MOVE W-COM-NUM                     TO W-DIVA-IN-OUT
000172        IF W-COM-NUM = 1 OR W-COM-NUM = 2
000172           MOVE 'ITL'                  TO TCSVI-TTLITVALA
              ELSE
000172*          IF MOD(M-I(IND1):M-L(IND1)) NOT = SPACES
000172           IF MOD(M-I(IND17):M-L(IND17)) NOT = SPACES
                    MOVE 'VAL'                  TO TCSVI-TTLITVALA
                 END-IF
              END-IF
           END-IF.
           IF WPRKCS-TTDIVA(IND-KCS) = SPACES
              MOVE 'ZOR030201'                   TO W-DECOD
              MOVE W-DEC-COORD                   TO W-MOD-ERR
              COPY ZMZINDIR.
              IF M-S(IND1) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 MOVE 'E'                        TO M-S(IND1)
                 MOVE M-M(IND1)                  TO W-MAP-ERR
                 MOVE 'S001'                     TO W-COD-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
       0220-ESAMINA-TTDIVA-END.
           EXIT.
       0225-ESAMINA-TTDIVB.
           MOVE SPACES                           TO TCSVI-TTLITVALB
           IF WPRKCS-TTDIVB(IND-KCS) = 'ORD'
000172*       IF W-DIVORD = W-CSIGDBASE
000172*          MOVE W-CSIGDBASE                TO TCSVI-TTLITVALB
000172*------------------------------------------TRATTASI EUR/ITL O VAL
000172        MOVE 'ZOR036401'        TO W-DECOD
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        IF M-S(IND1) NOT = SPACES
000172           GO TO 0225-ESAMINA-TTDIVB-END
000172        END-IF
000172        IF W-COM-NUM = 1 OR W-COM-NUM = 2
000172           MOVE 'ITL'                      TO TCSVI-TTLITVALB
              ELSE
000172*          IF W-DIVA = W-CSIGDBASE
000172           IF W-DIVA-IN-OUT = 1 OR 2
                    MOVE 'VAL'                   TO TCSVI-TTLITVALB
                 ELSE
                    IF W-DIVORD = W-DIVA
                       MOVE 'VAS'                TO TCSVI-TTLITVALB
                    ELSE
                       MOVE 'VAD'                TO TCSVI-TTLITVALB
                    END-IF
                 END-IF
              END-IF
           END-IF.
           IF WPRKCS-TTDIVB (IND-KCS) (1:2) = 'DV'
      *--------------------------------------------------------------
      * IND1       INDIRIZZA  "ZDI0401XX"
000172* IND17      INDIRIZZA  "ZDI0401XX"
      *--------------------------------------------------------------
              MOVE WPRKCS-TTDIVB(IND-KCS)        TO W-XXN
              MOVE 'ZDI040101'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
000172        MOVE IND1                          TO IND17
              IF MOD(M-I(IND1):M-L(IND1)) NOT GREATER SPACES
                 MOVE SPACES                     TO TCSVI-TTLITVALB
                 GO TO 0225-ESAMINA-TTDIVB-END
              END-IF
000172*       IF W-CSIGDBASE = MOD(M-I(IND1):M-L(IND1))
000172*          MOVE W-CSIGDBASE                TO TCSVI-TTLITVALB
000172*------------------------------------------TRATTASI EUR/ITL O VAL
000172        MOVE 'ZDI043301'        TO W-DECOD
000172        MOVE W-XXN-N            TO C
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        IF M-S(IND1) NOT = SPACES
000172           GO TO 0225-ESAMINA-TTDIVB-END
000172        END-IF
000172        IF W-COM-NUM = 1 OR W-COM-NUM = 2
000172           MOVE 'ITL'                  TO TCSVI-TTLITVALB
              ELSE
000172*          IF W-CSIGDBASE = W-DIVA
000172           IF W-DIVA-IN-OUT = 1 OR 2
                    MOVE 'VAL'                   TO TCSVI-TTLITVALB
                 ELSE
000172*             IF MOD(M-I(IND1):M-L(IND1)) = W-DIVA
000172              IF MOD(M-I(IND17):M-L(IND17)) = W-DIVA
                       MOVE 'VAS'                TO TCSVI-TTLITVALB
                    ELSE
000172*                IF MOD(M-I(IND1):M-L(IND1)) NOT = SPACES
000172                 IF MOD(M-I(IND17):M-L(IND17)) NOT = SPACES
                          MOVE 'VAD'             TO TCSVI-TTLITVALB
                       END-IF
                    END-IF
                 END-IF
              END-IF
           END-IF.
           IF WPRKCS-TTDIVB(IND-KCS) = SPACES
              MOVE SPACES                        TO TCSVI-TTLITVALB
           END-IF.
       0225-ESAMINA-TTDIVB-END.
           EXIT.
       0230-ESAMINA-TTDIVC.
           MOVE SPACES                           TO TCSVI-TTLITVALC
           IF WPRKCS-TTDIVC(IND-KCS) = 'ORD'
000172*       IF W-CSIGDBASE = W-DIVORD
000172*          MOVE W-CSIGDBASE                TO TCSVI-TTLITVALC
000172*------------------------------------------TRATTASI EUR/ITL O VAL
000172        MOVE 'ZOR036401'        TO W-DECOD
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        IF M-S(IND1) NOT = SPACES
000172           GO TO 0230-ESAMINA-TTDIVC-END
000172        END-IF
000172        IF W-COM-NUM = 1 OR W-COM-NUM = 2
000172           MOVE 'ITL'                      TO TCSVI-TTLITVALC
              ELSE
000172*          IF W-DIVA = W-CSIGDBASE
000172           IF W-DIVA-IN-OUT = 1 OR 2
                    MOVE 'VAL'                   TO TCSVI-TTLITVALC
                 ELSE
                    IF W-DIVORD = W-DIVA
                       MOVE 'VAS'                TO TCSVI-TTLITVALC
                    ELSE
                       MOVE 'VAD'                TO TCSVI-TTLITVALC
                    END-IF
                 END-IF
              END-IF
           END-IF.
           IF WPRKCS-TTDIVC (IND-KCS) (1:2) = 'DV'
      *--------------------------------------------------------------
      * IND1       INDIRIZZA  "ZDI0401XX"
000172* IND17      INDIRIZZA  "ZDI0401XX"
      *--------------------------------------------------------------
              MOVE WPRKCS-TTDIVC(IND-KCS)        TO W-XXN
              MOVE 'ZDI040101'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
000172        MOVE IND1                          TO IND17
              IF MOD(M-I(IND1):M-L(IND1)) NOT GREATER SPACES
                 MOVE SPACES                     TO TCSVI-TTLITVALC
                 GO TO 0230-ESAMINA-TTDIVC-END
              END-IF
000172*       IF W-CSIGDBASE = MOD(M-I(IND1):M-L(IND1))
000172*          MOVE W-CSIGDBASE                TO TCSVI-TTLITVALC
000172*------------------------------------------TRATTASI EUR/ITL O VAL
000172        MOVE 'ZDI043301'        TO W-DECOD
000172        MOVE W-XXN-N            TO C
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        IF M-S(IND1) NOT = SPACES
000172           GO TO 0225-ESAMINA-TTDIVB-END
000172        END-IF
000172        IF W-COM-NUM = 1 OR W-COM-NUM = 2
000172           MOVE 'ITL'                      TO TCSVI-TTLITVALC
              ELSE
000172*          IF W-CSIGDBASE = W-DIVA
000172           IF W-DIVA-IN-OUT = 1 OR 2
                    MOVE 'VAL'                   TO TCSVI-TTLITVALC
                 ELSE
000172*             IF MOD(M-I(IND1):M-L(IND1)) = W-DIVA
000172              IF MOD(M-I(IND17):M-L(IND17)) = W-DIVA
                       MOVE 'VAS'                TO TCSVI-TTLITVALC
                    ELSE
000172*                IF MOD(M-I(IND1):M-L(IND1)) NOT = SPACES
000172                 IF MOD(M-I(IND17):M-L(IND17)) NOT = SPACES
                          MOVE 'VAD'             TO TCSVI-TTLITVALC
                       END-IF
                    END-IF
                 END-IF
              END-IF
           END-IF.
           IF WPRKCS-TTDIVC(IND-KCS) = SPACES
              MOVE SPACES                       TO TCSVI-TTLITVALC
           END-IF.
       0230-ESAMINA-TTDIVC-END.
           EXIT.
       0235-ESAMINA-TTDIVD.
           MOVE SPACES                          TO TCSVI-TTLITVALD
           IF WPRKCS-TTDIVD(IND-KCS) = 'ORD'
000172*       IF W-CSIGDBASE = W-DIVORD
000172*          MOVE W-CSIGDBASE               TO TCSVI-TTLITVALD
000172*------------------------------------------TRATTASI EUR/ITL O VAL
000172        MOVE 'ZOR036401'        TO W-DECOD
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        IF M-S(IND1) NOT = SPACES
000172           GO TO 0235-ESAMINA-TTDIVD-END
000172        END-IF
000172        IF W-COM-NUM = 1 OR W-COM-NUM = 2
000172           MOVE 'ITL'                      TO TCSVI-TTLITVALD
              ELSE
000172*          IF W-DIVA = W-CSIGDBASE
000172           IF W-DIVA-IN-OUT = 1 OR 2
                    MOVE 'VAL'                  TO TCSVI-TTLITVALD
                 ELSE
                    IF W-DIVORD = W-DIVA
                       MOVE 'VAS'                TO TCSVI-TTLITVALD
                    ELSE
                       MOVE 'VAD'                TO TCSVI-TTLITVALD
                    END-IF
                 END-IF
              END-IF
           END-IF.
           IF WPRKCS-TTDIVD (IND-KCS) (1:2) = 'DV'
000172*-----------------------------------------------------------
000172* IND17      INDIRIZZA  "ZDI0401XX"
000172*-----------------------------------------------------------
              MOVE WPRKCS-TTDIVD(IND-KCS)        TO W-XXN
              MOVE 'ZDI040101'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
000172        MOVE IND1                          TO IND17
              IF MOD(M-I(IND1):M-L(IND1)) NOT GREATER SPACES
                 MOVE SPACES                     TO TCSVI-TTLITVALD
                 GO TO 0235-ESAMINA-TTDIVD-END
              END-IF
000172*       IF MOD(M-I(IND1):M-L(IND1)) = W-CSIGDBASE
000172*          MOVE W-CSIGDBASE                TO TCSVI-TTLITVALD
000172*-------------------------------------TRATTASI DI EUR/LIT O VAL
000172        MOVE 'ZDI043301'        TO W-DECOD
000172        MOVE W-XXN-N            TO C
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        IF M-S(IND1) NOT = SPACES
000172           GO TO 0235-ESAMINA-TTDIVD-END
000172        END-IF
000172        IF W-COM-NUM = 1 OR W-COM-NUM = 2
000172           MOVE 'ITL'                     TO TCSVI-TTLITVALD
              ELSE
000172*          IF W-CSIGDBASE = W-DIVA
000172           IF W-DIVA-IN-OUT = 1 OR 2
                    MOVE 'VAL'                   TO TCSVI-TTLITVALD
                 ELSE
000172*             IF MOD(M-I(IND1):M-L(IND1)) = W-DIVA
000172              IF MOD(M-I(IND17):M-L(IND17)) = W-DIVA
                       MOVE 'VAS'                TO TCSVI-TTLITVALD
                    ELSE
000172*                IF MOD(M-I(IND1):M-L(IND1)) NOT = SPACES
000172                 IF MOD(M-I(IND17):M-L(IND17)) NOT = SPACES
                          MOVE 'VAD'             TO TCSVI-TTLITVALD
                       END-IF
                    END-IF
                 END-IF
              END-IF
           END-IF.
           IF WPRKCS-TTDIVD(IND-KCS) = SPACES
              MOVE SPACES                       TO TCSVI-TTLITVALD
           END-IF.
       0235-ESAMINA-TTDIVD-END.
           EXIT.
       0240-ESAMINA-TTDIVE.
           MOVE SPACES                           TO TCSVI-TTLITVALE
           IF WPRKCS-TTDIVE(IND-KCS) = 'ORD'
000172*       IF W-CSIGDBASE = W-DIVORD
000172*          MOVE W-CSIGDBASE                TO TCSVI-TTLITVALE
000172*------------------------------------------TRATTASI EUR/ITL O VAL
000172        MOVE 'ZOR036401'        TO W-DECOD
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        IF M-S(IND1) NOT = SPACES
000172           GO TO 0240-ESAMINA-TTDIVE-END
000172        END-IF
000172        IF W-COM-NUM = 1 OR W-COM-NUM = 2
000172           MOVE 'ITL'                      TO TCSVI-TTLITVALE
              ELSE
000172*          IF W-DIVA = W-CSIGDBASE
000172           IF W-DIVA-IN-OUT = 1 OR 2
                    MOVE 'VAL'                   TO TCSVI-TTLITVALE
                 ELSE
                    IF W-DIVORD = W-DIVA
                       MOVE 'VAS'                TO TCSVI-TTLITVALE
                    ELSE
                       MOVE 'VAD'                TO TCSVI-TTLITVALE
                    END-IF
                 END-IF
              END-IF
           END-IF.
           IF WPRKCS-TTDIVE (IND-KCS) (1:2) = 'DV'
000172*-----------------------------------------------------------
000172* IND17      INDIRIZZA  "ZDI0401XX"
000172*-----------------------------------------------------------
              MOVE WPRKCS-TTDIVE(IND-KCS)        TO W-XXN
              MOVE 'ZDI040101'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
000172        MOVE IND1                          TO IND17
              IF MOD(M-I(IND1):M-L(IND1)) NOT GREATER SPACES
                 MOVE SPACES                     TO TCSVI-TTLITVALE
                 GO TO 0240-ESAMINA-TTDIVE-END
              END-IF
000172*       IF MOD(M-I(IND1):M-L(IND1)) = W-CSIGDBASE
000172*          MOVE W-CSIGDBASE                TO TCSVI-TTLITVALE
000172*-------------------------------------TRATTASI DI EUR/LIT O VAL
000172        MOVE 'ZDI043301'        TO W-DECOD
000172        MOVE W-XXN-N            TO C
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        IF M-S(IND1) NOT = SPACES
000172           GO TO 0240-ESAMINA-TTDIVE-END
000172        END-IF
000172        IF W-COM-NUM = 1 OR W-COM-NUM = 2
000172           MOVE 'ITL'                     TO TCSVI-TTLITVALE
              ELSE
000172*          IF W-CSIGDBASE = W-DIVA
000172           IF W-DIVA-IN-OUT = 1 OR 2
                    MOVE 'VAL'                   TO TCSVI-TTLITVALE
                 ELSE
000172*             IF MOD(M-I(IND1):M-L(IND1)) = W-DIVA
000172              IF MOD(M-I(IND17):M-L(IND17)) = W-DIVA
                       MOVE 'VAS'                TO TCSVI-TTLITVALE
                    ELSE
000172*                IF MOD(M-I(IND1):M-L(IND1)) NOT = SPACES
000172                 IF MOD(M-I(IND17):M-L(IND17)) NOT = SPACES
                          MOVE 'VAD'             TO TCSVI-TTLITVALE
                       END-IF
                    END-IF
                 END-IF
              END-IF
           END-IF.
           IF WPRKCS-TTDIVE(IND-KCS) = SPACES
              MOVE SPACES                        TO TCSVI-TTLITVALE
           END-IF.
       0240-ESAMINA-TTDIVE-END.
           EXIT.
       0245-ESAMINA-TTPADEB.
           EVALUATE WPRKCS-TTPADEB(IND-KCS)
             WHEN 'ORD'
                MOVE 'ZOR032401'                 TO W-DECOD
                COPY ZMZINDIR.
                IF MOD(M-I(IND1):M-L(IND1)) = 'IT'
                   MOVE 'S'                      TO TCSVI-TTDEBIT
                ELSE
                   MOVE 'N'                      TO TCSVI-TTDEBIT
                END-IF
             WHEN 'DEB'
                MOVE 'ZRA090201'                 TO W-DECOD
                COPY ZMZINDIR.
                IF MOD(M-I(IND1):M-L(IND1)) = 'IT'
                   MOVE 'S'                      TO TCSVI-TTDEBIT
                ELSE
                   MOVE 'N'                      TO TCSVI-TTDEBIT
                END-IF
             WHEN 'CRE'
                MOVE 'ZRA090301'                 TO W-DECOD
                COPY ZMZINDIR.
                IF MOD(M-I(IND1):M-L(IND1)) = 'IT'
                   MOVE 'S'                      TO TCSVI-TTDEBIT
                ELSE
                   MOVE 'N'                      TO TCSVI-TTDEBIT
                END-IF
000092       WHEN 'DES'
000092          MOVE 'ZRA091301'                 TO W-DECOD
000092          COPY ZMZINDIR.
000092          IF MOD(M-I(IND1):M-L(IND1)) = 'IT'
000092             MOVE 'S'                      TO TCSVI-TTDEBIT
000092          ELSE
000092             MOVE 'N'                      TO TCSVI-TTDEBIT
000092          END-IF
             WHEN SPACES
                    MOVE SPACES                  TO TCSVI-TTDEBIT
           END-EVALUATE.
           IF WPRKCS-TTPADEB (IND-KCS) (1:1) = 'F'
              MOVE WPRKCS-TTPADEB(IND-KCS) TO W-XNN
              MOVE 'ZND060701'                   TO W-DECOD
              MOVE W-XNN-N                       TO C
              COPY ZMZINDIR.
              IF MOD(M-I(IND1):M-L(IND1)) = 'IT'
                 MOVE 'S'                        TO TCSVI-TTDEBIT
              ELSE
                 MOVE 'N'                        TO TCSVI-TTDEBIT
              END-IF
           END-IF.
       0245-ESAMINA-TTPADEB-END.
           EXIT.
       0250-ESAMINA-TTPACRE.
           EVALUATE WPRKCS-TTPACRE(IND-KCS)
              WHEN 'ORD'
                MOVE 'ZOR032401'                 TO W-DECOD
                COPY ZMZINDIR.
                IF MOD(M-I(IND1):M-L(IND1)) = 'IT'
                   MOVE 'S'                      TO TCSVI-TTCREIT
                ELSE
                   MOVE 'N'                      TO TCSVI-TTCREIT
                END-IF
              WHEN 'DEB'
                MOVE 'ZRA090201'                 TO W-DECOD
                COPY ZMZINDIR.
                IF MOD(M-I(IND1):M-L(IND1)) = 'IT'
                   MOVE 'S'                      TO TCSVI-TTCREIT
                ELSE
                   MOVE 'N'                      TO TCSVI-TTCREIT
                END-IF
              WHEN 'CRE'
                MOVE 'ZRA090301'                 TO W-DECOD
                COPY ZMZINDIR.
                IF MOD(M-I(IND1):M-L(IND1)) = 'IT'
                   MOVE 'S'                      TO TCSVI-TTCREIT
                ELSE
                   MOVE 'N'                      TO TCSVI-TTCREIT
                END-IF
000092        WHEN 'DES'
000092          MOVE 'ZRA091301'                 TO W-DECOD
000092          COPY ZMZINDIR.
000092          IF MOD(M-I(IND1):M-L(IND1)) = 'IT'
000092             MOVE 'S'                      TO TCSVI-TTCREIT
000092          ELSE
000092             MOVE 'N'                      TO TCSVI-TTCREIT
000092          END-IF
              WHEN SPACES
                   MOVE SPACES                   TO TCSVI-TTCREIT
           END-EVALUATE.
           IF WPRKCS-TTPACRE (IND-KCS) (1:1) = 'F'
              MOVE WPRKCS-TTPACRE(IND-KCS)       TO W-XNN
              MOVE 'ZND060701'                   TO W-DECOD
              MOVE W-XNN-N                       TO C
              COPY ZMZINDIR.
              IF MOD(M-I(IND1):M-L(IND1)) = 'IT'
                 MOVE 'S'                        TO TCSVI-TTCREIT
              ELSE
                 MOVE 'N'                        TO TCSVI-TTCREIT
              END-IF
           END-IF.
       0250-ESAMINA-TTPACRE-END.
           EXIT.
       0255-ESAMINA-TTSTCA.
           IF WPRKCS-TTSTCA (IND-KCS) (1:1) = 'D'
              MOVE WPRKCS-TTSTCA(IND-KCS)        TO W-XN
              MOVE 'ZSC050701'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              MOVE IND1                          TO IND-COM
              MOVE W-DEC-COORD                   TO W-COM-COORD
              COPY ZMZVALNM.
              MOVE W-COM-NUM                     TO TCSVI-TTTPSTCA
           END-IF.
           IF WPRKCS-TTSTCA (IND-KCS) (1:1) = 'A'
              MOVE WPRKCS-TTSTCA(IND-KCS)        TO W-XN
              MOVE 'ZSC051001'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              MOVE IND1                          TO IND-COM
              MOVE W-DEC-COORD                   TO W-COM-COORD
              COPY ZMZVALNM.
              MOVE  W-COM-NUM                    TO TCSVI-TTTPSTCA
           END-IF.
           IF WPRKCS-TTSTCA(IND-KCS) = SPACES
              MOVE ZEROS                         TO TCSVI-TTTPSTCA
           END-IF.
       0255-ESAMINA-TTSTCA-END.
           EXIT.
       0260-ESAMINA-TTSTCB.
           IF WPRKCS-TTSTCB (IND-KCS) (1:1) = 'D'
              MOVE WPRKCS-TTSTCB(IND-KCS)        TO W-XN
              MOVE 'ZSC050701'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE  W-COM-NUM                    TO TCSVI-TTTPSTCB
           END-IF.
           IF WPRKCS-TTSTCB (IND-KCS) (1:1) = 'A'
              MOVE WPRKCS-TTSTCB(IND-KCS)        TO W-XN
              MOVE 'ZSC051001'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE  W-COM-NUM                    TO TCSVI-TTTPSTCB
           END-IF.
           IF WPRKCS-TTSTCB(IND-KCS) = SPACES
              MOVE 0                             TO TCSVI-TTTPSTCB
           END-IF.
       0260-ESAMINA-TTSTCB-END.
           EXIT.
       0265-ESAMINA-TTSTCC.
           IF WPRKCS-TTSTCC (IND-KCS) (1:1) = 'D'
              MOVE WPRKCS-TTSTCC(IND-KCS)        TO W-XN
              MOVE 'ZSC050701'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE  W-COM-NUM                    TO TCSVI-TTTPSTCC
           END-IF.
           IF WPRKCS-TTSTCC (IND-KCS) (1:1) = 'A'
              MOVE WPRKCS-TTSTCC(IND-KCS)        TO W-XN
              MOVE 'ZSC051001'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE  W-COM-NUM                    TO TCSVI-TTTPSTCC
           END-IF.
           IF WPRKCS-TTSTCC(IND-KCS) = SPACES
              MOVE 0                             TO TCSVI-TTTPSTCC
           END-IF.
       0265-ESAMINA-TTSTCC-END.
           EXIT.
       0270-ESAMINA-TTSTCD.
           IF WPRKCS-TTSTCD (IND-KCS) (1:1) = 'D'
              MOVE WPRKCS-TTSTCD(IND-KCS)        TO W-XN
              MOVE 'ZSC050701'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE  W-COM-NUM                    TO TCSVI-TTTPSTCD
           END-IF.
           IF WPRKCS-TTSTCD (IND-KCS) (1:1) = 'A'
              MOVE WPRKCS-TTSTCD(IND-KCS)        TO W-XN
              MOVE 'ZSC051001'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE  W-COM-NUM                    TO TCSVI-TTTPSTCD
           END-IF.
           IF WPRKCS-TTSTCD(IND-KCS) = SPACES
              MOVE 0                             TO TCSVI-TTTPSTCD
           END-IF.
       0270-ESAMINA-TTSTCD-END.
           EXIT.
       0275-ESAMINA-TTSTCE.
           IF WPRKCS-TTSTCE (IND-KCS) (1:1) = 'D'
              MOVE WPRKCS-TTSTCE(IND-KCS)        TO W-XN
              MOVE 'ZSC050701'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE  W-COM-NUM                    TO TCSVI-TTTPSTCE
           END-IF.
           IF WPRKCS-TTSTCE (IND-KCS) (1:1) = 'A'
              MOVE WPRKCS-TTSTCE(IND-KCS)        TO W-XN
              MOVE 'ZSC051001'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE  W-COM-NUM                    TO TCSVI-TTTPSTCE
           END-IF.
           IF WPRKCS-TTSTCE(IND-KCS) = SPACES
              MOVE 0                             TO TCSVI-TTTPSTCE
           END-IF.
       0275-ESAMINA-TTSTCE-END.
           EXIT.
       0300-LEGGI-TTCSVI.
           MOVE W-CPCS                TO TCSVI-CPCS.
           EXEC SQL INCLUDE ZMS22701 END-EXEC.
           IF W-SQL-NON-TROVATO
              IF L-FASE = 1
                 MOVE 'SI'            TO W-FLAG-EXIT
              ELSE
                 MOVE 'SI'            TO W-FLAG-EXIT
                 MOVE 'ZOR030201'     TO W-DECOD
                 MOVE W-DEC-COORD     TO W-MOD-ERR
                 COPY ZMZINDIR.
                 MOVE 'E'               TO M-S(IND1)
                 MOVE M-M(IND1)         TO W-MAP-ERR
                 MOVE 'S002'            TO W-COD-ERR
                 MOVE TCSVI-TTCREIT     TO WCM-TCSVI-TTCREIT
                 MOVE TCSVI-TTDEBIT     TO WCM-TCSVI-TTDEBIT
                 MOVE TCSVI-TTINTES     TO WCM-TCSVI-TTINTES
                 MOVE TCSVI-TTLITVALA   TO WCM-TCSVI-TTLITVALA
                 MOVE TCSVI-TTLITVALB   TO WCM-TCSVI-TTLITVALB
                 MOVE TCSVI-TTLITVALC   TO WCM-TCSVI-TTLITVALC
                 MOVE TCSVI-TTLITVALD   TO WCM-TCSVI-TTLITVALD
                 MOVE TCSVI-TTLITVALE   TO WCM-TCSVI-TTLITVALE
                 MOVE TCSVI-TTTPSTCA    TO WCM-TCSVI-TTTPSTCA
                 MOVE TCSVI-TTTPSTCB    TO WCM-TCSVI-TTTPSTCB
                 MOVE TCSVI-TTTPSTCC    TO WCM-TCSVI-TTTPSTCC
                 MOVE TCSVI-TTTPSTCD    TO WCM-TCSVI-TTTPSTCD
                 MOVE TCSVI-TTTPSTCE    TO WCM-TCSVI-TTTPSTCE
                 MOVE ' ASS. IN TTCSVI' TO WCM-TCSVI-DESCR
                 MOVE WCM-ERR-TCSVI     TO W-DES-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           ELSE
              IF NOT W-SQL-OK
                 MOVE 8                             TO W-FLAG-ERR
                 MOVE '9999'                        TO W-COD-ERR
                 MOVE 'TBTTCSVI'                    TO L-NOME-TABELLA
                 MOVE W-SQLCODE                     TO L-CODICE-SQL
                 MOVE 'ZMBSVIL0'                    TO L-MODULO
                 MOVE '0300-LEGGI-TTCSVI'           TO L-SUB-MODULO
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
       0300-LEGGI-TTCSVI-END.
           EXIT.
       0400-REGISTRA-OPE.
           MOVE 'ZAA170701'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           IF W-COM-NUM = 0
              MOVE W-CPCS-MOD                    TO APROC-CPCS
              PERFORM 0405-LEGGI-TAPROC
                 THRU 0405-LEGGI-TAPROC-END
           END-IF.
           IF W-SQL-OK
              PERFORM 0415-LEGGI-AOPE
                 THRU 0415-LEGGI-AOPE-END
           END-IF.
000041     IF W-FLAG-EXIT = 'SI'
000041        GO TO 0400-REGISTRA-OPE-END.
           IF WRK-UPDATE-AOPE = 'S'
              PERFORM 2010-UPDATE-AOPE
                 THRU 2010-UPDATE-AOPE-END
           ELSE
              PERFORM 2010-INSERT-AOPE
                 THRU 2010-INSERT-AOPE-END.
       0400-REGISTRA-OPE-END.
           EXIT.
       0405-LEGGI-TAPROC.
           EXEC SQL INCLUDE ZMS20301 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8                             TO W-FLAG-ERR
              MOVE '9999'                        TO W-COD-ERR
              MOVE 'TBTAPROC'                    TO L-NOME-TABELLA
              MOVE W-SQLCODE                     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                    TO L-MODULO
              MOVE '0405-LEGGI-TAPROC'           TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           ELSE
              IF APROC-CCTRPCS NOT > 0
                 MOVE 1                          TO APROC-CCTRPCS
              END-IF
              MOVE 'ZAA170701'                   TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE APROC-CCTRPCS                 TO W-COM-NUM
              MOVE W-COM-NUM(DA1:)               TO
                                            MOD(M-I(IND1):M-L(IND1))
           END-IF.
       0405-LEGGI-TAPROC-END.
           EXIT.
000041*0410-LEGGI-TUTENO.
"     *    MOVE W-CIST                           TO UTENO-CIST
"     *    MOVE W-DIPOPE                         TO UTENO-CUTE
"     *    MOVE 'ZAA170701'                      TO W-DECOD.
"     *    COPY ZMZINDIR.
"     *    COPY ZMZVALNM.
"     *    MOVE W-COM-NUM                        TO UTENO-CCTRUTE
"     *    EXEC SQL INCLUDE ZMS22501 END-EXEC.
"     *    IF W-SQL-NON-TROVATO
"     *       PERFORM 0412-INSERT-TUTENO
"     *          THRU 0412-INSERT-TUTENO-END
"     *    ELSE
"     *       IF NOT W-SQL-OK
"     *          MOVE 8                          TO W-FLAG-ERR
"     *          MOVE '9999'                     TO W-COD-ERR
"     *          MOVE 'TBTUTENO'                 TO L-NOME-TABELLA
"     *          MOVE W-SQLCODE                  TO L-CODICE-SQL
"     *          MOVE 'ZMBSVIL0'                 TO L-MODULO
"     *          MOVE '0410-LEGGI-TUTENO'        TO L-SUB-MODULO
"     *          PERFORM 9999-GESTIONE-ERRORE
"     *             THRU 9999-GESTIONE-ERRORE-END
"     *       END-IF
"     *    END-IF.
"     *0410-LEGGI-TUTENO-END.
000041*    EXIT.
000041*0411-INCR-OPE.
"     *    MOVE W-DIPOPE              TO UTENO-CUTE.
"     *    MOVE 'ZAA170301'           TO W-DECOD.
"     *    COPY ZMZINDIR.
"     *    COPY ZMZVALNM.
"     *    COMPUTE W-COM-NUM = UTENO-CCTRUTE * 100000
"     *                     + UTENO-CTROP + 1.
"     *    MOVE W-COM-NUM(DA1:)                  TO
"     *                          MOD(M-I(IND1):M-L(IND1)).
"     *    COMPUTE UTENO-CTROP = UTENO-CTROP + 1.
"     *    PERFORM 0413-UPDATE-TUTENO
"     *       THRU 0413-UPDATE-TUTENO-END.
"     *0411-INCR-OPE-END.
000041*    EXIT.
000041*0412-INSERT-TUTENO.
"     *    MOVE W-CIST                           TO UTENO-CIST.
"     *    MOVE W-DIPOPE                         TO UTENO-CUTE.
"     *    MOVE 'ZAA170701'                      TO W-DECOD.
"     *    COPY ZMZINDIR.
"     *    COPY ZMZVALNM.
"     *    MOVE MOD(M-I(IND1):M-L(IND1))         TO UTENO-CCTRUTE.
"     *    MOVE 0                                TO UTENO-CTROP.
"     *    EXEC SQL INCLUDE ZMV22501 END-EXEC.
"     *    IF NOT W-SQL-OK
"     *       MOVE 8                             TO W-FLAG-ERR
"     *       MOVE '9999'                        TO W-COD-ERR
"     *       MOVE 'TBTUTENO'                    TO L-NOME-TABELLA
"     *       MOVE W-SQLCODE                     TO L-CODICE-SQL
"     *       MOVE 'ZMBSVIL0'                    TO L-MODULO
"     *       MOVE '0412-INSERT-TUTENO'          TO L-SUB-MODULO
"     *       PERFORM 9999-GESTIONE-ERRORE
"     *          THRU 9999-GESTIONE-ERRORE-END
"     *    END-IF.
"     *0412-INSERT-TUTENO-END.
000041*    EXIT.
000041*0413-UPDATE-TUTENO.
"     *    EXEC SQL INCLUDE ZMU22502 END-EXEC.
"     *    IF NOT W-SQL-OK
"     *       MOVE 8                             TO W-FLAG-ERR
"     *       MOVE '9999'                        TO W-COD-ERR
"     *       MOVE 'TBTUTENO'                    TO L-NOME-TABELLA
"     *       MOVE W-SQLCODE                     TO L-CODICE-SQL
"     *       MOVE 'ZMBSVIL0'                    TO L-MODULO
"     *       MOVE '0413-UPDATE-TUTENO'          TO L-SUB-MODULO
"     *       PERFORM 9999-GESTIONE-ERRORE
"     *          THRU 9999-GESTIONE-ERRORE-END
"     *    END-IF.
"     *0413-UPDATE-TUTENO-END.
000041*    EXIT.
       0415-LEGGI-AOPE.
           IF L-NUMOPE = 0
000041        PERFORM 0410-CHIAMA-ZMBNOPER
"                THRU 0410-CHIAMA-ZMBNOPER-END
"             IF NO-RC GREATER ZEROES
"                MOVE 'SI' TO W-FLAG-EXIT
"                GO TO 0415-LEGGI-AOPE-END
"             END-IF
000041*       PERFORM 0410-LEGGI-TUTENO
"     *          THRU 0410-LEGGI-TUTENO-END
"     *       IF W-SQL-OK
"     *          PERFORM 0411-INCR-OPE
"     *             THRU 0411-INCR-OPE-END
000041*       END-IF
           END-IF.
           MOVE W-CIST                           TO OPE-CIST
           MOVE 'ZAA170201'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-DIPOPE
           IF L-NUMOPE = 0
              MOVE 'ZAA170301'                   TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                     TO OPE-NUMOPE
              MOVE OPE-NUMOPE                    TO L-NUMOPE
           ELSE
              MOVE L-NUMOPE                      TO OPE-NUMOPE
CAR981*----------------------------- RIPORTO IL NUMERO SUL MODELLO
CAR981        MOVE 'ZAA170301'                   TO W-DECOD
CAR981        COPY ZMZINDIR.
CAR981        COMPUTE W-COM1 = OPE-NUMOPE * (10 ** M-D(IND1))
CAR981        COPY ZMZFMMOD.
           END-IF.
           EXEC SQL INCLUDE ZMS11501 END-EXEC.
000224*- INSERITO TEST PER VERIFICARE CHE NON VADA A RICOPRIRE          02522100
000224*- UN'OPERAZIONE GIA' CORRETAMENTE CONCLUSA NEL CASO DI           02522200
000224*- PROBLEMI SISTEMISTICI SU IMS O CICS.                           02522300
000224     IF W-SQL-OK                                                  02522400
000224        IF OPE-FELIOPE NOT = 3                                    02522500
                 MOVE 8                          TO W-FLAG-ERR          02522600
                 MOVE '9999'                     TO W-COD-ERR           02522700
                 MOVE 'TBAOPE  '                 TO L-NOME-TABELLA      02522800
                 MOVE W-SQLCODE                  TO L-CODICE-SQL        02522900
                 MOVE 'ZMBSVIL0'                 TO L-MODULO            02523000
                 MOVE 'OPER-CONCLUSA  '          TO L-SUB-MODULO        02523100
                 PERFORM 9999-GESTIONE-ERRORE                           02523200
                    THRU 9999-GESTIONE-ERRORE-END                       02523300
              END-IF                                                    02523400
000224     END-IF                                                       02523500
           IF W-SQL-NON-TROVATO
           OR W-SQL-OK
              PERFORM 0420-SCRIVI-AOPE
                 THRU 0420-SCRIVI-AOPE-END
           ELSE
              IF NOT W-SQL-OK
                 MOVE 8                          TO W-FLAG-ERR
                 MOVE '9999'                     TO W-COD-ERR
                 MOVE 'TBAOPE  '                 TO L-NOME-TABELLA
                 MOVE W-SQLCODE                  TO L-CODICE-SQL
                 MOVE 'ZMBSVIL0'                 TO L-MODULO
                 MOVE '0415-LEGGI-AOPE'          TO L-SUB-MODULO
CAR275           MOVE OPE-DIPOPE                 TO L-SUB-MODULO(17:3)
CAR275           MOVE OPE-NUMOPE                 TO L-SUB-MODULO(21:)
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
       0415-LEGGI-AOPE-END.
           EXIT.
      *-------------------------------------------------------------*
      *  CHIAMA ROUTINE ZMBNOPER PER NUMERAZIONE AUTOMATICA OPER.   *
      *-------------------------------------------------------------*
000041 0410-CHIAMA-ZMBNOPER.
"          INITIALIZE NO-COMU.
"          MOVE W-CIST          TO NO-CIST.
"          MOVE W-DIPOPE        TO NO-CUTE.
"          MOVE 'ZAA170701'     TO W-DECOD.
"          COPY ZMZINDIR.
"          COPY ZMZVALNM.
"          MOVE W-COM-NUM       TO NO-CCTRUTE
"          MOVE 'ZAA170601'     TO W-DECOD.
"          COPY ZMZINDIR.
"          COPY ZMZVALNM.
"          MOVE W-COM-NUM       TO NO-CPCS.
"          MOVE CONFG-GESTNOPE  TO NO-GESTNOPE.
"          MOVE L-DATA-OGGI     TO NO-DATA-OGGI.
"          EXEC SQL INCLUDE ZMYNOPER END-EXEC.
"          IF NO-RC = 8
"             MOVE 8                           TO W-FLAG-ERR
"             MOVE '9999'                      TO W-COD-ERR
"             MOVE 'ZMBSVIL0'                  TO L-MODULO
"             MOVE NO-SUB-MODULO               TO L-SUB-MODULO
"             MOVE NO-TABELLA                  TO L-NOME-TABELLA
"             MOVE NO-SQLCODE                  TO L-CODICE-SQL
"             PERFORM 9999-GESTIONE-ERRORE
"                THRU 9999-GESTIONE-ERRORE-END
"             GO TO 0410-CHIAMA-ZMBNOPER-END.
"          IF NO-RC = 2
"             MOVE NO-COD-ERR   TO W-COD-ERR
"             MOVE ZEROES       TO W-MAP-ERR
"             MOVE SPACES       TO W-MOD-ERR
"             PERFORM 9999-GESTIONE-ERRORE
"                THRU 9999-GESTIONE-ERRORE-END
"             GO TO 0410-CHIAMA-ZMBNOPER-END.
"          MOVE 'ZAA170301'      TO W-DECOD.
"          COPY ZMZINDIR.
"          COMPUTE W-COM1 = NO-NUMOPE * (10 ** M-D(IND1)).
"          COPY ZMZFMMOD.
"          MOVE SPACES           TO M-S(IND1).
"     *--------------------- LA ROUTINE ZMBNOPER POTREBBE AVER FORZATO
"     *--------------------- AD '1' LA FASCIA, E' NECESSARIO MUOVERLA
"     *--------------------- NEL MODELLO
"          MOVE 'ZAA170701'                      TO W-DECOD.
"          COPY ZMZINDIR.
"          COMPUTE W-COM1 = NO-CCTRUTE * (10 ** M-D(IND1)).
"          COPY ZMZFMMOD.
"          MOVE SPACES           TO M-S(IND1).
"      0410-CHIAMA-ZMBNOPER-END.
000041     EXIT.
       0420-SCRIVI-AOPE.
           PERFORM 0421-RIEMPI-AOPE
              THRU 0421-RIEMPI-AOPE-END.
       0420-SCRIVI-AOPE-END.
           EXIT.
       0421-RIEMPI-AOPE.
           MOVE 'ZRA091201'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-CAZNDBSC.
           MOVE 'ZOR030201'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-CDIVORD.
           MOVE 'ZRI010901'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-CDPZOPEST.
           MOVE 'ZRI010301'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-CDPZRFPN.
           MOVE 'ZRI010101'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-CDPZRIF.
           MOVE 'ZRI011301'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-CDPZRFOR.
           MOVE 'ZRA092201'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-CDSTRCCF.
           MOVE 'ZOP021901'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-COLLCDPZ.
           MOVE 'ZOP021601'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-COLLCISO.
           MOVE 'ZOP021501'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-COLLCSTC.
           MOVE 'ZOP021701'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-COLLNNDG.
           MOVE 'ZOP022001'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-COLLNPRG.
           MOVE 'ZOP021801'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-COLLNSUF.
           MOVE 'ZRA092101'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-CPAEBNCF.
           MOVE 'ZRA090901'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-CPAEDBSC.
           MOVE 'ZRA090401'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-CPAEEX.
           MOVE 'ZRA091001'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-CPAEIMSC.
           MOVE W-CPCS-MOD                       TO OPE-CPCS.
           MOVE 'ZRA091301'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-CSIGPEDP.
           MOVE 'ZRA090801'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-CSTGDB.
           MOVE 'ZAA171501'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-DESCOPE.
           MOVE 'ZAA171601'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-CTER.
           MOVE 'ZOR030101'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-DORD.
           MOVE 'ZRA091901'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-FCREFICM.
           MOVE 'ZRA091801'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-FCREFIEX.
           MOVE 'ZRA091401'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-FCTRTER.
260297     MOVE 3                                TO OPE-FELIOPE.
260297     MOVE 3                                TO OPE-BCKFELIOPE.
           MOVE 'ZOP021101'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
260297     MOVE W-COM-NUM                        TO OPE-FTIPOPE.
260297     MOVE W-COM-NUM                        TO OPE-BCKFTIPOPE.
           MOVE 'ZOP020901'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-FESCOPE.
           MOVE 'ZOP020101'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-FITOEBS.
           MOVE 'N'                              TO OPE-FOPSTNATA.
           MOVE 'ZOP021001'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-FPRO.
           MOVE 'ZRA092001'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-FRILRIC.
           MOVE 'ZOP022201'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-FTIPORD.
           MOVE 'ZOR030501'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE OPE-IORD      = W-COM-NUM / 10 ** M-D(IND1)
000172*    MOVE 'ZOR030601'                      TO W-DECOD.
000172*    COPY ZMZINDIR.
000172*    COPY ZMZVALNM.
000172*    COMPUTE OPE-ICTVORD   = W-COM-NUM / 10 ** M-D(IND1)
000172*------------------------------------------- CALCOLO IL CTV DI
000172*------------------------------------------- LISTINO E SE VALORIZ
000172*-------------------------------------------- CTV DI CONTABILITA
000172*---------------------------------------------CHIAMANDO ZMBCTV00
000172     PERFORM 0425-CTVDL-E-CTVDC
000172        THRU 0425-CTVDL-E-CTVDC-END
000172*----------------------------------------CONTROV. DIVISA LISTINO
000172     MOVE 'ZOR030601'     TO W-DECOD
000172     COPY ZMZINDIR.
000172     COPY ZMZVALNM.
000172     COMPUTE OPE-ICTVLIS = W-COM-NUM / 10 ** M-D(IND1)
000172*---------------------------------------------CTV DI CONTABILITA
000172     MOVE 'ZOR036501'                      TO W-DECOD.
000172     COPY ZMZINDIR.
000172     COPY ZMZVALNM.
000172     COMPUTE OPE-ICTVORD = W-COM-NUM / 10 ** M-D(IND1)

           MOVE 'ZRA090101'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE OPE-ISPSRST   = W-COM-NUM / 10 ** M-D(IND1)
           MOVE 'ZAA170401'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-NMTRUTE.
           MOVE 'ZRA091601'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-TPSCONTO.
           MOVE 'ZRI011701'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-ZRIFEST.
           MOVE 'ZOP022801'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-ZRAPCPNOES.
           MOVE 'ZRA093101'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-TPRDRV.
APE001*IL VALORE PR SE CR E ERR PLAFOND SERVE SOLO A SHUTTLE
APE001     IF OPE-TPRDRV = 'PR'
APE001        MOVE 'CR' TO  OPE-TPRDRV
APE001     END-IF
APE001     IF OPE-TPRDRV = 'PE'
APE001        MOVE 'CE' TO  OPE-TPRDRV
APE001     END-IF
           MOVE ZEROS                            TO OPE-CPCSORI.

           MOVE 'ZOP022101'                      TO W-DECOD.
           COPY ZMZINDIR.
           IF MOD(M-I(IND1):M-L(IND1)) = ALL '9'
              MOVE SPACES                        TO OPE-NNDGBEN
           ELSE
              MOVE MOD(M-I(IND1):M-L(IND1))      TO OPE-NNDGBEN
           END-IF.
           MOVE 'ZOR031801'                      TO W-DECOD.
           COPY ZMZINDIR.
           IF MOD(M-I(IND1):M-L(IND1)) = ALL '9'
              MOVE SPACES                        TO OPE-NNDGORD
           ELSE
              MOVE MOD(M-I(IND1):M-L(IND1))      TO OPE-NNDGORD
           END-IF.
      *
           MOVE 'ZRI010401'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-NOPERFPN.
           MOVE 'ZRI011401'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-NOPERFOR.
           MOVE 'ZRI010201'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-NOPERIF.
           MOVE 'ZRI011001'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-NOPEST.
           MOVE 'ZOP020801'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-OESCOPE.
           MOVE 'ZOP020201'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-TCAB.
           MOVE 'ZRA091101'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO OPE-TOPEDBSC.
           MOVE 'ZOP021401'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-TPCOLL.
           MOVE 'ZRA092401'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-TPOPFB.
           MOVE 'ZOP020301'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-TTAS.
           MOVE TCSVI-TTNCPATR                   TO OPE-TTNCPATR.
           MOVE TCSVI-TTNCECON                   TO OPE-TTNCECON.
000172*    MOVE TCSVI-TTNCCAU                    TO OPE-TTNCCAU.
000172     MOVE ZEROES                           TO OPE-TTNCCAU.
000172     MOVE 'ZAA172601'                      TO W-DECOD.
000172     COPY ZMZINDIR.
000172     COPY ZMZVALNM.
000172     MOVE W-COM-NUM                        TO OPE-DIPOPERA.
000172     MOVE 'ZOP023501'                      TO W-DECOD.
000172     COPY ZMZINDIR.
000172     MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-DIVORI.
000172     MOVE 'ZOP023601'                      TO W-DECOD.
000172     COPY ZMZINDIR.
000172     COPY ZMZVALNM.
000172     COMPUTE OPE-IORI = W-COM-NUM / (10 ** M-D(IND1)).

BAV147     MOVE 'ZAA172501'               TO  W-DECOD.
BAV147     COPY ZMZINDIR.
BPO095     IF MOD(M-I(IND1):M-L(IND1)) = 'RIVALO' OR 'ANNULL'
BPO095                                OR 'ANNUBU' OR 'ANNUES'
BPO095                                OR 'ANNUBE'
BPO095        NEXT SENTENCE
BPO095     ELSE
BAV147        MOVE MOD(M-I(IND1):M-L(IND1))  TO OPE-FLUSSOPRV.

BAVC43     MOVE 'ZOP024701'                      TO W-DECOD.
BAVC43     COPY ZMZINDIR.
BAVC43     MOVE MOD(M-I(IND1):M-L(IND1))         TO OPE-CANTRASM.
       0421-RIEMPI-AOPE-END.
           EXIT.
000172 0423-COMUNI-CTV.
000172*TIPO QUOTAZIONE-------------
BPEL68*       MOVE 'ZAA173301'    TO W-DECOD
BPEL68*       COPY ZMZINDIR.
BPEL68*       COPY ZMZVALNM.
BPEL68*       COMPUTE WCTV00-TQUOLIS = W-COM-NUM / (10 ** M-D(IND1))
BPEL68        MOVE WRK-CTV00-TQUOLIS TO WCTV00-TQUOLIS
000172*PARITA' FISSA---------------
BPEL68*       MOVE 'ZAA173601'     TO W-DECOD
BPEL68*       COPY ZMZINDIR.
BPEL68*       COPY ZMZVALNM.
BPEL68*       MOVE W-COM-NUM     TO  WCTV00-PARITA
BPEL68*       COMPUTE WCTV00-PARITA-INT = M-L(IND1) - M-D(IND1)
BPEL68*       MOVE M-D(IND1)     TO WCTV00-PARITA-DEC.
BPEL68        MOVE WRK-CTV00-PARITA      TO WCTV00-PARITA.
BPEL68        MOVE WRK-CTV00-PARITA-INT  TO WCTV00-PARITA-INT.
BPEL68        MOVE WRK-CTV00-PARITA-DEC  TO WCTV00-PARITA-DEC.
000172 0423-COMUNI-CTV-END.
000172     EXIT.
000172 0424-CHIAMA-ZMBCTV00.
000172     EXEC SQL INCLUDE ZMYCTV00 END-EXEC.
000172     IF WCTV00-RETURN-CODE NOT EQUAL '00'
000172        MOVE M-M(IND-COM)       TO W-MAP-ERR
000172        MOVE W-COM-COORD        TO W-MOD-ERR
000172        MOVE 'S164'             TO W-COD-ERR
000172        MOVE WCTV00-DESCRIZIONE TO W-DES-ERR
000172        MOVE 'E'                TO M-S(IND-COM)
000172        PERFORM 9999-GESTIONE-ERRORE
000172           THRU 9999-GESTIONE-ERRORE-END
000172     END-IF.
000172 0424-CHIAMA-ZMBCTV00-END.
000172     EXIT.
000172 0425-CTVDL-E-CTVDC.
000172     INITIALIZE ZMWCTV00.
000172*---------------------CAMBIO
000172        MOVE 'ZOR030901'            TO W-DECOD
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        MOVE W-COM-NUM     TO WCTV00-CAMBIO
000172*---------------------IMPORTO ORDINE
000172        MOVE 'ZOR030501'     TO W-DECOD
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        MOVE W-COM-NUM     TO WCTV00-IMPORTO
000172*----------------------CODICE COMANDO
000172        MOVE 'CTVDC' TO        WCTV00-COMANDO
000172*----------------------CHIAMATA ZMBCTV00  ------------

000172        PERFORM 0869-CALCOLA-CONTROVALORI
000172           THRU 0869-CALCOLA-CONTROVALORI-END
000172
000172*------------------------CONTROV. DIVISA LISTINO
000172           MOVE 'ZOR030601'     TO W-DECOD
000172           COPY ZMZINDIR.
000172           COPY ZMZVALNM.
000172           IF W-COM-NUM  NOT GREATER ZEROES
000172              COMPUTE W-COM1 = WRK-DIVLIS * (10 ** M-D (IND1))
000172              COPY ZMZFMMOD.
000172              MOVE SPACES                TO M-S (IND1)
000172           END-IF
000172*------------------------CONTROV. DIVISA CONTABILITA'
000172           MOVE 'ZOR036501'     TO W-DECOD
000172           COPY ZMZINDIR.
000172           COPY ZMZVALNM.
000172           IF W-COM-NUM  NOT GREATER ZEROES
000172              COMPUTE W-COM1 = WRK-DIVCON * (10 ** M-D (IND1))
000172              COPY ZMZFMMOD.
000172              MOVE SPACES                TO M-S (IND1)
000172           END-IF.
000172 0425-CTVDL-E-CTVDC-END.
000172     EXIT.
       0500-REGISTRA-MOV.
           MOVE 'ZRI010301'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO W-COM-NUM-A
           MOVE IND1                             TO IND2.
           MOVE 'ZRI010401'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO W-COM-NUM-B
           MOVE 'ZOP020201'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO W-P1
           MOVE 'ZOP020301'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO W-P2
           IF W-COM-NUM-A > ZEROS AND
              W-COM-NUM-B > ZEROS AND
              (W-P1 = 'P' OR W-P2 = 'P')
              MOVE W-CIST                        TO SCARA-CIST
              MOVE 'ZRI010301'                   TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                     TO SCARA-CDPZ
              MOVE 'ZRI010401'                   TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                     TO SCARA-NPRGOPE
              MOVE '1'                           TO W-QUANDO
              PERFORM 0504-OPEN-ASCARA
                 THRU 0504-OPEN-ASCARA-END
              PERFORM 0505-LEGGI-ASCARA
                 THRU 0505-LEGGI-ASCARA-END
              IF W-EXIT
                 GO TO 0500-REGISTRA-MOV-END
              END-IF
           END-IF.
           MOVE W-CIST                        TO SCARA-CIST.
           MOVE 'ZRI011501'                   TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                     TO SCARA-CDPZ.
           MOVE 'ZRI011601'                   TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                     TO SCARA-NPRGOPE.
           IF SCARA-CDPZ    > ZEROS AND
              SCARA-NPRGOPE > ZEROS
              MOVE SPACES            TO W-QUANDO
              PERFORM 0504-OPEN-ASCARA
                 THRU 0504-OPEN-ASCARA-END
              PERFORM 0505-LEGGI-ASCARA
                 THRU 0505-LEGGI-ASCARA-END
           END-IF.
       0500-REGISTRA-MOV-END.
           EXIT.
       0504-OPEN-ASCARA.
           EXEC SQL INCLUDE ZMLOPE01 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8                             TO W-FLAG-ERR
              MOVE '9999'                        TO W-COD-ERR
              MOVE 'TBASCARA'                    TO L-NOME-TABELLA
              MOVE W-SQLCODE                     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                    TO L-MODULO
              MOVE '0504-OPEN-ASCARA'            TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       0504-OPEN-ASCARA-END.
           EXIT.
       0505-LEGGI-ASCARA.
           PERFORM 0506-FETCH-ASCARA
              THRU 0506-FETCH-ASCARA-END.
           IF W-SQL-NON-TROVATO
              IF W-QUANDO = '1'
                 MOVE 'ZRI010301'                TO W-DECOD
                 MOVE W-DEC-COORD                TO W-MOD-ERR
                 COPY ZMZINDIR.
              ELSE
                 MOVE 'ZRI011501'                TO W-DECOD
                 MOVE W-DEC-COORD                TO W-MOD-ERR
                 COPY ZMZINDIR.
              END-IF
              IF M-S(IND1) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 MOVE 'SI'            TO W-FLAG-EXIT
                 MOVE 'E'             TO M-S(IND1)
                 MOVE M-M(IND1)       TO W-MAP-ERR
                 MOVE 'S003'          TO W-COD-ERR
                 MOVE SCARA-CDPZ      TO WCM-SCARA-CDPZ-1
                 MOVE SCARA-NPRGOPE   TO WCM-SCARA-NPRGOPE-1
                 MOVE SPACES          TO WCM-SCARA-DESCR-1
                 MOVE ' ASSENTE IN ZM.TBASCARA'
                                      TO WCM-SCARA-DESCR-1
                 MOVE WCM-ERR-SCARA-1 TO W-DES-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
              GO TO 0505-LEGGI-ASCARA-END
           END-IF.
           IF W-SQL-OK
              MOVE 0    TO W-CTR-ASCARA
              INITIALIZE WRK-DCLTBAMOVP
              MOVE ZEROES TO WRK-IND
                             WRK-IND-IND
              MOVE ZEROES TO WRK-ICTMOV-VALASS
000241        MOVE ZEROES TO WRK-ICTVLIS-VALASS
              PERFORM 0507-ELABORA-ASCARA
                 THRU 0507-ELABORA-ASCARA-END
                 UNTIL W-SQL-NON-TROVATO OR
                 W-P1-P2 = 'NO'
              IF WRK-ICTMOV-VALASS GREATER ZEROES
090697        AND W-QUANDO = '1'
                 PERFORM
                    VARYING WRK-IND FROM 1 BY 1
                      UNTIL WRK-IND > 35          OR
                      WRK-MOVP(WRK-IND) NOT GREATER ZEROES OR
                      L-ERR-ERR                   OR W-EXIT
                         MOVE WRK-INDICE(WRK-IND) TO WRK-IND-IND
                         MOVE WS-TAB-TBAMOVP(WRK-IND-IND)
                                               TO DCLTBAMOVP
                         IF WRK-NPRGMOVP(WRK-IND) = MOVP-NPRGMOVP
                            IF MOVP-TMOV = 1
                               COMPUTE MOVP-ICTMOV =
                                        (WRK-ICTMOV-VALASS * -1)
000241                         COMPUTE MOVP-ICTVLIS =
000241                                  (WRK-ICTVLIS-VALASS * -1)
                            END-IF
                            IF MOVP-TMOV = 2
                               MOVE WRK-ICTMOV-VALASS TO MOVP-ICTMOV
00241                          MOVE WRK-ICTVLIS-VALASS TO MOVP-ICTVLIS
                            END-IF
                            MOVE DCLTBAMOVP
                                  TO WS-TAB-TBAMOVP(WRK-IND-IND)
                         END-IF
                 END-PERFORM
              END-IF
           END-IF.
           EXEC SQL INCLUDE ZMLCLO01 END-EXEC.
           MOVE 0       TO W-TAPPO.
       0505-LEGGI-ASCARA-END.
           EXIT.
       0506-FETCH-ASCARA.
           EXEC SQL INCLUDE ZMF10701 END-EXEC.
           MOVE SPACES       TO W-TROVATO.
           IF W-SQL-NON-TROVATO
              NEXT SENTENCE
           ELSE
              IF NOT W-SQL-OK
                 MOVE 8                          TO W-FLAG-ERR
                 MOVE '9999'                     TO W-COD-ERR
                 MOVE 'TBASCARA'                 TO L-NOME-TABELLA
                 MOVE W-SQLCODE                  TO L-CODICE-SQL
                 MOVE 'ZMBSVIL0'                 TO L-MODULO
                 MOVE '0506-FETCH-ASCARA'        TO L-SUB-MODULO
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
       0506-FETCH-ASCARA-END.
           EXIT.
       0507-ELABORA-ASCARA.
           MOVE '0507'                           TO W-LAST-LABEL.
           IF SCARA-IRIMFIN NOT = 0
              ADD 1                              TO W-CTR-ASCARA
              ADD 1                              TO INDP
              MOVE 0                             TO INDD(INDP)
              IF W-CTR-ASCARA = 1
                 PERFORM 0510-TEST-P1-P2
                    THRU 0510-TEST-P1-P2-END
                 IF W-P1-P2 NOT = SPACES
                    GO TO 0507-ELABORA-ASCARA-END
                 END-IF
              END-IF
              ADD 1                              TO WRK-IND
              PERFORM 0508-SCRIVI-AMOVP
                 THRU 0508-SCRIVI-AMOVP-END
              IF W-EXIT
                 GO TO 0507-ELABORA-ASCARA-END
              END-IF
              MOVE DCLTBAMOVP                 TO WS-TAB-TBAMOVP(INDP)
           ELSE
              IF W-DECOD = 'ZRI010401'
                 MOVE 'ZRI010301'                TO W-DECOD
                 MOVE W-DEC-COORD                TO W-MOD-ERR
                 COPY ZMZINDIR.
              ELSE
                 MOVE 'ZRI011501'                TO W-DECOD
                 MOVE W-DEC-COORD                TO W-MOD-ERR
                 COPY ZMZINDIR.
              END-IF
              IF M-S(IND1) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 MOVE W-CIST       TO ABSC-CIST
                 MOVE SCARA-CSTC   TO ABSC-CSTC
060397*          MOVE MOVP-CSTC    TO ABSC-CSTC
060397*          MOVE MOVP-CIST    TO ABSC-CIST
060397           PERFORM 0630-LEGGI-TABSC
060397              THRU 0630-LEGGI-TABSC-END
060397           IF W-SQL-NON-TROVATO
                    MOVE 0                        TO W-MAP-ERR
                    MOVE SPACES                   TO W-MOD-ERR
                    MOVE 2                        TO W-FLAG-ERR
                    MOVE 'S032'                   TO W-COD-ERR
                    MOVE ABSC-CSTC                TO WCM-ABSC-CSTC
                    MOVE SPACES                   TO WCM-ABSC-DESCR
                    MOVE ' ASSENTE IN ZM.TBTABSC' TO WCM-ABSC-DESCR
                    MOVE WCM-ERR-ABSC             TO W-DES-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
060397              GO TO 0507-ELABORA-ASCARA-END
060397           END-IF
060397           IF ABSC-CTIPSTC NOT = 283 AND 282
060397
                    MOVE 'E'            TO M-S(IND1)
                    MOVE M-M(IND1)      TO W-MAP-ERR
                    MOVE 'S004'         TO W-COD-ERR
                    MOVE SPACES         TO WCM-SCARA-DESCR
                    MOVE SCARA-CISO     TO WCM-SCARA-CISO
                    MOVE SCARA-CDPZ     TO WCM-SCARA-CDPZ
                    MOVE SCARA-NPRGOPE  TO WCM-SCARA-NPRGOPE
                    MOVE ' SC '         TO WCM-SCARA-DESCR1
                    MOVE SCARA-CSTC     TO WCM-SCARA-CSTC
                    MOVE ' ND '         TO WCM-SCARA-DESCR2
                    MOVE SCARA-NNDGSET  TO WCM-SCARA-NNDGSET
                    MOVE ' SUF '        TO WCM-SCARA-DESCR3
                    MOVE SCARA-NSUFABT  TO WCM-SCARA-NSUFABT
                    MOVE SPACES         TO WCM-SCARA-DESCR4
                    MOVE WCM-ERR-SCARA  TO W-DES-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
              END-IF
           END-IF.
           PERFORM 0506-FETCH-ASCARA
              THRU 0506-FETCH-ASCARA-END.
       0507-ELABORA-ASCARA-END.
           EXIT.
       0508-SCRIVI-AMOVP.
           INITIALIZE DCLTBAMOVP.
           MOVE 'SI'                        TO W-ISRT-MOVP.
           MOVE W-CIST                      TO MOVP-CIST.
           MOVE W-DIPOPE                    TO MOVP-DIPOPE.
           MOVE OPE-NUMOPE                  TO MOVP-NUMOPE.
           MOVE 'ZOP020501'                 TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                   TO MOVP-DCON.
020797     IF MOVP-DCON > OPE-DESCOPE
020797        MOVE OPE-DESCOPE              TO MOVP-DCON
020797     END-IF.

020797     MOVE MOVP-DCON                TO W-NUM-DT
 "         MOVE W-COM-DT                 TO DT-CMPI
 "         MOVE 'AAAAMMGG'               TO DT-FINP
 "         MOVE 'AAAAMMGG'               TO DT-FOUT
 "         PERFORM 9010-CTR-DAT
 "            THRU 9010-CTR-DAT-END
 "         IF DT-RC NOT = ZEROS
 "            MOVE 8                    TO W-FLAG-ERR
 "            MOVE '9999'               TO W-COD-ERR
 "            MOVE 'ZMBSVIL0'           TO L-MODULO
 "            MOVE '0508-SCRIVI-AMOVP'  TO L-SUB-MODULO
 "            PERFORM 9999-GESTIONE-ERRORE
 "               THRU 9999-GESTIONE-ERRORE-END
 "         ELSE
 "            IF DT-NOMG = 1 OR 7
 "            OR DT-NLAV = 'Y'
000031           IF CONFG-DCONFEST = 'S'
000031              MOVE 'N'                     TO W-BLOCC
000031              MOVE 'A'                     TO W-MAP-ERR
000031              MOVE W-DEC-COORD             TO W-MOD-ERR
000031              MOVE 'S110'                  TO W-COD-ERR
000031              PERFORM 9999-GESTIONE-ERRORE
000031                 THRU 9999-GESTIONE-ERRORE-END
000031           ELSE
 "                  MOVE 'E'                     TO M-S(IND1)
 "                  MOVE M-M(IND1)               TO W-MAP-ERR
 "                  MOVE W-DEC-COORD             TO W-MOD-ERR
000031              MOVE 2                       TO W-FLAG-ERR
CAR982*             MOVE 'S110'                  TO W-COD-ERR
CAR982              MOVE 'S11A'                  TO W-COD-ERR
000031              PERFORM 9999-GESTIONE-ERRORE
 "                     THRU 9999-GESTIONE-ERRORE-END
000031           END-IF
000031        ELSE
CAR982*          MOVE W-CSIGDBASE TO FOREX-CISO
CAR982           MOVE W-CSIGDCON  TO FOREX-CISO
000031           MOVE MOVP-DCON   TO FOREX-ANNOMMGG
 "               MOVE W-CIST      TO FOREX-CIST
 "               PERFORM LEGGI-TBAFOREX
 "                  THRU LEGGI-TBAFOREX-END
000031           IF W-SQL-OK
CAR982             IF CONFG-DCONFEST = 'S'
CAR982                MOVE 'N'                     TO W-BLOCC
CAR982                MOVE 'A'                     TO W-MAP-ERR
CAR982                MOVE W-DEC-COORD             TO W-MOD-ERR
CAR982                MOVE 'S11B'                  TO W-COD-ERR
CAR982                PERFORM 9999-GESTIONE-ERRORE
CAR982                   THRU 9999-GESTIONE-ERRORE-END
CAR982             ELSE
000031                MOVE 'E'                     TO M-S(IND1)
 "                    MOVE M-M(IND1)               TO W-MAP-ERR
 "                    MOVE W-DEC-COORD             TO W-MOD-ERR
000031                MOVE 2                       TO W-FLAG-ERR
CAR982*               MOVE 'S110'                  TO W-COD-ERR
CAR982                MOVE 'S11C'                  TO W-COD-ERR
000031                PERFORM 9999-GESTIONE-ERRORE
 "                       THRU 9999-GESTIONE-ERRORE-END
CAR982             END-IF
000031           END-IF
 ""           END-IF
020797     END-IF.
           MOVE 'ZOP021201'          TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM            TO MOVP-FCON.

020797     IF MOVP-FCON = ZERO
020797        MOVE 1                 TO MOVP-FCON
           END-IF.

020797     MOVE MOVP-DCON            TO WRK-DATA1.
  "        MOVE OPE-DESCOPE          TO WRK-DATA2.
  "        IF WRK-MESE1 < WRK-MESE2 OR
  "           WRK-ANNO1 < WRK-ANNO2
  "           MOVE 3                 TO MOVP-FCON
020797     END-IF.

           MOVE 'ZOP020601'          TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM            TO MOVP-DVALNOA.
           IF L-FASE GREATER 1
              IF MOVP-DVALNOA > MOVP-DCON AND
                 OPE-FTIPORD = ZEROES
                 IF M-S(IND1) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'SI'           TO W-FLAG-EXIT
                    MOVE W-DEC-COORD    TO W-MOD-ERR
                    MOVE 'E'            TO M-S(IND1)
                    MOVE M-M(IND1)      TO W-MAP-ERR
                    MOVE 'S059'         TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                    GO TO 0508-SCRIVI-AMOVP-END
                 END-IF
              END-IF
000188        MOVE 'ZOP020101'          TO W-DECOD
000188        COPY ZMZINDIR.
000188        IF MOD(M-I(IND1):M-L(IND1)) = 'E'
000188           MOVE OPE-CDIVORD  TO WRK-DIVISA-SPOT
000188           PERFORM CALCOLA-DATA-SPOT
000188              THRU CALCOLA-DATA-SPOT-END
000188           IF MOVP-DVALNOA > WRK-DATASPOT
000188              MOVE WRK-DATASPOT  TO  MOVP-DVALNOA
000188           END-IF
000188        END-IF

APV066***---- LA DATA VALUTA REGOL. NON DEVE ESSERE INFERIORE A DESCOPE

APV066        IF MOVP-DVALNOA LESS OPE-DESCOPE
APV066           MOVE OPE-DESCOPE       TO MOVP-DVALNOA
APV066        END-IF

           END-IF.
EUR001     IF MOVP-DVALNOA > WRK-MOVP-DVALNOA
EUR001        MOVE MOVP-DVALNOA TO WRK-MOVP-DVALNOA
EUR001     END-IF

           MOVE 'ZAA171501'                 TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                   TO MOVP-DESCOPE.

APV059***---- SE SIAMO IN DATA OGGI 1998 E LA VALUTA NOTA E' SUPERIORE
APV059***---- AL 31121998 VIENE FORZATA CON 31121998

APV059     IF MOVP-DESCOPE < 19990101
APV059     AND MOVP-DVALNOA > 19981231
APV059        MOVE 19981231                 TO MOVP-DVALNOA
APV059        MOVE 'ZOP020601'              TO W-DECOD
APV059        COPY ZMZINDIR.
APV059        MOVE MOVP-DVALNOA             TO W-DATN
APV059        COPY ZMZFMMOD.
APV059     END-IF.

           MOVE W-CTR-ASCARA                TO MOVP-NPRGMOVP.
           MOVE ZEROES                      TO MOVP-NSUBMOVP.
           IF SCARA-IRIMFIN > 0
              MOVE 1                        TO MOVP-TMOV
           ELSE
              MOVE 2                        TO MOVP-TMOV
           END-IF.
           MOVE SCARA-CISO                  TO MOVP-CISO.
EUR001***------------- VERIFICA SE DIVISA IN O LIRE
EUR001     MOVE W-CIST                TO DIV-CIST
EUR001     MOVE MOVP-CISO             TO DIV-CISO
EUR001     PERFORM 0870-TRATTA-DIVISA
EUR001        THRU 0870-TRATTA-DIVISA-END
EUR001     IF DIV-FINOUT = 2 OR 3
EUR001        MOVE 'S'     TO    WRK-DIVISA-UEM
EUR001     END-IF.
           MOVE 0                           TO MOVP-ICABARP.
           MOVE 0                           TO MOVP-ICABART.
000252*    MOVE SCARA-ICABCTC               TO MOVP-ICABCTC.
000252*    MOVE SCARA-ICABCTC               TO MOVP-ICABDI.
000252     IF SCARA-ICABCTC NOT = ZEROES
000252        MOVE SCARA-ICABCTC               TO MOVP-ICABCTC
000252        MOVE SCARA-ICABCTC               TO MOVP-ICABDI
000252     END-IF
000252     IF SCARA-ICABCTC = ZEROES
000252        MOVE SCARA-ICABMOV               TO MOVP-ICABCTC
000252        MOVE SCARA-ICABMOV               TO MOVP-ICABDI
000252     END-IF
           MOVE 0                           TO MOVP-ICABLI.
           MOVE 0                           TO MOVP-ICABLL.
           MOVE SCARA-ICABMOV               TO MOVP-ICABMOV.
           MOVE 0                           TO MOVP-ICABPM.
           MOVE SCARA-ICABTER               TO MOVP-ICABTER.
           MOVE SCARA-IPARPRO               TO MOVP-IPARPRO.
           MOVE SCARA-IPARTER               TO MOVP-IPARTER.
           MOVE 0                           TO MOVP-PSCACAB.
           MOVE SPACES                      TO MOVP-NUMASSCC.
           MOVE SPACES                      TO MOVP-CISOEM.
           MOVE 0                           TO MOVP-IMPEM.
           MOVE 0                           TO MOVP-ICABACC.
110697     MOVE OPE-TCAB                    TO MOVP-TCAB.
           IF SCARA-IRIMFIN < 0
              COMPUTE MOVP-IMOV = SCARA-IRIMFIN * -1
           ELSE
              MOVE SCARA-IRIMFIN            TO MOVP-IMOV
           END-IF.
           IF MOVP-TMOV = 1
              COMPUTE MOVP-IMOV = MOVP-IMOV * -1
           END-IF.
000172*-----------------------------LA VALORIZZAZIONE E' STATA SPOSTATA
000172*----------------------------------------DOPO LA LETTURA DI ARAPP
000172*    MOVE SCARA-IRIMFIN               TO W-COM-NUM-DEC8.
000172*    COMPUTE MOVP-ICTMOV =
000172*            W-COM-NUM-DEC8 * MOVP-ICABMOV.
000172*    IF MOVP-TMOV = 1
000172*       COMPUTE MOVP-ICTMOV = MOVP-ICTMOV * -1
000172*    END-IF.
000172*    MOVE MOVP-ICTMOV              TO W-ICTMOV.
000172*    IF W-DECSIGBASE  < 3
000172*       COMPUTE W-DIFF = 3 - W-DECSIGBASE
000172*       COMPUTE W-ICTMOV       = W-ICTMOV / 10 ** W-DIFF
000172*       COMPUTE W-ICTMOV       = W-ICTMOV * 10 ** W-DIFF
000172*       MOVE W-ICTMOV                 TO MOVP-ICTMOV
000172*    END-IF.

000172*    MOVE INDP                        TO WRK-INDICE(WRK-IND).
000172*    MOVE MOVP-NPRGMOVP               TO WRK-NPRGMOVP(WRK-IND).
000172*    IF ((OPE-FITOEBS = 'I' AND
000172*         SCARA-IRIMFIN < ZEROES) OR
000172*        (OPE-FITOEBS = 'E' AND
000172*         SCARA-IRIMFIN > ZEROES))
000172*        MOVE ZEROES                  TO WRK-ICTMOV-VALASS
000172*        MOVE MOVP-ICTMOV             TO WRK-ICTMOV-VALASS
000172*    END-IF.

           MOVE SCARA-CSTC                  TO MOVP-CSTC.
           MOVE SCARA-CDPZ                  TO MOVP-CDPZ.
           MOVE SCARA-NPRGOPE               TO MOVP-NPRGOPE.
           MOVE SCARA-NPRGFID               TO MOVP-NPRGFID.
           MOVE SCARA-CCATFIDO              TO MOVP-CCATFIDO.
           MOVE 0                           TO MOVP-CDPZANT.
           MOVE 0                           TO MOVP-NCCOANT.
BPO002     MOVE 0                           TO MOVP-NCCOANT13.
           MOVE SCARA-DSCATAS               TO MOVP-DSCATAS.
           MOVE SCARA-DVAL                  TO MOVP-DVAL.
           MOVE SCARA-NNDGSET               TO MOVP-NNDGSET.
           MOVE SCARA-NSUFABT               TO MOVP-NSUFABT.
           MOVE SCARA-RRAP                  TO MOVP-RRAP.
           MOVE SCARA-RRAPCTC               TO MOVP-RRAPCTC.
           MOVE SCARA-RRAPINT               TO MOVP-RRAPINT.
           MOVE SCARA-RRAPLIST              TO MOVP-RRAPLIST.
           MOVE SCARA-TSCA                  TO MOVP-TSCA.
           MOVE SCARA-CIST                  TO RAPP-CIST.
           MOVE SCARA-CSTC                  TO RAPP-CSTC.
           MOVE SCARA-CISO                  TO RAPP-CISO.
           MOVE SCARA-NNDGSET               TO RAPP-NNDGSET.
           MOVE SCARA-NSUFABT               TO RAPP-NSUFABT.
           MOVE SCARA-CDPZ                  TO RAPP-CDPZ.
           MOVE SCARA-NPRGOPE               TO RAPP-NPRGOPE.
           PERFORM 0509-LEGGI-ARAPP
              THRU 0509-LEGGI-ARAPP-END.
           IF W-SQL-NON-TROVATO
              IF W-QUANDO = '1'
                 MOVE 'ZRI010301'                TO W-DECOD
                 MOVE W-DEC-COORD                TO W-MOD-ERR
                 COPY ZMZINDIR.
              ELSE
                 MOVE 'ZRI011501'                TO W-DECOD
                 MOVE W-DEC-COORD                TO W-MOD-ERR
                 COPY ZMZINDIR.
              END-IF
              IF M-S(IND1) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 MOVE 'E'            TO M-S(IND1)
                 MOVE M-M(IND1)      TO W-MAP-ERR
                 MOVE 'S005'         TO W-COD-ERR
                 MOVE SPACES         TO WCM-SCARA-DESCR
                 MOVE RAPP-CISO      TO WCM-SCARA-CISO
                 MOVE RAPP-CDPZ      TO WCM-SCARA-CDPZ
                 MOVE RAPP-NPRGOPE   TO WCM-SCARA-NPRGOPE
                 MOVE ' SC '         TO WCM-SCARA-DESCR1
                 MOVE RAPP-CSTC      TO WCM-SCARA-CSTC
                 MOVE ' ND '         TO WCM-SCARA-DESCR2
                 MOVE RAPP-NNDGSET   TO WCM-SCARA-NNDGSET
                 MOVE ' SUF '        TO WCM-SCARA-DESCR3
                 MOVE RAPP-NSUFABT   TO WCM-SCARA-NSUFABT
                 MOVE SPACES         TO WCM-SCARA-DESCR4
                 MOVE WCM-ERR-SCARA  TO W-DES-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
000172     IF RAPP-DACC <  ISTI-DVLDEUR
000172        MOVE SCARA-IRIMFIN               TO W-COM-NUM-DEC8
000172        COMPUTE MOVP-ICTMOV =
000172                    W-COM-NUM-DEC8 * MOVP-ICABMOV
000172        IF MOVP-TMOV = 1
000172           COMPUTE MOVP-ICTMOV = MOVP-ICTMOV * -1
000172        END-IF
000172        MOVE MOVP-ICTMOV              TO W-ICTMOV
000172        IF W-DECSIGCON   < 3
000172           COMPUTE W-DIFF = 3 - W-DECSIGCON
000172           COMPUTE W-ICTMOV       = W-ICTMOV / 10 ** W-DIFF
000172           COMPUTE W-ICTMOV       = W-ICTMOV * 10 ** W-DIFF
000172           MOVE W-ICTMOV                 TO MOVP-ICTMOV
000172        END-IF
000172        COMPUTE MOVP-ICTVLIS = MOVP-ICTMOV / W-PARITAFIS
000172        MOVE MOVP-ICTVLIS             TO W-ICTVLIS
000172        IF W-DECSIGBASE  < 3
000172           COMPUTE W-DIFF = 3 - W-DECSIGBASE
000172           COMPUTE W-ICTVLIS      = W-ICTVLIS / 10 ** W-DIFF
000172           COMPUTE W-ICTVLIS      = W-ICTVLIS * 10 ** W-DIFF
000172           MOVE W-ICTVLIS                TO MOVP-ICTVLIS
000172        END-IF
000172     ELSE
000172*---------------------------------------------  VALORIZZAZIONE DI
000172*---------------------------------------------------- MOVP-ICTMOV
000172*--------------------------------------------------- MOVP-ICTVLIS
000172*--------------------------------------------- CHIAMANDO ZMBCTV00
APV038        MOVE SCARA-IRIMFIN               TO W-COM-NUM-DEC8
000172        INITIALIZE ZMWCTV00
000172*-----------------------------------------------------CAMBIO
000172        COMPUTE WCTV00-CAMBIO = MOVP-ICABMOV * (10 ** 7)
000172*--------------------------------------------RIMANENZA FINALE
APV038*       COMPUTE WCTV00-IMPORTO = SCARA-IRIMFIN * (10 ** 3)
APV038        COMPUTE WCTV00-IMPORTO = W-COM-NUM-DEC8 * (10 ** 3)
000172*----------------------CODICE COMANDO
000172        MOVE 'CTVDC' TO        WCTV00-COMANDO
000172*----------------------CHIAMATA ZMBCTV00  ------------
000172        PERFORM 0869-CALCOLA-CONTROVALORI
000172           THRU 0869-CALCOLA-CONTROVALORI-END
000172        MOVE WRK-DIVCON                TO  MOVP-ICTMOV
000172        MOVE WRK-DIVLIS                TO  MOVP-ICTVLIS
000252        IF MOVP-CISO = W-CSIGDBASE
000255*          MOVE SCARA-IRIMFIN  TO   MOVP-ICTVLIS
000255           MOVE W-COM-NUM-DEC8 TO   MOVP-ICTVLIS
000252        END-IF
000252        IF MOVP-CISO = W-CSIGDCON
000255*          MOVE SCARA-IRIMFIN  TO   MOVP-ICTMOV
000255           MOVE W-COM-NUM-DEC8 TO   MOVP-ICTMOV
000252        END-IF
APV038        IF MOVP-TMOV = 1
APV038           COMPUTE MOVP-ICTMOV  = MOVP-ICTMOV  * (-1)
APV038           COMPUTE MOVP-ICTVLIS = MOVP-ICTVLIS * (-1)
APV038        END-IF
000172     END-IF.

000172     MOVE INDP                        TO WRK-INDICE(WRK-IND).
000172     MOVE MOVP-NPRGMOVP               TO WRK-NPRGMOVP(WRK-IND).
000172     IF ((OPE-FITOEBS = 'I' AND
000172          SCARA-IRIMFIN < ZEROES) OR
000172         (OPE-FITOEBS = 'E' AND
000172          SCARA-IRIMFIN > ZEROES))
000172         MOVE ZEROES                  TO WRK-ICTMOV-VALASS
000172         MOVE MOVP-ICTMOV             TO WRK-ICTMOV-VALASS
000194         MOVE MOVP-ICTVLIS            TO WRK-ICTVLIS-VALASS
000172     END-IF.
           MOVE RAPP-TASFV                       TO MOVP-TASFV.
           MOVE RAPP-DSCAOPE                     TO MOVP-DSCAOPE.
           MOVE RAPP-CDIVCTP                     TO MOVP-CDIVCTP.
           MOVE RAPP-CSTCCTP                     TO MOVP-CSTCCTP.
BDR078     MOVE RAPP-NNDGPART                    TO MOVP-NNDGPART.
000088*    MOVE RAPP-DVALNOA                     TO MOVP-DVALNOA.
APV071     IF MOVP-DVALNOA < RAPP-DVALNOA
APV071        MOVE RAPP-DVALNOA TO MOVP-DVALNOA
000292        MOVE RAPP-DVALNOA TO WRK-DVALNOA
APV071     END-IF.
EUR001     IF MOVP-DVALNOA > WRK-MOVP-DVALNOA
EUR001        MOVE MOVP-DVALNOA TO WRK-MOVP-DVALNOA
EUR001     END-IF.

       0508-SCRIVI-AMOVP-END.
           EXIT.
       0509-LEGGI-ARAPP.
           EXEC SQL INCLUDE ZMS11301 END-EXEC.
           IF NOT W-SQL-OK AND
              NOT W-SQL-NON-TROVATO
              MOVE 8                             TO W-FLAG-ERR
              MOVE '9999'                        TO W-COD-ERR
              MOVE 'TBARAPP '                    TO L-NOME-TABELLA
              MOVE W-SQLCODE                     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                    TO L-MODULO
              MOVE '0509-LEGGI-ARAPP'            TO L-SUB-MODULO
              MOVE 'NO'                          TO W-P1-P2
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       0509-LEGGI-ARAPP-END.
           EXIT.
       0510-TEST-P1-P2.
           MOVE SCARA-CIST                  TO RAPP-CIST.
           MOVE SCARA-CSTC                  TO RAPP-CSTC.
           MOVE SCARA-CISO                  TO RAPP-CISO.
           MOVE SCARA-NNDGSET               TO RAPP-NNDGSET.
           MOVE SCARA-NSUFABT               TO RAPP-NSUFABT.
           MOVE SCARA-CDPZ                  TO RAPP-CDPZ.
           MOVE SCARA-NPRGOPE               TO RAPP-NPRGOPE.
           PERFORM 0509-LEGGI-ARAPP
              THRU 0509-LEGGI-ARAPP-END.
           IF W-QUANDO = '1'
              MOVE 'ZRI010301'                TO W-DECOD
              COPY ZMZINDIR.
           ELSE
              MOVE 'ZRI011501'                TO W-DECOD
              COPY ZMZINDIR.
           END-IF
           IF W-SQL-NON-TROVATO
              MOVE 'E'            TO M-S(IND1)
              MOVE M-M(IND1)      TO W-MAP-ERR
              MOVE W-DEC-COORD    TO W-MOD-ERR
              MOVE 2              TO W-FLAG-ERR
              MOVE 'S005'         TO W-COD-ERR
              MOVE 'NO'           TO W-P1-P2
              MOVE SPACES         TO WCM-SCARA-DESCR
              MOVE RAPP-CISO      TO WCM-SCARA-CISO
              MOVE RAPP-CDPZ      TO WCM-SCARA-CDPZ
              MOVE RAPP-NPRGOPE   TO WCM-SCARA-NPRGOPE
              MOVE ' SC '         TO WCM-SCARA-DESCR1
              MOVE RAPP-CSTC      TO WCM-SCARA-CSTC
              MOVE ' ND '         TO WCM-SCARA-DESCR2
              MOVE RAPP-NNDGSET   TO WCM-SCARA-NNDGSET
              MOVE ' SUF '        TO WCM-SCARA-DESCR3
              MOVE RAPP-NSUFABT   TO WCM-SCARA-NSUFABT
              MOVE SPACES         TO WCM-SCARA-DESCR4
              MOVE WCM-ERR-SCARA  TO W-DES-ERR
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
           MOVE W-DEC-COORD    TO W-COORD-COM
           MOVE RAPP-CPCS                        TO APROC-CPCS
           PERFORM 0405-LEGGI-TAPROC
              THRU 0405-LEGGI-TAPROC-END.
TEST       IF APROC-TPCSPRN NOT NUMERIC
TEST          MOVE ZEROS                         TO APROC-TPCSPRN
TEST       END-IF.
           IF APROC-TPCSPRN = 1
              IF W-P1 = 'P' AND
                 W-P2 NOT = 'P'
                 NEXT SENTENCE
              ELSE
                 MOVE 'SI'           TO W-FLAG-EXIT
                 MOVE 'E'            TO M-S(IND1)
                 MOVE M-M(IND1)      TO W-MAP-ERR
                 MOVE W-COORD-COM    TO W-MOD-ERR
                 MOVE 'S076'         TO W-COD-ERR
                 MOVE 'NO'           TO W-P1-P2
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
           IF APROC-TPCSPRN = 2
              IF W-P2 = 'P' AND
                 W-P1 NOT = 'P'
                 NEXT SENTENCE
              ELSE
                 MOVE 'SI'           TO W-FLAG-EXIT
                 MOVE 'E'            TO M-S(IND1)
                 MOVE M-M(IND1)      TO W-MAP-ERR
                 MOVE W-COORD-COM    TO W-MOD-ERR
                 MOVE 'S077'         TO W-COD-ERR
                 MOVE 'NO'           TO W-P1-P2
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
           IF APROC-TPCSPRN = 3
              IF W-P2 = 'P' AND
                 W-P1 = 'P'
                 NEXT SENTENCE
              ELSE
                 MOVE 'SI'           TO W-FLAG-EXIT
                 MOVE 'E'            TO M-S(IND1)
                 MOVE M-M(IND1)      TO W-MAP-ERR
                 MOVE W-COORD-COM    TO W-MOD-ERR
                 MOVE 'S078'         TO W-COD-ERR
                 MOVE 'NO'           TO W-P1-P2
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
       0510-TEST-P1-P2-END.
           EXIT.
      *-------------------------------------------------------------*
      * PASSO 5 : REGISTRAZIONE MOVIMENTI PATRIMONIALI              *
      *           TABELLA DI RIFERIMENTO TTSVIP                     *
      *-------------------------------------------------------------*
       0600-REGISTRA-MOVP.
           MOVE SPACES TO WRK-CASO2.
           IF TCSVI-TTNCPATR > ZEROS
              MOVE TCSVI-TTNCPATR                TO NCSVP-TTNCPATR
              PERFORM 0610-LEGGI-WNCSVP
                 THRU 0610-LEGGI-WNCSVP-END
              IF L-ERR-ERR
                 GO TO 0600-REGISTRA-MOVP-END
              END-IF

BPEL26*       IF M-S(IND-COM) = 'E'
BPEL26        IF IND-COM GREATER ZEROES AND M-S(IND-COM) = 'E'
                 GO TO 0600-REGISTRA-MOVP-END
              END-IF
           END-IF.
      *--------------------------- SE TTNCPAT2 RISULTA VALORIZZATO
      *--------------------------- RIPETE IL PASSO 5 PER COMPLETARE LO
      *--------------------------- SVILUPPO PATRIMONIALE AGGIUNTIVO
           IF W-EXIT
              GO TO 0600-REGISTRA-MOVP-END
           END-IF.
           IF TCSVI-TTNCPAT2 > ZEROS
              MOVE 'SI'   TO WRK-CASO2
              MOVE TCSVI-TTNCPAT2                TO NCSVP-TTNCPATR
              PERFORM 0610-LEGGI-WNCSVP
                 THRU 0610-LEGGI-WNCSVP-END
              IF L-ERR-ERR
                 GO TO 0600-REGISTRA-MOVP-END
              END-IF

BPEL26*       IF M-S(IND-COM) = 'E'
BPEL26        IF IND-COM GREATER ZEROES AND M-S(IND-COM) = 'E'
                 GO TO 0600-REGISTRA-MOVP-END
              END-IF
           END-IF.
       0600-REGISTRA-MOVP-END.
           EXIT.
       0601-ELABORA-NCSVP.
           IF NCSVP-TTZNAPPC1 (IND5) > SPACES
BAVG90*       MOVE NCSVP-TTZNAPPC1 (IND5)        TO COND-MOD-COORD
BAVG90*       MOVE NCSVP-TTPRES (IND5)           TO COND-CONDIZ
BAVG90*       MOVE NCSVP-TTVALC11 (IND5)         TO COND-VALORE
BAVG90*       PERFORM 0700-CHIAMA-COND
BAVG90*          THRU 0700-CHIAMA-COND-END
BAVG90*       IF COND-RC NOT = ZEROES
BAVG90        MOVE NCSVP-TTZNAPPC1 (IND5)        TO C-COND-MOD-COORD
BAVG90        MOVE NCSVP-TTPRES (IND5)           TO C-COND-CONDIZ
BAVG90        MOVE NCSVP-TTVALC11 (IND5)         TO C-COND-VALORE
BAVG90        PERFORM CONDIZIONI-COPY THRU CONDIZIONI-COPY-EX
BAVG90        MOVE SPACES                        TO W-TROVATO
BAVG90        IF C-COND-RC NOT = ZEROES
                 MOVE 8                          TO W-FLAG-ERR
                 MOVE '9999'                     TO W-COD-ERR
                 MOVE 'ZMBSVIL0'                 TO L-MODULO
                 MOVE '600-REGISTRA-MOVP'        TO L-SUB-MODULO
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           ELSE
BAVG90*       MOVE 'S'                        TO COND-ESITO
BAVG90        MOVE 'S'                        TO C-COND-ESITO
           END-IF.
BAVG90*    IF COND-ESITO  = 'S'
BAVG90     IF C-COND-ESITO  = 'S'
              IF WRK-CASO2 = 'SI'
070197           IF NCSVP-TTIMP (IND5) (1:1) = 'I' AND
                    NCSVP-TTIMP (IND5) (2:1) NUMERIC AND
080197              NCSVP-TTIMP (IND5) (2:1) NOT > WCM-INDMAX(13)
                    MOVE NCSVP-TTIMP (IND5)            TO W-XN
                    MOVE 'ZDV131701'                   TO W-DECOD
                    MOVE W-XN-N                        TO C
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    IF W-COM-NUM = 5
                       MOVE 'ZDV135901'                   TO W-DECOD
                       MOVE W-XN-N                        TO C
                       COPY ZMZINDIR.
                       IF MOD(M-I(IND1):M-L(IND1)) NOT = 'S'
                          GO TO 0601-ELABORA-NCSVP-END
                       END-IF
                    END-IF
                 END-IF
070197        END-IF


              INITIALIZE DCLTBAMOVP
              MOVE SPACES TO WRK-NO-CSTC
              MOVE SPACES TO W-SALTA-AL-SUCCESSIVO
              PERFORM 0620-PREPARA-MOVP
                 THRU 0620-PREPARA-MOVP-END
              IF W-EXIT
                 GO TO 0601-ELABORA-NCSVP-END
              END-IF
              IF WRK-NO-CSTC = 'S'
                 GO TO 0601-ELABORA-NCSVP-END
              END-IF
              IF W-SALTA-AL-SUCCESSIVO = 'S'
                 GO TO 0601-ELABORA-NCSVP-END
              END-IF
              IF W-SI-ESCE = 'S'
                 NEXT SENTENCE
              ELSE
                 MOVE 'SI'                   TO W-ISRT-MOVP
                 ADD 1                       TO INDP
                 MOVE IND5                   TO INDD(INDP)
                 MOVE DCLTBAMOVP             TO WS-TAB-TBAMOVP(INDP)
                 MOVE NCSVP-TTSTC(IND5)      TO WS-TAB-TTSTC(INDP)
                 MOVE NCSVP-TTDIV(IND5)      TO WS-TAB-TTDIV(INDP)
060597           MOVE NCSVP-TTIMP(IND5)      TO WS-TAB-TTIMP(INDP)
000092*-----------------------------------------------------------------TS002599
"     *      ADEGUAMENTO ALLA NUOVA DISCIPLINA DELLE CAUSALI            TS002600
"     *        VALUTARIE IN VIGORE A PARTIRE DAL 01/06/1998             TS002601
"     *-----------------------------------------------------------------TS002602
999999*--------------------------- ATTIVAZIONE CAUSALI 2000
999999*         IF MOVP-DVALNOA >= ISTI-DVLDCAU                         TS002603
999999*            AND APROC-TPCS NOT = 35
999999*            MOVE 1         TO WRK-FLAG-CAU                       TS002605
999999*            INITIALIZE    DCLTBAMOVC                             TS002605
999999*            PERFORM 0611-CAUSALI-98-AMOVC                        TS002606
999999*               THRU 0611-CAUSALI-98-AMOVC-END                    TS002607
999999*         ELSE                                                    TS002610
999999*            MOVE 0         TO WRK-FLAG-CAU                       TS002611
999999*         END-IF                                                  TS002612
999999*-----------------------------------------------------------------TS002613
000376*-----------------------     ATTIVAZIONE CAUSALI 2000
000376          IF APROC-TPCS NOT = 35
000376             MOVE 1         TO WRK-FLAG-CAU
000376             IF MOVP-DVALNOA >= ISTI-DVLDCAU
000376                MOVE 1         TO WRK-FLAG-CAU-2000
000376             ELSE
000376                MOVE 0         TO WRK-FLAG-CAU-2000
000376             END-IF
000376             INITIALIZE    DCLTBAMOVC
TAE376*            PERFORM 0611-CAUSALI-98-AMOVC
TAE376*               THRU 0611-CAUSALI-98-AMOVC-END
TAE                MOVE 0         TO WRK-FLAG-CAU
TAE                MOVE 0         TO WRK-FLAG-CAU-2000
000376          ELSE
000376             MOVE 0         TO WRK-FLAG-CAU
000376             MOVE 0         TO WRK-FLAG-CAU-2000
000376          END-IF
000376*-----------------------------------------------------------------
              END-IF
           END-IF.
       0601-ELABORA-NCSVP-END.
           EXIT.
      *-------------------------------------------------------------*
      * LETTURA TABELLA CASI DI SVILUPPO PATRIM. CON CURSORE CUR4   *
      *-------------------------------------------------------------*
       0610-LEGGI-WNCSVP.
           EXEC SQL INCLUDE ZMLOPE04 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8                        TO W-FLAG-ERR
              MOVE '9999'                   TO W-COD-ERR
              MOVE SPACES                   TO L-NOME-TABELLA
              MOVE W-SQLCODE                TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'               TO L-MODULO
              MOVE '0610-APERTURA-CURSORE4' TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
              GO TO 0610-LEGGI-WNCSVP-END.

280497     MOVE ZEROES TO IND8.

           MOVE SPACES TO WRK-FINE-WNCSVP.
           MOVE ZEROES TO WRK-IND-LETTI-P.
           PERFORM 0610-SCORRI-TBWNCSVP
              THRU 0610-SCORRI-TBWNCSVP-END
                   UNTIL WRK-FINE-WNCSVP = 'SI' OR
                             L-ERR-ERR  OR W-EXIT.
           IF L-ERR-ERR
              GO TO 0610-LEGGI-WNCSVP-END.
      *----------------------------------- SE CASI DI SVILUPPO ASSENTI
           IF WRK-IND-LETTI-P NOT GREATER ZEROES
              MOVE 2                          TO W-FLAG-ERR
              MOVE 'S075'                     TO W-COD-ERR
              MOVE '0'                        TO W-MAP-ERR
              MOVE SPACES                     TO W-MOD-ERR
              MOVE ' SVILUPPO PATRIMONIALE '  TO WCM-TSVI-DESCR0
              MOVE NCSVP-TTNCPATR             TO WCM-TSVI-TTNC
              MOVE SPACES                     TO WCM-TSVI-DESCR
              MOVE ' ASSENTE IN ZM.TBTTSVIP ' TO WCM-TSVI-DESCR
              MOVE WCM-ERR-TSVI               TO W-DES-ERR
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.

           EXEC SQL INCLUDE ZMLCLO04 END-EXEC.

           IF NOT W-SQL-OK
              MOVE 8                        TO W-FLAG-ERR
              MOVE '9999'                   TO W-COD-ERR
              MOVE SPACES                   TO L-NOME-TABELLA
              MOVE W-SQLCODE                TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'               TO L-MODULO
              MOVE '0610-CHIUSURA-CURSORE4' TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END.

280497***--- SCORRE I DATI DI AINDRA SALVATI E CONFRONTA IL PRIMO
280497***--- CON I SUCCESSIVI E CONFRONTA IL CAMPO WRK-TTNDG
280497***--- SE UGUALE ACCEDE AD AINDRA CON LA CHIAVE MEMORIZZATA
280497***---    E RIPORTA I DATI SUL MODELLO. IMPOSTA L'ELEMENTO + 1
280497***---    COME GIA' TRATTATO.
280497***--- SE DIVERSO ACCEDE AD AINDRA CON LA CHIAVE MEMORIZZATA E
280497***--- RIPORTA I DATI SUL MODELLO

280497     PERFORM VARYING IND18 FROM 1 BY 1
 " "         UNTIL IND18 > 15
 " "            OR WRK-ELE-CIST-INDRA(IND18) NOT > ZEROES
 " "         COMPUTE IND19 = IND18 + 1
 " "         IF WRK-ELE-FCONF-INDRA(IND18) NOT = '*'
 " "            MOVE WRK-ELE-CIST-INDRA(IND18)    TO INDRA-CIST
 " "            MOVE WRK-ELE-CSTC-INDRA(IND18)    TO INDRA-CSTC
 " "            MOVE WRK-ELE-CISO-INDRA(IND18)    TO INDRA-CISO
 " "            MOVE WRK-ELE-NNDGSET-INDRA(IND18) TO INDRA-NNDGSET
 " "            MOVE WRK-ELE-NSUFABT-INDRA(IND18) TO INDRA-NSUFABT
 " "            MOVE WRK-ELE-CDPZ-INDRA(IND18)    TO INDRA-CDPZ
 " "            MOVE WRK-ELE-NPRGOPE-INDRA(IND18) TO INDRA-NPRGOPE
 " "            PERFORM 0690-LEGGI-AINDRA
 " "               THRU 0690-LEGGI-AINDRA-END
 " "            IF L-ERR-ERR
BPEL26          OR (IND-COM GREATER ZEROES AND M-S(IND-COM) = 'E')
BPEL26*         OR M-S(IND-COM) = 'E'
 " "               GO TO 0610-LEGGI-WNCSVP-END
 " "            END-IF
 " "            MOVE WRK-ELE-TTNDG-INDRA(IND18)   TO  WRK-TTNDG
 " "            IF WRK-TTNDG = 'ORD'
 " "               PERFORM 0691-INDRA-ZOR03
 " "                  THRU 0691-INDRA-ZOR03-END
 " "            ELSE
 " "               IF WRK-TTNDG(1:1) = 'F'
 " "                  PERFORM 0693-INDRA-ZND06
 " "                     THRU 0693-INDRA-ZND06-END
 " "               END-IF
 " "            END-IF
 " "            IF W-SWFBCH = 'BIC' AND
 " "               MOVP-TAVVPR(1:2) = 'SW'
 " "               MOVE 'ZND060101'                   TO W-DECOD
 " "               MOVE WRK-NDG                       TO C
 " "               COPY ZMZINDIR.
 " "               IF M-S(IND1) NOT = SPACES
 " "                  NEXT SENTENCE
 " "               ELSE
 " "                  MOVE 2                    TO W-FLAG-ERR
 " "                  MOVE 'S019'               TO W-COD-ERR
 " "                  PERFORM 9999-GESTIONE-ERRORE
 " "                     THRU 9999-GESTIONE-ERRORE-END
 " "                  GO TO 0610-LEGGI-WNCSVP-END
 " "               END-IF
 " "            END-IF
 " "            IF W-FCIFSW = 2
 " "               MOVE W-CIST                  TO NAIND-CIST
 " "               MOVE INDRA-NNDGSET        TO NAIND-NNDGSET
 " "               MOVE INDRA-ZKEYABCT       TO NAIND-ZKEYABCT
 " "               PERFORM 0626-LEGGI-ANAIND
 " "                  THRU 0626-LEGGI-ANAIND-END
 " "               IF W-SQL-NON-TROVATO
 " "                  MOVE 'ZND060101'       TO W-DECOD
 " "                  MOVE WRK-NDG           TO C
 " "                  COPY ZMZINDIR.
 " "                  IF M-S(IND1) NOT = SPACES
 " "                     NEXT SENTENCE
 " "                  ELSE
 " "                     MOVE 'E'            TO M-S(IND1)
 " "                     MOVE 2              TO W-FLAG-ERR
 " "                     MOVE 'S020'         TO W-COD-ERR
 " "                     MOVE NAIND-NNDGSET  TO WCM-NAIND-NNDGSET
 " "                     MOVE SPACES         TO WCM-NAIND-DESCR0
 " "                     MOVE ' CHIAVE ALFAB. '
 " "                                         TO WCM-NAIND-D-KEYABCT
 " "                     MOVE NAIND-ZKEYABCT TO WCM-NAIND-ZKEYABCT
 " "                     MOVE SPACES         TO WCM-NAIND-DESCR
 " "                     MOVE ' ASSENTE IN ZM.TBANAIND'
 " "                                         TO WCM-NAIND-DESCR
 " "                     MOVE WCM-ERR-NAIND  TO W-DES-ERR
 " "                     PERFORM 9999-GESTIONE-ERRORE
 " "                        THRU 9999-GESTIONE-ERRORE-END
 " "                     GO TO 0610-LEGGI-WNCSVP-END
 " "                  END-IF
 " "               ELSE
 " "                  IF NOT W-SQL-OK
 " "                     MOVE 8                    TO W-FLAG-ERR
 " "                     MOVE '9999'               TO W-COD-ERR
 " "                     MOVE 'TBANAIND'           TO L-NOME-TABELLA
 " "                     MOVE W-SQLCODE            TO L-CODICE-SQL
 " "                     MOVE 'ZMBSVIL0'           TO L-MODULO
 " "                     MOVE '0620-PREPARA-MOVP'  TO L-SUB-MODULO
 " "                     PERFORM 9999-GESTIONE-ERRORE
 " "                        THRU 9999-GESTIONE-ERRORE-END
 " "                     GO TO 0610-LEGGI-WNCSVP-END
 " "                  END-IF
 " "               END-IF
 " "               IF W-SQL-OK
 " "                  MOVE 'ZOR031801'                TO W-DECOD
 " "                  COPY ZMZINDIR.
 " "                  MOVE IND1                       TO IND2
 " "                  MOVE 'ZND060101'                TO W-DECOD
 " "                  MOVE WRK-NDG                    TO C
 " "                  COPY ZMZINDIR.
 " "                  MOVE IND1                       TO IND3
 " "                  IF WRK-TTNDG = 'ORD'
 " "                     MOVE 'ZOR034601'             TO W-DECOD
 " "                     COPY ZMZINDIR.
 " "                     MOVE NAIND-FCIFSWF           TO
 " "                                        MOD(M-I(IND1):M-L(IND1))
 " "                  ELSE
 " "                     IF WRK-TTNDG(1:1) = 'F'
 " "                        MOVE 'ZND062901'          TO W-DECOD
 " "                        MOVE WRK-NDG              TO C
 " "                        COPY ZMZINDIR.
 " "                        MOVE NAIND-FCIFSWF        TO
 " "                                        MOD(M-I(IND1):M-L(IND1))
 " "                     END-IF
 " "                  END-IF
 " "               END-IF
 " "            END-IF
 " "            PERFORM VARYING IND19 FROM IND19 BY 1
 " "               UNTIL IND19 > 15
 " "               IF WRK-ELE-FCONF-INDRA(IND19) NOT = '*'
 " "                  IF WRK-ELE-TTNDG-INDRA(IND18)
 " "                                  =  WRK-ELE-TTNDG-INDRA(IND19)
 " "                     MOVE '*'  TO  WRK-ELE-FCONF-INDRA(IND19)
 " "                  END-IF
 " "               END-IF
 " "            END-PERFORM
 " "         END-IF
280497     END-PERFORM.

       0610-LEGGI-WNCSVP-END.
           EXIT.
      *----------------------------------------------------------------
      * EFFETTUA LA FETCH SULLA TABELLA ZM.TBWNCSVP (321)
      * UTILIZZANDO IL CURSORE CUR4
      *----------------------------------------------------------------
       0610-SCORRI-TBWNCSVP.
           EXEC SQL INCLUDE ZMF32101 END-EXEC.
           IF W-SQL-NON-TROVATO
              MOVE 'SI' TO WRK-FINE-WNCSVP
           ELSE
              IF NOT W-SQL-OK
                 MOVE 8                      TO W-FLAG-ERR
                 MOVE '9999'                 TO W-COD-ERR
                 MOVE 'TBWNCSVP'             TO L-NOME-TABELLA
                 MOVE W-SQLCODE              TO L-CODICE-SQL
                 MOVE 'ZMBSVIL0'             TO L-MODULO
                 MOVE '0610-SCORRI-TBWNCSVP' TO L-SUB-MODULO
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              ELSE
                 ADD 1        TO WRK-IND-LETTI-P
                 INITIALIZE ZMWNCSVP
BPEL26           IF NCSVP-WDATSVP-LEN GREATER ZEROES
                    MOVE NCSVP-WDATSVP-TEXT(1:NCSVP-WDATSVP-LEN)
                                                    TO ZMWNCSVP
BPEL26           END-IF
                 PERFORM 0601-ELABORA-NCSVP
                    THRU 0601-ELABORA-NCSVP-END
                         VARYING IND5 FROM 1 BY 1
                         UNTIL IND5 > W-MAX-SVP     OR
                         NCSVP-TAB (IND5)   NOT > SPACES  OR
                                  L-ERR-ERR  OR W-EXIT.

       0610-SCORRI-TBWNCSVP-END.
           EXIT.

000092*-----------------------------                                    TS002834
"      0611-CAUSALI-98-AMOVC.                                           TS002835

BPO741*
BPO741*-------------------------------------------------------------*   TS010199
BPO741* VALORIZZA FLAG ABROGAZIONE = ZOP025401                      *   TS010200
BPO741*                                                             *   TS010201
BPO741*-------------------------------------------------------------*   TS010202
BPO741     MOVE 'ZOP025401'                      TO W-DECOD.
BPO741     COPY ZMZINDIR.
BPO741     MOVE MOD(M-I(IND1):M-L(IND1))         TO WRK-FLAG-ABROG

BPO741***--- LA DATA VALUTA REGOL. NON DEVE ESSERE INFERIORE A DESCOPE
BPO741        IF MOVP-DVALNOA LESS OPE-DESCOPE
BPO741           MOVE OPE-DESCOPE       TO MOVP-DVALNOA
BPO741        END-IF

BPO741*----- ABROGAZIONE CVA / CVS
BPO741* NON ESEGUE SE PERIODO DI ABROGAZIONE CVA / CVS
BPO741* NON DEVE FARE CAUSALI FISSE
BPO741*----
BPO741     IF WRK-FLAG-ABROG = 'T' AND
BPO741        CONFG-DATA-ABROG GREATER ZEROES
BPO741        IF MOVP-DVALNOA > CONFG-DATA-ABROG
BPO741           GO TO 0611-CAUSALI-98-AMOVC-END
BPO741        END-IF
BPO741     END-IF

"     *--------------------------------------------------------------   TS002836
"     *   VIENE VALORIZZATA LA CHIAVE DI LETTURA DI TTCAUF IN BASE      TS002837
"     *    ALLE FIGURE ANALIZZATE.                                      TS002838
"     *--------------------------------------------------------------   TS002839
"          IF WRK-FLAG-CAU   = 1                                        TS002840
"             INITIALIZE DCLTBTTCAUF                                    TS002844
"             IF ABSC-PFXTIPO GREATER SPACES                            TS002841
"                MOVE ABSC-PFXTIPO   TO TCAUF-TTPFX                     TS002842
000377           IF WRK-FLAG-CAU-2000 = 1
000377              MOVE 'W'     TO TCAUF-TTPFX(1:1)
000377           END-IF
000092           MOVE MOVP-TMOV      TO TCAUF-TMOV                      TS002843
"                MOVE ABSC-CNATCON   TO TCAUF-CNATCON                   TS002844
"     *-------------------------------------------------- TTFLAGS ---   TS002845
"                MOVE 'ZFL103401'    TO W-DECOD                         TS002846
"                COPY ZMZINDIR.                                         TS002847
"                MOVE MOD(M-I(IND1):M-L(IND1))TO TCAUF-TTFLAGS          TS002848
"     *--------------------------------------------------------------   TS002849
"                MOVE 'ZOR031801'              TO W-DECOD               TS002850
"                COPY ZMZINDIR.                                         TS002851
"                MOVE MOD(M-I(IND1):M-L(IND1)) TO WRK-ORDINANTE         TS002852
"     *--------------------------------------------------------------   TS002853
"     *                    CONTROLLO TNDG1                              TS002854
"     *--------------------------------------------------------------   TS002855
000164           MOVE SPACES         TO WRK-CNTR-CAMPO123               TS002881
000092           IF NCSVP-TTNDG1(IND5) = 'ORD'                          TS002856
000164*             AND WRK-ORDINANTE NOT = SPACES                      TS002857
000164              IF WRK-ORDINANTE NOT = SPACES                       TS002857
000092                 PERFORM 0616-NDG-ORDINANTE                       TS002858
"                         THRU 0616-NDG-ORDINANTE-END                   TS002859
"                      MOVE WRK-TTFIG        TO TCAUF-TTFIG             TS002860
"                      MOVE WRK-ORDINANTE    TO MOVC-NNDGSTA            TS002861
"                      MOVE 'ZOR032401'      TO W-DECOD                 TS002862
"                      COPY ZMZINDIR.                                   TS002863
"                      MOVE  MOD(M-I(IND1):M-L(IND1)) TO MOVC-CSIGPAE   TS002864
CAR301                 IF WRK-TTFIG = 'BCNRE'
CAR301                    MOVE '245'         TO MOVC-SETTCLRES
CAR301                 ELSE
CAR301                    MOVE 'ZOR036601'      TO W-DECOD
CAR301                    COPY ZMZINDIR.
CAR301                    COPY ZMZVALNM.
CAR301                    COMPUTE WRK-SETTCLRES-9 =
CAR301                                    W-COM-NUM / (10 ** M-D(IND1))
CAR301                    MOVE WRK-SETTCLRES-9
CAR301                                           TO WRK-SETTCLRES-4
CAR301                    MOVE WRK-SETTCLRES-3    TO MOVC-SETTCLRES
CAR301                 END-IF
000164              ELSE                                                TS002865
000164                 MOVE 'SI'       TO WRK-CNTR-CAMPO123             TS002881
000164              END-IF                                              TS002865
000092           END-IF                                                 TS002865
"                IF NCSVP-TTNDG1(IND5) (1:1) = 'F'                      TS002866
"                   MOVE NCSVP-TTNDG1(IND5)     TO W-XNN                TS002867
"                   MOVE 'ZND060101'            TO W-DECOD              TS002868
"                   MOVE W-XNN-N                TO C                    TS002869
"                   COPY ZMZINDIR.                                      TS002870
"                   IF MOD(M-I(IND1):M-L(IND1)) GREATER SPACES          TS002871
"                      MOVE  MOD(M-I(IND1):M-L(IND1)) TO MOVC-NNDGSTA   TS002872
"                      PERFORM 0617-NDG-FIGURE                          TS002873
"                         THRU 0617-NDG-FIGURE-END                      TS002874
"                      MOVE WRK-TTFIG       TO TCAUF-TTFIG              TS002875
"                      MOVE 'ZND060701'     TO W-DECOD                  TS002876
"                      MOVE W-XNN-N         TO C                        TS002877
"                      COPY ZMZINDIR.                                   TS002878
"                      MOVE  MOD(M-I(IND1):M-L(IND1)) TO MOVC-CSIGPAE   TS002879
CAR301                 IF WRK-TTFIG = 'BCNRE'
CAR301                    MOVE '245'         TO MOVC-SETTCLRES
CAR301                 ELSE
CAR301                    MOVE 'ZND064401'     TO W-DECOD
CAR301                    MOVE W-XNN-N         TO C
CAR301                    COPY ZMZINDIR.
CAR301                    COPY ZMZVALNM.
CAR301                    COMPUTE WRK-SETTCLRES-9 =
CAR301                                     W-COM-NUM / (10 ** M-D(IND1))
CAR301                    MOVE WRK-SETTCLRES-9
CAR301                                           TO WRK-SETTCLRES-4
CAR301                    MOVE WRK-SETTCLRES-3    TO MOVC-SETTCLRES
CAR301                 END-IF
"                   ELSE                                                TS002880
"                      MOVE 'SI'       TO WRK-CNTR-CAMPO123             TS002881
"                   END-IF                                              TS002882
"                END-IF                                                 TS002883
"     *--------------------------------------------------------------   TS002884
"     *                    CONTROLLO TNDG2                              TS002885
"     *--------------------------------------------------------------   TS002886
"                IF WRK-CNTR-CAMPO123 = 'SI'                            TS002887
000164*             MOVE SPACES     TO WRK-CNTR-CAMPO123                TS002888
000092              IF NCSVP-TTNDG2(IND5) = 'ORD'                       TS002889
"                      AND WRK-ORDINANTE NOT = SPACES                   TS002890
000092                     PERFORM 0616-NDG-ORDINANTE                   TS002891
"                             THRU 0616-NDG-ORDINANTE-END               TS002892
"                          MOVE WRK-TTFIG      TO TCAUF-TTFIG           TS002893
"                          MOVE WRK-ORDINANTE  TO MOVC-NNDGSTA          TS002894
"                          MOVE 'ZOR032401'      TO W-DECOD             TS002895
"                          COPY ZMZINDIR.                               TS002896
"                          MOVE  MOD(M-I(IND1):M-L(IND1))               TS002897
"                                             TO MOVC-CSIGPAE           TS002898
CAR301                    IF WRK-TTFIG = 'BCNRE'
CAR301                       MOVE '245'         TO MOVC-SETTCLRES
CAR301                    ELSE
CAR301                       MOVE 'ZOR036601'      TO W-DECOD
CAR301                       COPY ZMZINDIR.
CAR301                       COPY ZMZVALNM.
CAR301                       COMPUTE WRK-SETTCLRES-9 =
CAR301                                    W-COM-NUM / (10 ** M-D(IND1))
CAR301                       MOVE WRK-SETTCLRES-9
CAR301                                             TO WRK-SETTCLRES-4
CAR301                       MOVE WRK-SETTCLRES-3    TO MOVC-SETTCLRES
                          END-IF
000164                    MOVE SPACES     TO WRK-CNTR-CAMPO123          TS002888
"                   ELSE                                                TS002899
"                      IF NCSVP-TTNDG2(IND5)(1:1) = 'F'                 TS002900
"                         MOVE NCSVP-TTNDG2(IND5)     TO W-XNN          TS002901
"                         MOVE 'ZND060101'            TO W-DECOD        TS002902
"                         MOVE W-XNN-N                TO C              TS002903
"                         COPY ZMZINDIR.                                TS002904
"                         IF MOD(M-I(IND1):M-L(IND1)) GREATER SPACES    TS002905
"                            MOVE  MOD(M-I(IND1):M-L(IND1))             TS002906
"                                              TO MOVC-NNDGSTA          TS002907
"                            PERFORM 0617-NDG-FIGURE                    TS002908
"                               THRU 0617-NDG-FIGURE-END                TS002909
"                            MOVE WRK-TTFIG   TO TCAUF-TTFIG            TS002910
"                            MOVE 'ZND060701'      TO W-DECOD           TS002911
"                            MOVE W-XNN-N          TO C                 TS002912
"                            COPY ZMZINDIR.                             TS002913
"                            MOVE  MOD(M-I(IND1):M-L(IND1))             TS002914
"                                             TO MOVC-CSIGPAE           TS002915
CAR301                       IF WRK-TTFIG = 'BCNRE'
CAR301                          MOVE '245'         TO MOVC-SETTCLRES
CAR301                       ELSE
CAR301                          MOVE 'ZND064401'      TO W-DECOD
CAR301                          MOVE W-XNN-N          TO C
CAR301                          COPY ZMZINDIR.
CAR301                          COPY ZMZVALNM.
CAR301                          COMPUTE WRK-SETTCLRES-9 =
CAR301                                    W-COM-NUM / (10 ** M-D(IND1))
CAR301                          MOVE WRK-SETTCLRES-9
CAR301                                            TO WRK-SETTCLRES-4
CAR301                          MOVE WRK-SETTCLRES-3
CAR301                                            TO MOVC-SETTCLRES
CAR301                       END-IF
000164                       MOVE SPACES     TO WRK-CNTR-CAMPO123       TS002915
"                         ELSE                                          TS002916
"                            MOVE 'SI'       TO WRK-CNTR-CAMPO123       TS002917
"                         END-IF                                        TS002918
"                      END-IF                                           TS002919
"                   END-IF                                              TS002920
"                END-IF                                                 TS002921
"     *--------------------------------------------------------------   TS002922
"     *                    CONTROLLO TNDG3                              TS002923
"     *--------------------------------------------------------------   TS002924
"                IF WRK-CNTR-CAMPO123 = 'SI'                            TS002925
000164*             MOVE SPACES     TO WRK-CNTR-CAMPO123                TS002926
000092              IF NCSVP-TTNDG3(IND5) = 'ORD'                       TS002927
"                      AND WRK-ORDINANTE NOT = SPACES                   TS002928
000092                     PERFORM 0616-NDG-ORDINANTE                   TS002929
"                             THRU 0616-NDG-ORDINANTE-END               TS002930
"                          MOVE WRK-TTFIG      TO TCAUF-TTFIG           TS002931
"                          MOVE WRK-ORDINANTE  TO MOVC-NNDGSTA          TS002932
"                          MOVE 'ZOR032401'      TO W-DECOD             TS002933
"                          COPY ZMZINDIR.                               TS002934
"                          MOVE  MOD(M-I(IND1):M-L(IND1))               TS002935
"                                             TO MOVC-CSIGPAE           TS002936
CAR301                     IF WRK-TTFIG = 'BCNRE'
CAR301                        MOVE '245'         TO MOVC-SETTCLRES
CAR301                     ELSE
CAR301                        MOVE 'ZOR036601'      TO W-DECOD
CAR301                        COPY ZMZINDIR.
CAR301                        COPY ZMZVALNM.
CAR301                        COMPUTE WRK-SETTCLRES-9 =
CAR301                                    W-COM-NUM / (10 ** M-D(IND1))
CAR301                        MOVE WRK-SETTCLRES-9
CAR301                                             TO WRK-SETTCLRES-4
CAR301                        MOVE WRK-SETTCLRES-3
CAR301                                             TO MOVC-SETTCLRES
CAR301                     END-IF
000164                     MOVE SPACES     TO WRK-CNTR-CAMPO123         TS002915
000092              ELSE                                                TS002937
"                      IF NCSVP-TTNDG3(IND5)(1:1) = 'F'                 TS002938
"                         MOVE NCSVP-TTNDG3(IND5)     TO W-XNN          TS002939
"                         MOVE 'ZND060101'            TO W-DECOD        TS002940
"                         MOVE W-XNN-N                TO C              TS002941
"                         COPY ZMZINDIR.                                TS002942
"                         IF MOD(M-I(IND1):M-L(IND1)) GREATER SPACES    TS002943
"                            MOVE  MOD(M-I(IND1):M-L(IND1))             TS002944
"                                              TO MOVC-NNDGSTA          TS002945
"                            PERFORM 0617-NDG-FIGURE                    TS002946
"                               THRU 0617-NDG-FIGURE-END                TS002947
"                            MOVE WRK-TTFIG       TO TCAUF-TTFIG        TS002948
"                            MOVE 'ZND060701'     TO W-DECOD            TS002949
"                            MOVE W-XNN-N         TO C                  TS002950
"                            COPY ZMZINDIR.                             TS002951
"                            MOVE  MOD(M-I(IND1):M-L(IND1))             TS002952
"                                             TO MOVC-CSIGPAE           TS002953
CAR301                       IF WRK-TTFIG = 'BCNRE'
CAR301                          MOVE '245'         TO MOVC-SETTCLRES
CAR301                       ELSE
CAR301                          MOVE 'ZND064401'     TO W-DECOD
CAR301                          MOVE W-XNN-N         TO C
CAR301                          COPY ZMZINDIR.
CAR301                          COPY ZMZVALNM.
CAR301                          COMPUTE WRK-SETTCLRES-9 =
CAR301                                    W-COM-NUM / (10 ** M-D(IND1))
CAR301                          MOVE WRK-SETTCLRES-9
CAR301                                              TO WRK-SETTCLRES-4
CAR301                          MOVE WRK-SETTCLRES-3
CAR301                                              TO MOVC-SETTCLRES
CAR301                       END-IF
000164                       MOVE SPACES     TO WRK-CNTR-CAMPO123       TS002915
"                         ELSE                                          TS002954
"                            MOVE 'CLRES'     TO TCAUF-TTFIG            TS002955
"                         END-IF                                        TS002956
"                      END-IF                                           TS002957
"                   END-IF                                              TS002958
"                END-IF                                                 TS002959
000164*------------------------------------------------------------     TS002968
000164*  CASO DI CONTO ATTESA SENZA FIGURA VALORIZZATA IN TTSVIP        TS002968
000164*------------------------------------------------------------     TS002968
000164           IF NCSVP-TTNDG1(IND5) = SPACES                         TS002866
000164            OR WRK-CNTR-CAMPO123 = 'SI'                           TS002915
000164               MOVE SPACES         TO WRK-CNTR-CAMPO123           TS002881
000164               MOVE 'CLRES'     TO TCAUF-TTFIG                    TS002955
CAR301               MOVE SPACES      TO MOVC-SETTCLRES
000164           END-IF                                                 TS002959
                                                                        TS002959
000142*--------------------------- A SECONDA DEL PREFISSO CSTC DEVO     TS002968
000142*--------------------------- VALORIZZARE IL PAESE CON IL PAESE    TS002968
000142*--------------------------- DELLA CONTROPARTITA.                 TS002968
000142           IF ABSC-PFXTIPO NOT = 'FIN' AND 'FAL' AND 'FEX'        TS002948
000317              IF ABSC-PFXTIPO = 'CAT'
000142                 IF OPE-FITOEBS = 'I'                             TS002948
000142                    MOVE 'ZRA090201'     TO W-DECOD               TS002949
000142                 ELSE                                             TS002948
000142                    IF OPE-FITOEBS = 'E'                          TS002948
000142                       MOVE 'ZRA090301'     TO W-DECOD            TS002949
000142                    END-IF                                        TS002948
000142                 END-IF                                           TS002948
000142                 COPY ZMZINDIR.                                   TS002950
000142                 IF MOD(M-I(IND1):M-L(IND1)) GREATER SPACES       TS002952
000142                   AND MOD(M-I(IND1):M-L(IND1)) NOT = MOVC-CSIGPAETS002952
000142                       MOVE MOD(M-I(IND1):M-L(IND1))              TS002952
000142                                           TO MOVC-CSIGPAE        TS002953
000142                 END-IF                                           TS002948
000317*---------------- SE TRATTASI DI SOTTOCONTI DIVERSI DA CONTI
000317*---------------- ATTESA E CONTI DI FINANZIAMENTO VERIFICA
000317*---------------- LA RESIDENZA DEI SOTTOCONTI DI CONTROPARTITA
000317              ELSE
000317*------------- CERCA IL SOTTOCONTO DI CONTROPARTITA
000317                 IF NCSVP-TTSCCTP (IND5) NOT = SPACES
000317                    IF NCSVP-TTSCCTP (IND5) = 'AA'
000317                       MOVE NCSVP-TTSCCTPAAA (IND5)  TO ABSC-CSTC
000317                    ELSE
000317                       IF NCSVP-TTSCCTP (IND5) (1:1) = 'D'
000317                          MOVE NCSVP-TTSCCTP (IND5)   TO W-XN
000317                          MOVE 'ZSC050501'            TO W-DECOD
000317                          MOVE W-XN-N                 TO C
000317                          COPY ZMZINDIR.
000317                          COPY ZMZVALNM.
000317                          MOVE W-COM-NUM              TO ABSC-CSTC
000317                       ELSE
000317                          IF NCSVP-TTSCCTP (IND5) (1:1) = 'A'
000317                             MOVE NCSVP-TTSCCTP(IND5) TO W-XN
000317                             MOVE 'ZSC050801'         TO W-DECOD
000317                             MOVE W-XN-N              TO C
000317                             COPY ZMZINDIR.
000317                             COPY ZMZVALNM.
000317                             MOVE W-COM-NUM           TO ABSC-CSTC
000317                          END-IF
000317                       END-IF
000317                    END-IF
000317                    PERFORM 0630-LEGGI-TABSC
000317                       THRU 0630-LEGGI-TABSC-END
000317                    IF ABSC-FRSDSTC = 2
000317                       IF OPE-FITOEBS = 'I'
000317                          MOVE 'ZRA090201'     TO W-DECOD
000317                       ELSE
000317                          IF OPE-FITOEBS = 'E'
000317                             MOVE 'ZRA090301'     TO W-DECOD
000317                          END-IF
000317                       END-IF
000317                       COPY ZMZINDIR.
000317                       IF MOD(M-I(IND1):M-L(IND1)) GREATER SPACES
000317                       AND MOD(M-I(IND1):M-L(IND1))
000317                                              NOT = MOVC-CSIGPAE
000317                          MOVE MOD(M-I(IND1):M-L(IND1))
000317                                        TO MOVC-CSIGPAE
000317                       END-IF
000317                    END-IF
000317                 END-IF
000317              END-IF
000377           ELSE
000377*------------------- PER 'FIN' FAL' E 'FEX' --> PAEMIT = ITALIA
000377              MOVE 'IT'        TO MOVC-CSIGPAEMIT
000142           END-IF                                                 TS002948
000092*------------------------------ LEGGO LA TABELLA OBBLIGATORIETA'  TS002968
"     *------------------------------ PER TIPO SEGNALAZIONE 'CF'        TS002968
"                INITIALIZE DCLTBTTOBSG                                 TS012810
"     *------------------------------------------- TIPO SEGNALAZIONE.   TS010354
000377           IF WRK-FLAG-CAU-2000 = 1
000377              MOVE 'WF'     TO TOBSG-TTSGNL
000377           ELSE
000092              MOVE 'CF'     TO TOBSG-TTSGNL                       TS012810
000377           END-IF
"     *-------------------------------                                  TS010357
"                PERFORM 1054-LEGGI-TOBSG                               TS010358
"                   THRU 1054-LEGGI-TOBSG-END                           TS010359
"     *---------------------------------------------------------        TS010360
"     *----------------    PER OGNI CAMPO DELLA CHIAVE DEVO VE-         TS010361
"     *----------------    RIFICARNE PRIMA L'OBBLIGATORIETA' E          TS010362
"     *----------------    VALORIZZARE POI L'AREA DA CERCARE            TS010363
"     *----------------    SULLA TABELLA.                               TS010364
"     *---------------------------------------------------------        TS010365
"     *------------------------------ CERCO SU KSC LA CHIAVE RELATIVA   TS002968
"     *------------------------------ ALLE CAUSALI FISSE.               TS002968
"                PERFORM 0614-LEGGI-WPRKSC                              TS002608
"                   THRU 0614-LEGGI-WPRKSC-END                          TS002609
000092*---------------------------------- SE TUTTO OK LEGGO TTCAUF --   TS002968
000142*          PERFORM 0612-LEGGI-TTCAUF                              TS002608
000142*             THRU 0612-LEGGI-TTCAUF-END                          TS002609
000092        END-IF                                                    TS002960
"          END-IF.                                                      TS002961
"                                                                       TS002962
"      0611-CAUSALI-98-AMOVC-END.                                       TS002963
"          EXIT.                                                        TS002964
                                                                        TS002965
"00092*------------------                                               TS002966
"      0612-LEGGI-TTCAUF.                                               TS002967
"     *----------------------------------------------------------       TS002968
"     * LEGGO TTCAUF:                                                   TS002969
"     * SE ESISTE    : MEMORIZZO UN RECORD PER AMOVC DA SCRIVERE        TS002970
"     *                SUCCESSIVAMENTE;                                 TS002971
"     * SE NON ESISTE: NON VIENE MEMORIZZATO.                           TS002972
"     *----------------------------------------------------------       TS002973
"                                                                       TS002974
"                                                                       TS002976
"          EXEC SQL INCLUDE ZMS27301 END-EXEC.                          TS002975
"                                                                       TS002976
"          IF W-SQL-OK                                                  TS002977
"             PERFORM 0613-AMOVC-DA-TTCAUF                              TS002978
"                THRU 0613-AMOVC-DA-TTCAUF-END                          TS002979
"          ELSE                                                         TS002980
"             IF NOT W-SQL-NON-TROVATO                                  TS002981
"                MOVE 8                    TO W-FLAG-ERR                TS002982
"                MOVE '9999'               TO W-COD-ERR                 TS002983
"                MOVE 'TBTTCAUF'           TO L-NOME-TABELLA            TS002984
"                MOVE W-SQLCODE            TO L-CODICE-SQL              TS002985
"                MOVE 'ZMBSVIL0'           TO L-MODULO                  TS002986
"                MOVE '0612-LEGGI-TTCAUF'  TO L-SUB-MODULO              TS002987
"                PERFORM 9999-GESTIONE-ERRORE                           TS002988
"                   THRU 9999-GESTIONE-ERRORE-END                       TS002989
"             END-IF                                                    TS002990
"          END-IF.                                                      TS002991
"                                                                       TS002992
"      0612-LEGGI-TTCAUF-END.                                           TS002993
"          EXIT.                                                        TS002994
                                                                        TS002995
"00092*---------------------                                            TS002996
"      0613-AMOVC-DA-TTCAUF.                                            TS002997
"     *---------------------------------------------------------        TS002998
"     * MEMORIZZO I RECORD DI AMOVC DA SCRIVERE SUCCESSIVAMENTE.        TS002999
"     *--------------------------------------------------------         TS003000
"                                                                       TS003001
BPL022*    IF TCAUF-TTPFX = 'WAL' OR 'WIN' OR 'WES'
BPL022     IF TCAUF-TTPFX = 'WAL' OR 'WIN' OR 'WEX'
000394     AND TCAUF-TTFIG = 'CLRES'
000394        MOVE MOVP-CISO TO DIV-CISO
000394        PERFORM 0833-LEGGI-ADIV
000394           THRU 0833-LEGGI-ADIV-END
000394        IF DIV-FINOUT NOT = 4
000394           GO TO 0613-AMOVC-DA-TTCAUF-END
000394        END-IF
000394     END-IF

000142     MOVE W-CIST              TO MOVC-CIST                        TS003002
"          MOVE MOVP-DIPOPE         TO MOVC-DIPOPE                      TS003002
"          MOVE MOVP-NUMOPE         TO MOVC-NUMOPE                      TS003003
"          MOVE MOVP-NPRGMOVP       TO MOVC-NPRGMOVP                    TS003004
"          MOVE MOVP-NSUBMOVP       TO MOVC-NSUBMOVP                    TS003005
"          MOVE ZEROES              TO MOVC-NPRGRIGA                    TS003006
"          MOVE TCAUF-CCAUFISSA     TO MOVC-CCAUIC                      TS003007
"          MOVE ZEROES              TO MOVC-CDPZGINT                    TS003008
"          MOVE MOVP-CISO           TO MOVC-CISO                        TS003009
"     * --------------------------------  VALORE ASSOLUTO ---           TS003011
"          IF MOVP-IMOV < 0                                             TS003012
"             COMPUTE MOVC-ICAU = ( MOVP-IMOV * -1 )                    TS003013
"          ELSE                                                         TS003014
"             MOVE MOVP-IMOV        TO MOVC-ICAU                        TS003015
"          END-IF                                                       TS003016
"                                                                       TS003017
"          MOVE SPACES               TO MOVC-NNDGSTA                    TS003018
"          MOVE '1'                  TO MOVC-TCODCAU                    TS003019
"          MOVE TCAUF-TTINTESC       TO MOVC-TMOVCAU                    TS003020
"                                                                       TS003021
CAR301*    MOVE SPACES               TO MOVC-SETTCLRES                  TS003022
000377     IF TCAUF-TTPFX  = 'MES' OR 'WEB' OR 'WEL'
000377*-------------------- SETTORE ISTITUTO OPERANTE
000377        MOVE W-CIST         TO NAPOS-CIST
000377        MOVE ISTI-CNDGIST   TO NAPOS-NNDGSET
APE001*NO CARTA CONTO
000377        PERFORM 0910-LEGGI-TBANAPOS
000377           THRU 0910-LEGGI-TBANAPOS-END
000377        IF L-ERR-ERR
000377           GO TO 0613-AMOVC-DA-TTCAUF-END
000377        END-IF
000377        MOVE NAPOS-CATTECO         TO WRK-CATTECO
000377        MOVE WRK-CATTECO(1:3)      TO MOVC-SETTCLRES
000377     END-IF
000142     MOVE SPACES               TO MOVC-SETTEMITVM                 TS003023
000377*    MOVE SPACES               TO MOVC-CSIGPAEMIT                 TS003024
000377     IF TCAUF-TTPFX  = 'MES'
000388        IF WRK-CAU-MULTIPLE = 0
000377           MOVE WRK-CAU-2000-IMOV(IND-CAU) TO MOVC-ICAU
000377           MOVE WRK-CAU-2000-CISO(IND-CAU) TO MOVC-CISO
000388        ELSE
000388           MOVE WRK-LAVORO-IMOV(IND-CAU) TO MOVC-ICAU
000388           MOVE WRK-LAVORO-CISO(IND-CAU) TO MOVC-CISO
000388        END-IF
000377     END-IF
000142     MOVE WRK-CODABI           TO MOVC-CODABI                     TS003025
"          MOVE ZERO                 TO MOVC-ICAUORI                    TS003026
"          MOVE TCAUF-VMATRICE       TO MOVC-VMATRICE.                  TS003027
"                                                                       TS003028
000142     MOVE 'S'                  TO WRK-CAUSALE-FISSA               TS003027
"                                                                       TS003028
"     *-------------------------------MEMORIZZO UN RECORD AMOVC --      TS003029
"                                                                       TS003030
"          MOVE SPACES                        TO W-F-EX                 TS003031
000142     MOVE ZEROES                        TO MOVC-NPRGRIGA          TS003031
                                                                        04446100
"          PERFORM 1090-INTAB-TTCAU-98                                  TS003032
"             THRU 1090-INTAB-TTCAU-98-END                              TS003033
"              VARYING INDC FROM 1 BY 1                                 TS003034
"               UNTIL INDC > 50                                         TS003035
"                 OR L-ERR-ERR  OR W-EXIT                               TS003037
"          IF L-ERR-ERR  OR W-EXIT                                      TS003038
"             GO TO 0613-AMOVC-DA-TTCAUF-END                            TS003039
"          END-IF.                                                      TS003040
"                                                                       TS003041
"      0613-AMOVC-DA-TTCAUF-END.                                        TS003042
"          EXIT.                                                        TS003043
"                                                                       TS003044
"      0614-LEGGI-WPRKSC.                                               TS003042
"     *---------------------------------------------------------------* TS010199
"     * LEGGE LA TABELLA CHIAVI CASI DI SVILUPPO CAUSALI CONSIDERANDO * TS010200
"     * SOLO LE INFORMAZIONI RELATIVE ALLE CAUSALI FISSE; SE NON      * TS010201
"     * ESISTE, ERRORE.                                               * TS010201
"     *---------------------------------------------------------------* TS010202
"                                                                       TS010216
"          INITIALIZE DCLTBWPRKSC.                                      TS010217
"          MOVE SPACES       TO WRK-FINE-WPRKSC.                        TS010217
"          MOVE SPACES       TO WRK-CAUSALI-FISSE.                      TS010217
"          MOVE ZEROES       TO WRK-IND-LETTI-C.                        TS010218
"          MOVE W-CPCS-MOD   TO PRKSC-CPCS.                             TS010219
"                                                                       TS010203
"          EXEC SQL INCLUDE ZMLOPE11 END-EXEC.                          TS010204
"                                                                       TS010205
"          IF NOT W-SQL-OK                                              TS010206
"             MOVE 8                         TO W-FLAG-ERR              TS010207
"             MOVE '9999'                    TO W-COD-ERR               TS010208
"             MOVE SPACES                    TO L-NOME-TABELLA          TS010209
"             MOVE W-SQLCODE                 TO L-CODICE-SQL            TS010210
"             MOVE 'ZMBSVIL0'                TO L-MODULO                TS010211
"             MOVE '0614-APERTURA-CURSORE11' TO L-SUB-MODULO            TS010212
"             PERFORM 9999-GESTIONE-ERRORE                              TS010213
"                THRU 9999-GESTIONE-ERRORE-END                          TS010214
"             GO TO 0614-LEGGI-WPRKSC-END                               TS010215
"          END-IF.                                                      TS010206
"                                                                       TS010221
"          PERFORM 0615-SCORRI-TBWPRKSC                                 TS010222
"             THRU 0615-SCORRI-TBWPRKSC-END                             TS010223
"                  UNTIL WRK-FINE-WPRKSC = 'SI'                         TS010224
"                   OR L-ERR-ERR  OR W-EXIT.                            TS010225
"                                                                       TS010226
"     *------------------------------------ SE ASSENTI IN WPRKSC        TS010252
"     *--------------------------------------- ERRORE S151.             TS010252
"          IF WRK-IND-LETTI-C = 0                                       TS010252
"           OR WRK-CAUSALI-FISSE = SPACES                               TS010252
CSE059       IF APROC-FPRO NOT = 'S'
"              MOVE 'E'                     TO M-S(IND1)
"              MOVE M-M(IND1)               TO W-MAP-ERR
"              MOVE W-DEC-COORD             TO W-MOD-ERR
"              MOVE 2                       TO W-FLAG-ERR
"              MOVE 'S151'                  TO W-COD-ERR
"              PERFORM 9999-GESTIONE-ERRORE
"                 THRU 9999-GESTIONE-ERRORE-END
CSE059       END-IF                                                     TS010254
"          END-IF                                                       TS010254
"                                                                       TS010226
"          EXEC SQL INCLUDE ZMLCLO11 END-EXEC.                          TS010227
"                                                                       TS010226
"          IF NOT W-SQL-OK                                              TS010228
"             MOVE 8                         TO W-FLAG-ERR              TS010229
"             MOVE '9999'                    TO W-COD-ERR               TS010230
"             MOVE SPACES                    TO L-NOME-TABELLA          TS010231
"             MOVE W-SQLCODE                 TO L-CODICE-SQL            TS010232
"             MOVE 'ZMBSVIL0'                TO L-MODULO                TS010233
"             MOVE '0614-CHIUSURA-CURSORE11' TO L-SUB-MODULO            TS010234
"             PERFORM 9999-GESTIONE-ERRORE                              TS010235
"                THRU 9999-GESTIONE-ERRORE-END.                         TS010236
"                                                                       TS010237
"          IF L-ERR-ERR  OR W-EXIT                                      TS010238
"             GO TO 0614-LEGGI-WPRKSC-END.                              TS010239
"                                                                       TS003044
"      0614-LEGGI-WPRKSC-END.                                           TS003046
000092     EXIT.                                                        TS003043
                                                                        TS003044
000092*---------------------------------------------------------------- TS010244
"      0615-SCORRI-TBWPRKSC.                                            TS010245
"     *---------------------------------------------------------------- TS010246
"     * DALLA RICERCA SU ZM.TBWPRKSC (CHIAVI CASI DI SVILUPPO CAUSALI/98TS010247
"     * CONSIDERO SOLO LA RICORRENZA RELATIVA ALLE CAUSALI FISSE (TIPO  TS010248
"     * SEGNALAZIONE 'CF.                                               TS010248
"     *---------------------------------------------------------------- TS010249
"                                                                       TS010250
"          EXEC SQL INCLUDE ZMF27501 END-EXEC.                          TS010251
"                                                                       TS010254
"          IF W-SQL-NON-TROVATO                                         TS010252
"             MOVE 'SI'      TO WRK-FINE-WPRKSC                         TS010252
"          ELSE                                                         TS010254
"             IF NOT W-SQL-OK                                           TS010255
"                MOVE 8                      TO W-FLAG-ERR              TS010256
"                MOVE '9999'                 TO W-COD-ERR               TS010257
"                MOVE 'TBWPRKSC'             TO L-NOME-TABELLA          TS010258
"                MOVE W-SQLCODE              TO L-CODICE-SQL            TS010259
"                MOVE 'ZMBSVIL0'             TO L-MODULO                TS010260
"                MOVE '0615-SCORRI-TBWPRKSC' TO L-SUB-MODULO            TS010261
"                PERFORM 9999-GESTIONE-ERRORE                           TS010262
"                   THRU 9999-GESTIONE-ERRORE-END                       TS010263
"             ELSE                                                      TS010264
"                MOVE ALL ' '  TO ZMWPRKSC                              TS010265
BPEL26           IF PRKSC-WTABKSC-LEN GREATER ZEROES
"                   MOVE PRKSC-WTABKSC-TEXT(1:PRKSC-WTABKSC-LEN)        TS010266
"                                           TO ZMWPRKSC                 TS010267
BPEL26           END-IF
"                PERFORM VARYING IND21 FROM 1 BY 1                      TS010268
"                 UNTIL IND21 > WRK-MAX-KSC                             TS010271
"                  OR WPRKSC-TTSGNL(IND21) NOT > SPACES                 TS010272
"                   OR L-ERR-ERR OR W-EXIT                              TS010273
"                                                                       TS010291
"     *----------------------------------- SE IL CAMPO CONDIZIONE E'    TS010292
"     *----------------------------------- VALORIZZATO, LA VERIFICO.    TS010293
"                                                                       TS010294
"                   ADD 1     TO WRK-IND-LETTI-C                        TS010265
000377*             IF WPRKSC-TTSGNL(IND21) = 'CF'                      TS010273
000377              IF (WPRKSC-TTSGNL(IND21) = 'CF'
000377                             AND WRK-FLAG-CAU-2000 = 0)
000377              OR (WPRKSC-TTSGNL(IND21) = 'WF'
000377                             AND WRK-FLAG-CAU-2000 = 1)
000092                 IF WPRKSC-TTZNAPPC1 (IND21) > SPACES             TS010295
BAVG90*"                          MOVE WPRKSC-TTZNAPPC1 (IND21)
BAVG90*"                                          TO COND-MOD-COORD
BAVG90*"                          MOVE WPRKSC-TTPRES (IND21)
BAVG90*"                                          TO COND-CONDIZ
BAVG90*"                          MOVE WPRKSC-TTVALC11 (IND21)
BAVG90*"                                          TO COND-VALORE
BAVG90*"                         PERFORM 0700-CHIAMA-COND
BAVG90*"                            THRU 0700-CHIAMA-COND-END
BAVG90*"                         IF COND-RC NOT = ZEROES
BAVG90                     MOVE WPRKSC-TTZNAPPC1 (IND21)
BAVG90                                     TO C-COND-MOD-COORD
BAVG90                     MOVE WPRKSC-TTPRES (IND21)
BAVG90                                     TO C-COND-CONDIZ
BAVG90                     MOVE WPRKSC-TTVALC11 (IND21)
BAVG90                                     TO C-COND-VALORE
BAVG90                    PERFORM CONDIZIONI-COPY
BAVG90                       THRU CONDIZIONI-COPY-EX
BAVG90                    MOVE SPACES      TO W-TROVATO
BAVG90                    IF C-COND-RC NOT = ZEROES
"                            MOVE 8             TO W-FLAG-ERR           TS010302
"                            MOVE  9999         TO W-COD-ERR            TS010303
"                            MOVE 'SI'          TO W-FLAG-EXIT          TS010304
"                            PERFORM 9999-GESTIONE-ERRORE               TS010305
"                               THRU 9999-GESTIONE-ERRORE-END           TS010306
"                         END-IF                                        TS010307
"                      ELSE                                             TS010308
BAVG90*"                         MOVE 'S'              TO COND-ESITO
BAVG90                    MOVE 'S'              TO C-COND-ESITO
"                      END-IF                                           TS010310
BAVG90*"                      IF COND-ESITO = 'S'
BAVG90                 IF C-COND-ESITO = 'S'
"                         PERFORM 1057-CMPCNT2                          TS010273
"                            THRU 1057-CMPCNT2-END                      TS010273
"                         IF WRK-STCB NOT = ZEROES                      TS010375
"                            PERFORM 1058-TTCNT2                        TS010376
"                               THRU 1058-TTCNT2-END                    TS010377
"                            MOVE WRK-KSC-TTCNT2  TO TCAUF-TTCNT2       TS010615
"                         END-IF                                        TS010378
000377                    IF WRK-FLAG-CAU-2000 = 1
000377                       PERFORM 1082-TTRNDG
000377                          THRU 1082-TTRNDG-END
000377                    END-IF
000452                    INITIALIZE WRK-KSC-TTRC1
000092                    PERFORM 1066-CMPRIF1                          TS010273
"                            THRU 1066-CMPRIF1-END                      TS010273
000092                    MOVE WRK-KSC-TTRC1    TO TCAUF-TTRC1          TS010273
000142                    PERFORM 0612-LEGGI-TTCAUF                     TS002608
000142                       THRU 0612-LEGGI-TTCAUF-END                 TS002609
000092                    MOVE 'SI'             TO WRK-CAUSALI-FISSE    TS010273
"                      END-IF                                           TS010273
"                   END-IF                                              TS010273
"                END-PERFORM                                            TS010273
"             END-IF                                                    TS010273
"          END-IF.                                                      TS010276
"                                                                       TS010276
"      0615-SCORRI-TBWPRKSC-END.                                        TS010274
000092     EXIT.                                                        TS010275
                                                                        TS010276
"00092*-----------------------------                                    TS003045
"      0616-NDG-ORDINANTE.                                              TS003046
"     *---------------------------------------------------------        TS003047
"     * SE L'NDG DELL'ORDINANTE E' VALORIZZATO IN BASE AI VALORI        TS003048
"     * DEL TIPO NDG E DELLA RESIDENZA SI SCRIVE TCAUF.                 TS003049
"     *---------------------------------------------------------        TS003050
"     *  WRK-TIPONDG-ORD   = ZOR031901                                  TS003051
"     *  WRK-RESIDENZA-ORD = ZOR032501                                  TS003052
000377*  WRK-CAU-2000-CODABI = ZOR033101
000377*  WRK-CAU-2000-SWFNDG = ZOR032701
"     *---------------------------------------------------------        TS003053
"          MOVE 'ZOR031901'      TO W-DECOD                             TS003054
"          COPY ZMZINDIR.                                               TS003055
"          COPY ZMZVALNM.                                               TS003056
"          COMPUTE WRK-TIPONDG-ORD = W-COM-NUM / ( 10 ** M-D(IND1))     TS003057
"     *------------                                                     TS003058
"          MOVE 'ZOR032501'      TO W-DECOD                             TS003059
"          COPY ZMZINDIR.                                               TS003060
"          COPY ZMZVALNM.                                               TS003061
"          COMPUTE WRK-RESIDENZA-ORD = W-COM-NUM / ( 10 ** M-D(IND1))   TS003062
000377*-----------------------------------------------------------------
000377*   IL CODICE ABI E LO SWIFT NDG DEBBONO ESSERE IMPOSTATI SOLO
000377*   PER LA PRIMA FIGURA DELLE CAUSALI.
000377*-------------------------------------  CODICE ABI  --------------
000377     IF WRK-CAU-2000-NDG1 = SPACES
000377        MOVE 'ZOR033101'      TO W-DECOD
000377        COPY ZMZINDIR.
000377        COPY ZMZVALNM.
000377        COMPUTE WRK-CAU-2000-CODABI
000377                           = W-COM-NUM / ( 10 ** M-D(IND1))
000377*-------------------------------------  SWIFT NDG ----------------
000377        MOVE 'ZOR032701'      TO W-DECOD
000377        COPY ZMZINDIR.
000377        MOVE MOD(M-I(IND1):M-L(IND1)) TO WRK-CAU-2000-SWFNDG
000377     END-IF
000092*------------                                                     TS003063
"          IF WRK-TIPONDG-ORD    = 1                                    TS003064
"             IF WRK-RESIDENZA-ORD = 1                                  TS003065
"                MOVE 'CLRES'        TO WRK-TTFIG                       TS003066
"             ELSE                                                      TS003067
"                IF WRK-RESIDENZA-ORD = 2                               TS003068
"                   MOVE 'CLNRE'        TO WRK-TTFIG                    TS003069
"                END-IF                                                 TS003070
"             END-IF                                                    TS003071
"          ELSE                                                         TS003072
"             IF WRK-TIPONDG-ORD    = 2                                 TS003073
"                IF WRK-RESIDENZA-ORD = 1                               TS003074
"                   MOVE 'BCRES'        TO WRK-TTFIG                    TS003075
000377              IF WRK-FLAG-CAU-2000 = 1
000377                 AND WRK-CAU-2000-CODABI = ISTI-CIST
000377                     MOVE 'IST'          TO WRK-TTFIG
000377              END-IF
000092           ELSE                                                   TS003076
"                   IF WRK-RESIDENZA-ORD = 2                            TS003077
"                      MOVE 'BCNRE'        TO WRK-TTFIG                 TS003078
000377              END-IF
"                END-IF                                                 TS003079
"             END-IF                                                    TS003080
"          END-IF.                                                      TS003081
"     *------------------                                               TS003082
"      0616-NDG-ORDINANTE-END.                                          TS003083
"          EXIT.                                                        TS003084
"                                                                       TS003085
"     *-------------------------------------------------------          TS003086
"      0617-NDG-FIGURE.                                                 TS003087
"     *-------------------------------------------------------          TS003088
"     * IN BASE AI VALORI DEL TIPO NDG E DELLA RESIDENZA DELLE          TS003089
"     * FIGURE VENGONO VALORIZZATO IL CAMPO WRK-TTIFIG.                 TS003090
"     *-------------------------------------------------------          TS003091
"     *  WRK-TIPONDG-FIGURA    = ZND060201/10                           TS003092
"     *  WRK-RESIDENZA-FIGURE  = ZND060801/10                           TS003093
000377*  WRK-CAU-2000-CODABI     = ZND061401/10
000377*  WRK-CAU-2000-SWFNDG     = ZND061001/10
000377*--------------------------------------------------------------
000377*   IL CODICE ABI E LO SWIFT NDG DEBBONO ESSERE IMPOSTATI SOLO
000377*   PER LA PRIMA FIGURA DELLE CAUSALI.
000377*------------------------------------------- CODICE ABI -------
000377     IF WRK-CAU-2000-NDG1 = SPACES
000377        MOVE 'ZND061401'          TO W-DECOD
000377        MOVE W-XNN-N               TO C
000377        COPY ZMZINDIR.
000377        COPY ZMZVALNM.
000377        COMPUTE WRK-CAU-2000-CODABI =
000377                               W-COM-NUM / (10 ** M-D(IND1))
000377*------------------------------------------- SWIFT NDG --------
000377        MOVE 'ZND061001'          TO W-DECOD
000377        MOVE W-XNN-N               TO C
000377        COPY ZMZINDIR.
000377        MOVE MOD(M-I(IND1):M-L(IND1))  TO WRK-CAU-2000-SWFNDG
000377     END-IF
000092*-------------------------------------------------------          TS003094
"          MOVE 'ZND060201'          TO W-DECOD                         TS003095
"          MOVE W-XNN-N               TO C                              TS003096
"          COPY ZMZINDIR.                                               TS003097
"          COPY ZMZVALNM.                                               TS003098
"          COMPUTE WRK-TIPONDG-FIGURA = W-COM-NUM / (10 ** M-D(IND1))   TS003099
"     *------------                                                     TS003100
"          MOVE 'ZND060801'           TO W-DECOD                        TS003101
"          MOVE W-XNN-N               TO C                              TS003102
"          COPY ZMZINDIR.                                               TS003103
"          COPY ZMZVALNM.                                               TS003098
"          COMPUTE WRK-RESIDENZA-FIGURA = W-COM-NUM / (10 ** M-D(IND1)) TS003104
"     *------------                                                     TS003105
CSE150*------ SE FIGURA NON CENSITA (999999999) IMPOSTO TIPO = CLIENTE
CSE150     IF WRK-TIPONDG-FIGURA    = 0
CSE150        MOVE 1 TO WRK-TIPONDG-FIGURA
CSE150     END-IF.
"          IF WRK-TIPONDG-FIGURA    = 1                                 TS003106
"             IF WRK-RESIDENZA-FIGURA = 1                               TS003107
"                MOVE 'CLRES'        TO WRK-TTFIG                       TS003108
"             ELSE                                                      TS003109
"                IF WRK-RESIDENZA-FIGURA = 2                            TS003110
"                   MOVE 'CLNRE'        TO WRK-TTFIG                    TS003111
"                END-IF                                                 TS003112
"             END-IF                                                    TS003113
"          ELSE                                                         TS003114
"             IF WRK-TIPONDG-FIGURA    = 2                              TS003115
"                IF WRK-RESIDENZA-FIGURA = 1                            TS003116
"                   MOVE 'BCRES'        TO WRK-TTFIG                    TS003117
000377              IF WRK-FLAG-CAU-2000 = 1
000377               AND WRK-CAU-2000-CODABI = ISTI-CIST
000377                   MOVE 'IST'          TO WRK-TTFIG
000377              END-IF
000092           ELSE                                                   TS003118
"                   IF WRK-RESIDENZA-FIGURA = 2                         TS003119
"                      MOVE 'BCNRE'        TO WRK-TTFIG                 TS003120
000377              END-IF
000092           END-IF                                                 TS003121
"             END-IF                                                    TS003122
"          END-IF.                                                      TS003123
"                                                                       TS003124
"      0617-NDG-FIGURE-END.                                             TS003125
000092     EXIT.                                                        TS003126
                                                                        TS003127
       0620-PREPARA-MOVP.
      ******IN BANCO POSTA QUESTI CAMPI SONO GESTITI                    04760100
BPO313*SDM002    MOVE  ZEROS                        TO MOVP-NCCO13.     04760200
BPO313*SDM002    MOVE  ZEROS                        TO MOVP-NCCOANT13.  04760300
BPO313*SDM002    MOVE  ZEROS                        TO MOVP-NPRNCCO13.  04760400
           MOVE W-CIST                           TO MOVP-CIST
           MOVE W-DIPOPE                         TO MOVP-DIPOPE
           MOVE OPE-NUMOPE                       TO MOVP-NUMOPE
           MOVE 'ZOP020501'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO MOVP-DCON.
020797     IF MOVP-DCON > OPE-DESCOPE
020797        MOVE OPE-DESCOPE              TO MOVP-DCON
020797     END-IF.

020797     MOVE MOVP-DCON                TO W-NUM-DT
 "         MOVE W-COM-DT                 TO DT-CMPI
 "         MOVE 'AAAAMMGG'               TO DT-FINP
 "         MOVE 'AAAAMMGG'               TO DT-FOUT
 "         PERFORM 9010-CTR-DAT
 "            THRU 9010-CTR-DAT-END
 "         IF DT-RC NOT = ZEROS
 "            MOVE 8                    TO W-FLAG-ERR
 "            MOVE '9999'               TO W-COD-ERR
 "            MOVE 'ZMBSVIL0'           TO L-MODULO
 "            MOVE '0508-SCRIVI-AMOVP'  TO L-SUB-MODULO
 "            PERFORM 9999-GESTIONE-ERRORE
 "               THRU 9999-GESTIONE-ERRORE-END
 "         ELSE
 "            IF DT-NOMG = 1 OR 7
 "            OR DT-NLAV = 'Y'
CAR401           IF CONFG-DCONFEST = 'S'
CAR401              MOVE 'N'                     TO W-BLOCC
CAR401              MOVE 'A'                     TO W-MAP-ERR
CAR401              MOVE W-DEC-COORD             TO W-MOD-ERR
CAR982*             MOVE 'S110'                  TO W-COD-ERR
CAR982              MOVE 'S11D'                  TO W-COD-ERR
CAR401              PERFORM 9999-GESTIONE-ERRORE
CAR401                 THRU 9999-GESTIONE-ERRORE-END
CAR401           ELSE
 "                  MOVE 'E'                     TO M-S(IND1)
 "                  MOVE M-M(IND1)               TO W-MAP-ERR
 "                  MOVE W-DEC-COORD             TO W-MOD-ERR
CAR401              MOVE 2                       TO W-FLAG-ERR
CAR982*             MOVE 'S110'                  TO W-COD-ERR
CAR982              MOVE 'S11E'                  TO W-COD-ERR
CAR401              PERFORM 9999-GESTIONE-ERRORE
 "                     THRU 9999-GESTIONE-ERRORE-END
CAR401           END-IF
CAR401        ELSE
CAR982*          MOVE W-CSIGDBASE TO FOREX-CISO
CAR982           MOVE W-CSIGDCON  TO FOREX-CISO
CAR401           MOVE MOVP-DCON   TO FOREX-ANNOMMGG
 "               MOVE W-CIST      TO FOREX-CIST
 "               PERFORM LEGGI-TBAFOREX
 "                  THRU LEGGI-TBAFOREX-END
CAR401           IF W-SQL-OK
CAR982             IF CONFG-DCONFEST = 'S'
CAR982                MOVE 'N'                     TO W-BLOCC
CAR982                MOVE 'A'                     TO W-MAP-ERR
CAR982                MOVE W-DEC-COORD             TO W-MOD-ERR
CAR982                MOVE 'S11F'                  TO W-COD-ERR
CAR982                PERFORM 9999-GESTIONE-ERRORE
CAR982                   THRU 9999-GESTIONE-ERRORE-END
CAR982             ELSE
CAR401                MOVE 'E'                     TO M-S(IND1)
 "                    MOVE M-M(IND1)               TO W-MAP-ERR
 "                    MOVE W-DEC-COORD             TO W-MOD-ERR
CAR401                MOVE 2                       TO W-FLAG-ERR
CAR982*               MOVE 'S110'                  TO W-COD-ERR
CAR982                MOVE 'S11G'                  TO W-COD-ERR
CAR401                PERFORM 9999-GESTIONE-ERRORE
CAR401                   THRU 9999-GESTIONE-ERRORE-END
CAR982             END-IF
CAR401           END-IF
 ""           END-IF
020797     END-IF.
           MOVE 'ZOP021201'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO MOVP-FCON.

020797     IF MOVP-FCON = ZERO
020797        MOVE 1                 TO MOVP-FCON
020797     END-IF.

020797     MOVE MOVP-DCON            TO WRK-DATA1.
  "        MOVE OPE-DESCOPE          TO WRK-DATA2.
  "        IF WRK-MESE1 < WRK-MESE2 OR
  "           WRK-ANNO1 < WRK-ANNO2
  "           MOVE 3                 TO MOVP-FCON
020797     END-IF.

           MOVE 'ZOP020601'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO MOVP-DVALNOA.
           IF L-FASE GREATER 1
              IF MOVP-DVALNOA > MOVP-DCON AND
                 OPE-FTIPORD = ZEROES
                 IF M-S(IND1) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'SI'           TO W-FLAG-EXIT
                    MOVE W-DEC-COORD    TO W-MOD-ERR
                    MOVE 'E'            TO M-S(IND1)
                    MOVE M-M(IND1)      TO W-MAP-ERR
                    MOVE 'S069'         TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                    GO TO 0620-PREPARA-MOVP-END
                 END-IF
              END-IF

APV066***---- LA DATA VALUTA REGOL. NON DEVE ESSERE INFERIORE A DESCOPE

APV066        IF MOVP-DVALNOA LESS OPE-DESCOPE
APV066           MOVE OPE-DESCOPE       TO MOVP-DVALNOA
APV066        END-IF

           END-IF.
           MOVE 'ZAA171501'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO MOVP-DESCOPE.

APV059***---- SE SIAMO IN DATA OGGI 1998 E LA VALUTA NOTA E' SUPERIORE
APV059***---- AL 31121998 VIENE FORZATA CON 31121998

APV059     IF MOVP-DESCOPE < 19990101
APV059     AND MOVP-DVALNOA > 19981231
APV059        MOVE 19981231                 TO MOVP-DVALNOA
APV059        MOVE 'ZOP020601'              TO W-DECOD
APV059        COPY ZMZINDIR.
APV059        MOVE MOVP-DVALNOA             TO W-DATN
APV059        COPY ZMZFMMOD.
APV059     END-IF.

           MOVE NCSVP-TTNMOV (IND5)              TO MOVP-NPRGMOVP.
           MOVE IND-KCS                          TO MOVP-NSUBMOVP.
           IF NCSVP-TTSEGNO (IND5) = 'D'
              MOVE 1                             TO MOVP-TMOV
           ELSE
              MOVE 2                         TO MOVP-TMOV
           END-IF.
           IF NCSVP-TTDIV (IND5) = 'ORD'
              MOVE 'ZOR030201'               TO W-DECOD
              MOVE W-DEC-COORD               TO W-COORD-DIV
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))  TO MOVP-CISO
              IF MOVP-CISO = SPACES
                 ADD 1                       TO INDP
                 MOVE DCLTBAMOVP             TO WS-TAB-TBAMOVP(INDP)
                 MOVE 'E'                    TO WS-STATUS-TBAMOVP(INDP)
                 MOVE 'S'                    TO W-SI-ESCE
                 IF M-S(IND1) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'E'                 TO M-S(IND1)
                    MOVE W-DEC-COORD         TO W-MOD-ERR
                    MOVE M-M(IND1)           TO W-MAP-ERR
                    MOVE 2                   TO W-FLAG-ERR
                    MOVE 'S042'              TO W-COD-ERR
                    MOVE ' SVILUPPO PATRIMONIALE '
                                             TO WCM-TSVI-DESCR0
                    MOVE NCSVP-TTNCPATR      TO WCM-TSVI-TTNC
                    MOVE SPACES              TO WCM-TSVI-DESCR
                    MOVE ' MOVIMENTO '       TO WCM-TSVI-DESCR1
                    MOVE MOVP-NPRGMOVP       TO WCM-TSVI-NPRGMOVP
                    MOVE SPACES              TO WCM-TSVI-DESCR2
                    MOVE SPACES              TO WCM-TSVI-DESCR3
                    MOVE ' MANCA DIVISA '    TO WCM-TSVI-DESCR2
                    MOVE 'ORDINE        '    TO WCM-TSVI-DESCR3
                    MOVE WCM-ERR-TSVI        TO W-DES-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
              END-IF
000172*--------------------------------------TRATTASI DIVISA IN/OUT
000172        MOVE 'ZOR036401'               TO W-DECOD
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        COMPUTE W-FINOUT = W-COM-NUM / 10 ** M-D(IND1)

CAR417*-----------------------------------INIZIO MODIF1 DIVISA ORIGINE
CAR417*  SE DIVISA IN/OUT E VIENE MOVIMENTATO UN CONTO FITTIZIO RIBALTO
CAR417*  RIBALTO LA DIVISA  DELL'ORDINE SU QUELLA D'ORIGINE.
CAR417* SI E' DECISO DI NON VALORIZZARE IMP/DIV ORIGINE AUTOMATICAMENTE
CAR417*       IF W-FINOUT = 3 OR 2
CAR417*       IF  ( W-FINOUT = 3 OR 2 )
CAR417*        AND ( WRK-RAPPORTO-FITTIZIO = 'S' )
CAR417*          MOVE 'ZOP023501'           TO W-DECOD
CAR417*          COPY ZMZINDIR.
CAR417*          MOVE MOVP-CISO            TO MOD(M-I(IND1):M-L(IND1))
CAR417*-----------------------------------------IMPORTO ORDINE
CAR417*          MOVE 'ZOR030501'            TO W-DECOD
CAR417*          COPY ZMZINDIR.
CAR417*          COPY ZMZVALNM.
CAR417*          MOVE W-COM-NUM              TO W-COM-NUM-1
CAR417*-----------------------------------------IMPORTO ORIGINE =
CAR417*------------------------------------------------IMPORTO ORDINE
CAR417*          MOVE 'ZOP023601'            TO W-DECOD
CAR417*          COPY ZMZINDIR.
CAR417*          MOVE W-COM-NUM-1            TO W-COM1
CAR417*          COPY ZMZFMMOD.
CAR417*       END-IF
CAR417*
CAR417*-----------------------------------FINE MODIF1 DIVISA ORIGINE
              MOVE IND1                      TO W-DIV
110697        MOVE OPE-TCAB                  TO MOVP-TCAB
              MOVE 0                         TO MOVP-ICABARP
              MOVE 0                         TO MOVP-ICABART
              MOVE 'ZOR031201'               TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-ICABCTC = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZOR031601'               TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-ICABDI = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZOR031701'               TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-ICABLI = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZOR030801'               TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-ICABLL = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZOR030701'               TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-ICABDL = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZOR030901'               TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-ICABMOV = W-COM-NUM / 10 ** M-D(IND1)
000252        IF MOVP-ICABCTC = ZEROES
000252           MOVE MOVP-ICABMOV TO  MOVP-ICABCTC
000252        END-IF
              MOVE 'ZOR031101'               TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-ICABPM  = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZOR031301'               TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-ICABTER = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZOR031401'               TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
BPEL84***---- ELIMINO IL SETTIMO DECIMALE VALORIZZATO
BPEL84*       MOVE W-COM-NUM    TO  WRK-COM1-9
BPEL88*       IF WRK-COM1-11 GREATER 5
BPEL88*          ADD 1 TO WRK-COM1-10
BPEL88*       END-IF
BPEL88*       MOVE ZEROES      TO  WRK-COM1-11 W-COM1 W-COM-NUM
BPEL88*                            WRK-COM1-RESTO
BPEL88*       MOVE WRK-COM1-9  TO  W-COM-NUM W-COM1
BPEL88*       COPY ZMZFMMOD.
              COMPUTE MOVP-IPARPRO = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZOR031501'               TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
BPEL84***---- ELIMINO IL SETTIMO DECIMALE VALORIZZATO
BPEL84*       MOVE W-COM-NUM    TO  WRK-COM1-9
BPEL84*       IF WRK-COM1-11 GREATER 5
BPEL84*          ADD 1 TO WRK-COM1-10
BPEL84*       END-IF
BPEL84*       MOVE ZEROES      TO  WRK-COM1-11 W-COM1 W-COM-NUM
BPEL84*                            WRK-COM1-RESTO
BPEL84*       MOVE WRK-COM1-9  TO  W-COM-NUM W-COM1
BPEL84*       COPY ZMZFMMOD.
              COMPUTE MOVP-IPARTER = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZOR031001'               TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-PSCACAB = W-COM-NUM / 10 ** M-D(IND1)
           END-IF.
           IF NCSVP-TTDIV (IND5) (1:2) = 'DV'
              MOVE NCSVP-TTDIV (IND5)        TO W-XXN
              MOVE 'ZDI040101'               TO W-DECOD
              MOVE W-XXN-N                   TO C
              MOVE W-DEC-COORD               TO W-COORD-DIV
              COPY ZMZINDIR.
              MOVE IND1                      TO W-DIV
              MOVE MOD(M-I(IND1):M-L(IND1))  TO MOVP-CISO
              IF MOVP-CISO = SPACES
                 ADD 1                       TO INDP
                 MOVE DCLTBAMOVP             TO WS-TAB-TBAMOVP(INDP)
                 MOVE 'E'                    TO WS-STATUS-TBAMOVP(INDP)
                 MOVE 'S'                    TO W-SI-ESCE
                 IF M-S(IND1) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'E'                 TO M-S(IND1)
                    MOVE W-DEC-COORD         TO W-MOD-ERR
                    MOVE M-M(IND1)           TO W-MAP-ERR
                    MOVE 2                   TO W-FLAG-ERR
                    MOVE 'S042'              TO W-COD-ERR
                    MOVE ' SVILUPPO PATRIMONIALE '
                                             TO WCM-TSVI-DESCR0
                    MOVE NCSVP-TTNCPATR      TO WCM-TSVI-TTNC
                    MOVE SPACES              TO WCM-TSVI-DESCR
                    MOVE ' MOVIMENTO '       TO WCM-TSVI-DESCR1
                    MOVE MOVP-NPRGMOVP       TO WCM-TSVI-NPRGMOVP
                    MOVE SPACES              TO WCM-TSVI-DESCR2
                    MOVE SPACES              TO WCM-TSVI-DESCR3
                    MOVE ' MANCA DIVISA '    TO WCM-TSVI-DESCR2
                    MOVE W-COORD-DIV         TO WCM-TSVI-DESCR3
                    MOVE WCM-ERR-TSVI        TO W-DES-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
              END-IF
110697        MOVE 'ZDI042201'                   TO W-DECOD
110697        MOVE W-XXN-N                       TO C
110697        COPY ZMZINDIR.
110697        IF MOD(M-I(IND1):M-L(IND1)) > SPACES
110697           MOVE MOD(M-I(IND1):M-L(IND1)) TO MOVP-TCAB
110697        ELSE
110697           MOVE OPE-TCAB                 TO MOVP-TCAB
110697        END-IF
              MOVE 'ZDI041401'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
CAR566*-------------- ELIMINO IL SETTIMO DECIMALE VALORIZZATO
CAR566        MOVE W-COM-NUM                     TO WRK-COM1-9
CAR566        IF WRK-COM1-11 GREATER 5
CAR566           ADD 1                TO WRK-COM1-10
CAR566        END-IF
CAR566        MOVE ZEROES           TO WRK-COM1-11 W-COM1 W-COM-NUM
CAR566                                 WRK-COM1-RESTO
CAR566        MOVE WRK-COM1-9       TO W-COM-NUM W-COM1
CAR566        COPY ZMZFMMOD.
              COMPUTE MOVP-ICABARP = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZDI041501'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
CAR566*-------------- ELIMINO IL SETTIMO DECIMALE VALORIZZATO
CAR566        MOVE W-COM-NUM                     TO WRK-COM1-9
CAR566        IF WRK-COM1-11 GREATER 5
CAR566           ADD 1                TO WRK-COM1-10
CAR566        END-IF
CAR566        MOVE ZEROES           TO WRK-COM1-11 W-COM1 W-COM-NUM
CAR566                                 WRK-COM1-RESTO
CAR566        MOVE WRK-COM1-9       TO W-COM-NUM W-COM1
CAR566        COPY ZMZFMMOD.
              COMPUTE MOVP-ICABART = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZDI041201'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-ICABCTC = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZDI041601'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-ICABDI  = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZDI040701'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-ICABDL  = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZDI041701'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-ICABLI  = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZDI040801'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-ICABLL  = W-COM-NUM / 10 ** M-D(IND1)
              PERFORM 0621-PREPARA-ICABMOV
                 THRU 0621-PREPARA-ICABMOV-END
000252        IF MOVP-ICABCTC = ZEROES
000252           MOVE MOVP-ICABMOV TO  MOVP-ICABCTC
000252        END-IF
              MOVE 'ZDI041101'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-ICABPM  = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZDI041301'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-ICABTER = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZOR031401'                   TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
BPEL84***---- ELIMINO IL SETTIMO DECIMALE VALORIZZATO
BPEL84*       MOVE W-COM-NUM    TO  WRK-COM1-9
BPEL84*       IF WRK-COM1-11 GREATER 5
BPEL84*          ADD 1 TO WRK-COM1-10
BPEL84*       END-IF
BPEL84*       MOVE ZEROES      TO  WRK-COM1-11 W-COM1 W-COM-NUM
BPEL84*                            WRK-COM1-RESTO
BPEL84*       MOVE WRK-COM1-9  TO  W-COM-NUM W-COM1
BPEL84*       COPY ZMZFMMOD.
              COMPUTE MOVP-IPARPRO = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZOR031501'                   TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
BPEL84***---- ELIMINO IL SETTIMO DECIMALE VALORIZZATO
BPEL84*       MOVE W-COM-NUM    TO  WRK-COM1-9
BPEL84*       IF WRK-COM1-11 GREATER 5
BPEL84*          ADD 1 TO WRK-COM1-10
BPEL84*       END-IF
BPEL84*       MOVE ZEROES      TO  WRK-COM1-11 W-COM1 W-COM-NUM
BPEL84*                            WRK-COM1-RESTO
BPEL84*       MOVE WRK-COM1-9  TO  W-COM-NUM W-COM1
BPEL84*       COPY ZMZFMMOD.
              COMPUTE MOVP-IPARTER = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZDI041001'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-PSCACAB = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZDI042001'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-CISOEM

              MOVE 'ZDI042101'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-IMPEM  = W-COM-NUM / 10 ** M-D(IND1)

              MOVE 'ZDI041901'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-NUMASSCC

              IF MOVP-NUMASSCC GREATER SPACES
                 IF MOVP-CISOEM = SPACES OR
                    MOVP-IMPEM  = ZEROES
                    MOVE 'E'          TO M-S(IND1)
                    MOVE W-DEC-COORD  TO W-MOD-ERR
                    MOVE M-M(IND1)    TO W-MAP-ERR
                    MOVE 2            TO W-FLAG-ERR
                    MOVE 'S103'       TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
              END-IF
              MOVE 'ZDI042301'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-ICABACC = W-COM-NUM / 10 ** M-D(IND1)
000172*----------------------------------------TRATTASI DI DIVISA IN/OUT
000172        MOVE 'ZDI043301'                   TO W-DECOD
000172        MOVE W-XXN-N                       TO C
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        COMPUTE W-FINOUT = W-COM-NUM / 10 ** M-D(IND1)
           END-IF.
EUR001***------------- VERIFICA SE DIVISA IN O LIRE
EUR004     IF MOVP-CISO GREATER SPACES
EUR001        MOVE W-CIST                TO DIV-CIST
EUR001        MOVE MOVP-CISO             TO DIV-CISO
EUR001        PERFORM 0870-TRATTA-DIVISA
EUR001           THRU 0870-TRATTA-DIVISA-END
EUR001        IF DIV-FINOUT = 2 OR 3
EUR001           MOVE 'S'     TO    WRK-DIVISA-UEM
EUR004        END-IF
EUR001     END-IF.

EUR001     IF MOVP-DVALNOA > WRK-MOVP-DVALNOA
EUR001        MOVE MOVP-DVALNOA TO WRK-MOVP-DVALNOA
EUR001     END-IF.
           IF NCSVP-TTIMP (IND5) = 'IO'
              MOVE 'ZOR030501'                   TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-IMOV = W-COM-NUM / 10 ** M-D(IND1)
           END-IF.
           IF NCSVP-TTIMP (IND5) = 'IS'
              MOVE 0                             TO MOVP-IMOV
000377        ADD 1           TO WRK-NOMOV
000377        MOVE MOVP-NPRGMOVP TO WRK-CAU-2000-NO-NPRGMOVP(WRK-NOMOV)
000377        MOVE MOVP-NSUBMOVP TO WRK-CAU-2000-NO-NSUBMOVP(WRK-NOMOV)
           END-IF.
           IF NCSVP-TTIMP (IND5) (1:1) = 'I' AND
              NCSVP-TTIMP (IND5) (2:1) NUMERIC
              MOVE NCSVP-TTIMP (IND5)            TO W-XN
              MOVE 'ZDI040401'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-IMOV = W-COM-NUM / 10 ** M-D(IND1)
           END-IF.
           IF MOVP-TMOV = 1
              COMPUTE MOVP-IMOV = MOVP-IMOV * -1
           END-IF.
           IF NCSVP-TTCTV (IND5) = 'CTO'
000172*       MOVE 'ZOR030601'                   TO W-DECOD
000172        MOVE 'ZOR036501'                   TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-ICTMOV = W-COM-NUM / 10 ** M-D(IND1)
000172        MOVE 'ZOR030601'                   TO W-DECOD
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        COMPUTE MOVP-ICTVLIS = W-COM-NUM / 10 ** M-D(IND1)
           END-IF.
           IF NCSVP-TTCTV (IND5) = 'CTS'
              MOVE 0                             TO MOVP-ICTMOV
000241        MOVE 0                             TO MOVP-ICTVLIS
           END-IF.
           IF NCSVP-TTCTV (IND5) (1:2) = 'CT' AND
              NCSVP-TTCTV (IND5) (3:1) NUMERIC
              MOVE NCSVP-TTCTV (IND5)            TO W-XXN
000172*       MOVE 'ZDI040601'                   TO W-DECOD
000172        MOVE 'ZDI043401'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-ICTMOV = W-COM-NUM / 10 ** M-D(IND1)
000172        MOVE 'ZDI040601'                   TO W-DECOD
000172        MOVE W-XXN-N                       TO C
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        COMPUTE MOVP-ICTVLIS = W-COM-NUM / 10 ** M-D(IND1)
           END-IF.
000241     IF MOVP-ICTMOV = 0 AND
000241     MOVP-ICTVLIS NOT = 0
000241
000241*---------------------------------------------  VALORIZZAZIONE DI
000241*---------------------------------------------------- MOVP-ICTMOV
000241*--------------------------------------------------- MOVP-ICTVLIS
000241*--------------------------------------------- CHIAMANDO ZMBCTV00
000241        INITIALIZE ZMWCTV00
000241*-----------------------------------------------------CAMBIO
000241*       COMPUTE WCTV00-CAMBIO = MOVP-ICABMOV  * (10 ** 7)
000241        COMPUTE WCTV00-CAMBIO = 1 * (10 ** 7)
000241*--------------------------------------------RIMANENZA FINALE
000241*       COMPUTE WCTV00-IMPORTO = MOVP-IMOV * (10 ** 3)
000241        COMPUTE WCTV00-IMPORTO = MOVP-ICTVLIS * (10 ** 3)
000241*----------------------CODICE COMANDO
000241        MOVE 'CTVDC' TO        WCTV00-COMANDO
000241*----------------------CHIAMATA ZMBCTV00  ------------
000241        PERFORM 0869-CALCOLA-CONTROVALORI
000241           THRU 0869-CALCOLA-CONTROVALORI-END
000241        MOVE WRK-DIVCON                TO  MOVP-ICTMOV
000241***     IF MOVP-TMOV = 1
000241***        COMPUTE MOVP-ICTMOV = MOVP-ICTMOV * -1
000241***     END-IF
000241*       IF NCSVP-TTCTV (IND5) = 'CTO'
000241*          MOVE 'ZOR036501'                   TO W-DECOD
000241*          COPY ZMZINDIR.
000241*          COMPUTE W-COM1 = MOVP-ICTMOV * (10 ** M-D(IND1))
000241*          COPY ZMZFMMOD.
000241*       END-IF
000241
000241        IF NCSVP-TTCTV (IND5) (1:2) = 'CT' AND
000241           NCSVP-TTCTV (IND5) (3:1) NUMERIC
000241           MOVE NCSVP-TTCTV (IND5)            TO W-XXN
000241           MOVE 'ZDI043401'                   TO W-DECOD
000241           MOVE W-XXN-N                       TO C
000241           COPY ZMZINDIR.
000241           COMPUTE W-COM1 = MOVP-ICTMOV * (10 ** M-D(IND1))
000241           COPY ZMZFMMOD.
000241        END-IF
000241     END-IF

           IF MOVP-TMOV = 1
              COMPUTE MOVP-ICTMOV = MOVP-ICTMOV * -1
000172        COMPUTE MOVP-ICTVLIS = MOVP-ICTVLIS * -1
           END-IF.

090697*    IF MOVP-CISO = W-CSIGDBASE
090697*    AND MOVP-IMOV NOT = ZEROES
090697*      MOVE MOVP-IMOV TO MOVP-ICTMOV
090697*    END-IF.

      ***--- SE TRATTASI DI DOCUMENTATE O CREDITI (NUMERO MOVIMENTO
      ***--- COMPRESO TRA 151 E 199) E NON HA GLI IMPORTI VALORIZZATI
      ***--- NON CREARE IL MOVIMENTO ED ELABORARE IL SUCCESSIVO DELLA
      ***--- TTSVIP
           IF (MOVP-NPRGMOVP NOT < 151 AND NOT > 199)
           AND MOVP-ICTMOV = 0
           AND MOVP-IMOV = 0
              MOVE 'S'  TO W-SALTA-AL-SUCCESSIVO
              GO TO 0620-PREPARA-MOVP-END
           END-IF.

           IF NCSVP-TTSTC (IND5) (1:1) = 'D' AND
              NCSVP-TTSTC (IND5) (2:1) NUMERIC
              MOVE NCSVP-TTSTC (IND5)            TO W-XN
              MOVE 'ZSC050501'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              MOVE W-DEC-COORD                   TO W-COORD-STC
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE IND1                          TO W-STC
              MOVE W-COM-NUM                     TO MOVP-CSTC
              MOVE 'ZSC050601'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-CCATFIDO
              MOVE 'ZSC052001'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                     TO MOVP-NPRGFID
              MOVE 'ZSC051601'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                     TO MOVP-CDPZANT
              MOVE 'ZSC051701'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                     TO MOVP-NCCOANT
BPO002        MOVE W-COM-NUM                     TO MOVP-NCCOANT13
              MOVE 'ZSC052601'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-TPVLR
           END-IF.
           IF NCSVP-TTSTC (IND5) (1:1) = 'A' AND
              NCSVP-TTSTC (IND5) (2:1) NUMERIC
              MOVE NCSVP-TTSTC (IND5)            TO W-XN
              MOVE 'ZSC050801'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              MOVE W-DEC-COORD                   TO W-COORD-STC
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE IND1                          TO W-STC
              MOVE W-COM-NUM                     TO MOVP-CSTC
              MOVE 'ZSC050901'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-CCATFIDO
              MOVE 'ZSC052101'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                     TO MOVP-NPRGFID
              MOVE 'ZSC051801'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                     TO MOVP-CDPZANT
              MOVE 'ZSC051901'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                     TO MOVP-NCCOANT
BPO002        MOVE W-COM-NUM                     TO MOVP-NCCOANT13
              MOVE 'ZSC052701'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-TPVLR
           END-IF.
           IF NCSVP-TTSTC (IND5) = 'AA'
              MOVE 'ZSC050801'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              MOVE W-DEC-COORD                   TO W-COORD-STC
              COPY ZMZINDIR.
              MOVE IND1                          TO W-STC
              MOVE NCSVP-TTSTCAAA (IND5)         TO MOVP-CSTC
              MOVE SPACES                        TO MOVP-CCATFIDO
              MOVE 0                             TO MOVP-NPRGFID
              MOVE 0                             TO MOVP-CDPZANT
              MOVE 0                             TO MOVP-NCCOANT
BPO002        MOVE W-COM-NUM                     TO MOVP-NCCOANT13
           END-IF.
           MOVE W-CIST           TO ABSC-CIST.
           MOVE MOVP-CSTC        TO ABSC-CSTC.
           MOVE SPACES           TO WRK-NO-CSTC.
           PERFORM 0630-LEGGI-TABSC
              THRU 0630-LEGGI-TABSC-END.
           IF W-SI-ESCE = 'S'
              GO TO 0620-PREPARA-MOVP-END
           END-IF.
           IF WRK-NO-CSTC = 'S'
CAR417*       GO TO 0601-ELABORA-NCSVP-END
CAR417        GO TO 0620-PREPARA-MOVP-END
           END-IF
           IF ABSC-FBLOCC NOT = 0
              IF M-S(W-STC) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 MOVE 'E'                     TO M-S(W-STC)
                 MOVE M-M(W-STC)              TO W-MAP-ERR
                 MOVE W-COORD-STC             TO W-MOD-ERR
                 MOVE 2                       TO W-FLAG-ERR
                 MOVE 'S006'                  TO W-COD-ERR
                 MOVE ABSC-CSTC               TO WCM-ABSC-CSTC
                 INITIALIZE WCM-ABSC-DESCR
                 MOVE ' NRO MOVIMENTO '       TO WCM-ABSC-DESCR1
                 MOVE MOVP-NPRGMOVP           TO WCM-ABSC-NPRGMOVP
                 MOVE ' SOTTOCONTO BLOCCATO ' TO WCM-ABSC-DESCR2
                 MOVE WCM-ERR-ABSC            TO W-DES-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
           EVALUATE ABSC-FTIPMOV
            WHEN 1
000172*       IF W-CSIGDBASE NOT =  MOVP-CISO
000172        IF W-FINOUT NOT = 1 AND
000172           W-FINOUT NOT = 2 AND
000172           W-FINOUT GREATER ZEROES
                 IF M-S(W-STC) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'E'                     TO M-S(W-STC)
                    MOVE M-M(W-STC)              TO W-MAP-ERR
                    MOVE W-COORD-STC             TO W-MOD-ERR
                    MOVE 2                       TO W-FLAG-ERR
                    MOVE 'S007'                  TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                    MOVE ABSC-CSTC               TO WCM-ABSC-CSTC
                    INITIALIZE WCM-ABSC-DESCR
                    MOVE ' NRO MOVIMENTO '       TO WCM-ABSC-DESCR1
                    MOVE MOVP-NPRGMOVP           TO WCM-ABSC-NPRGMOVP
                    MOVE ' DIVISA '              TO WCM-ABSC-DESCR3
                    MOVE MOVP-CISO               TO WCM-ABSC-CISO
                    MOVE ' TIPO MOVIM. ERRATO '  TO WCM-ABSC-DESCR4
                    MOVE WCM-ERR-ABSC            TO W-DES-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
              END-IF
            WHEN 2
000172*       IF W-CSIGDBASE = MOVP-CISO
000172        IF W-FINOUT = (1 OR 2)
                 IF M-S(W-STC) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'E'                     TO M-S(W-STC)
                    MOVE M-M(W-STC)              TO W-MAP-ERR
                    MOVE W-COORD-STC             TO W-MOD-ERR
                    MOVE 2                       TO W-FLAG-ERR
                    MOVE 'S008'                  TO W-COD-ERR
                    MOVE ABSC-CSTC               TO WCM-ABSC-CSTC
                    INITIALIZE WCM-ABSC-DESCR
                    MOVE ' NRO MOVIMENTO '       TO WCM-ABSC-DESCR1
                    MOVE MOVP-NPRGMOVP           TO WCM-ABSC-NPRGMOVP
                    MOVE ' DIVISA '              TO WCM-ABSC-DESCR3
                    MOVE MOVP-CISO               TO WCM-ABSC-CISO
                    MOVE ' TIPO MOVIM. ERRATO '  TO WCM-ABSC-DESCR4
                    MOVE WCM-ERR-ABSC            TO W-DES-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
              END-IF
           END-EVALUATE.
           MOVE SPACES       TO WRK-TTNDG.
           MOVE SPACES       TO WRK-CNTR-CAMPO123.
           MOVE SPACES       TO W-NNDGSET.
           MOVE ZEROES       TO W-FRSD
                                W-TNDGSET.
           IF NCSVP-TTNDG1 (IND5) = 'ORD'
              MOVE NCSVP-TTNDG1(IND5) TO WRK-TTNDG
              PERFORM 0650-MUOVI-SE-ORD
                 THRU 0650-MUOVI-SE-ORD-END
              IF W-NNDGSET NOT GREATER SPACES
                 MOVE 'SI'   TO WRK-CNTR-CAMPO123
              END-IF
           END-IF.
           IF NCSVP-TTNDG1 (IND5) (1:1) = 'F'
              MOVE NCSVP-TTNDG1 (IND5)        TO W-XNN
              MOVE 'ZND060101'                TO W-DECOD
              MOVE W-XNN-N                    TO C
                                                 WRK-NDG
              MOVE W-DEC-COORD                TO W-COORD-NDG
              COPY ZMZINDIR.
              IF MOD(M-I(IND1):M-L(IND1)) > SPACES
                 MOVE NCSVP-TTNDG1(IND5) TO WRK-TTNDG
                 PERFORM 0660-MUOVI-SE-FXX
                    THRU 0660-MUOVI-SE-FXX-END
              ELSE
                 MOVE 'SI'   TO WRK-CNTR-CAMPO123
              END-IF
           END-IF.
           IF WRK-CNTR-CAMPO123 = 'SI'
              MOVE SPACES TO WRK-CNTR-CAMPO123
              IF NCSVP-TTNDG2 (IND5) = 'ORD'
                 MOVE NCSVP-TTNDG2(IND5) TO WRK-TTNDG
                 PERFORM 0650-MUOVI-SE-ORD
                    THRU 0650-MUOVI-SE-ORD-END
                 IF W-NNDGSET NOT GREATER SPACES
                    MOVE 'SI'   TO WRK-CNTR-CAMPO123
                 END-IF
              END-IF
              IF NCSVP-TTNDG2 (IND5) (1:1) = 'F'
                 MOVE NCSVP-TTNDG2 (IND5)     TO W-XNN
                 MOVE 'ZND060101'             TO W-DECOD
                 MOVE W-XNN-N                 TO C
                                                 WRK-NDG
                 MOVE W-DEC-COORD             TO W-COORD-NDG
                 COPY ZMZINDIR.
                 IF MOD(M-I(IND1):M-L(IND1)) > SPACES
                    MOVE NCSVP-TTNDG2(IND5) TO WRK-TTNDG
                    PERFORM 0660-MUOVI-SE-FXX
                       THRU 0660-MUOVI-SE-FXX-END
                 ELSE
                    MOVE 'SI'   TO WRK-CNTR-CAMPO123
                 END-IF
              END-IF
           END-IF.
           IF WRK-CNTR-CAMPO123 = 'SI'
              MOVE SPACES TO WRK-CNTR-CAMPO123
              IF NCSVP-TTNDG3 (IND5) = 'ORD'
                 MOVE NCSVP-TTNDG3(IND5) TO WRK-TTNDG
                 PERFORM 0650-MUOVI-SE-ORD
                    THRU 0650-MUOVI-SE-ORD-END
                 IF W-NNDGSET NOT GREATER SPACES
                    MOVE 'SI'   TO WRK-CNTR-CAMPO123
                 END-IF
              END-IF
              IF NCSVP-TTNDG3 (IND5) (1:1) = 'F'
                 MOVE NCSVP-TTNDG3 (IND5)     TO W-XNN
                 MOVE 'ZND060101'             TO W-DECOD
                 MOVE W-XNN-N                 TO C
                                                 WRK-NDG
                 MOVE W-DEC-COORD             TO W-COORD-NDG
                 COPY ZMZINDIR.
                 IF MOD(M-I(IND1):M-L(IND1)) > SPACES
                    MOVE NCSVP-TTNDG3(IND5) TO WRK-TTNDG
                    PERFORM 0660-MUOVI-SE-FXX
                       THRU 0660-MUOVI-SE-FXX-END
                 ELSE
                    MOVE 'SI'   TO WRK-CNTR-CAMPO123
                 END-IF
              END-IF
           END-IF.
           IF WRK-CNTR-CAMPO123 = 'SI'
              MOVE SPACES         TO WRK-CNTR-CAMPO123
              MOVE SPACES         TO MOVP-NNDGSET
                                     MOVP-TAVVPR
                                     MOVP-NUMASSBA
              MOVE ABSC-FRSDSTC   TO W-FRSD
              MOVE 1              TO W-TNDGSET
           END-IF.
           IF NCSVP-TTNDG1 (IND5) = SPACES AND
              NCSVP-TTNDG2 (IND5) = SPACES AND
              NCSVP-TTNDG3 (IND5) = SPACES
              MOVE SPACES               TO W-NNDGSET
              MOVE SPACES               TO MOVP-NNDGSET
                                           MOVP-TAVVPR
                                           MOVP-NUMASSBA
              MOVE ABSC-FRSDSTC         TO W-FRSD
              MOVE 1                    TO W-TNDGSET
           END-IF.
           IF W-NNDGSET = ALL '9'
APE001     IF  NOT (MOVP-CDPZAPP = CONFG-FILIALE-CARTA AND
APE001               OPE-TPCOLL  = 'O')
              MOVE SPACES    TO W-NNDGSET
APE001     END-IF
              PERFORM 0629-SCRIVI-TBANONIM
                 THRU 0629-SCRIVI-TBANONIM-END
                 IF L-ERR-ERR
                    MOVE 'SI'     TO W-FLAG-EXIT
                    GO TO 0620-PREPARA-MOVP-END
                 END-IF
           IF W-FRSD = ZEROES
              MOVE ABSC-FRSDSTC         TO W-FRSD
           END-IF.
           IF W-TNDGSET GREATER ZEROES
              IF ABSC-FRSTNDG = '1'
                 IF W-TNDGSET NOT = 1
                    IF L-FASE GREATER 1
                    IF M-S(W-STC) NOT = SPACES
                       NEXT SENTENCE
                    ELSE
                       MOVE 'E'                     TO M-S(W-STC)
                       MOVE M-M(W-STC)              TO W-MAP-ERR
                       MOVE W-COORD-STC             TO W-MOD-ERR
                       MOVE 2                       TO W-FLAG-ERR
                       MOVE 'S009'                  TO W-COD-ERR
                       PERFORM 9999-GESTIONE-ERRORE
                         THRU 9999-GESTIONE-ERRORE-END
                    END-IF
                    END-IF
                 END-IF
              END-IF
           END-IF.
           IF W-TNDGSET GREATER ZEROES
              IF ABSC-FRSTNDG = '2'
                 IF W-TNDGSET NOT = 2
                    IF L-FASE GREATER 1
                    IF M-S(W-STC) NOT = SPACES
                       NEXT SENTENCE
                    ELSE
                       MOVE 'E'                     TO M-S(W-STC)
                       MOVE M-M(W-STC)              TO W-MAP-ERR
                       MOVE W-COORD-STC             TO W-MOD-ERR
                       MOVE 2                       TO W-FLAG-ERR
                       MOVE 'S010'                  TO W-COD-ERR
                       PERFORM 9999-GESTIONE-ERRORE
                          THRU 9999-GESTIONE-ERRORE-END
                    END-IF
                    END-IF
                 END-IF
              END-IF
           END-IF.
           IF W-FRSD GREATER ZEROES
              IF ABSC-FRSDSTC = 1
                 IF W-FRSD NOT = 1
                    IF L-FASE GREATER 1
                    IF M-S(W-STC) NOT = SPACES
                       NEXT SENTENCE
                    ELSE
                       MOVE 'E'                     TO M-S(W-STC)
                       MOVE M-M(W-STC)              TO W-MAP-ERR
                       MOVE W-COORD-STC             TO W-MOD-ERR
                       MOVE 2                       TO W-FLAG-ERR
                       MOVE 'S011'                  TO W-COD-ERR
                       PERFORM 9999-GESTIONE-ERRORE
                          THRU 9999-GESTIONE-ERRORE-END
                    END-IF
                    END-IF
                 END-IF
              END-IF
           END-IF.
           IF W-FRSD GREATER ZEROES
              IF ABSC-FRSDSTC = 2
                 IF W-FRSD NOT = 2
                    IF L-FASE GREATER 1
                       IF M-S(W-STC) NOT = SPACES
                          NEXT SENTENCE
                       ELSE
                          MOVE 'E'             TO M-S(W-STC)
                          MOVE M-M(W-STC)      TO W-MAP-ERR
                          MOVE W-COORD-STC     TO W-MOD-ERR
                          MOVE 2               TO W-FLAG-ERR
                          MOVE 'S012'          TO W-COD-ERR
                          PERFORM 9999-GESTIONE-ERRORE
                             THRU 9999-GESTIONE-ERRORE-END
                       END-IF
                    END-IF
                 END-IF
              END-IF
           END-IF.
           IF ABSC-FTPGEST = 1
              PERFORM 0622-ESAMINA-TTSF
                 THRU 0622-ESAMINA-TTSF-END
           END-IF.
           IF ABSC-FTPGEST = 1 OR 3 OR 4 OR 6
              PERFORM 0623-ESAMINA-TTDIP
                 THRU 0623-ESAMINA-TTDIP-END
           END-IF.
           IF ABSC-FTPGEST = 2 OR 5
              IF NCSVP-TTRIF (IND5) = 'OPE'
                 MOVE W-DIPOPE                   TO MOVP-CDPZ
                 MOVE 'ZAA170301'                TO W-DECOD
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO MOVP-NPRGOPE
              END-IF
              IF NCSVP-TTRIF (IND5) = 'PRA'
                 MOVE 'ZRI010101'                TO W-DECOD
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO MOVP-CDPZ
                 MOVE 'ZRI010201'                TO W-DECOD
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO MOVP-NPRGOPE
              END-IF
              IF NCSVP-TTRIF (IND5) = 'PRE'
                 MOVE 'ZRI010301'                TO W-DECOD
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO MOVP-CDPZ
                 MOVE 'ZRI010401'                TO W-DECOD
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO MOVP-NPRGOPE
              END-IF
              IF NCSVP-TTRIF (IND5) = 'STO'
                 MOVE 'ZRI010901'                TO W-DECOD
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO MOVP-CDPZ
                 MOVE 'ZRI011001'                TO W-DECOD
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO MOVP-NPRGOPE
              END-IF
              IF NCSVP-TTRIF (IND5) = 'ORD'
                 MOVE 'ZRI011301'                TO W-DECOD
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO MOVP-CDPZ
                 MOVE 'ZRI011401'                TO W-DECOD
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO MOVP-NPRGOPE
              END-IF
              PERFORM 0624-ESAMINA-TTRIF
                 THRU 0624-ESAMINA-TTRIF-END
           END-IF.

110697     IF MOVP-CDPZ = ZEROES
110697     OR MOVP-CISO = SPACES
110697     OR MOVP-CSTC = ZEROES
110697        PERFORM ERRORE-CHIAVE-RAPP
110697           THRU ERRORE-CHIAVE-RAPP-END
110697     END-IF.

           EVALUATE ABSC-FTPGEST
            WHEN 1
              MOVE W-NNDGSET                     TO MOVP-NNDGSET
              MOVE MOVP-NNDGSET                  TO RAPP-NNDGSET
110697        IF MOVP-NNDGSET = SPACES
110697           PERFORM ERRORE-CHIAVE-RAPP
110697              THRU ERRORE-CHIAVE-RAPP-END
110697        END-IF
              MOVE MOVP-NSUFABT                  TO RAPP-NSUFABT
110697        IF MOVP-NSUFABT = ZEROES
110697           PERFORM ERRORE-CHIAVE-RAPP
110697              THRU ERRORE-CHIAVE-RAPP-END
110697        END-IF
              MOVE MOVP-CDPZ                     TO RAPP-CDPZ
              MOVE 0                             TO RAPP-NPRGOPE
              MOVE 0                             TO MOVP-NPRGOPE
              MOVE W-NNDGSET                     TO MOVP-NNDGPART
            WHEN 2
              MOVE SPACES                        TO RAPP-NNDGSET
              MOVE SPACES                        TO MOVP-NNDGSET
              MOVE 0                             TO RAPP-NSUFABT
              MOVE 0                             TO MOVP-NSUFABT
              MOVE MOVP-CDPZ                     TO RAPP-CDPZ
              MOVE MOVP-NPRGOPE                  TO RAPP-NPRGOPE
110697        IF MOVP-NPRGOPE = ZEROES
110697           PERFORM ERRORE-CHIAVE-RAPP
110697              THRU ERRORE-CHIAVE-RAPP-END
110697        END-IF
              MOVE W-NNDGSET                     TO MOVP-NNDGPART
            WHEN 3
              MOVE SPACES                        TO RAPP-NNDGSET
              MOVE SPACES                        TO MOVP-NNDGSET
              MOVE 0                             TO RAPP-NSUFABT
              MOVE 0                             TO MOVP-NSUFABT
              MOVE MOVP-CDPZ                     TO RAPP-CDPZ
              MOVE 0                             TO RAPP-NPRGOPE
              MOVE 0                             TO MOVP-NPRGOPE
              MOVE W-NNDGSET                     TO MOVP-NNDGPART
            WHEN 4
              MOVE W-NNDGSET                     TO MOVP-NNDGSET
              MOVE MOVP-NNDGSET                  TO RAPP-NNDGSET
000007*       IF MOVP-NNDGSET = ZEROES
000007        IF MOVP-NNDGSET = SPACES
110697           PERFORM ERRORE-CHIAVE-RAPP
110697              THRU ERRORE-CHIAVE-RAPP-END
110697        END-IF
              MOVE 0                             TO RAPP-NSUFABT
              MOVE 0                             TO MOVP-NSUFABT
              MOVE MOVP-CDPZ                     TO RAPP-CDPZ
              MOVE 0                             TO RAPP-NPRGOPE
              MOVE 0                             TO MOVP-NPRGOPE
              MOVE W-NNDGSET                     TO MOVP-NNDGPART
            WHEN 5
              MOVE SPACES                        TO RAPP-NNDGSET
              MOVE SPACES                        TO MOVP-NNDGSET
              MOVE 0                             TO RAPP-NSUFABT
              MOVE 0                             TO MOVP-NSUFABT
              MOVE MOVP-CDPZ                     TO RAPP-CDPZ
              MOVE MOVP-NPRGOPE                  TO RAPP-NPRGOPE
110697        IF MOVP-NPRGOPE = ZEROES
110697           PERFORM ERRORE-CHIAVE-RAPP
110697              THRU ERRORE-CHIAVE-RAPP-END
110697        END-IF
              MOVE W-NNDGSET                     TO MOVP-NNDGPART
            WHEN 6
              MOVE SPACES                        TO RAPP-NNDGSET
              MOVE 0                             TO RAPP-NSUFABT
              MOVE SPACES                        TO MOVP-NNDGSET
              MOVE 0                             TO MOVP-NSUFABT
              MOVE MOVP-CDPZ                     TO RAPP-CDPZ
              MOVE 0                             TO RAPP-NPRGOPE
              MOVE 0                             TO MOVP-NPRGOPE
              MOVE W-NNDGSET                     TO MOVP-NNDGPART
APE001        IF MOVP-CDPZAPP = CONFG-FILIALE-CARTA
APE001           AND W-TPCOLL = 'O'
APE001           MOVE ALL '9'  TO W-NNDGSET
APE001                         MOVP-NNDGPART
APE001        END-IF
           END-EVALUATE.
BPEL26*    IF M-S(W-SF)  NOT = 'E' AND
BPEL26*       M-S(W-DIP) NOT = 'E' AND
BPEL26*       M-S(W-RIF) NOT = 'E' AND
BPEL26*       M-S(W-STC) NOT = 'E'
BPEL26     MOVE SPACES  TO  WRK-STATUS-ARAPP
BPEL26     IF W-SF GREATER ZEROES
BPEL26        IF M-S(W-SF) = 'E'
BPEL26           MOVE 'E'   TO  WRK-STATUS-ARAPP
BPEL26        END-IF
BPEL26     END-IF
BPEL26     IF W-DIP GREATER ZEROES
BPEL26        IF M-S(W-DIP) = 'E'
BPEL26           MOVE 'E'   TO  WRK-STATUS-ARAPP
BPEL26        END-IF
BPEL26     END-IF
BPEL26     IF W-RIF GREATER ZEROES
BPEL26        IF M-S(W-RIF) = 'E'
BPEL26           MOVE 'E'   TO  WRK-STATUS-ARAPP
BPEL26        END-IF
BPEL26     END-IF
BPEL26     IF W-STC GREATER ZEROES
BPEL26        IF M-S(W-STC) = 'E'
BPEL26           MOVE 'E'   TO  WRK-STATUS-ARAPP
BPEL26        END-IF
BPEL26     END-IF
BPEL26     IF WRK-STATUS-ARAPP NOT = 'E'
              IF (ABSC-FTPGEST NOT = 6) AND
                 (NCSVP-TTNMOV (IND5) < 200)
                 PERFORM 0625-TRATTA-ARAPP
                    THRU 0625-TRATTA-ARAPP-END
              END-IF
           END-IF.
           IF NCSVP-TTNDGNC (IND5) = 'ORD'
              MOVE 'ZOR031801'                   TO W-DECOD
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-NNDGNCONT
              MOVE 'ZOR033801'                   TO W-DECOD
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-TAVVAUS
           END-IF.
           IF NCSVP-TTNDGNC (IND5) (1:1) = 'F'
              MOVE NCSVP-TTNDGNC (IND5)          TO W-XNN
              MOVE 'ZND060101'                   TO W-DECOD
              MOVE W-XNN-N                       TO C
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-NNDGNCONT
              MOVE 'ZND062001'                   TO W-DECOD
              MOVE W-XNN-N                       TO C
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-TAVVAUS
           END-IF.
           IF MOVP-NNDGNCONT = ALL '9'
              MOVE SPACES                        TO MOVP-NNDGNCONT
           END-IF.
           IF NCSVP-TTLRR (IND5) > SPACES
              MOVE NCSVP-TTLRR (IND5)            TO W-XXN
              MOVE 'ZRI011101'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-LRRIFA
APE001*       MOVE 'ZRI011201'                   TO W-DECOD
APE001*       MOVE W-XXN-N                       TO C
APE001*       COPY ZMZINDIR.
APE001*       MOVE MOD(M-I(IND1):M-L(IND1))         TO MOVP-LRRIFB
           END-IF.
           IF NCSVP-TTSCCTP (IND5) = SPACES
              IF M-S(W-STC) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 MOVE 'E'                        TO M-S(W-STC)
                 MOVE M-M(W-STC)                 TO W-MAP-ERR
                 MOVE W-COORD-STC                TO W-MOD-ERR
                 MOVE 2                          TO W-FLAG-ERR
                 MOVE 'S013'                     TO W-COD-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
           IF NCSVP-TTSCCTP (IND5) = 'AA'
              MOVE NCSVP-TTSCCTPAAA (IND5)       TO MOVP-CSTCCTP
           ELSE
              IF NCSVP-TTSCCTP (IND5) (1:1) = 'D'
                 MOVE NCSVP-TTSCCTP (IND5)       TO W-XN
                 MOVE 'ZSC050501'                TO W-DECOD
                 MOVE W-XN-N                     TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO MOVP-CSTCCTP
              ELSE
                IF NCSVP-TTSCCTP (IND5) (1:1) = 'A'
                   MOVE NCSVP-TTSCCTP (IND5)     TO W-XN
                   MOVE 'ZSC050801'              TO W-DECOD
                   MOVE W-XN-N                   TO C
                   COPY ZMZINDIR.
                   COPY ZMZVALNM.
                   MOVE W-COM-NUM                TO MOVP-CSTCCTP
                END-IF
              END-IF
           END-IF.
           IF MOVP-CSTCCTP NOT = ABSC-CSTCCTP AND
              ABSC-CSTCCTP NOT = 0
              IF M-S(W-STC) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 MOVE 'E'                           TO M-S(W-STC)
                 MOVE M-M(W-STC)                    TO W-MAP-ERR
                 MOVE W-COORD-STC                   TO W-MOD-ERR
                 MOVE 2                             TO W-FLAG-ERR
                 MOVE 'S015'                        TO W-COD-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
           IF NCSVP-TTDIVCTP (IND5) = SPACES
              IF M-S(W-DIV) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 MOVE 'E'                           TO M-S(W-DIV)
                 MOVE M-M(W-DIV)                    TO W-MAP-ERR
                 MOVE W-COORD-DIV                   TO W-MOD-ERR
                 MOVE 2                             TO W-FLAG-ERR
                 MOVE 'S016'                        TO W-COD-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
           IF NCSVP-TTDIVCTP (IND5) = 'ORD'
              MOVE 'ZOR030201'                   TO W-DECOD
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-CDIVCTP
           END-IF.
           IF NCSVP-TTDIVCTP (IND5) = 'DVB'
BAVI92*000172        MOVE 'ZAA173001'                   TO W-DECOD      05974000
BAVI92        MOVE 'ZAA170901'                   TO W-DECOD             05974100
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-CDIVCTP
           ELSE
              IF NCSVP-TTDIVCTP (IND5) (1:2) = 'DV'
                 MOVE NCSVP-TTDIVCTP (IND5)         TO W-XXN
                 MOVE 'ZDI040101'                   TO W-DECOD
                 MOVE W-XXN-N                       TO C
                 COPY ZMZINDIR.
                 MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-CDIVCTP
              END-IF
           END-IF.
           IF NCSVP-TTVAL (IND5) (1:2) = 'VA'
              MOVE NCSVP-TTVAL (IND5)            TO W-XXN
              MOVE 'ZSC051501'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                     TO MOVP-DDISP
              MOVE 'ZSC051101'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              IF W-COM-NUM > ZEROS
                 MOVE W-COM-NUM                   TO MOVP-DVAL
100797***--- DEVO VERIFICARE CHE LA DATA VALUTA NON SUPERI I 180 GIORNI
100797***--- DI DIFFERENZA CON LA DATA ESECUZIONE SIA IN AVANTI CHE IN
100797***--- DIETRO
100797           MOVE IND1   TO    IND12
100797           MOVE 'ZAA171501'                   TO W-DECOD
100797           COPY ZMZINDIR.
100797           MOVE IND1   TO    IND13
100797           PERFORM 0858E-CNTR-GIORNI
100797              THRU 0858E-CNTR-GIORNI-END
100797           IF WRK-GIORNI > 180
100797              IF M-S(IND12) NOT = SPACES
100797                 NEXT SENTENCE
100797              ELSE
000053                 MOVE 'N'                     TO W-BLOCC
"                      MOVE 'A'                     TO W-MAP-ERR
"     *                MOVE 'E'                     TO M-S(IND12)
"     *                MOVE 2                       TO W-FLAG-ERR
000053*                MOVE M-M(IND12)              TO W-MAP-ERR
100797                 MOVE W-DEC-COORD             TO W-MOD-ERR
100797                 MOVE 'S111'                  TO W-COD-ERR
100797                 PERFORM 9999-GESTIONE-ERRORE
100797                    THRU 9999-GESTIONE-ERRORE-END
100797              END-IF
100797           ELSE
                    IF MOVP-DDISP = 0
                       MOVE MOVP-DVAL                TO MOVP-DDISP
                    END-IF
100797           END-IF
              ELSE
                 IF L-FASE GREATER 1
                    IF M-S(IND1) NOT = SPACES
                       NEXT SENTENCE
                    ELSE
                       MOVE 'E'                     TO M-S(IND1)
                       MOVE M-M(IND1)               TO W-MAP-ERR
                       MOVE W-DEC-COORD             TO W-MOD-ERR
                       MOVE 2                       TO W-FLAG-ERR
                       MOVE 'S074'                  TO W-COD-ERR
                       PERFORM 9999-GESTIONE-ERRORE
                          THRU 9999-GESTIONE-ERRORE-END
                    END-IF
                 END-IF
              END-IF
           ELSE
              IF NCSVP-TTVAL (IND5) = SPACES
                 MOVE 'ZOP020501'           TO W-DECOD
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM             TO MOVP-DDISP
                                               MOVP-DVAL
                 IF MOVP-DVAL NOT GREATER ZEROES
                    IF L-FASE GREATER 1
                       IF M-S(IND1) NOT = SPACES
                          NEXT SENTENCE
                       ELSE
                          MOVE 'E'          TO M-S(IND1)
                          MOVE M-M(IND1)    TO W-MAP-ERR
                          MOVE W-DEC-COORD  TO W-MOD-ERR
                          MOVE 2            TO W-FLAG-ERR
                          MOVE 'S074'       TO W-COD-ERR
                          PERFORM 9999-GESTIONE-ERRORE
                             THRU 9999-GESTIONE-ERRORE-END
                       END-IF
                    END-IF
100797           ELSE
100797***--- DEVO VERIFICARE CHE LA DATA VALUTA NON SUPERI I 180 GIORNI
100797***--- DI DIFFERENZA CON LA DATA ESECUZIONE SIA IN AVANTI CHE IN
100797***--- DIETRO
100797              MOVE IND1   TO    IND12
100797              MOVE 'ZAA171501'                   TO W-DECOD
100797              COPY ZMZINDIR.
100797              MOVE IND1   TO    IND13
100797              PERFORM 0858E-CNTR-GIORNI
100797                 THRU 0858E-CNTR-GIORNI-END
100797              IF WRK-GIORNI > 180
100797                 IF M-S(IND12) NOT = SPACES
100797                    NEXT SENTENCE
100797                 ELSE
100797                    MOVE 'E'                     TO M-S(IND12)
100797                    MOVE M-M(IND12)              TO W-MAP-ERR
100797                    MOVE W-DEC-COORD             TO W-MOD-ERR
100797                    MOVE 2                       TO W-FLAG-ERR
100797                    MOVE 'S111'                  TO W-COD-ERR
100797                    PERFORM 9999-GESTIONE-ERRORE
100797                       THRU 9999-GESTIONE-ERRORE-END
100797                 END-IF
100797              END-IF
                 END-IF
              END-IF
           END-IF.
           IF NCSVP-TTTAS (IND5) (1:2) = 'TT'
              MOVE NCSVP-TTTAS (IND5)            TO W-XXN
      *------------------------------------- DSCAOPE = ZFI071401/08
              MOVE 'ZFI071401'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                     TO MOVP-DSCAOPE
      *----------------------- DSCATAS = ZFI070901/08 SE FRSTSCA <> 1
              IF ABSC-FRSTSCA NOT = 1
                 MOVE 'ZFI070901'            TO W-DECOD
                 MOVE W-XXN-N                TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM              TO MOVP-DSCATAS
140497           MOVE W-COM-NUM              TO WRK-DATA-MOD
              ELSE
                 MOVE ZEROES                 TO MOVP-DSCATAS
              END-IF
      *------------------------------------- PSCATAS = ZFI071701/08
              MOVE 'ZFI071701'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-PSCATAS = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZFI070601'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                     TO MOVP-RRAP
              COMPUTE MOVP-RRAP = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZFI070701'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-RRAPCTC = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZFI071501'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-RRAPINT = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZFI070301'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVP-RRAPLIST = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZFI071601'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-TASFV
              MOVE 'ZFI070801'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-TSCA
           ELSE
              IF NCSVP-TTTAS (IND5) = SPACES
                 MOVE 0                          TO MOVP-DSCAOPE
                 MOVE 0                          TO MOVP-DSCATAS
                 MOVE 0                          TO MOVP-PSCATAS
                 MOVE 0                          TO MOVP-RRAP
                 MOVE 0                          TO MOVP-RRAPCTC
                 MOVE 0                          TO MOVP-RRAPINT
                 MOVE 0                          TO MOVP-RRAPLIST
                 MOVE SPACES                     TO MOVP-TASFV
                 MOVE SPACES                     TO MOVP-TSCA
              END-IF
           END-IF.
           IF ABSC-FRSTTA  = 2 AND
              MOVP-RRAP = 0
              IF L-FASE GREATER 1
                 IF M-S(W-STC) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'E'                           TO M-S(W-STC)
                    MOVE M-M(W-STC)                    TO W-MAP-ERR
                    MOVE W-COORD-STC                   TO W-MOD-ERR
                    MOVE 2                             TO W-FLAG-ERR
                    MOVE 'S017'                        TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
              END-IF
           END-IF.
           IF ABSC-FRSTSCA NOT = 1 AND
              MOVP-DSCATAS = 0
              IF L-FASE GREATER 1
                 IF M-S(W-STC) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'E'                        TO M-S(W-STC)
                    MOVE M-M(W-STC)                 TO W-MAP-ERR
                    MOVE W-COORD-STC                TO W-MOD-ERR
                    MOVE 2                          TO W-FLAG-ERR
                    MOVE 'S018'                     TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                      THRU 9999-GESTIONE-ERRORE-END
                 END-IF
              END-IF
           END-IF.
140497     IF ABSC-FRSTSCA NOT = 1
140497     AND ABSC-FRSTTA  NOT = 1
170797        INITIALIZE SC-AREA
140497        MOVE WRK-DATA-MOD    TO   SC-CAMPO-DATA
140497        PERFORM 0720-CHIAMA-SGSCA
140497           THRU 0720-CHIAMA-SGSCA-END
140497        IF SC-CODICE-RITORNO = ZEROES
140497        AND SC-TIPO-DATA = 'N'
000188           MOVE MOVP-CISO    TO WRK-DIVISA-SPOT
140497           PERFORM CALCOLA-DATA-SPOT
140497              THRU CALCOLA-DATA-SPOT-END
140497           MOVE WRK-DATASPOT TO DT-CMPI
000003*          MOVE 360          TO WS-GGTOADD
000003           MOVE 365          TO WS-GGTOADD
140497           MOVE '+'          TO WS-SEGNO
140497           PERFORM 4000-COMPUTA-DATA
140497              THRU 4000-COMPUTA-DATA-END
140497           MOVE WS-DTOUT    TO WRK-DATASPOT-360
140497           IF WRK-DATA-MOD NOT < WRK-DATASPOT-360
140497              IF ABSC-FDUR = 1
140497                 IF M-S(W-STC) NOT = SPACES
140497                   NEXT SENTENCE
140497                 ELSE
140497                    MOVE 'E'                        TO M-S(W-STC)
140497                    MOVE M-M(W-STC)                 TO W-MAP-ERR
140497                    MOVE W-COORD-STC                TO W-MOD-ERR
140497                    MOVE 2                          TO W-FLAG-ERR
140497                    MOVE 'S106'                     TO W-COD-ERR
140497                    PERFORM 9999-GESTIONE-ERRORE
140497                       THRU 9999-GESTIONE-ERRORE-END
140497                    GO TO 0620-PREPARA-MOVP-END
140497                 END-IF
140497              END-IF
140497           END-IF
140497        END-IF
140497     END-IF.
           IF L-FASE GREATER 1
              IF OPE-TTAS = 'P' AND
                 ABSC-FRSTTA  = 2
                 MOVE W-CIST         TO SCARA-CIST
                 MOVE OPE-NOPERFPN   TO SCARA-NPRGOPE
                 MOVE OPE-CDPZRFPN   TO SCARA-CDPZ
                 MOVE MOVP-CISO      TO SCARA-CISO
                 MOVE MOVP-DSCATAS   TO SCARA-DSCATAS
                 MOVE 'NO'           TO WRK-CNTL-OK
                 PERFORM 0632-APRI-CURSORE2
                    THRU 0632-APRI-CURSORE2-END
                 PERFORM 0634-LEGGI-TBASCARA
                    THRU 0634-LEGGI-TBASCARA-END
                       UNTIL W-SQL-NON-TROVATO OR
                             L-ERR-ERR         OR
                             WRK-CNTL-OK = 'SI'
                 IF L-ERR-ERR
                    GO TO 0620-PREPARA-MOVP-END
                 END-IF
                 PERFORM 0636-CHIUDI-CURSORE2
                    THRU 0636-CHIUDI-CURSORE2-END
                 IF WRK-CNTL-OK = 'NO'
                    MOVE 'SI'            TO W-FLAG-EXIT
                    MOVE 'ZOP020301'     TO W-DECOD
                    COPY ZMZINDIR.
                    MOVE 'E'             TO M-S(IND1)
                    MOVE M-M(IND1)       TO W-MAP-ERR
                    MOVE W-DEC-COORD     TO W-MOD-ERR
                    MOVE 'S087'          TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                    GO TO 0620-PREPARA-MOVP-END
                 END-IF
              END-IF
           END-IF.
APE001*VALORIZZA L'IBAN SE CARTA CONTO *----
           IF NCSVP-TTCCNT (IND5) (1:2) = 'CC' AND
              NCSVP-TTCCNT (IND5) (3:1) NUMERIC
              MOVE NCSVP-TTCCNT (IND5)           TO W-XXN
              MOVE 'ZCC080301'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                     TO MOVP-CDPZAPP
              MOVE 'ZCC080101'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                     TO MOVP-DPRNCCO
              MOVE 'ZCC080501'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE MOD(M-I(IND1):M-L(IND1))
                                                 TO MOVP-FACCCCO
              MOVE 'ZCC080401'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                     TO MOVP-NCCO
BPO002        MOVE W-COM-NUM                     TO MOVP-NCCO13
APE001        MOVE 'ZCC082101'                   TO W-DECOD
APE001        MOVE W-XXN-N                       TO C
APE001        COPY ZMZINDIR.
APE001        MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-LRRIFB
              MOVE 'ZCC080201'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                     TO MOVP-NPRNCCO
BPO002        MOVE W-COM-NUM                     TO MOVP-NPRNCCO13
              MOVE 'ZCC081201'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-TPRNCCO
000172        MOVE 'ZCC080601'                   TO W-DECOD
000172        MOVE W-XXN-N                       TO C
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        MOVE W-COM-NUM                     TO MOVP-NGGDISP

000362        MOVE 'ZCC081401'                   TO W-DECOD
000362        MOVE W-XXN-N                       TO C
000362        COPY ZMZINDIR.
000362        MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-CCAUNOP

              MOVE NCSVP-TTCCNT(IND5)            TO MOVP-RIFMOD
           END-IF.
           IF NCSVP-TTCCNT (IND5) = SPACES
              MOVE 0                             TO MOVP-CDPZAPP
              MOVE 0                             TO MOVP-DPRNCCO
              MOVE SPACES                        TO MOVP-FACCCCO
              MOVE 0                             TO MOVP-NCCO
BPO002        MOVE 0                             TO MOVP-NCCO13
              MOVE 0                             TO MOVP-NPRNCCO
BPO002        MOVE 0                             TO MOVP-NPRNCCO13
              MOVE SPACES                        TO MOVP-RIFMOD
              MOVE SPACES                        TO MOVP-TPRNCCO
           END-IF.
           IF NCSVP-TTNOP (IND5) (1:2) = 'NP'
              MOVE NCSVP-TTNOP (IND5)            TO W-XXN
              MOVE 'ZCC080701'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVP-FNOP
              MOVE 'ZCC080801'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                     TO MOVP-NNOP
              MOVE 'ZCC081001'                   TO W-DECOD
              MOVE W-XXN-N                       TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                     TO MOVP-FRAPREC
              MOVE NCSVP-TTNOP(IND5)             TO MOVP-RIFMOD
           END-IF.
180397*--------------------------- GESTIONE PER CAUSALE OPERATIVA
"          IF MOVP-CCAUNOP NOT GREATER SPACES
"             IF (MOVP-NPRGMOVP NOT < 21 AND NOT > 150)
"                IF ABSC-FTIPMOD = 1
"                   MOVE W-CIST           TO ACAOP-CIST
"                   MOVE W-CPCS-MOD       TO ACAOP-CPCS
"                   IF ABSC-FRSTNUM = 1
"                      MOVE ZEROES        TO ACAOP-TNDGSET
"                   ELSE
"                      MOVE ABSC-FRSTNDG  TO ACAOP-TNDGSET
"                   END-IF
"                   MOVE MOVP-NPRGMOVP    TO ACAOP-NPRGMOVP
"                   PERFORM 0640-LEGGI-TACAOP
"                      THRU 0640-LEGGI-TACAOP-END
"                   IF L-ERR-ERR
"                      GO TO 0620-PREPARA-MOVP-END
"                   END-IF
"                   IF W-SQL-NON-TROVATO
"                      MOVE 'E'           TO M-S(W-STC)
"                      MOVE M-M(W-STC)    TO W-MAP-ERR
"                      MOVE W-COORD-STC   TO W-MOD-ERR
"                      MOVE 'S105'        TO W-COD-ERR
"                      PERFORM 9999-GESTIONE-ERRORE
"                         THRU 9999-GESTIONE-ERRORE-END
"                      GO TO 0620-PREPARA-MOVP-END
"                   END-IF
"                   IF W-SQL-OK
"                      MOVE ACAOP-CCAUOP  TO MOVP-CCAUNOP
"                   END-IF
"                END-IF
"             END-IF
180397     END-IF.

BPEL26*    IF M-S(W-SF)  NOT = 'E' AND
BPEL26*       M-S(W-DIP) NOT = 'E' AND
BPEL26*       M-S(W-RIF) NOT = 'E' AND
BPEL26*       M-S(W-STC) NOT = 'E'
BPEL26     MOVE SPACES  TO  WRK-STATUS-ARAPP
BPEL26     IF W-SF GREATER ZEROES
BPEL26        IF M-S(W-SF) = 'E'
BPEL26           MOVE 'E'   TO  WRK-STATUS-ARAPP
BPEL26        END-IF
BPEL26     END-IF
BPEL26     IF W-DIP GREATER ZEROES
BPEL26        IF M-S(W-DIP) = 'E'
BPEL26           MOVE 'E'   TO  WRK-STATUS-ARAPP
BPEL26        END-IF
BPEL26     END-IF
BPEL26     IF W-RIF GREATER ZEROES
BPEL26        IF M-S(W-RIF) = 'E'
BPEL26           MOVE 'E'   TO  WRK-STATUS-ARAPP
BPEL26        END-IF
BPEL26     END-IF
BPEL26     IF W-STC GREATER ZEROES
BPEL26        IF M-S(W-STC) = 'E'
BPEL26           MOVE 'E'   TO  WRK-STATUS-ARAPP
BPEL26        END-IF
BPEL26     END-IF
BPEL26     IF WRK-STATUS-ARAPP NOT = 'E'
DOE001*------------------- CONTI BANCHE IN EURO ALTRI SERVIZI
DOE001        IF ABSC-FTPGEST = 6
DOE001        AND ABSC-FRSTNDG  = 2
DOE001          IF  ( NCSVP-TTSTC (IND5) (1:1) = 'D' OR 'A')
DOE001          AND ( NCSVP-TTSTC (IND5) (2:1) NUMERIC)
DOE001            MOVE NCSVP-TTSTC (IND5)            TO W-XN
DOE001            MOVE 'ZSC054401'                   TO W-DECOD
DOE001            MOVE W-XN-N                        TO C
DOE001            COPY ZMZINDIR.
DOE001          END-IF
DOE001          MOVE MOD(M-I(IND1):M-L(IND1))        TO MOVP-NCON13
DOE001          IF ( NCSVP-TTSTC (IND5) (1:1) = 'D' )
DOE001             MOVE 'ZSC050101'                TO W-DECOD
DOE001          ELSE
DOE001             MOVE 'ZSC050201'                TO W-DECOD
DOE001          END-IF
DOE001          MOVE W-XN-N                     TO C
DOE001          COPY ZMZINDIR.
DOE001          COPY ZMZVALNM.
DOE001          IF W-COM-NUM NOT = 0
DOE001             MOVE W-COM-NUM               TO MOVP-CDPZAPP
DOE001          ELSE
DOE001             MOVE 0                       TO MOVP-CDPZAPP
DOE001          END-IF
DOE001        END-IF
              IF ABSC-FTPGEST = 1
                 MOVE MOVP-CIST                     TO INDRA-CIST
                 MOVE MOVP-CSTC                     TO INDRA-CSTC
                 MOVE MOVP-CISO                     TO INDRA-CISO
                 MOVE MOVP-NNDGSET                  TO INDRA-NNDGSET
                 MOVE MOVP-NSUFABT                  TO INDRA-NSUFABT
                 MOVE MOVP-CDPZ                     TO INDRA-CDPZ
                 MOVE 0                             TO INDRA-NPRGOPE
                 PERFORM 0690-LEGGI-AINDRA
                    THRU 0690-LEGGI-AINDRA-END
280497*          IF WRK-TTNDG = 'ORD'
      *             PERFORM 0691-INDRA-ZOR03
      *                THRU 0691-INDRA-ZOR03-END
      *          ELSE
      *             IF WRK-TTNDG(1:1) = 'F'
      *                PERFORM 0693-INDRA-ZND06
      *                   THRU 0693-INDRA-ZND06-END
      *             END-IF
280497*          END-IF
                 IF NCSVP-TTSTC (IND5) (1:1) = 'D' AND
                    NCSVP-TTSTC (IND5) (2:1) NUMERIC
                    MOVE NCSVP-TTSTC (IND5)            TO W-XN
                    MOVE 'ZSC053401'                   TO W-DECOD
                    MOVE W-XN-N                        TO C
                    COPY ZMZINDIR.
BPO002*             MOVE INDRA-NCON          TO MOD(M-I(IND1):M-L(IND1))
BPO002              MOVE INDRA-NCON13        TO MOD(M-I(IND1):M-L(IND1))
                 ELSE
                    IF NCSVP-TTSTC (IND5) (1:1) = 'A' AND
                       NCSVP-TTSTC (IND5) (2:1) NUMERIC
                       MOVE NCSVP-TTSTC (IND5)         TO W-XN
                       MOVE 'ZSC053501'                TO W-DECOD
                       MOVE W-XN-N                     TO C
                       COPY ZMZINDIR.
BPO002*                MOVE INDRA-NCON       TO MOD(M-I(IND1):M-L(IND1))
BPO002                 MOVE INDRA-NCON13     TO MOD(M-I(IND1):M-L(IND1))
                    END-IF
                 END-IF
                 MOVE INDRA-NCON                       TO MOVP-NCON
BPO002           MOVE INDRA-NCON13                     TO MOVP-NCON13
280497***--- MEMORIZZA LA CHIAVE DEL RAPPORTO ED IL CAMPO WRK-TTNDG
280497***--- SU UNA TABELLA DI APPOGGIO PER AGGIORNARE SUL MODELLO
280497***--- I DATI ANAGRAFICI DEL RAPPORTO SOLO DOPO AVER ELABORATO
280497***--- TUTTI I MOVIMENTI
280497           IF WRK-TTNDG > SPACES
280497              ADD  1             TO   IND18
280497              MOVE INDRA-CIST    TO   WRK-ELE-CIST-INDRA(IND18)
280497              MOVE INDRA-CSTC    TO   WRK-ELE-CSTC-INDRA(IND18)
280497              MOVE INDRA-CISO    TO   WRK-ELE-CISO-INDRA(IND18)
280497              MOVE INDRA-NNDGSET TO   WRK-ELE-NNDGSET-INDRA(IND18)
280497              MOVE INDRA-NSUFABT TO   WRK-ELE-NSUFABT-INDRA(IND18)
280497              MOVE INDRA-CDPZ    TO   WRK-ELE-CDPZ-INDRA(IND18)
280497              MOVE INDRA-NPRGOPE TO   WRK-ELE-NPRGOPE-INDRA(IND18)
280497              MOVE WRK-TTNDG     TO   WRK-ELE-TTNDG-INDRA(IND18)
280497              MOVE SPACES        TO   WRK-ELE-FCONF-INDRA(IND18)
280497           END-IF
              END-IF
           END-IF.
000172*-------------------------------------------------- SACEPOLIZ
000172     MOVE 'ZRA093401'                      TO W-DECOD.
000172     COPY ZMZINDIR.
000172     MOVE MOD(M-I(IND1):M-L(IND1))         TO MOVP-SACEPOLIZ.
000172*-------------------------------------------------- TIPOTRANS
000172     MOVE 'ZRA093501'                      TO W-DECOD.
000172     COPY ZMZINDIR.
000172     MOVE MOD(M-I(IND1):M-L(IND1))         TO MOVP-TIPOTRANS.
000172*-------------------------------------------------- MANLEVA
000172     MOVE 'ZRA093601'                      TO W-DECOD.
000172     COPY ZMZINDIR.
000172     MOVE MOD(M-I(IND1):M-L(IND1))         TO MOVP-MANLEVA.

       0620-PREPARA-MOVP-END.
           EXIT.
       0621-PREPARA-ICABMOV.
           MOVE 'ZDI040901'                      TO W-DECOD.
           MOVE W-XXN-N                          TO C.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE W-COM-NUM-DEC1 = W-COM-NUM / 10 ** M-D(IND1).
           MOVE 'ZDI042501'                      TO W-DECOD.
           MOVE W-XXN-N                          TO C.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE W-COM-NUM-DEC2 = W-COM-NUM / 10 ** M-D(IND1).
           MOVE 'ZDI042601'                      TO W-DECOD.
           MOVE W-XXN-N                          TO C.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO MOVP-FSEGN
           IF MOVP-FSEGN = 'P'
              COMPUTE MOVP-ICABMOV = W-COM-NUM-DEC1 +
                      (W-COM-NUM-DEC1 * W-COM-NUM-DEC2 / 100)
           ELSE
              COMPUTE MOVP-ICABMOV = W-COM-NUM-DEC1 -
                      (W-COM-NUM-DEC1 * W-COM-NUM-DEC2 / 100)
           END-IF.
           MOVE W-COM-NUM-DEC2                   TO MOVP-SPRDCMB.
       0621-PREPARA-ICABMOV-END.
           EXIT.
       0622-ESAMINA-TTSF.
           IF NCSVP-TTSF1(IND5) (1:1) = 'D'
              MOVE NCSVP-TTSF1(IND5)             TO W-XN
              MOVE 'ZSC050301'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              MOVE W-DEC-COORD                   TO W-COORD-SF
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE IND1                          TO W-SF
              IF W-COM-NUM > ZEROS
                 MOVE W-COM-NUM                  TO MOVP-NSUFABT
              ELSE
                 MOVE 0                          TO MOVP-NSUFABT
              END-IF
           END-IF.
           IF MOVP-NSUFABT = 0
              IF NCSVP-TTSF1 (IND5) (1:1) = 'A'
                 MOVE NCSVP-TTSF1(IND5)          TO W-XN
                 MOVE 'ZSC050401'                TO W-DECOD
                 MOVE W-XN-N                     TO C
                 MOVE W-DEC-COORD                TO W-COORD-SF
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE IND1                       TO W-SF
                 IF W-COM-NUM NOT = 0
                    MOVE W-COM-NUM               TO MOVP-NSUFABT
                 ELSE
                    MOVE 0                       TO MOVP-NSUFABT
                 END-IF
              END-IF
           END-IF.
           IF MOVP-NSUFABT = 0
              IF NCSVP-TTSF2 (IND5) (1:1) = 'D'
                 MOVE NCSVP-TTSF2(IND5)          TO W-XN
                 MOVE 'ZSC050301'                TO W-DECOD
                 MOVE W-XN-N                     TO C
                 MOVE W-DEC-COORD                TO W-COORD-SF
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE IND1                       TO W-SF
                 IF W-COM-NUM NOT = 0
                    MOVE W-COM-NUM               TO MOVP-NSUFABT
                 ELSE
                    MOVE 0                       TO MOVP-NSUFABT
                 END-IF
              END-IF
           END-IF.
           IF MOVP-NSUFABT = 0
              IF NCSVP-TTSF2 (IND5) (1:1) = 'A'
                 MOVE NCSVP-TTSF2(IND5)          TO W-XN
                 MOVE 'ZSC050401'                TO W-DECOD
                 MOVE W-XN-N                     TO C
                 MOVE W-DEC-COORD                TO W-COORD-SF
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE IND1                       TO W-SF
                 IF W-COM-NUM NOT = 0
                    MOVE W-COM-NUM               TO MOVP-NSUFABT
                 ELSE
                    MOVE 0                       TO MOVP-NSUFABT
                 END-IF
              END-IF
           END-IF.
           IF MOVP-NSUFABT = 0
              IF NCSVP-TTSF3 (IND5) (1:1) = 'D'
                 MOVE NCSVP-TTSF3(IND5)          TO W-XN
                 MOVE 'ZSC050301'                TO W-DECOD
                 MOVE W-XN-N                     TO C
                 MOVE W-DEC-COORD                TO W-COORD-SF
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE IND1                       TO W-SF
                 IF W-COM-NUM NOT = 0
                    MOVE W-COM-NUM               TO MOVP-NSUFABT
                 ELSE
                    MOVE 0                       TO MOVP-NSUFABT
                 END-IF
              END-IF
           END-IF.
           IF MOVP-NSUFABT = 0
              IF NCSVP-TTSF3 (IND5) (1:1) = 'A'
                 MOVE NCSVP-TTSF3(IND5)          TO W-XN
                 MOVE 'ZSC050401'                TO W-DECOD
                 MOVE W-XN-N                     TO C
                 MOVE W-DEC-COORD                TO W-COORD-SF
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE IND1                       TO W-SF
                 IF W-COM-NUM NOT = 0
                    MOVE W-COM-NUM               TO MOVP-NSUFABT
                 ELSE
                    MOVE 0                       TO MOVP-NSUFABT
                 END-IF
              END-IF
           END-IF.
           IF MOVP-NSUFABT = 0
EUR001*BPEL26 IF (W-SF > 0) AND (W-SF < 3001)
EUR001        IF (W-SF > 0) AND (W-SF < 3601)
                 IF M-S(W-SF) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    IF W-SF GREATER ZEROES
                       MOVE 'E'                        TO M-S(W-SF)
                       MOVE W-COORD-SF                 TO W-MOD-ERR
                       MOVE M-M(W-SF)                  TO W-MAP-ERR
                    ELSE
                       MOVE SPACES                     TO W-MOD-ERR
                       MOVE '0'                        TO W-MAP-ERR
                    END-IF
                    MOVE 2                             TO W-FLAG-ERR
                    MOVE 'S021'                        TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
BPEL26        END-IF
           END-IF.
       0622-ESAMINA-TTSF-END.
           EXIT.
       0623-ESAMINA-TTDIP.
           IF NCSVP-TTDIP1 (IND5) (1:1) = 'D'
              MOVE NCSVP-TTDIP1 (IND5)           TO W-XN
              MOVE 'ZSC050101'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              MOVE W-DEC-COORD                   TO W-COORD-DIP
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE IND1                          TO W-DIP
              IF W-COM-NUM NOT = 0
                 MOVE W-COM-NUM                  TO MOVP-CDPZ
              ELSE
                 MOVE 0                          TO MOVP-CDPZ
              END-IF
           END-IF.
           IF MOVP-CDPZ = 0
              IF NCSVP-TTDIP1 (IND5) (1:1) = 'A'
                 MOVE NCSVP-TTDIP1 (IND5)        TO W-XN
                 MOVE 'ZSC050201'                TO W-DECOD
                 MOVE W-XN-N                     TO C
                 MOVE W-DEC-COORD                TO W-COORD-DIP
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE IND1                       TO W-DIP
                 IF W-COM-NUM NOT = 0
                    MOVE W-COM-NUM               TO MOVP-CDPZ
                 ELSE
                    MOVE 0                       TO MOVP-CDPZ
                END-IF
              END-IF
           END-IF.
           IF MOVP-CDPZ = 0
              IF NCSVP-TTDIP2 (IND5) (1:1) = 'D'
                 MOVE NCSVP-TTDIP2 (IND5)        TO W-XN
                 MOVE 'ZSC050101'                TO W-DECOD
                 MOVE W-XN-N                     TO C
                 MOVE W-DEC-COORD                TO W-COORD-DIP
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE IND1                       TO W-DIP
                 IF W-COM-NUM NOT = 0
                    MOVE W-COM-NUM               TO MOVP-CDPZ
                 ELSE
                    MOVE 0                       TO MOVP-CDPZ
                END-IF
              END-IF
           END-IF.
           IF MOVP-CDPZ = 0
              IF NCSVP-TTDIP2 (IND5) (1:1) = 'A'
                 MOVE NCSVP-TTDIP2 (IND5)        TO W-XN
                 MOVE 'ZSC050201'                TO W-DECOD
                 MOVE W-XN-N                     TO C
                 MOVE W-DEC-COORD                TO W-COORD-DIP
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE IND1                       TO W-DIP
                 IF W-COM-NUM NOT = 0
                    MOVE W-COM-NUM               TO MOVP-CDPZ
                 ELSE
                    MOVE 0                       TO MOVP-CDPZ
                END-IF
              END-IF
           END-IF.
           IF MOVP-CDPZ = 0
              IF NCSVP-TTDIP3 (IND5) (1:1) = 'D'
                 MOVE NCSVP-TTDIP3 (IND5)        TO W-XN
                 MOVE 'ZSC050101'                TO W-DECOD
                 MOVE W-XN-N                     TO C
                 MOVE W-DEC-COORD                TO W-COORD-DIP
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE IND1                       TO W-DIP
                 IF W-COM-NUM NOT = 0
                    MOVE W-COM-NUM               TO MOVP-CDPZ
                 ELSE
                    MOVE 0                       TO MOVP-CDPZ
                END-IF
              END-IF
           END-IF.
           IF MOVP-CDPZ = 0
              IF NCSVP-TTDIP3 (IND5) (1:1) = 'A'
                 MOVE NCSVP-TTDIP3 (IND5)        TO W-XN
                 MOVE 'ZSC050201'                TO W-DECOD
                 MOVE W-XN-N                     TO C
                 MOVE W-DEC-COORD                TO W-COORD-DIP
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE IND1                       TO W-DIP
                 IF W-COM-NUM NOT = 0
                    MOVE W-COM-NUM               TO MOVP-CDPZ
                 ELSE
                    MOVE 0                       TO MOVP-CDPZ
                END-IF
              END-IF
           END-IF.
           IF MOVP-CDPZ = 0
              IF M-S(W-DIP) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 IF W-DIP GREATER ZEROES
                    MOVE 'E'                     TO M-S(W-DIP)
                    MOVE W-COORD-DIP             TO W-MOD-ERR
                    MOVE M-M(W-DIP)              TO W-MAP-ERR
                 ELSE
                    MOVE SPACES                  TO W-MOD-ERR
                    MOVE '0'                     TO W-MAP-ERR
                 END-IF
                 MOVE 2                          TO W-FLAG-ERR
                 MOVE 'S022'                     TO W-COD-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
       0623-ESAMINA-TTDIP-END.
           EXIT.
       0624-ESAMINA-TTRIF.
           IF NCSVP-TTRIF (IND5) (1:1) = 'D'
              MOVE NCSVP-TTRIF (IND5)            TO W-XNN
              MOVE 'ZRI010501'                   TO W-DECOD
              MOVE W-XNN-N                       TO C
              MOVE W-DEC-COORD                   TO W-COORD-RIF
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE IND1                          TO W-RIF
              IF W-COM-NUM NOT = 0
                 MOVE W-COM-NUM                  TO MOVP-CDPZ
                 MOVE 'ZRI010601'                TO W-DECOD
                 MOVE W-XNN-N                    TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO MOVP-NPRGOPE
              ELSE
                 IF M-S(W-RIF) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'E'                     TO M-S(W-RIF)
                    MOVE W-COORD-RIF             TO W-MOD-ERR
                    MOVE M-M(W-RIF)              TO W-MAP-ERR
                    MOVE 2                       TO W-FLAG-ERR
                    MOVE 'S023'                  TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
              END-IF
           ELSE
              IF NCSVP-TTRIF (IND5) (1:1) = 'A'
                 MOVE NCSVP-TTRIF (IND5)         TO W-XNN
                 MOVE 'ZRI010701'                TO W-DECOD
                 MOVE W-XNN-N                    TO C
                 MOVE W-DEC-COORD                TO W-COORD-RIF
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE IND1                       TO W-RIF
                 IF W-COM-NUM NOT = 0
                    MOVE W-COM-NUM               TO MOVP-CDPZ
                    MOVE 'ZRI010801'             TO W-DECOD
                    MOVE W-XNN-N                 TO C
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    MOVE W-COM-NUM               TO MOVP-NPRGOPE
                 ELSE
                    IF M-S(W-RIF) NOT = SPACES
                       NEXT SENTENCE
                    ELSE
                       IF W-RIF GREATER ZEROES
                          MOVE 'E'                  TO M-S(W-RIF)
                          MOVE W-COORD-RIF          TO W-MOD-ERR
                          MOVE M-M(W-RIF)           TO W-MAP-ERR
                       ELSE
                          MOVE SPACES               TO W-MOD-ERR
                          MOVE '0'                  TO W-MAP-ERR
                       END-IF
                       MOVE 2                       TO W-FLAG-ERR
                       MOVE 'S024'                  TO W-COD-ERR
                       PERFORM 9999-GESTIONE-ERRORE
                          THRU 9999-GESTIONE-ERRORE-END
                    END-IF
                 END-IF
              END-IF
           END-IF.
       0624-ESAMINA-TTRIF-END.
           EXIT.
       0625-TRATTA-ARAPP.
           MOVE MOVP-CIST                        TO RAPP-CIST.
           MOVE MOVP-CSTC                        TO RAPP-CSTC.
           MOVE MOVP-CISO                        TO RAPP-CISO.
           PERFORM 0509-LEGGI-ARAPP
              THRU 0509-LEGGI-ARAPP-END.
           IF W-SQL-NON-TROVATO
CAR275        MOVE SPACES TO WRK-TROVATO-RAPPORTO
              PERFORM 0628-ARAPP-NON-TROVATO
                 THRU 0628-ARAPP-NON-TROVATO-END
           ELSE
CAR275        MOVE 'SI'   TO WRK-TROVATO-RAPPORTO
              PERFORM 0627-ARAPP-TROVATO
                 THRU 0627-ARAPP-TROVATO-END
           END-IF.
           IF ABSC-FRCH NOT = 1
              IF MOVP-NNDGPART NOT > SPACES
                 MOVE 'ZND060101'                TO W-DECOD
                 MOVE WRK-NDG                    TO C
                 COPY ZMZINDIR.
                 IF L-FASE GREATER 1
                    IF M-S(IND1) NOT = SPACES
                       NEXT SENTENCE
                    ELSE
                       MOVE 'E'          TO M-S(IND1)
                       MOVE 2            TO W-FLAG-ERR
                       MOVE 'S031'       TO W-COD-ERR
                       MOVE M-M(IND1)    TO W-MAP-ERR
                       MOVE W-DEC-COORD  TO W-MOD-ERR
                       PERFORM 9999-GESTIONE-ERRORE
                          THRU 9999-GESTIONE-ERRORE-END
                    END-IF
                 END-IF
              END-IF
           END-IF.
       0625-TRATTA-ARAPP-END.
           EXIT.
       0626-LEGGI-ANAIND.
           EXEC SQL INCLUDE ZMS10901 END-EXEC.
           MOVE SPACES                           TO W-TROVATO.
       0626-LEGGI-ANAIND-END.
           EXIT.
       0627-ARAPP-TROVATO.
           PERFORM VARYING IND4 FROM 1 BY 1
                   UNTIL IND4 > WCM-INDMAX(08)
              MOVE 'ZCC081301'                   TO W-DECOD
              MOVE IND4                          TO C
              COPY ZMZINDIR.
              IF MOD(M-I(IND1):M-L(IND1)) = RAPP-NNDGSET
                 MOVE 'ZCC081601'             TO W-DECOD
                 MOVE IND4                    TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 IF W-COM-NUM = ZEROES AND
                    RAPP-FRAPREC = 3
                    IF M-S(W-STC) NOT = SPACES
                       NEXT SENTENCE
                    ELSE
                       MOVE 'E'                        TO M-S(W-STC)
                       MOVE M-M(W-STC)                 TO W-MAP-ERR
                       MOVE W-COORD-STC                TO W-MOD-ERR
                       MOVE 2                          TO W-FLAG-ERR
                       MOVE 'S088'                     TO W-COD-ERR
                       PERFORM 9999-GESTIONE-ERRORE
                          THRU 9999-GESTIONE-ERRORE-END
                       GO TO 0627-ARAPP-TROVATO-END
                    END-IF
                 END-IF
                 MOVE 'ZCC081601'                TO W-DECOD
                 MOVE IND4                       TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 IF W-COM-NUM = MOVP-NPRGMOVP
                    MOVE 'ZCC081001'                TO W-DECOD
                    MOVE IND4                       TO C
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    MOVE RAPP-FRAPREC               TO W-COM-NUM
                    MOVE W-COM-NUM(DA1:)            TO
                                           MOD(M-I(IND1):M-L(IND1))
                 END-IF
              END-IF
           END-PERFORM.
CAR275*    IF RAPP-CSTARAP NOT = 1 AND
CAR275*       W-SQL-OK
CAR275     IF W-SQL-OK
CAR275        MOVE SPACES TO WRK-RAPPORTO
CAR275        IF OPE-FTIPOPE = 1
CAR275        AND MOVP-IMOV NOT = ZEROES
CAR275            PERFORM 0638-CONTROLLA-RAPPORTO
CAR275               THRU 0638-CONTROLLA-RAPPORTO-END
CAR275            IF WRK-RAPPORTO = 'KO'
                     IF M-S(W-STC) NOT = SPACES
                        NEXT SENTENCE
                     ELSE
                        MOVE 'E'                        TO M-S(W-STC)
                        MOVE M-M(W-STC)                 TO W-MAP-ERR
                        MOVE W-COORD-STC                TO W-MOD-ERR
                        MOVE 2                          TO W-FLAG-ERR
CAR275*                 MOVE 'S030'                     TO W-COD-ERR
                        MOVE SPACES         TO WCM-SCARA-DESCR
                        MOVE RAPP-CISO      TO WCM-SCARA-CISO
                        MOVE RAPP-CDPZ      TO WCM-SCARA-CDPZ
                        MOVE RAPP-NPRGOPE   TO WCM-SCARA-NPRGOPE
                        MOVE ' SC '         TO WCM-SCARA-DESCR1
                        MOVE RAPP-CSTC      TO WCM-SCARA-CSTC
                        MOVE ' ND '         TO WCM-SCARA-DESCR2
                        MOVE RAPP-NNDGSET   TO WCM-SCARA-NNDGSET
                        MOVE ' SUF '        TO WCM-SCARA-DESCR3
                        MOVE RAPP-NSUFABT   TO WCM-SCARA-NSUFABT
                        MOVE SPACES         TO WCM-SCARA-DESCR4
                        MOVE WCM-ERR-SCARA  TO W-DES-ERR
CAR275                  MOVE  'STATO'       TO WCM-SCARA-DESCR2
CAR275                  MOVE  'RAPPORTO = ' TO WCM-SCARA-NNDGSET
CAR275                  MOVE  RAPP-CSTARAP  TO WCM-SCARA-DESCR3
                        PERFORM 9999-GESTIONE-ERRORE
                           THRU 9999-GESTIONE-ERRORE-END
CAR275             END-IF
CAR275          END-IF
              END-IF
           END-IF.
000286     IF ABSC-FTPGEST = 2
CAR275        IF (RAPP-CSTARAP = 0
CAR275        AND ( WRK-RIVALORIZZAZIONE NOT = 'SI'
CAR275        AND  WRK-ANNULLAMENTO NOT = 'SI' ))
CAR275           MOVE 'S227'         TO W-COD-ERR
CAR275           MOVE SPACES         TO WCM-SCARA-DESCR
CAR275           MOVE RAPP-CISO      TO WCM-SCARA-CISO
CAR275           MOVE RAPP-CDPZ      TO WCM-SCARA-CDPZ
CAR275           MOVE RAPP-NPRGOPE   TO WCM-SCARA-NPRGOPE
CAR275           MOVE ' SC '         TO WCM-SCARA-DESCR1
CAR275           MOVE RAPP-CSTC      TO WCM-SCARA-CSTC
CAR275           MOVE 'STATO'        TO WCM-SCARA-DESCR2
CAR275           MOVE 'RAPPORTO = '  TO WCM-SCARA-NNDGSET
CAR275           MOVE RAPP-CSTARAP   TO WCM-SCARA-DESCR3
CAR275           MOVE SPACES         TO WCM-SCARA-DESCR4
CAR275           MOVE WCM-ERR-SCARA  TO W-DES-ERR
CAR275           MOVE 'E'            TO M-S(W-STC)
CAR275           MOVE M-M(W-STC)     TO W-MAP-ERR
CAR275           MOVE W-COORD-STC    TO W-MOD-ERR
CAR275           MOVE 2              TO W-FLAG-ERR
CAR275           PERFORM 9999-GESTIONE-ERRORE
CAR275              THRU 9999-GESTIONE-ERRORE-END
CAR275        ELSE
000286           IF (MOVP-TMOV = 2 AND ABSC-FACNRAP = 2
000286           OR  MOVP-TMOV = 1 AND ABSC-FACNRAP = 3)
000286              IF MOVP-DVALNOA < RAPP-DVALNOA
000286                 MOVE RAPP-DVALNOA  TO  MOVP-DVALNOA
000292                 MOVE RAPP-DVALNOA TO WRK-DVALNOA
000286              END-IF
EUR001              IF MOVP-DVALNOA > WRK-MOVP-DVALNOA
EUR001                 MOVE MOVP-DVALNOA TO WRK-MOVP-DVALNOA
EUR001              END-IF
000286           END-IF
CAR275        END-IF
000286     END-IF.
       0627-ARAPP-TROVATO-END.
           EXIT.
       0628-ARAPP-NON-TROVATO.
           IF ABSC-FTPGEST = 1
              IF M-S(W-STC) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 MOVE 'E'            TO M-S(W-STC)
                 MOVE M-M(W-STC)     TO W-MAP-ERR
                 MOVE W-COORD-STC    TO W-MOD-ERR
                 MOVE 2              TO W-FLAG-ERR
                 MOVE 'S025'         TO W-COD-ERR
000110*          MOVE SPACES         TO WCM-SCARA-DESCR
000110*          MOVE RAPP-CISO      TO WCM-SCARA-CISO
000110*          MOVE RAPP-CDPZ      TO WCM-SCARA-CDPZ
000110*          MOVE RAPP-NPRGOPE   TO WCM-SCARA-NPRGOPE
000110*          MOVE ' SC '         TO WCM-SCARA-DESCR1
000110*          MOVE RAPP-CSTC      TO WCM-SCARA-CSTC
000110*          MOVE ' ND '         TO WCM-SCARA-DESCR2
000110*          MOVE RAPP-NNDGSET   TO WCM-SCARA-NNDGSET
000110*          MOVE ' SUF '        TO WCM-SCARA-DESCR3
000110*          MOVE RAPP-NSUFABT   TO WCM-SCARA-NSUFABT
000110*          MOVE WCM-ERR-SCARA    TO W-DES-ERR
000110           MOVE 'RAPP.NON TROV.' TO WCM-SCARA-2-DESCR
000110           MOVE RAPP-CISO        TO WCM-SCARA-2-CISO
000110           MOVE RAPP-CDPZ        TO WCM-SCARA-2-CDPZ
000110           MOVE RAPP-NPRGOPE     TO WCM-SCARA-2-NPRGOPE
000110           MOVE RAPP-CSTC        TO WCM-SCARA-2-CSTC
000110           MOVE RAPP-NNDGSET     TO WCM-SCARA-2-NNDGSET
000110           MOVE RAPP-NSUFABT     TO WCM-SCARA-2-NSUFABT
000110           MOVE WCM-ERR-SCARA-2  TO W-DES-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
           IF ABSC-FTPGEST = 2
              IF ABSC-FACNRAP = 2 AND
                 MOVP-TMOV    = 2
                 IF M-S(W-STC) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'E'            TO M-S(W-STC)
                    MOVE M-M(W-STC)     TO W-MAP-ERR
                    MOVE W-COORD-STC    TO W-MOD-ERR
                    MOVE 2              TO W-FLAG-ERR
                    MOVE 'S026'         TO W-COD-ERR
                    MOVE SPACES         TO WCM-SCARA-DESCR
                    MOVE RAPP-CISO      TO WCM-SCARA-CISO
                    MOVE RAPP-CDPZ      TO WCM-SCARA-CDPZ
                    MOVE RAPP-NPRGOPE   TO WCM-SCARA-NPRGOPE
                    MOVE ' SC '         TO WCM-SCARA-DESCR1
                    MOVE RAPP-CSTC      TO WCM-SCARA-CSTC
                    MOVE ' ND '         TO WCM-SCARA-DESCR2
                    MOVE RAPP-NNDGSET   TO WCM-SCARA-NNDGSET
                    MOVE ' SUF '        TO WCM-SCARA-DESCR3
                    MOVE RAPP-NSUFABT   TO WCM-SCARA-NSUFABT
                    MOVE WCM-ERR-SCARA  TO W-DES-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
              END-IF
              IF ABSC-FACNRAP = 3 AND
                 MOVP-TMOV    = 1
                 IF M-S(W-STC) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'E'            TO M-S(W-STC)
                    MOVE M-M(W-STC)     TO W-MAP-ERR
                    MOVE W-COORD-STC    TO W-MOD-ERR
                    MOVE 2              TO W-FLAG-ERR
                    MOVE 'S027'         TO W-COD-ERR
                    MOVE SPACES         TO WCM-SCARA-DESCR
                    MOVE RAPP-CISO      TO WCM-SCARA-CISO
                    MOVE RAPP-CDPZ      TO WCM-SCARA-CDPZ
                    MOVE RAPP-NPRGOPE   TO WCM-SCARA-NPRGOPE
                    MOVE ' SC '         TO WCM-SCARA-DESCR1
                    MOVE RAPP-CSTC      TO WCM-SCARA-CSTC
                    MOVE ' ND '         TO WCM-SCARA-DESCR2
                    MOVE RAPP-NNDGSET   TO WCM-SCARA-NNDGSET
                    MOVE ' SUF '        TO WCM-SCARA-DESCR3
                    MOVE RAPP-NSUFABT   TO WCM-SCARA-NSUFABT
                    MOVE WCM-ERR-SCARA  TO W-DES-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
              END-IF
           END-IF.
           IF ABSC-FTPGEST = 3 OR 4
220597        IF ABSC-CTIPSTC > 340
               IF ABSC-CNATCON = 1 AND
                 MOVP-TMOV    = 2
                 IF M-S(W-STC) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'E'                  TO M-S(W-STC)
                    MOVE M-M(W-STC)           TO W-MAP-ERR
                    MOVE W-COORD-STC          TO W-MOD-ERR
                    MOVE 2                    TO W-FLAG-ERR
                    MOVE 'S028'               TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
               END-IF
               IF ABSC-CNATCON = 2 AND
                 MOVP-TMOV    = 1
                 IF M-S(W-STC) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'E'                  TO M-S(W-STC)
                    MOVE M-M(W-STC)           TO W-MAP-ERR
                    MOVE W-COORD-STC          TO W-MOD-ERR
                    MOVE 2                    TO W-FLAG-ERR
                    MOVE 'S029'               TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
               END-IF
220597        END-IF
           END-IF.
       0628-ARAPP-NON-TROVATO-END.
           EXIT.
       0629-SCRIVI-TBANONIM.
           INITIALIZE DCLTBANONIM.
           MOVE W-CIST         TO NONIM-CIST.
           MOVE OPE-DIPOPE     TO NONIM-DIPOPE.
           MOVE OPE-NUMOPE     TO NONIM-NUMOPE.
           MOVE MOVP-NPRGMOVP  TO NONIM-NPRGMOVP.
           MOVE MOVP-NSUBMOVP  TO NONIM-NSUBMOVP.
           IF WRK-TTNDG = 'ORD'
              MOVE 'ZOR032001'  TO W-DECOD
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1)) TO NONIM-ZIND
              MOVE 'ZAA171901'  TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              IF W-COM-NUM = 1
                 MOVE 'ZOR032201'  TO W-DECOD
                 COPY ZMZINDIR.
                 MOVE MOD(M-I(IND1):M-L(IND1)) TO NONIM-ZCTA
              END-IF
              IF W-COM-NUM = 2
                 MOVE 'ZOR032301'  TO W-DECOD
                 COPY ZMZINDIR.
                 MOVE MOD(M-I(IND1):M-L(IND1)) TO NONIM-ZCTA
              END-IF
           END-IF.
           IF WRK-TTNDG(1:1) = 'F'
              MOVE WRK-TTNDG    TO W-XNN
              MOVE 'ZND060301'  TO W-DECOD
              MOVE W-XNN-N      TO C
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1)) TO NONIM-ZIND
              MOVE 'ZAA171901'  TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              IF W-COM-NUM = 1
                 MOVE 'ZND060501'  TO W-DECOD
                 MOVE W-XNN-N      TO C
                 COPY ZMZINDIR.
                 MOVE MOD(M-I(IND1):M-L(IND1)) TO NONIM-ZCTA
              END-IF
              IF W-COM-NUM = 2
                 MOVE 'ZND060601'  TO W-DECOD
                 MOVE W-XNN-N      TO C
                 COPY ZMZINDIR.
                 MOVE MOD(M-I(IND1):M-L(IND1)) TO NONIM-ZCTA
              END-IF
           END-IF.
           MOVE ZEROES TO W-SQLCODE.
           EXEC SQL INCLUDE ZMV16301 END-EXEC.
           IF NOT W-SQL-OK AND
              NOT W-SQL-DOPPIO
              MOVE 8                             TO W-FLAG-ERR
              MOVE '9999'                        TO W-COD-ERR
              MOVE 'TBANONIM'                    TO L-NOME-TABELLA
              MOVE W-SQLCODE                     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                    TO L-MODULO
              MOVE '0629-SCRIVI-TBANONIM'        TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
              GO TO 0629-SCRIVI-TBANONIM-END
           END-IF.
           IF W-SQL-DOPPIO
              MOVE ZEROES TO W-SQLCODE
              EXEC SQL INCLUDE ZMU16301 END-EXEC
              IF NOT W-SQL-OK
                 MOVE 8                         TO W-FLAG-ERR
                 MOVE '9999'                    TO W-COD-ERR
                 MOVE 'TBANONIM'                TO L-NOME-TABELLA
                 MOVE W-SQLCODE                 TO L-CODICE-SQL
                 MOVE 'ZMBSVIL0'                TO L-MODULO
                 MOVE '0629-AGG-TBANONIM'       TO L-SUB-MODULO
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF.
       0629-SCRIVI-TBANONIM-END.
           EXIT.
       0630-LEGGI-TABSC.
           MOVE 'NO'                             TO W-TROVATO-CSTC.
           PERFORM 0631-CERCA-TABSC
              THRU 0631-CERCA-TABSC-END
                   VARYING INDX FROM 1 BY 1
                     UNTIL INDX > 35 OR
                     W-ELE-TABSC (INDX) = SPACES.
           IF W-TROVATO-CSTC = 'NO'
              EXEC SQL INCLUDE ZMS21401 END-EXEC.
              IF W-SQL-NON-TROVATO
                 IF L-FASE NOT GREATER 1
                    MOVE 'S'   TO WRK-NO-CSTC
                    INITIALIZE DCLTBTABSC
                    GO TO 0630-LEGGI-TABSC-END
                 END-IF
                 ADD 1                   TO INDP
                 MOVE DCLTBAMOVP         TO WS-TAB-TBAMOVP(INDP)
                 MOVE 'E'                TO WS-STATUS-TBAMOVP(INDP)
                 MOVE 'S'                TO W-SI-ESCE
                 IF M-S(W-STC) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'E'                      TO M-S(W-STC)
                    MOVE M-M(W-STC)               TO W-MAP-ERR
                    MOVE W-COORD-STC              TO W-MOD-ERR
                    MOVE 2                        TO W-FLAG-ERR
                    MOVE 'S032'                   TO W-COD-ERR
                    MOVE ABSC-CSTC                TO WCM-ABSC-CSTC
                    MOVE SPACES                   TO WCM-ABSC-DESCR
                    MOVE ' ASSENTE IN ZM.TBTABSC' TO WCM-ABSC-DESCR
                    MOVE WCM-ERR-ABSC             TO W-DES-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
              ELSE
                 IF NOT W-SQL-OK
                    MOVE 8                       TO W-FLAG-ERR
                    MOVE '9999'                  TO W-COD-ERR
                    MOVE 'TBTABSC '              TO L-NOME-TABELLA
                    MOVE W-SQLCODE               TO L-CODICE-SQL
                    MOVE 'ZMBSVIL0'              TO L-MODULO
                    MOVE '0630-LEGGI-TABSC'      TO L-SUB-MODULO
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 ELSE
                    MOVE DCLTBTABSC              TO W-ELE-TABSC(INDX)
                 END-IF
              END-IF
           END-IF.
       0630-LEGGI-TABSC-END.
           EXIT.
       0631-CERCA-TABSC.
           IF W-ELE-TABSC (INDX) = SPACES
              MOVE 'NO'                          TO W-TROVATO-CSTC
           ELSE
              IF W-ELE-CIST (INDX) = ABSC-CIST AND
                 W-ELE-CSTC (INDX) = ABSC-CSTC
                 MOVE W-ELE-TABSC (INDX)         TO DCLTBTABSC
                 MOVE 'SI'                       TO W-TROVATO-CSTC
              END-IF
           END-IF.
       0631-CERCA-TABSC-END.
           EXIT.
      *------------------------------------------------------------*
      * APERTURA CURSORE CUR2 SULLA TABELLA ZM.TBASCARA            *
      *------------------------------------------------------------*
       0632-APRI-CURSORE2.
           EXEC SQL INCLUDE ZMLOPE02 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8                             TO W-FLAG-ERR
              MOVE '9999'                        TO W-COD-ERR
              MOVE 'TBASCARA'                    TO L-NOME-TABELLA
              MOVE W-SQLCODE                     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                    TO L-MODULO
              MOVE '0632-APRI-CURSORE2'          TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       0632-APRI-CURSORE2-END.
           EXIT.
       0634-LEGGI-TBASCARA.
           EXEC SQL INCLUDE ZMF10704 END-EXEC.
           IF W-SQL-NON-TROVATO
              NEXT SENTENCE
           ELSE
              IF NOT W-SQL-OK
                 MOVE 8                          TO W-FLAG-ERR
                 MOVE '9999'                     TO W-COD-ERR
                 MOVE 'TBASCARA'                 TO L-NOME-TABELLA
                 MOVE W-SQLCODE                  TO L-CODICE-SQL
                 MOVE 'ZMBSVIL0'                 TO L-MODULO
                 MOVE '0634-LEGGI-TBASCARA'      TO L-SUB-MODULO
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
           IF W-SQL-OK
              IF SCARA-IRIMFIN = MOVP-IMOV
                 MOVE 'SI' TO WRK-CNTL-OK
              END-IF
           END-IF.
       0634-LEGGI-TBASCARA-END.
           EXIT.
      *------------------------------------------------------------*
      * CHIUSURA CURSORE CUR2 SULLA TABELLA ZM.TBASCARA            *
      *------------------------------------------------------------*
       0636-CHIUDI-CURSORE2.
           EXEC SQL INCLUDE ZMLCLO02 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8                             TO W-FLAG-ERR
              MOVE '9999'                        TO W-COD-ERR
              MOVE 'TBASCARA'                    TO L-NOME-TABELLA
              MOVE W-SQLCODE                     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                    TO L-MODULO
              MOVE '0636-CHIUDI-CURSORE2'        TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       0636-CHIUDI-CURSORE2-END.
           EXIT.
CAR275*------------------------
CAR275 0638-CONTROLLA-RAPPORTO.
CAR275*---------------------------------- CSTSARAP = 8 BLOCCO DARE
CAR275*---------------------------------- CSTSARAP = 9 BLOCCO AVERE
CAR275     IF ABSC-FTPGEST = 1
BDR191*       IF  ( RAPP-CSTARAP  = 2 OR 3 OR 4 OR 5)
BDR191        IF  ( RAPP-CSTARAP  = 3 OR 4 OR 5)
CAR275         OR ( RAPP-CSTARAP  = 7 AND OPE-DIPOPE NOT = RAPP-CDPZ )
CAR275         OR ( RAPP-CSTARAP  = 8  AND MOVP-TMOV = 1 )
CAR275         OR ( RAPP-CSTARAP  = 9  AND MOVP-TMOV = 2 )
CAR275            MOVE 'KO'     TO WRK-RAPPORTO
CAR275            MOVE 'S030'                     TO W-COD-ERR
CAR275     END-IF.
CAR275
CAR275     IF ABSC-FTPGEST = 2
CAR275        IF ( RAPP-CSTARAP > 1 )
CAR275           MOVE 'S030'                     TO W-COD-ERR
CAR275        END-IF
CAR275        IF ( RAPP-CSTARAP = 0
CAR275             AND ( WRK-RIVALORIZZAZIONE NOT = 'SI'
CAR275              AND  WRK-ANNULLAMENTO NOT = 'SI' ))
CAR275           MOVE 'KO'                       TO WRK-RAPPORTO
BDR202*          MOVE 'CR44'                     TO W-COD-ERR
BDR202           MOVE 'SR44'                     TO W-COD-ERR
CAR275        END-IF
CAR275     END-IF.
CAR275*
CAR275 0638-CONTROLLA-RAPPORTO-END.
CAR275        EXIT.
       0640-LEGGI-TACAOP.
           EXEC SQL INCLUDE ZMS22901 END-EXEC.
           IF NOT W-SQL-OK AND
              NOT W-SQL-NON-TROVATO
              MOVE 8                    TO W-FLAG-ERR
              MOVE '9999'               TO W-COD-ERR
              MOVE 'TBTACAOP'           TO L-NOME-TABELLA
              MOVE W-SQLCODE            TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'           TO L-MODULO
              MOVE '0640-LEGGI-TACAOP'  TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END.
       0640-LEGGI-TACAOP-END.
           EXIT.
       0650-MUOVI-SE-ORD.
           MOVE 'ZOR031801'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO W-NNDGSET.
           MOVE 'ZOR033801'                      TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO MOVP-TAVVPR.
           MOVE 'ZOR031901'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO W-TNDGSET.
           MOVE 'ZOR032501'                      TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO W-FRSD.
       0650-MUOVI-SE-ORD-END.
           EXIT.
       0660-MUOVI-SE-FXX.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO W-NNDGSET.
           MOVE 'ZND062001'                      TO W-DECOD.
           MOVE W-XNN-N                          TO C.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO MOVP-TAVVPR.
           MOVE 'ZND062701'                      TO W-DECOD.
           MOVE W-XNN-N                          TO C.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO MOVP-NUMASSBA.
           MOVE 'ZND060201'                      TO W-DECOD.
           MOVE W-XNN-N                          TO C.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO W-TNDGSET.
           MOVE 'ZND060801'                      TO W-DECOD.
           MOVE W-XNN-N                          TO C.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO W-FRSD.
       0660-MUOVI-SE-FXX-END.
           EXIT.
000377*-------------------------
000377 0680-CAUSALI-AUTOMATICHE.
000377*-------------------------
000377* SI SCORRONO TUTTI I MOVIMENTI PRODOTTI PER COSTRUIRE UNA TABELLA
000377* DA TRATTARE PER LE CAUSALI AUTOMATICHE.
000377*--------------------------------------------------------------
000388     MOVE 0            TO WRK-CAU-MULTIPLE
000377     MOVE SPACES       TO WRK-FINE-MOVIMENTI
000377     PERFORM 0681-SCORRI-AMOVP
000377        THRU 0681-SCORRI-AMOVP-END
000377          VARYING IND5 FROM 1 BY 1
000377           UNTIL WRK-FINE-MOVIMENTI = 'SI'
000377*--------------------------------------------------------------
000377      IF IND-CAU < 2
000377         GO TO 0680-CAUSALI-AUTOMATICHE-END
000377      END-IF
000377*--------------------------------------------------------------
000377* SE SI HANNO PIU' DI 2 MOVIMENTI ERRORE (SALVO GIRI ATT/PASS)
000377*--------------------------------------------------------------
000377      IF APROC-PCSMUL = 'M'
000377         GO TO 0680-CAUSALI-AUTOMATICHE-END
000377      END-IF
000388      IF IND-CAU > 2
000388         MOVE 1 TO WRK-CAU-MULTIPLE
000388         PERFORM 0683-CAUSALI-MULTIPLE
000388            THRU 0683-CAUSALI-MULTIPLE-END
000388         GO TO 0680-CAUSALI-AUTOMATICHE-END
000388      END-IF
000377*     IF IND-CAU > 2
000377*        MOVE 'E'                        TO M-S(IND1)
000377*        MOVE '0'                        TO W-MAP-ERR
000377*        MOVE W-DECOD                    TO W-MOD-ERR
000377*        MOVE 2                          TO W-FLAG-ERR
000377*        MOVE 'S197'                     TO W-COD-ERR
000377*        PERFORM 9999-GESTIONE-ERRORE
000377*           THRU 9999-GESTIONE-ERRORE-END
000377*        GO TO 0680-CAUSALI-AUTOMATICHE-END
000377*     END-IF
000377*------------------------------------------------------------
000377* L'ACCESSO ALLE KIAVI AVVIENE SOLO SE LE 2 SEGNALAZIONI SONO
000377* UGUALI E I PAESI DIVERSI O SE LE 2 SEGN.SONO DIVERSE.
000377* INOLTRE, SOLO LE 2 DIVISE (NON IN) SONO UGUALI.
000377*------------------------------------------------------------
000377      IF ( WRK-CAU-2000-TTRC1(1) NOT = WRK-CAU-2000-TTRC1(2))
000377      OR (WRK-CAU-2000-TTRC1(1) = WRK-CAU-2000-TTRC1(2)
000377       AND WRK-CAU-2000-CSIGPAE(1) NOT = WRK-CAU-2000-CSIGPAE(2))
000377        IF ( WRK-CAU-2000-CISO(1) = WRK-CAU-2000-CISO(2))
000377        OR (WRK-CAU-2000-FINOUT(1) < 4
000377                           AND WRK-CAU-2000-FINOUT(2) < 4)
000377           PERFORM 0682-GENERA-CAUSALI
000377              THRU 0682-GENERA-CAUSALI-END
000377               VARYING IND-CAU FROM 1 BY 1
000377                UNTIL IND-CAU > 2.
000377
000377 0680-CAUSALI-AUTOMATICHE-END.
000377     EXIT.

000377*-------------------
000377 0681-SCORRI-AMOVP.
000377*-------------------
000377     MOVE WS-TAB-TBAMOVP(IND5)        TO DCLTBAMOVP.
000377     IF MOVP-CISO = SPACES
000377        MOVE 'SI'         TO WRK-FINE-MOVIMENTI
000377        GO TO 0681-SCORRI-AMOVP-END
000377     END-IF.
000377*-------------- SCARTO I MOVIM RELATIVI ALLE SPESE
000377     PERFORM VARYING WRK-NOMOV FROM 1 BY 1
000377       UNTIL WRK-CAU-2000-NO-NPRGMOVP(WRK-NOMOV) = 0
000377        IF WRK-CAU-2000-NO-NPRGMOVP(WRK-NOMOV) = MOVP-NPRGMOVP
000377         AND WRK-CAU-2000-NO-NSUBMOVP(WRK-NOMOV) = MOVP-NSUBMOVP
000377            GO TO 0681-SCORRI-AMOVP-END
000377        END-IF
000377     END-PERFORM
000377*-------------------------------
000377     MOVE W-CIST                      TO ABSC-CIST
000377     MOVE MOVP-CSTC                   TO ABSC-CSTC
000377     PERFORM 0630-LEGGI-TABSC
000377        THRU 0630-LEGGI-TABSC-END
000377     IF ABSC-CTIPSTC NOT = 213 AND 275
000377       IF MOVP-NNDGSET = SPACES OR '9999999999999999'
000377          GO TO 0681-SCORRI-AMOVP-END
000377       END-IF
000377     END-IF
APE001*MOD CARTACONTO
000377     INITIALIZE DCLTBANAPOS
000377     MOVE W-CIST         TO NAPOS-CIST
000377     IF MOVP-NNDGSET = SPACES OR '9999999999999999'
000377        MOVE MOVP-NNDGPART    TO NAPOS-NNDGSET
000377     ELSE
000377        MOVE MOVP-NNDGSET     TO NAPOS-NNDGSET
000377     END-IF
APE001*SI CARTA CONTO 0910-LEGGI-TBANAPOS-CARTA
APE001     IF MOVP-CDPZAPP = CONFG-FILIALE-CARTA
APE001        AND W-TPCOLL = 'O'
APE001        MOVE MOVP-LRRIFB      TO NAPOS-IDENT
APE001        PERFORM 0910-LEGGI-TBANAPOS-CARTA
APE001           THRU 0910-LEGGI-TBANAPOS-CARTA-END
APE001     ELSE
000377        PERFORM 0910-LEGGI-TBANAPOS
000377           THRU 0910-LEGGI-TBANAPOS-END
APE001     END-IF
000377     IF L-ERR-ERR
000377        GO TO 0681-SCORRI-AMOVP-END
000377     END-IF
000377*--------------- VANNO SCARTATI QUELLE CON SWIFT = EBA
000377     IF NAPOS-SWFNDG NOT = 'EBAX'
000377        IF (ABSC-FTPGEST = 1 AND ABSC-FRSDSTC = 2) OR
000377           ((ABSC-CTIPSTC = 213 OR 275) AND ABSC-FRSDSTC = 2)
000377         ADD 1               TO IND-CAU
000377*-------------------- CHIAVE PER ACCESSO TTCAUF.
000377         IF ABSC-CTIPSTC NOT = 101 AND 116
000377            MOVE 'CL'        TO WRK-CAU-2000-TTRC1   (IND-CAU)
000377         ELSE
000377            MOVE 'SG'        TO WRK-CAU-2000-TTRC1   (IND-CAU)
000377         END-IF
000377         MOVE 'MES'          TO WRK-CAU-2000-TTPFX   (IND-CAU)
000377         MOVE MOVP-TMOV      TO WRK-CAU-2000-TMOV    (IND-CAU)
000377         MOVE ABSC-CNATCON   TO WRK-CAU-2000-CNATCON (IND-CAU)
000377         MOVE SPACES         TO WRK-CAU-2000-TTFLAGS (IND-CAU)
000377         IF NAPOS-TNDGSET = 1
000377            MOVE 'CLNRE'   TO WRK-CAU-2000-TTFIG (IND-CAU)
000377                              WRK-CAU-2000-TTCNT2(IND-CAU)
000377         ELSE
000377            MOVE 'BCNRE'   TO WRK-CAU-2000-TTFIG (IND-CAU)
000377                              WRK-CAU-2000-TTCNT2(IND-CAU)
000377         END-IF
000377*-------------------- CAMPI DI AMOVP PER RECORD CAUSALI.
000377         IF NAPOS-CSIGPEND NOT GREATER SPACES
000377            MOVE 'ZRA090301'     TO W-DECOD
000377            COPY ZMZINDIR.
000377            MOVE MOD(M-I(IND1):M-L(IND1)) TO NAPOS-CSIGPEND
000377         END-IF
000377         MOVE NAPOS-CSIGPEND TO WRK-CAU-2000-CSIGPAE (IND-CAU)
000411         IF MOVP-NNDGSET NOT GREATER SPACES
000411            AND ABSC-FRSDSTC = 2
000411            IF OPE-FITOEBS = 'I'
000411               MOVE 'ZRA090301'           TO W-DECOD
000411               COPY ZMZINDIR.
000411               IF MOD(M-I(IND1):M-L(IND1)) GREATER SPACES
000411                  MOVE MOD(M-I(IND1):M-L(IND1))
000411                    TO WRK-CAU-2000-CSIGPAE(IND-CAU)
000411               ELSE
000411                  MOVE 'ZOR032401'        TO W-DECOD
000411                  COPY ZMZINDIR.
000411                  MOVE MOD(M-I(IND1):M-L(IND1))
000411                    TO WRK-CAU-2000-CSIGPAE (IND-CAU)
000411               END-IF
000411            ELSE
000411               MOVE 'ZRA091301'           TO W-DECOD
000411               COPY ZMZINDIR.
000411               IF MOD(M-I(IND1):M-L(IND1)) GREATER SPACES
000411                  MOVE MOD(M-I(IND1):M-L(IND1))
000411                    TO WRK-CAU-2000-CSIGPAE(IND-CAU)
000411               ELSE
000411                  MOVE 'ZOR032401'        TO W-DECOD
000411                  COPY ZMZINDIR.
000411                  MOVE MOD(M-I(IND1):M-L(IND1))
000411                    TO WRK-CAU-2000-CSIGPAE (IND-CAU)
000411               END-IF
000411            END-IF
000411         END-IF
000377         MOVE MOVP-CIST      TO WRK-CAU-2000-CIST    (IND-CAU)
000377         MOVE MOVP-DIPOPE    TO WRK-CAU-2000-DIPOPE  (IND-CAU)
000377         MOVE MOVP-NUMOPE    TO WRK-CAU-2000-NUMOPE  (IND-CAU)
000377         MOVE MOVP-NPRGMOVP  TO WRK-CAU-2000-NPRGMOVP(IND-CAU)
000377         MOVE MOVP-NSUBMOVP  TO WRK-CAU-2000-NSUBMOVP(IND-CAU)
000377         MOVE MOVP-CISO      TO WRK-CAU-2000-CISO    (IND-CAU)
000377         MOVE MOVP-IMOV      TO WRK-CAU-2000-IMOV    (IND-CAU)
000377         MOVE WCM-CIST       TO DIV-CIST
000377         MOVE MOVP-CISO      TO DIV-CISO
000377           PERFORM 0833-LEGGI-ADIV
000377              THRU 0833-LEGGI-ADIV-END
000377         MOVE DIV-FINOUT     TO WRK-CAU-2000-FINOUT  (IND-CAU)
000377     END-IF.
000377 0681-SCORRI-AMOVP-END.
000377     EXIT.

000377*---------------------
000377 0682-GENERA-CAUSALI.
000377*------------------- CERCO I DATI DEL MOVIMENTO INTERESSATO
000377     MOVE 'SI'               TO MOVP-NON-TROVATO
000377     MOVE WRK-CAU-2000-NPRGMOVP(IND-CAU)
000377                      TO MOVP-NPRGMOVP W-NPRGMOVP-CERCA
000377     MOVE WRK-CAU-2000-NSUBMOVP(IND-CAU)
000377                      TO MOVP-NSUBMOVP W-NSUBMOVP-CERCA
000377     PERFORM 0820-CERCA-AMOVP
000377        THRU 0820-CERCA-AMOVP-END
000377         VARYING INDP FROM 1 BY 1
000377          UNTIL INDP > 35  OR
000377            MOVP-NON-TROVATO = SPACES
000377     INITIALIZE DCLTBTTCAUF
000377     MOVE WRK-CAU-2000-TTPFX   (IND-CAU) TO TCAUF-TTPFX
000377     MOVE WRK-CAU-2000-TTRC1   (IND-CAU) TO TCAUF-TTRC1
000377     MOVE WRK-CAU-2000-TMOV    (IND-CAU) TO TCAUF-TMOV
000377     MOVE WRK-CAU-2000-CNATCON (IND-CAU) TO TCAUF-CNATCON
000377     MOVE WRK-CAU-2000-TTFIG   (IND-CAU) TO TCAUF-TTFIG
000377     MOVE WRK-CAU-2000-TTFLAGS (IND-CAU) TO TCAUF-TTFLAGS
000377     MOVE WRK-CAU-2000-TTCNT2  (IND-CAU) TO TCAUF-TTCNT2
000377*    MOVE WRK-CAU-2000-CSIGPAE (IND-CAU) TO MOVC-CSIGPAE
000377*    MOVE WRK-CAU-2000-CSIGPAE(IND-CAU)  TO MOVC-CSIGPAEMIT
ERD377     IF IND-CAU = 1
ERD377        MOVE WRK-CAU-2000-CSIGPAE(1)     TO MOVC-CSIGPAE
ERD377        MOVE WRK-CAU-2000-CSIGPAE(2)     TO MOVC-CSIGPAEMIT
ERD377     ELSE
ERD377        MOVE WRK-CAU-2000-CSIGPAE(1)     TO MOVC-CSIGPAEMIT
ERD377        MOVE WRK-CAU-2000-CSIGPAE(2)     TO MOVC-CSIGPAE
ERD377     END-IF
000377*------------ SE INTROITO = IMP E DIVISA MOVIMENTO DARE
000377     IF OPE-FITOEBS = 'I'
000377        IF WRK-CAU-2000-TMOV(1) = 1
000377           MOVE WRK-CAU-2000-IMOV(1)
000377                     TO WRK-CAU-2000-IMOV(IND-CAU)
000377           MOVE WRK-CAU-2000-CISO(1)
000377                     TO WRK-CAU-2000-CISO(IND-CAU)
000377        ELSE
000377           MOVE WRK-CAU-2000-IMOV(2)
000377                     TO WRK-CAU-2000-IMOV(IND-CAU)
000377           MOVE WRK-CAU-2000-CISO(2)
000377                     TO WRK-CAU-2000-CISO(IND-CAU)
000377        END-IF
000377     END-IF
000377*------------ SE ESITO = IMP E DIVISA MOVIMENTO AVERE
000377     IF OPE-FITOEBS = 'E'
000377        IF WRK-CAU-2000-TMOV(1) = 2
000377           MOVE WRK-CAU-2000-IMOV(1)
000377                     TO WRK-CAU-2000-IMOV(IND-CAU)
000377           MOVE WRK-CAU-2000-CISO(1)
000377                     TO WRK-CAU-2000-CISO(IND-CAU)
000377        ELSE
000377           MOVE WRK-CAU-2000-IMOV(2)
000377                     TO WRK-CAU-2000-IMOV(IND-CAU)
000377           MOVE WRK-CAU-2000-CISO(2)
000377                     TO WRK-CAU-2000-CISO(IND-CAU)
000377        END-IF
000377     END-IF
000377
000377*--------------------- LEGGE TTCAUF E INSERISCE AMOVC.
000377     PERFORM 0612-LEGGI-TTCAUF
000377        THRU 0612-LEGGI-TTCAUF-END.
000377
000377 0682-GENERA-CAUSALI-END.
000377     EXIT.
000388*---------------------
000388 0683-CAUSALI-MULTIPLE.
000388*---------------------
000388*-------------------- SCORRO LA TABELLA DEI MOVIMENTI PER TROVARE
000388*-------------------- IL MOVIMENTO SINGOLO
000388     INITIALIZE IND-MOV-DARE
000388                IND-MOV-AVERE
000388                CONTA-DARE
000388                CONTA-AVERE
000388                WRK-TIPO-MOV
000388     PERFORM VARYING IND-CAU FROM 1 BY 1
000388             UNTIL IND-CAU > 20
000388                OR WRK-CAU-2000-TMOV (IND-CAU) NOT GREATER SPACES
000388             EVALUATE WRK-CAU-2000-TMOV (IND-CAU)
000388                      WHEN 1
000388                           ADD 1 TO CONTA-DARE
000388                           MOVE IND-CAU TO IND-MOV-DARE
000388                      WHEN 2
000388                           ADD 1 TO CONTA-AVERE
000388                           MOVE IND-CAU TO IND-MOV-AVERE
000388             END-EVALUATE
000388     END-PERFORM
000388
000388     IF CONTA-DARE = 1
000388        MOVE IND-MOV-DARE  TO IND-CAU
000388        MOVE '2'           TO WRK-TIPO-MOV
000388     ELSE
000388        MOVE IND-MOV-AVERE TO IND-CAU
000388        MOVE '1'           TO WRK-TIPO-MOV
000388     END-IF
000388
000388*------------ MEMORIZZO NELL'AREA DI MEMORIA IL MOVIMENTO SINGOLO
000388*------------ TROVATO
000388     MOVE WRK-CAU-2000-TTRC1   (IND-CAU) TO WRK-SINGOLO-TTRC1
000388     MOVE WRK-CAU-2000-TTPFX   (IND-CAU) TO WRK-SINGOLO-TTPFX
000388     MOVE WRK-CAU-2000-TMOV    (IND-CAU) TO WRK-SINGOLO-TMOV
000388     MOVE WRK-CAU-2000-CNATCON (IND-CAU) TO WRK-SINGOLO-CNATCON
000388     MOVE WRK-CAU-2000-TTFLAGS (IND-CAU) TO WRK-SINGOLO-TTFLAGS
000388     MOVE WRK-CAU-2000-TTFIG   (IND-CAU) TO WRK-SINGOLO-TTFIG
000388     MOVE WRK-CAU-2000-TTCNT2  (IND-CAU) TO WRK-SINGOLO-TTCNT2
000388     MOVE WRK-CAU-2000-CSIGPAE (IND-CAU) TO WRK-SINGOLO-CSIGPAE
000388     MOVE WRK-CAU-2000-CIST    (IND-CAU) TO WRK-SINGOLO-CIST
000388     MOVE WRK-CAU-2000-DIPOPE  (IND-CAU) TO WRK-SINGOLO-DIPOPE
000388     MOVE WRK-CAU-2000-NUMOPE  (IND-CAU) TO WRK-SINGOLO-NUMOPE
000388     MOVE WRK-CAU-2000-NPRGMOVP(IND-CAU) TO WRK-SINGOLO-NPRGMOVP
000388     MOVE WRK-CAU-2000-NSUBMOVP(IND-CAU) TO WRK-SINGOLO-NSUBMOVP
000388     MOVE WRK-CAU-2000-CISO    (IND-CAU) TO WRK-SINGOLO-CISO
000388     MOVE WRK-CAU-2000-FINOUT  (IND-CAU) TO WRK-SINGOLO-FINOUT
000388     MOVE WRK-CAU-2000-IMOV    (IND-CAU) TO WRK-SINGOLO-IMOV
000388
000388*------------ SCORRO NUOVAMENTE LA TABELLA DEI MOVIMENTI PER INTA-
000388*------------ BELLARE I MOVIMENTI GENERATI A FRONTE DEL MOVIMENTO
000388*------------ SINGOLO PRECEDENTEMENTE TROVATO
000388     INITIALIZE IND-MULT
000388     PERFORM VARYING IND-CAU FROM 1 BY 1
000388             UNTIL IND-CAU > 20
000388                OR WRK-CAU-2000-TMOV (IND-CAU) NOT GREATER SPACES
000388             IF WRK-CAU-2000-TMOV(IND-CAU) = WRK-TIPO-MOV
000388                ADD 1 TO IND-MULT
000388                MOVE WRK-CAU-2000-TTRC1   (IND-CAU)
000388                  TO WRK-MULTIPLO-TTRC1   (IND-MULT)
000388                MOVE WRK-CAU-2000-TTPFX   (IND-CAU)
000388                  TO WRK-MULTIPLO-TTPFX   (IND-MULT)
000388                MOVE WRK-CAU-2000-TMOV    (IND-CAU)
000388                  TO WRK-MULTIPLO-TMOV    (IND-MULT)
000388                MOVE WRK-CAU-2000-CNATCON (IND-CAU)
000388                  TO WRK-MULTIPLO-CNATCON (IND-MULT)
000388                MOVE WRK-CAU-2000-TTFLAGS (IND-CAU)
000388                  TO WRK-MULTIPLO-TTFLAGS (IND-MULT)
000388                MOVE WRK-CAU-2000-TTFIG   (IND-CAU)
000388                  TO WRK-MULTIPLO-TTFIG   (IND-MULT)
000388                MOVE WRK-CAU-2000-TTCNT2  (IND-CAU)
000388                  TO WRK-MULTIPLO-TTCNT2  (IND-MULT)
000388                MOVE WRK-CAU-2000-CSIGPAE (IND-CAU)
000388                  TO WRK-MULTIPLO-CSIGPAE (IND-MULT)
000388                MOVE WRK-CAU-2000-CIST    (IND-CAU)
000388                  TO WRK-MULTIPLO-CIST    (IND-MULT)
000388                MOVE WRK-CAU-2000-DIPOPE  (IND-CAU)
000388                  TO WRK-MULTIPLO-DIPOPE  (IND-MULT)
000388                MOVE WRK-CAU-2000-NUMOPE  (IND-CAU)
000388                  TO WRK-MULTIPLO-NUMOPE  (IND-MULT)
000388                MOVE WRK-CAU-2000-NPRGMOVP(IND-CAU)
000388                  TO WRK-MULTIPLO-NPRGMOVP(IND-MULT)
000388                MOVE WRK-CAU-2000-NSUBMOVP(IND-CAU)
000388                  TO WRK-MULTIPLO-NSUBMOVP(IND-MULT)
000388                MOVE WRK-CAU-2000-CISO    (IND-CAU)
000388                  TO WRK-MULTIPLO-CISO    (IND-MULT)
000388                MOVE WRK-CAU-2000-FINOUT  (IND-CAU)
000388                  TO WRK-MULTIPLO-FINOUT  (IND-MULT)
000388                MOVE WRK-CAU-2000-IMOV    (IND-CAU)
000388                  TO WRK-MULTIPLO-IMOV    (IND-MULT)
000388             END-IF
000388     END-PERFORM.
000388
000388     INITIALIZE          WRK-AREA-LAVORO
000388     MOVE WRK-SINGOLO TO WRK-AREA-LAV(1)
000388
000388     PERFORM VARYING IND-MULT FROM 1 BY 1
000388       UNTIL IND-MULT > 20
000388          OR WRK-MULTIPLO-TTRC1(IND-MULT) = SPACES
000388
000388       MOVE WRK-ELE-MULTIPLI(IND-MULT)       TO WRK-AREA-LAV(2)
000388       MOVE WRK-LAVORO-IMOV(2)               TO WRK-LAVORO-IMOV(1)
000388*------------------------------------------------------------
000388* L'ACCESSO ALLE KIAVI AVVIENE SOLO SE LE 2 SEGNALAZIONI SONO
000388* UGUALI E I PAESI DIVERSI O SE LE 2 SEGN.SONO DIVERSE.
000388* INOLTRE, SOLO LE 2 DIVISE (NON IN) SONO UGUALI.
000388*------------------------------------------------------------
000388
000388      IF (WRK-LAVORO-TTRC1(1) NOT = WRK-LAVORO-TTRC1(2))
000388      OR (WRK-LAVORO-TTRC1(1) = WRK-LAVORO-TTRC1(2)
000388       AND WRK-LAVORO-CSIGPAE(1) NOT = WRK-LAVORO-CSIGPAE(2))
000388        IF ( WRK-LAVORO-CISO(1) = WRK-LAVORO-CISO(2))
000388        OR (WRK-LAVORO-FINOUT(1) < 4
000388                           AND WRK-LAVORO-FINOUT(2) < 4)
000388           PERFORM 0684-GENERA-MULTIPLE
000388              THRU 0684-GENERA-MULTIPLE-END
000388               VARYING IND-CAU FROM 1 BY 1
000388                UNTIL IND-CAU > 2
000388        END-IF
000388      END-IF
000388     END-PERFORM.
000388 0683-CAUSALI-MULTIPLE-END.
000388     EXIT.
000388
000388 0684-GENERA-MULTIPLE.
000388
000388*------------------- CERCO I DATI DEL MOVIMENTO INTERESSATO
000388     MOVE 'SI'               TO MOVP-NON-TROVATO
000388     MOVE WRK-LAVORO-NPRGMOVP(IND-CAU)
000388                      TO MOVP-NPRGMOVP W-NPRGMOVP-CERCA
000388     MOVE WRK-LAVORO-NSUBMOVP(IND-CAU)
000388                      TO MOVP-NSUBMOVP W-NSUBMOVP-CERCA
000388     PERFORM 0820-CERCA-AMOVP
000388        THRU 0820-CERCA-AMOVP-END
000388         VARYING INDP FROM 1 BY 1
000388          UNTIL INDP > 35  OR
000388            MOVP-NON-TROVATO = SPACES
000388     INITIALIZE DCLTBTTCAUF
000388     MOVE WRK-LAVORO-TTPFX   (IND-CAU) TO TCAUF-TTPFX
000388     MOVE WRK-LAVORO-TTRC1   (IND-CAU) TO TCAUF-TTRC1
000388     MOVE WRK-LAVORO-TMOV    (IND-CAU) TO TCAUF-TMOV
000388     MOVE WRK-LAVORO-CNATCON (IND-CAU) TO TCAUF-CNATCON
000388     MOVE WRK-LAVORO-TTFIG   (IND-CAU) TO TCAUF-TTFIG
000388     MOVE WRK-LAVORO-TTFLAGS (IND-CAU) TO TCAUF-TTFLAGS
000388     MOVE WRK-LAVORO-TTCNT2  (IND-CAU) TO TCAUF-TTCNT2
000388     IF IND-CAU = 1
000388        MOVE WRK-LAVORO-CSIGPAE(1)     TO MOVC-CSIGPAE
000388        MOVE WRK-LAVORO-CSIGPAE(2)     TO MOVC-CSIGPAEMIT
000388     ELSE
000388        MOVE WRK-LAVORO-CSIGPAE(1)     TO MOVC-CSIGPAEMIT
000388        MOVE WRK-LAVORO-CSIGPAE(2)     TO MOVC-CSIGPAE
000388     END-IF
000388*------------ SE INTROITO = IMP E DIVISA MOVIMENTO DARE
000388     IF OPE-FITOEBS = 'I'
000388        IF WRK-LAVORO-TMOV(1) = 1
000388           MOVE WRK-LAVORO-IMOV(1)
000388                     TO WRK-LAVORO-IMOV(IND-CAU)
000388           MOVE WRK-LAVORO-CISO(1)
000388                     TO WRK-LAVORO-CISO(IND-CAU)
000388        ELSE
000388           MOVE WRK-LAVORO-IMOV(2)
000388                     TO WRK-LAVORO-IMOV(IND-CAU)
000388           MOVE WRK-LAVORO-CISO(2)
000388                     TO WRK-LAVORO-CISO(IND-CAU)
000388        END-IF
000388     END-IF
000388*------------ SE ESITO = IMP E DIVISA MOVIMENTO AVERE
000388     IF OPE-FITOEBS = 'E'
000388        IF WRK-LAVORO-TMOV(1) = 2
000388           MOVE WRK-LAVORO-IMOV(1)
000388                     TO WRK-LAVORO-IMOV(IND-CAU)
000388           MOVE WRK-LAVORO-CISO(1)
000388                     TO WRK-LAVORO-CISO(IND-CAU)
000388        ELSE
000388           MOVE WRK-LAVORO-IMOV(2)
000388                     TO WRK-LAVORO-IMOV(IND-CAU)
000388           MOVE WRK-LAVORO-CISO(2)
000388                     TO WRK-LAVORO-CISO(IND-CAU)
000388        END-IF
000388     END-IF
000388
000388*--------------------- LEGGE TTCAUF E INSERISCE AMOVC.
000388     PERFORM 0612-LEGGI-TTCAUF
000388        THRU 0612-LEGGI-TTCAUF-END.
000388
000388 0684-GENERA-MULTIPLE-END.
000388     EXIT.
       0690-LEGGI-AINDRA.
           EXEC SQL INCLUDE ZMS11701 END-EXEC.
           IF W-SQL-NON-TROVATO
              IF M-S(W-STC) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 MOVE 'E'                        TO M-S(W-STC)
                 MOVE M-M(W-STC)                 TO W-MAP-ERR
                 MOVE W-COORD-STC                TO W-MOD-ERR
                 MOVE 2                          TO W-FLAG-ERR
                 MOVE 'S033'                     TO W-COD-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           ELSE
              IF NOT W-SQL-OK
                 MOVE 8                             TO W-FLAG-ERR
                 MOVE '9999'                        TO W-COD-ERR
                 MOVE 'TBAINDRA'                    TO L-NOME-TABELLA
                 MOVE W-SQLCODE                     TO L-CODICE-SQL
                 MOVE 'ZMBSVIL0'                    TO L-MODULO
                 MOVE '0690-LEGGI-AINDRA'           TO L-SUB-MODULO
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
       0690-LEGGI-AINDRA-END.
           EXIT.
      *-----------------------------------------------------------*
      * UTILIZZANDO IL RECORD LETTO SU ZM.TBAINDRA, PREPARA LA    *
      * ZONA DEL MODELLO ZOR03                                    *
      *-----------------------------------------------------------*
       0691-INDRA-ZOR03.
           IF ISTI-RRAGSOC = 1
              MOVE 'ZOR032101'  TO W-DECOD
              COPY ZMZINDIR.
              MOVE INDRA-ZIND   TO MOD(M-I(IND1):M-L(IND1))
              MOVE 'ZOR032201'  TO W-DECOD
              COPY ZMZINDIR.
              MOVE INDRA-ZCTA   TO MOD(M-I(IND1):M-L(IND1))
           ELSE
              MOVE 'ZOR032201'  TO W-DECOD
              COPY ZMZINDIR.
              MOVE INDRA-ZIND   TO MOD(M-I(IND1):M-L(IND1))
              MOVE 'ZOR032301'  TO W-DECOD
              COPY ZMZINDIR.
              MOVE INDRA-ZCTA   TO MOD(M-I(IND1):M-L(IND1))
           END-IF.

           MOVE 'ZOR031901'     TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           IF W-COM-NUM = 2
              IF ISTI-RRAGSOC = 1
                 MOVE 'ZOR035101'  TO W-DECOD
                 COPY ZMZINDIR.
                 MOVE INDRA-ZCTA   TO MOD(M-I(IND1):M-L(IND1))
              END-IF
              IF ISTI-RRAGSOC = 2
                 MOVE 'ZOR035201'  TO W-DECOD
                 COPY ZMZINDIR.
                 MOVE INDRA-ZCTA   TO MOD(M-I(IND1):M-L(IND1))
              END-IF
              MOVE 'ZOR034201'     TO W-DECOD
              COPY ZMZINDIR.
              MOVE INDRA-ZKEYABCT  TO MOD(M-I(IND1):M-L(IND1))
           END-IF

           MOVE 'ZOR032901'     TO W-DECOD.
           COPY ZMZINDIR.
           MOVE INDRA-SWFREG    TO MOD(M-I(IND1):M-L(IND1)).

           MOVE 'ZOR033001'     TO W-DECOD.
           COPY ZMZINDIR.
           MOVE INDRA-SWFBCH    TO MOD(M-I(IND1):M-L(IND1)).

           MOVE 'ZOR035301'     TO W-DECOD.
           COPY ZMZINDIR.
           MOVE INDRA-FPREAVASS TO MOD(M-I(IND1):M-L(IND1)).

           MOVE 'ZOR035401'     TO W-DECOD.
           COPY ZMZINDIR.
           MOVE INDRA-TAVVASS   TO MOD(M-I(IND1):M-L(IND1)).

           MOVE 'ZOR035501'     TO W-DECOD.
           COPY ZMZINDIR.
           MOVE INDRA-FCONFERMA TO MOD(M-I(IND1):M-L(IND1)).

           MOVE 'ZOR035601'     TO W-DECOD.
           COPY ZMZINDIR.
           MOVE INDRA-TAVVCNF   TO MOD(M-I(IND1):M-L(IND1)).

           MOVE INDRA-SWFBCH    TO W-SWFBCH.

           MOVE 'ZOR034601'     TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM       TO W-FCIFSW.
       0691-INDRA-ZOR03-END.
           EXIT.
      *-----------------------------------------------------------*
      * UTILIZZANDO IL RECORD LETTO SU ZM.TBAINDRA, PREPARA LA    *
      * ZONA DEL MODELLO ZND06 UTILIZZANDO COME RICORRENZA IL     *
      * VALORE PRESENTE IN WRK-TTNDG                              *
      *-----------------------------------------------------------*
       0693-INDRA-ZND06.
           MOVE WRK-TTNDG      TO W-XNN.
           IF ISTI-RRAGSOC = 1
              MOVE 'ZND060401' TO W-DECOD
              MOVE W-XNN-N     TO C
              COPY ZMZINDIR.
              MOVE INDRA-ZIND  TO MOD(M-I(IND1):M-L(IND1))
              MOVE 'ZND060501' TO W-DECOD
              MOVE W-XNN-N     TO C
              COPY ZMZINDIR.
              MOVE INDRA-ZCTA  TO MOD(M-I(IND1):M-L(IND1))
           ELSE
              MOVE 'ZND060501' TO W-DECOD
              MOVE W-XNN-N     TO C
              COPY ZMZINDIR.
              MOVE INDRA-ZIND  TO MOD(M-I(IND1):M-L(IND1))
              MOVE 'ZND060601' TO W-DECOD
              MOVE W-XNN-N     TO C
              COPY ZMZINDIR.
              MOVE INDRA-ZCTA  TO MOD(M-I(IND1):M-L(IND1))
           END-IF.

           MOVE 'ZND060201'    TO W-DECOD.
           MOVE W-XNN-N        TO C.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           IF W-COM-NUM = 2
              IF ISTI-RRAGSOC = 1
                 MOVE 'ZND063401'    TO W-DECOD
                 MOVE W-XNN-N        TO C
                 COPY ZMZINDIR.
                 MOVE INDRA-ZCTA     TO MOD(M-I(IND1):M-L(IND1))
              END-IF
              IF ISTI-RRAGSOC = 2
                 MOVE 'ZND063501'    TO W-DECOD
                 MOVE W-XNN-N        TO C
                 COPY ZMZINDIR.
                 MOVE INDRA-ZCTA     TO MOD(M-I(IND1):M-L(IND1))
              END-IF
              MOVE 'ZND062501'    TO W-DECOD
              MOVE W-XNN-N        TO C
              COPY ZMZINDIR.
              MOVE INDRA-ZKEYABCT TO MOD(M-I(IND1):M-L(IND1))
           END-IF.

           MOVE 'ZND061201'    TO W-DECOD.
           MOVE W-XNN-N        TO C.
           COPY ZMZINDIR.
           MOVE INDRA-SWFREG   TO MOD(M-I(IND1):M-L(IND1)).

           MOVE 'ZND061301'    TO W-DECOD.
           MOVE W-XNN-N        TO C.
           COPY ZMZINDIR.
           MOVE INDRA-SWFBCH   TO MOD(M-I(IND1):M-L(IND1)).

           MOVE 'ZND063601'     TO W-DECOD.
           MOVE W-XNN-N         TO C.
           COPY ZMZINDIR.
           MOVE INDRA-FPREAVASS TO MOD(M-I(IND1):M-L(IND1)).

           MOVE 'ZND063701'     TO W-DECOD.
           MOVE W-XNN-N         TO C.
           COPY ZMZINDIR.
           MOVE INDRA-TAVVASS   TO MOD(M-I(IND1):M-L(IND1)).

           MOVE 'ZND063801'     TO W-DECOD.
           MOVE W-XNN-N         TO C.
           COPY ZMZINDIR.
           MOVE INDRA-FCONFERMA TO MOD(M-I(IND1):M-L(IND1)).

           MOVE 'ZND063901'    TO W-DECOD.
           MOVE W-XNN-N        TO C.
           COPY ZMZINDIR.
           MOVE INDRA-TAVVCNF  TO MOD(M-I(IND1):M-L(IND1)).

           MOVE INDRA-SWFBCH   TO W-SWFBCH.

           MOVE 'ZND062901'    TO W-DECOD.
           MOVE W-XNN-N        TO C.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM      TO W-FCIFSW.
       0693-INDRA-ZND06-END.
           EXIT.
BAVG90*0700-CHIAMA-COND.
BAVG90*    EXEC SQL INCLUDE ZMYCOND0 END-EXEC.
BAVG90*    MOVE SPACES                           TO W-TROVATO.
BAVG90*0700-CHIAMA-COND-END.
BAVG90*    EXIT.
       0710-CHIAMA-DATA.
           EXEC SQL INCLUDE ZMYCTRDT END-EXEC.
           MOVE SPACES                           TO W-TROVATO.
       0710-CHIAMA-DATA-END.
           EXIT.
       0720-CHIAMA-SGSCA.
           EXEC SQL INCLUDE ZMYSGSCA END-EXEC.
           MOVE SPACES           TO W-TROVATO.
       0720-CHIAMA-SGSCA-END.
           EXIT.
      *---------------------------------------------------------*
      * PASSO 6 : REGISTRAZIONE MOVIMENTI ECONOMICI             *
      *           TABELLA DI RIFERIMENTO TTSVIE                 *
      *---------------------------------------------------------*
       0800-MOVIM-ECON.
           INITIALIZE WRK-MOVP-PER-MOVE.
           IF TCSVI-TTNCECON > 0
              MOVE TCSVI-TTNCECON    TO NCSVE-TTNCECON
              PERFORM 0810-LEGGI-TNCSVE
                 THRU 0810-LEGGI-TNCSVE-END
              PERFORM
              VARYING IND10 FROM 1 BY 1
                UNTIL IND10 > 35 OR
                      W-COM-NPRGMOVP(IND10) NOT GREATER ZEROES
                      IF W-COM-NPRGMOVP(IND10) GREATER ZEROES
                          PERFORM 0890-CONT-MOVP
                             THRU 0890-CONT-MOVP-END
                      END-IF
              END-PERFORM
           END-IF.
       0800-MOVIM-ECON-END.
           EXIT.
       0801-ELABORA-WNCSVE.
           IF NCSVE-TTZNAPPC1 (IND5) > SPACES
BAVG90*       MOVE NCSVE-TTZNAPPC1 (IND5)        TO COND-MOD-COORD
BAVG90*       MOVE NCSVE-TTPRES (IND5)           TO COND-CONDIZ
BAVG90*       MOVE NCSVE-TTVALC11 (IND5)         TO COND-VALORE
BAVG90*       PERFORM 0700-CHIAMA-COND
BAVG90*          THRU 0700-CHIAMA-COND-END
BAVG90*       IF COND-RC NOT = ZEROES
BAVG90        MOVE NCSVE-TTZNAPPC1 (IND5)        TO C-COND-MOD-COORD
BAVG90        MOVE NCSVE-TTPRES (IND5)           TO C-COND-CONDIZ
BAVG90        MOVE NCSVE-TTVALC11 (IND5)         TO C-COND-VALORE
BAVG90        PERFORM CONDIZIONI-COPY
BAVG90           THRU CONDIZIONI-COPY-EX
BAVG90        MOVE SPACES                        TO W-TROVATO
BAVG90        IF C-COND-RC NOT = ZEROES
                 MOVE 8                          TO W-FLAG-ERR
                 MOVE '9999'                     TO W-COD-ERR
                 MOVE 'ZMBSVIL0'                 TO L-MODULO
                 MOVE '800-MOVIM-ECONP'          TO L-SUB-MODULO
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           ELSE
BAVG90*       MOVE 'S'                           TO COND-ESITO
BAVG90        MOVE 'S'                           TO C-COND-ESITO
           END-IF.
BAVG90*    IF COND-ESITO = 'S'
BAVG90     IF C-COND-ESITO = 'S'
              PERFORM 0802-WNCSVE-OK
                 THRU 0802-WNCSVE-OK-END
           END-IF.
       0801-ELABORA-WNCSVE-END.
           EXIT.

       0802-WNCSVE-OK.
           INITIALIZE  DCLTBAMOVE
000241     MOVE ZEROES                           TO WRK-MOVE-ISPSVAL
           MOVE 'SI'                             TO MOVP-NON-TROVATO
           MOVE SPACES                           TO W-NO-TTCECO
           MOVE NCSVE-TTNMOV1 (IND5)             TO MOVP-NPRGMOVP
                                                    MOVE-NPRGMOVP
                                                    W-NPRGMOVP-CERCA
           MOVE IND-KCS                          TO MOVP-NSUBMOVP
                                                    MOVE-NSUBMOVP
                                                    W-NSUBMOVP-CERCA
           PERFORM 0820-CERCA-AMOVP
              THRU 0820-CERCA-AMOVP-END
                   VARYING INDP FROM 1 BY 1
                   UNTIL INDP > 35  OR
                   MOVP-NON-TROVATO = SPACES.
           IF MOVP-NON-TROVATO = 'SI'
              MOVE 'SI'                          TO MOVP-NON-TROVATO
              MOVE NCSVE-TTNMOV2 (IND5)          TO MOVP-NPRGMOVP
                                                    MOVE-NPRGMOVP
                                                    W-NPRGMOVP-CERCA
              PERFORM 0820-CERCA-AMOVP
                 THRU 0820-CERCA-AMOVP-END
                      VARYING INDP FROM 1 BY 1
                      UNTIL INDP > 35  OR
                      MOVP-NON-TROVATO = SPACES
              IF MOVP-NON-TROVATO = 'SI'
                 MOVE 'SI'                       TO MOVP-NON-TROVATO
                 MOVE NCSVE-TTNMOV3 (IND5)       TO MOVP-NPRGMOVP
                                                    MOVE-NPRGMOVP
                                                    W-NPRGMOVP-CERCA
                 PERFORM 0820-CERCA-AMOVP
                    THRU 0820-CERCA-AMOVP-END
                         VARYING INDP FROM 1 BY 1
                         UNTIL INDP > 35  OR
                         MOVP-NON-TROVATO = SPACES
                 IF MOVP-NON-TROVATO = 'SI'
                    IF M-S(W-STC) NOT = SPACES
                       NEXT SENTENCE
                    ELSE
                       MOVE 'E'                  TO M-S(W-STC)
                       MOVE M-M(W-STC)           TO W-MAP-ERR
                       MOVE W-COORD-STC          TO W-MOD-ERR
                       MOVE 'S035'               TO W-COD-ERR
                       PERFORM 9999-GESTIONE-ERRORE
                          THRU 9999-GESTIONE-ERRORE-END
                       GO TO 0802-WNCSVE-OK-END
                    END-IF
                 END-IF
              END-IF
           END-IF.
           SUBTRACT 1 FROM INDP.
           IF WS-STATUS-TBAMOVP(INDP) = 'E'
              GO TO 0802-WNCSVE-OK-END
           END-IF.
           MOVE W-CIST                           TO ABSC-CIST.
           MOVE MOVP-CSTC                        TO ABSC-CSTC.
           PERFORM 0630-LEGGI-TABSC
              THRU 0630-LEGGI-TABSC-END.
           IF ABSC-FCTGSPS = 1
              IF M-S(W-STC) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 MOVE 'E'                        TO M-S(W-STC)
                 MOVE M-M(W-STC)                 TO W-MAP-ERR
                 MOVE W-COORD-STC                TO W-MOD-ERR
                 MOVE 2                          TO W-FLAG-ERR
                 MOVE 'S036'                     TO W-COD-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
EUR005     MOVE MOVP-CISO    TO  WRK-DIVISA-MOVIMENTO
EUR005     MOVE MOVP-ICABMOV TO  WRK-CAMBIO-MOVIMENTO
000092*--------------------------------------------------------------   TS005657
"     *       ADEGUAMENTO ALLA NUOVA DISCIPLINA CAUSALI VALUTARIE   -   TS005658
"     *--------------------------------------------------------------   TS005659
"          IF WRK-FLAG-CAU = 1                                          TS005660
000142        IF ABSC-CTIPSTC = 325
000142*---------------------------------- PER I CONTI DI CASSA LIRE     TS005659
000142*---------------------------------- INTERNE NON GENERO CAUSALI    TS005659
000142           MOVE 'SI'     TO WRK-CASSA
000142        ELSE
000142           MOVE 'NO'     TO WRK-CASSA
"                PERFORM 0811-CAUSALI-VALUT-AMOVE                       TS005663
"                   THRU 0811-CAUSALI-VALUT-AMOVE-END                   TS005664
000142        END-IF
000092     END-IF.                                                      TS005667
      *----------------------- (FLAG MODALITA' SPESE )                  TS005668
           MOVE NCSVE-TTCECO (IND5)              TO W-XXNN
           MOVE 'ZEC110301'                      TO W-DECOD
           MOVE W-XXNN-N                         TO C
           COPY ZMZINDIR.
           IF MOD(M-I(IND1):M-L(IND1)) = 'N'
              GO TO 0802-WNCSVE-OK-END
           END-IF.
000092*----------------------------------------- CAUSALI VALUTARIE --   TS005676
"     *--------------------------- CERCO SU TABCEC IL CODICE DEL    -   TS005677
"     *--------------------------- CONTO ECONOMICO (ZEC110101)          TS005678
"     *--------------------------------------------------------------   TS005679
"           IF WRK-FLAG-CAU = 1                                         TS005680
000142       AND WRK-CASSA = 'NO'                                       TS005680
"              MOVE 'ZEC110101'                 TO W-DECOD              TS005681
"              MOVE W-XXNN-N                    TO C                    TS005682
"              MOVE W-DEC-COORD                 TO W-COORD-CEC          TS005683
"              COPY ZMZINDIR.                                           TS005684
"                                                                       TS005686
"             IF MOD(M-I(IND1):M-L(IND1)) NOT = SPACES                  TS005685
"                MOVE MOD(M-I(IND1):M-L(IND1))    TO ABCEC-CCEC         TS005685
000154           MOVE W-CIST                      TO ABCEC-CIST         TS005685
"                PERFORM 0818-LEGGI-TABCEC                              TS006692
"                   THRU 0818-LEGGI-TABCEC-END                          TS006693
"                IF W-SQL-NON-TROVATO                                   TS006716
"                   MOVE 'E'                        TO M-S(W-DIV)       TS006717
"                   MOVE W-COORD-CEC                TO W-MOD-ERR        TS006718
"                   MOVE M-M(W-CEC)                 TO W-MAP-ERR        TS006719
"                   MOVE 2                          TO W-FLAG-ERR       TS006720
"                   MOVE 'S119'                     TO W-COD-ERR        TS006721
"                   PERFORM 9999-GESTIONE-ERRORE                        TS006722
"                      THRU 9999-GESTIONE-ERRORE-END                    TS006723
"                ELSE                                                   TS006716
"                   PERFORM 0817-IMPOSTA-TTCEC                          TS005687
"                      THRU 0817-IMPOSTA-TTCEC-END                      TS005688
"                END-IF                                                 TS005689
"             END-IF                                                    TS005689
"           END-IF                                                      TS005689
000092*--------------------------------------------------------------   TS005690
      *----------------------- (TRATTAMENTO SPESA LIRE)
           MOVE SPACES                   TO WRK-ZEC1131.
           MOVE NCSVE-TTCECO (IND5)      TO W-XXNN.
           MOVE 'ZEC110201'              TO W-DECOD.
           MOVE W-XXNN-N                 TO C.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE 'ZEC113101'              TO W-DECOD.
           MOVE W-XXNN-N                 TO C.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1)) TO WRK-ZEC1131.
           IF WRK-ZEC1131 GREATER SPACES
              IF WRK-ZEC1131 = 'TC' OR 'TS' OR 'TN'
      *------------------------------------------- W-COM-NUM = ZEC1102
                 IF W-COM-NUM GREATER ZEROES
                    IF W-COM-NUM NOT = 1
                       MOVE 'E'              TO M-S(W-STC)
                       MOVE M-M(W-STC)       TO W-MAP-ERR
                       MOVE W-COORD-STC      TO W-MOD-ERR
                       MOVE 'S093'           TO W-COD-ERR
                       MOVE 'SI'             TO W-FLAG-EXIT
                       PERFORM 9999-GESTIONE-ERRORE
                          THRU 9999-GESTIONE-ERRORE-END
                       GO TO 0802-WNCSVE-OK-END
                    END-IF
                 END-IF
              END-IF
              IF WRK-ZEC1131 = 'TI'
      *------------------------------------------- W-COM-NUM = ZEC1102
                 IF W-COM-NUM GREATER ZEROES
                    IF W-COM-NUM NOT = 4
                    OR NCSVE-TTDCA(IND5) = 'ORD'
                       MOVE 'E'              TO M-S(W-STC)
                       MOVE M-M(W-STC)       TO W-MAP-ERR
                       MOVE W-COORD-STC      TO W-MOD-ERR
                       MOVE 'S095'           TO W-COD-ERR
                       MOVE 'SI'             TO W-FLAG-EXIT
                       PERFORM 9999-GESTIONE-ERRORE
                          THRU 9999-GESTIONE-ERRORE-END
                       GO TO 0802-WNCSVE-OK-END
                    END-IF
                 END-IF
              END-IF
           END-IF.
           PERFORM 0830-TRATTA-TTCECO
              THRU 0830-TRATTA-TTCECO-END.
           IF W-EXIT
              GO TO 0802-WNCSVE-OK-END
           END-IF.
      *--------------------------------- SE ZEC112101/08(SIGLA DIVISA)
      *--------------------------------- NON E' VALORIZZATA, ELABORA UN
      *--------------------------------- ALTRO CONTO ECONOMICO
           IF WRK-DIVISA-ERR = 'SI'
              GO TO 0802-WNCSVE-OK-END
           END-IF.
           IF W-NUM-TEST = ZEROS OR
              W-NO-TTCECO = 'S' OR
              MOVE-ICTVSPS = 0  OR
000172*       MOVE-ISPSVAL = 0
000172        MOVE-ISPSVAL = 0 OR
000172        MOVE-ICTVLISPS = 0
              GO TO 0802-WNCSVE-OK-END
           END-IF.
           PERFORM 0880-TRATTA-TTNDG
              THRU 0880-TRATTA-TTNDG-END.
           IF MOVE-NNDGSET = ALL '9'
              MOVE SPACES                        TO MOVE-NNDGSET
           END-IF.
           MOVE OPE-NUMOPE                       TO MOVE-NUMOPE.
           MOVE OPE-DIPOPE                       TO MOVE-DIPOPE.
           MOVE MOVP-NPRGMOVP                    TO MOVE-NPRGMOVP
           MOVE IND-KCS                          TO MOVE-NSUBMOVP
           MOVE 'ZEC110101'                      TO W-DECOD
           MOVE W-XXNN-N                         TO C
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO MOVE-CCEC
           MOVE 'ZEC110701'                      TO W-DECOD
           MOVE W-XXNN-N                         TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO MOVE-CSTM
           MOVE W-CIST                           TO MOVE-CIST
           MOVE 'ZEC110301'                      TO W-DECOD
           MOVE W-XXNN-N                         TO C
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1))         TO MOVE-FMDDSPS
           MOVE 'ZEC111001'                      TO W-DECOD
           MOVE W-XXNN-N                         TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE  MOVE-ICABINT = W-COM-NUM / 10 ** M-D(IND1)

           MOVE 'ZEC111201'                   TO W-DECOD.
           MOVE W-XXNN-N                      TO C.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE MOVE-CVOXCND = W-COM-NUM / (10 ** M-D(IND1)).
           MOVE MOVP-NPRGMOVP   TO WRK-MOVP-NPRGMOVP
           IF NCSVE-TTMCO (IND5) > 0
              MOVE W-CIST                        TO MOVP-CIST
              MOVE MOVE-NUMOPE                   TO MOVP-NUMOPE
              MOVE MOVE-DIPOPE                   TO MOVP-DIPOPE
              MOVE NCSVE-TTMCO (IND5)            TO MOVP-NPRGMOVP
                                                    W-NPRGMOVP-CERCA
              MOVE IND-KCS                       TO MOVP-NSUBMOVP
                                                    W-NSUBMOVP-CERCA
              MOVE 'SI'                          TO MOVP-NON-TROVATO
              PERFORM 0820-CERCA-AMOVP
                 THRU 0820-CERCA-AMOVP-END
                      VARYING INDP FROM 1 BY 1
                      UNTIL INDP > 35  OR
                      MOVP-NON-TROVATO = SPACES
              IF MOVP-NON-TROVATO = 'SI'
                 IF M-S(W-STC) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'E'                     TO M-S(W-STC)
                    MOVE M-M(W-STC)              TO W-MAP-ERR
                    MOVE W-COORD-STC             TO W-MOD-ERR
                    MOVE 2                       TO W-FLAG-ERR
                    MOVE 'S037'                  TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
              END-IF
              MOVE MOVP-CDPZ                     TO MOVE-COLLCDPZ
              MOVE MOVP-CISO                     TO MOVE-COLLCISO
              MOVE MOVP-CSTC                     TO MOVE-COLLCSTC
              MOVE MOVP-NNDGSET                  TO MOVE-COLLNNDG
              MOVE MOVP-NPRGOPE                  TO MOVE-COLLNPRG
              MOVE MOVP-NSUFABT                  TO MOVE-COLLNSUF
           ELSE
              MOVE 0                             TO MOVE-COLLCDPZ
              MOVE SPACES                        TO MOVE-COLLCISO
              MOVE 0                             TO MOVE-COLLCSTC
              MOVE SPACES                        TO MOVE-COLLNNDG
              MOVE 0                             TO MOVE-COLLNPRG
              MOVE 0                             TO MOVE-COLLNSUF
           END-IF.
           MOVE 'ZEC110201'                   TO W-DECOD.
           MOVE W-XXNN-N                      TO C.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE MOVE-TCEC = W-COM-NUM / (10 ** M-D(IND1)).

           MOVE 'ZEC112601'    TO W-DECOD
           MOVE W-XXNN-N       TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM      TO W-COM-NUM-1
           IF WRK-ZEC1131 NOT = 'TI'
      *------------------------------------ W-COM-NUM-1 = ZEC112601/10
              IF W-COM-NUM-1 = 1
                 COMPUTE MOVE-ICTVSPS = MOVE-ICTVSPS * -1
000172           COMPUTE MOVE-ICTVLISPS = MOVE-ICTVLISPS * -1
                 COMPUTE MOVE-ISPSVAL = MOVE-ISPSVAL * -1
              END-IF
              PERFORM 0885-SCRIVI-AMOVE
                 THRU 0885-SCRIVI-AMOVE-END
      *------------------------------------ CAUSALI VALUTARIE           TS005847
000092        IF WRK-FLAG-CAU = 1                                       TS005848
000142         AND WRK-CASSA = 'NO'                                     TS005680
000187*          PERFORM 0818-IMPOSTA-NDGCE                             TS005849
000187*             THRU 0818-IMPOSTA-NDGCE-END                         TS005850
000092           PERFORM 0819-AMOVC-DA-TTCAE                            TS005849
000092              THRU 0819-AMOVC-DA-TTCAE-END                        TS005850
000092        END-IF                                                    TS005851
           ELSE
      *--------------------------- SE ZEC113101/10 = TI IL TRATTAMENTO
      *--------------------------- E' CICLICO E VANNO INSERITI TANTI
      *--------------------------- AMOVE PER QUANTE SONO LE ZONE DI
      *--------------------------- ZDV13 VALORIZZATE
              MOVE ZEROES      TO WRK-ISPSVAL
              MOVE ZEROES      TO WRK-ICTVSPS
000172        MOVE ZEROES      TO WRK-ICTVLISPS
              MOVE NCSVE-TTDCA (IND5)   TO W-XXN
              MOVE W-XXN-N              TO N-M-2
              MOVE 'NO'                 TO WRK-FINE-TI
              PERFORM
                 VARYING N-M-2 FROM N-M-2 BY 1
                              UNTIL N-M-2 > WCM-INDMAX(13)
                                  OR WRK-FINE-TI = 'SI'
                 MOVE '1312'            TO COORD-4
                 COPY ZMZINDIR.
                 IF MOD(M-I(IND1):M-L(IND1)) NOT GREATER SPACES
                    MOVE 'SI'           TO WRK-FINE-TI
                 ELSE
      *------------------------------------ W-COM-NUM-1 = ZEC112601/10
                    MOVE '1319'            TO COORD-4
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    COMPUTE MOVE-ICTVSPS = W-COM-NUM / 10 ** M-D(IND1)
000172              MOVE '1323'            TO COORD-4
000172              COPY ZMZINDIR.
000172              COPY ZMZVALNM.
000172              COMPUTE MOVE-ICTVLISPS =
000172                                   W-COM-NUM / 10 ** M-D(IND1)
                    MOVE '1302'            TO COORD-4
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    COMPUTE MOVE-ISPSVAL = W-COM-NUM / 10 ** M-D(IND1)
                    IF W-COM-NUM-1 = 1
                       COMPUTE MOVE-ICTVSPS = MOVE-ICTVSPS * -1
                       COMPUTE MOVE-ISPSVAL = MOVE-ISPSVAL * -1
000172                 COMPUTE MOVE-ICTVLISPS = MOVE-ICTVLISPS * -1
                    END-IF
                    MOVE '0711'            TO COORD-4
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    MOVE W-COM-NUM         TO MOVE-DTFIN
                    MOVE '0710'            TO COORD-4
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    MOVE W-COM-NUM         TO MOVE-DTINIZ
                    MOVE '1303'            TO COORD-4
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    COMPUTE MOVE-GGSPS = W-COM-NUM / 10 ** M-D(IND1)
                    MOVE '0404'                     TO COORD-4
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    COMPUTE MOVE-ICAPSPS = W-COM-NUM /
                                              (10 ** M-D(IND1))
                    IF MOVE-ICTVSPS GREATER ZEROES AND
000172*                MOVE-ISPSVAL GREATER ZEROES
000172                 MOVE-ISPSVAL GREATER ZEROES AND
000172                 MOVE-ICTVLISPS GREATER ZEROES
                       ADD MOVE-ISPSVAL   TO WRK-ISPSVAL
                       ADD MOVE-ICTVSPS   TO WRK-ICTVSPS
000172                 ADD MOVE-ICTVLISPS TO WRK-ICTVLISPS
                       PERFORM 0885-SCRIVI-AMOVE
                          THRU 0885-SCRIVI-AMOVE-END
000092*---------------------------------------------------------        TS005907
000092                 IF WRK-FLAG-CAU = 1                              TS005908
000142                   AND WRK-CASSA = 'NO'                           TS005680
000092                      PERFORM 0819-AMOVC-DA-TTCAE                 TS005909
000092                         THRU 0819-AMOVC-DA-TTCAE-END             TS005910
000092                 END-IF                                           TS005911
000092*---------------------------------------------------------        TS005912
                    END-IF
                 END-IF
              END-PERFORM
              IF WRK-ISPSVAL GREATER ZEROES AND
                 WRK-ICTVSPS GREATER ZEROES
000172        AND WRK-ICTVLISPS GREATER ZEROES
                 MOVE NCSVE-TTCECO(IND5)       TO W-XXNN
                 MOVE 'ZEC112901'              TO W-DECOD
                 MOVE W-XXNN-N                 TO C
                 COPY ZMZINDIR.
                 COMPUTE W-COM1 = WRK-ISPSVAL * (10 ** M-D(IND1))
                 COPY ZMZFMMOD.
000172*          MOVE 'ZEC110601'              TO W-DECOD
000172           MOVE 'ZEC113601'              TO W-DECOD
                 MOVE W-XXNN-N                 TO C
                 COPY ZMZINDIR.
000172*          COMPUTE W-COM1 = WRK-ICTVSPS * (10 ** M-D(IND1))
000172           COMPUTE W-COM1 = WRK-ICTVLISPS * (10 ** M-D(IND1))
                 COPY ZMZFMMOD.
000172           MOVE 'ZEC113301'              TO W-DECOD
000172           MOVE W-XXNN-N                 TO C
000172           COPY ZMZINDIR.
000172           COMPUTE W-COM1 = WRK-ICTVSPS * (10 ** M-D(IND1))
000172           COPY ZMZFMMOD.
              END-IF
           END-IF.

      *------------------------------------------
           MOVE WRK-MOVP-NPRGMOVP   TO MOVP-NPRGMOVP
                                       W-NPRGMOVP-CERCA
           MOVE IND-KCS             TO MOVP-NSUBMOVP
                                       W-NSUBMOVP-CERCA
           MOVE 'SI'             TO MOVP-NON-TROVATO
           PERFORM 0820-CERCA-AMOVP
              THRU 0820-CERCA-AMOVP-END
                 VARYING INDP FROM 1 BY 1
                    UNTIL INDP > 35  OR
                      MOVP-NON-TROVATO = SPACES

           INITIALIZE WRK-TAB-TBAMOVP.
           IF NCSVE-TTMCO(IND5) GREATER ZEROES
              MOVE DCLTBAMOVP            TO WRK-TAB-TBAMOVP
              MOVE 'SI'                  TO MOVP-NON-TROVATO
              MOVE NCSVE-TTMCO(IND5)     TO MOVP-NPRGMOVP
                                            W-NPRGMOVP-CERCA
              MOVE IND-KCS               TO MOVP-NSUBMOVP
                                            W-NSUBMOVP-CERCA
              PERFORM 0820-CERCA-AMOVP
                 THRU 0820-CERCA-AMOVP-END
                    VARYING INDP FROM 1 BY 1
                       UNTIL INDP > 35  OR
                          MOVP-NON-TROVATO = SPACES
              MOVE MOVP-CSTC              TO ABSC-CSTC
              MOVE WRK-TAB-TBAMOVP        TO DCLTBAMOVP
              IF MOVP-NON-TROVATO = SPACES
      *------------------------------- LEGGE TABELLA TABSC PER
      *------------------------------- CONTROLLARE GESTIONE RITENUTA
                 MOVE W-CIST                      TO ABSC-CIST
                 PERFORM 0630-LEGGI-TABSC
                    THRU 0630-LEGGI-TABSC-END
                 IF ABSC-FRITACT NOT = 2
                    GO TO 0802-WNCSVE-OK-END
                 END-IF
              END-IF
           END-IF.

           MOVE 'ZEC111401'                 TO W-DECOD
           MOVE W-XXNN-N                    TO C
           COPY ZMZINDIR.
           IF MOD(M-I(IND1):M-L(IND1)) > SPACES
              MOVE ZEROES                   TO WRK-MOVE-ISPSVAL
              MOVE OPE-NUMOPE               TO MOVE-NUMOPE
              MOVE OPE-DIPOPE               TO MOVE-DIPOPE
              MOVE MOVP-NPRGMOVP            TO MOVE-NPRGMOVP
              MOVE IND-KCS                  TO MOVE-NSUBMOVP
              MOVE 'ZEC111401'              TO W-DECOD
              MOVE W-XXNN-N                 TO C
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1)) TO MOVE-CCEC
              MOVE 'ZEC111901'              TO W-DECOD
              MOVE W-XXNN-N                 TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                TO MOVE-CSTM
              MOVE SPACES                   TO MOVE-FMDDSPS
              MOVE 0                        TO MOVE-ICABINT

              MOVE 'ZEC111701'              TO W-DECOD
              MOVE W-XXNN-N                 TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              IF MOVP-CISO NOT = WRK-MOVE-CDIVCAP
000172*          COMPUTE W-COM-NUM-DEC4 = W-COM-NUM / 10 ** M-D(IND1)
000172*          COMPUTE MOVE-ISPSVAL = W-COM-NUM-DEC4 *
000172*                                 WRK-MOVE-ICABCAP /
000172*                                 MOVP-ICABMOV
                 MOVE W-CIST                TO DIV-CIST
                 MOVE MOVP-CISO             TO DIV-CISO
                 PERFORM 0870-TRATTA-DIVISA
                    THRU 0870-TRATTA-DIVISA-END
                 MOVE DIV-NDCLDIV           TO W-COM-NUM-C
000172*          IF W-COM-NUM-C < 3
000172*             COMPUTE W-DIFF = 3 - W-COM-NUM-C
000172*             COMPUTE MOVE-ISPSVAL   =
000172*                     MOVE-ISPSVAL   / 10 ** W-DIFF
000172*             COMPUTE MOVE-ISPSVAL   =
000172*                     MOVE-ISPSVAL   * 10 ** W-DIFF
000172*          END-IF
000172*--------------------------------------CALCOLA L'IMPORTO IN VALUTA
000172*-----------------------------------------------CHIAMANDO ZMBCTV00
000172           INITIALIZE ZMWCTV00
000172           COMPUTE WCTV00-IMPORTO = W-COM-NUM
000172*-----------------------------------------------------CAMBIO
000172           COMPUTE WCTV00-CAMBIO = WRK-MOVE-ICABCAP * (10 ** 7)
000172*------------------------------------------CAMBIO EQUIVALENTE
000172           COMPUTE WCTV00-CAMBIO-CTP = MOVP-ICABMOV * (10 ** 7)
000172           MOVE 7                  TO WCTV00-CAMBIO-CTP-DEC
000172           MOVE 6                  TO WCTV00-CAMBIO-CTP-INT
000172*--------------------CAMPO RISULTATO IMPORTO DI CONTROPARTITA
000172*------------------------SI ARROTONDA AI DECIMALI CISO DI AMOVP
000172           MOVE W-COM-NUM-C        TO WCTV00-CTVCP-DEC
000172           COMPUTE WCTV00-CTVCP-INT = 18 - WCTV00-CTVCP-DEC
000172*----------------------CODICE COMANDO
000172           MOVE 'CTVCP' TO        WCTV00-COMANDO
000172           PERFORM 0869-CALCOLA-CONTROVALORI
000172              THRU 0869-CALCOLA-CONTROVALORI-END
000172           MOVE WCTV00-CTVCP        TO WRK-ISPSVAL-TRANSIT
000172           MOVE WRK-ISPSVAL-TRANSIT TO MOVE-ISPSVAL
BPER49           MOVE 'ZEC111701'         TO W-DECOD
BPER49           MOVE W-XXNN-N            TO C
BPER49           COPY ZMZINDIR.
BPER49           COPY ZMZVALNM.

                 MOVE W-CIST                TO DIV-CIST
                 MOVE WRK-MOVE-CDIVCAP      TO DIV-CISO
                 PERFORM 0870-TRATTA-DIVISA
                    THRU 0870-TRATTA-DIVISA-END
                 MOVE DIV-NDCLDIV TO WRK-NDCLDIV
                 PERFORM 0838-CNTL-DECIMALI
                    THRU 0838-CNTL-DECIMALI-END
                 IF M-S(IND1) = 'E'
                    GO TO 0802-WNCSVE-OK-END
                 END-IF
070797           MOVE DIV-NDCLDIV TO WCM-DECIMALI
"                MOVE IND1        TO WCM-IND-DEC
070797           COPY ZMZDECIM.
              ELSE
                 COMPUTE MOVE-ISPSVAL = W-COM-NUM / 10 ** M-D(IND1)
                 MOVE W-CIST      TO  DIV-CIST
                 MOVE MOVP-CISO   TO  DIV-CISO
                 PERFORM 0870-TRATTA-DIVISA
                    THRU 0870-TRATTA-DIVISA-END
                 MOVE DIV-NDCLDIV TO WRK-NDCLDIV
                 PERFORM 0838-CNTL-DECIMALI
                    THRU 0838-CNTL-DECIMALI-END
                 IF M-S(IND1) = 'E'
                    GO TO 0802-WNCSVE-OK-END
                 END-IF
070797           MOVE DIV-NDCLDIV TO WCM-DECIMALI
"                MOVE IND1        TO WCM-IND-DEC
070797           COPY ZMZDECIM.
              END-IF
              ADD MOVE-ISPSVAL              TO WRK-MOVE-ISPSVAL
              MOVE 'ZEC111801'              TO W-DECOD
              MOVE W-XXNN-N                 TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
000172*       COMPUTE WK-COMO-DEC1 = MOVE-ISPSVAL * MOVP-ICABMOV
000172*       IF W-DECSIGBASE < M-D(IND1)
000172*          COMPUTE W-DIFF = M-D(IND1) - W-DECSIGBASE
000172*          COMPUTE WK-COMO-DEC1 = WK-COMO-DEC1 / 10 ** W-DIFF
000172*          COMPUTE WK-COMO-DEC1 = WK-COMO-DEC1 * 10 ** W-DIFF
000172*       END-IF
000172*------------------------------------------CHIAMATA ZMBCTV00
000172        INITIALIZE ZMWCTV00
000172        COMPUTE WCTV00-CAMBIO = MOVP-ICABMOV * (10 ** 7)
000172        COMPUTE WCTV00-IMPORTO = MOVE-ISPSVAL * (10 ** 3)
000172        MOVE 'CTVDC'                    TO WCTV00-COMANDO
000172        PERFORM 0869-CALCOLA-CONTROVALORI
000172           THRU 0869-CALCOLA-CONTROVALORI-END
000172        MOVE WRK-DIVLIS       TO WK-COMO-DEC1
000172        IF MOVP-CISO NOT = W-CSIGDBASE
                 COMPUTE W-COM1 = WK-COMO-DEC1 * (10 ** M-D(IND1))
000172        ELSE
000172           COMPUTE W-COM1 = MOVE-ISPSVAL * (10 ** M-D(IND1))
000172        END-IF
              COPY ZMZFMMOD.
              MOVE SPACES       TO M-S(IND1)
              MOVE W-DECSIGBASE TO WRK-NDCLDIV
              PERFORM 0838-CNTL-DECIMALI
                 THRU 0838-CNTL-DECIMALI-END
              IF M-S(IND1) = 'E'
                 GO TO 0802-WNCSVE-OK-END
              END-IF
070797        MOVE W-DECSIGBASE TO WCM-DECIMALI
"             MOVE IND1         TO WCM-IND-DEC
070797        COPY ZMZDECIM.
000172
BPER51*----------------- CONTROVALORE DIVISA CONTABILITA'
BPER51        MOVE 'ZEC113401'              TO W-DECOD
BPER51        MOVE W-XXNN-N                 TO C
BPER51        COPY ZMZINDIR.
000172        MOVE WRK-DIVCON     TO WK-COMO-DEC1
000172        IF MOVP-CISO NOT = W-CSIGDCON
000172           COMPUTE W-COM1 = WK-COMO-DEC1 * (10 ** M-D(IND1))
000172        ELSE
000172           COMPUTE W-COM1 = MOVE-ISPSVAL * (10 ** M-D(IND1))
000172        END-IF
000172        COPY ZMZFMMOD.
000172        MOVE SPACES       TO M-S(IND1)
000172        MOVE W-DECSIGCON  TO WRK-NDCLDIV
000172        PERFORM 0838-CNTL-DECIMALI
000172           THRU 0838-CNTL-DECIMALI-END
000172        IF M-S(IND1) = 'E'
000172           GO TO 0802-WNCSVE-OK-END
000172        END-IF
000172        MOVE W-DECSIGCON  TO WCM-DECIMALI
000172        MOVE IND1         TO WCM-IND-DEC
000172        COPY ZMZDECIM.
000172*------------------------------------- MOVE-ICTVLISPS = ZEC111801
              MOVE 'ZEC111801'              TO W-DECOD
              MOVE W-XXNN-N                 TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
000172*       COMPUTE MOVE-ICTVSPS = W-COM-NUM / 10 ** M-D(IND1)
000172        COMPUTE MOVE-ICTVLISPS = W-COM-NUM / 10 ** M-D(IND1)
000172*------------------------------------- MOVE-ICTVSPS = ZEC113401
000172        MOVE 'ZEC113401'              TO W-DECOD
000172        MOVE W-XXNN-N                 TO C
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        COMPUTE MOVE-ICTVSPS = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZEC112601'              TO W-DECOD
              MOVE W-XXNN-N                 TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              IF W-COM-NUM = 2
                 COMPUTE MOVE-ICTVSPS = MOVE-ICTVSPS * -1
                 COMPUTE MOVE-ISPSVAL = MOVE-ISPSVAL * -1
000172           COMPUTE MOVE-ICTVLISPS = MOVE-ICTVLISPS * -1
              END-IF

              MOVE ZEROES                   TO MOVE-IMAXSPS
                                               MOVE-IMINSPS
                                               MOVE-DTFIN
                                               MOVE-DTINIZ
                                               MOVE-FDVSINT
                                               MOVE-GGSPS
                                               MOVE-RRAP
                                               MOVE-CDIVCAP


              MOVE 'ZEC111501'              TO W-DECOD
              MOVE W-XXNN-N                 TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVE-PSPSBML = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZEC110201'              TO W-DECOD
              MOVE W-XXNN-N                 TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVE-TCEC = W-COM-NUM / (10 ** M-D(IND1))
              MOVE 'ZEC111201'              TO W-DECOD
              MOVE W-XXNN-N                 TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVE-CVOXCND = W-COM-NUM / (10 ** M-D(IND1))
              PERFORM 0885-SCRIVI-AMOVE
                 THRU 0885-SCRIVI-AMOVE-END
000092*---------------------------------- CAUSALI VALUTARIE --          TS006107
"     *--------------------------- CERCO SU TABCEC IL CODICE DELLA  -   TS006108
"     *--------------------------- RITENUTA ATTUALE (ZEC111401)         TS006109
"     *--------------------------------------------------------------   TS006110
"             IF WRK-FLAG-CAU = 1                                       TS006111
000142         AND WRK-CASSA = 'NO'                                     TS005680
"                MOVE 'ZEC111401'                 TO W-DECOD            TS006112
"                MOVE W-XXNN-N                    TO C                  TS006113
"                MOVE W-DEC-COORD                 TO W-COORD-CEC        TS006114
"                COPY ZMZINDIR.                                         TS006115
"                MOVE MOD(M-I(IND1):M-L(IND1))    TO ABCEC-CCEC         TS006116
"                                                                       TS006117
"                PERFORM 0818-LEGGI-TABCEC                              TS006692
"                   THRU 0818-LEGGI-TABCEC-END                          TS006693
"                IF W-SQL-NON-TROVATO                                   TS006716
"                   MOVE 'E'                        TO M-S(W-DIV)       TS006717
"                   MOVE W-COORD-CEC                TO W-MOD-ERR        TS006718
"                   MOVE M-M(W-CEC)                 TO W-MAP-ERR        TS006719
"                   MOVE 2                          TO W-FLAG-ERR       TS006720
"                   MOVE 'S148'                     TO W-COD-ERR        TS006721
"                   PERFORM 9999-GESTIONE-ERRORE                        TS006722
"                      THRU 9999-GESTIONE-ERRORE-END                    TS006723
"                ELSE                                                   TS006716
"                   PERFORM 0817-IMPOSTA-TTCEC                          TS006121
"                      THRU 0817-IMPOSTA-TTCEC-END                      TS006122
000164              MOVE ABCEC-CNATCONE   TO TCAEC-CNATCONE             TS006705
000092              PERFORM 0819-AMOVC-DA-TTCAE                         TS006121
"                      THRU 0819-AMOVC-DA-TTCAE-END                     TS006122
"                END-IF                                                 TS006716
"             END-IF                                                    TS006123
000092*--------------------------------------------------------------   TS006124
           END-IF.

           MOVE 'ZEC112001'                 TO W-DECOD
           MOVE W-XXNN-N                    TO C
           COPY ZMZINDIR.
           IF MOD(M-I(IND1):M-L(IND1)) > SPACES
              MOVE OPE-NUMOPE               TO MOVE-NUMOPE
              MOVE OPE-DIPOPE               TO MOVE-DIPOPE
              MOVE MOVP-NPRGMOVP            TO MOVE-NPRGMOVP
              MOVE IND-KCS                  TO MOVE-NSUBMOVP
              MOVE 'ZEC112001'              TO W-DECOD
              MOVE W-XXNN-N                 TO C
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1)) TO MOVE-CCEC
              MOVE 'ZEC112501'              TO W-DECOD
              MOVE W-XXNN-N                 TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                TO MOVE-CSTM
              MOVE SPACES                   TO MOVE-FMDDSPS
              MOVE 0                        TO MOVE-ICABINT

              MOVE 0                        TO MOVE-IMAXSPS
                                               MOVE-IMINSPS
                                               MOVE-DTFIN
                                               MOVE-DTINIZ
                                               MOVE-FDVSINT
                                               MOVE-GGSPS
                                               MOVE-RRAP
                                               MOVE-CDIVCAP
              MOVE 'ZEC112301'              TO W-DECOD
              MOVE W-XXNN-N                 TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
BPEL69***---- SE NON E' VALORIZZATO L'IMPORTO SIGNIFICA CHE NON
BPEL69***---- C'E' RITENUTA PRECEDENTE
BPEL69        IF W-COM-NUM NOT = ZEROES
               IF MOVP-CISO NOT = WRK-MOVE-CDIVCAP
000172*          COMPUTE W-COM-NUM-DEC4 = W-COM-NUM / 10 ** M-D(IND1)
000172*          COMPUTE MOVE-ISPSVAL = W-COM-NUM-DEC4 *
000172*                                 WRK-MOVE-ICABCAP /
000172*                                 MOVP-ICABMOV
                 MOVE W-CIST                TO DIV-CIST
                 MOVE MOVP-CISO             TO DIV-CISO
                 PERFORM 0870-TRATTA-DIVISA
                    THRU 0870-TRATTA-DIVISA-END
                 MOVE DIV-NDCLDIV  TO W-COM-NUM-C
000172*--------------------------------------CALCOLA L'IMPORTO IN VALUTA
000172*-----------------------------------------------CHIAMANDO ZMBCTV00
000172           INITIALIZE ZMWCTV00
000172           COMPUTE WCTV00-IMPORTO = W-COM-NUM
000172*-----------------------------------------------------CAMBIO
000172           COMPUTE WCTV00-CAMBIO = WRK-MOVE-ICABCAP * (10 ** 7)
000172*------------------------------------------CAMBIO EQUIVALENTE
000172           COMPUTE WCTV00-CAMBIO-CTP = MOVP-ICABMOV * (10 ** 7)
000172           MOVE 7                  TO WCTV00-CAMBIO-CTP-DEC
000172           MOVE 6                  TO WCTV00-CAMBIO-CTP-INT
000172*--------------------CAMPO RISULTATO IMPORTO DI CONTROPARTITA
000172*------------------------SI ARROTONDA AI DECIMALI CISO DI AMOVP
000172           MOVE W-COM-NUM-C        TO WCTV00-CTVCP-DEC
000172           COMPUTE WCTV00-CTVCP-INT = 18 - WCTV00-CTVCP-DEC
000172*----------------------CODICE COMANDO
000172           MOVE 'CTVCP' TO        WCTV00-COMANDO
000172           PERFORM 0869-CALCOLA-CONTROVALORI
000172              THRU 0869-CALCOLA-CONTROVALORI-END
000172           MOVE WCTV00-CTVCP        TO WRK-ISPSVAL-TRANSIT
000172           MOVE WRK-ISPSVAL-TRANSIT TO MOVE-ISPSVAL
000172*          IF W-COM-NUM-C < 3
000172*             COMPUTE W-DIFF = 3 - W-COM-NUM-C
000172*             COMPUTE MOVE-ISPSVAL   =
000172*                     MOVE-ISPSVAL   / 10 ** W-DIFF
000172*             COMPUTE MOVE-ISPSVAL   =
000172*                     MOVE-ISPSVAL   * 10 ** W-DIFF
000172*          END-IF
                 MOVE W-CIST                TO DIV-CIST
                 MOVE WRK-MOVE-CDIVCAP      TO DIV-CISO
                 PERFORM 0870-TRATTA-DIVISA
                    THRU 0870-TRATTA-DIVISA-END
                 MOVE DIV-NDCLDIV  TO WRK-NDCLDIV
                 PERFORM 0838-CNTL-DECIMALI
                    THRU 0838-CNTL-DECIMALI-END
                 IF M-S(IND1) = 'E'
                    GO TO 0802-WNCSVE-OK-END
                 END-IF
070797           MOVE DIV-NDCLDIV TO WCM-DECIMALI
"                MOVE IND1        TO WCM-IND-DEC
070797           COPY ZMZDECIM.
               ELSE
                 COMPUTE MOVE-ISPSVAL = W-COM-NUM / 10 ** M-D(IND1)
                 MOVE MOVP-CISO  TO  DIV-CISO
                 MOVE W-CIST     TO  DIV-CIST
                 PERFORM 0870-TRATTA-DIVISA
                    THRU 0870-TRATTA-DIVISA-END
                 MOVE DIV-NDCLDIV  TO WRK-NDCLDIV
                 PERFORM 0838-CNTL-DECIMALI
                    THRU 0838-CNTL-DECIMALI-END
                 IF M-S(IND1) = 'E'
                    GO TO 0802-WNCSVE-OK-END
                 END-IF
070797           MOVE DIV-NDCLDIV TO WCM-DECIMALI
"                MOVE IND1        TO WCM-IND-DEC
070797           COPY ZMZDECIM.
               END-IF
              ADD MOVE-ISPSVAL              TO WRK-MOVE-ISPSVAL
              MOVE 'ZEC112401'              TO W-DECOD
              MOVE W-XXNN-N                 TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE ZEROES                   TO WK-COMO-DEC1
000172*       COMPUTE WK-COMO-DEC1 = MOVE-ISPSVAL * MOVP-ICABMOV
000172*       IF W-DECSIGBASE < M-D(IND1)
000172*          COMPUTE W-DIFF = M-D(IND1) - W-DECSIGBASE
000172*          COMPUTE WK-COMO-DEC1 = WK-COMO-DEC1 / 10 ** W-DIFF
000172*          COMPUTE WK-COMO-DEC1 = WK-COMO-DEC1 * 10 ** W-DIFF
000172*       END-IF
000172*-------------------------------------CHIAMATA ZMBCTV00
000172        INITIALIZE ZMWCTV00
000172        COMPUTE WCTV00-CAMBIO  = MOVP-ICABMOV * (10 ** 7)
000172        COMPUTE WCTV00-IMPORTO = MOVE-ISPSVAL * (10 ** 3)
000172        MOVE 'CTVDC'                    TO WCTV00-COMANDO
000172        PERFORM 0869-CALCOLA-CONTROVALORI
000172           THRU 0869-CALCOLA-CONTROVALORI-END
000172        MOVE WRK-DIVLIS       TO WK-COMO-DEC1
              COMPUTE W-COM1 = WK-COMO-DEC1 * (10 ** M-D(IND1))
              COPY ZMZFMMOD.
              MOVE SPACES       TO M-S(IND1)
              MOVE W-DECSIGBASE TO WRK-NDCLDIV
              PERFORM 0838-CNTL-DECIMALI
                 THRU 0838-CNTL-DECIMALI-END
              IF M-S(IND1) = 'E'
                 GO TO 0802-WNCSVE-OK-END
              END-IF
070797        MOVE W-DECSIGBASE TO WCM-DECIMALI
"             MOVE IND1         TO WCM-IND-DEC
070797        COPY ZMZDECIM.
000172*------------------------------------- MOVE-ICTVLISPS = ZEC112401
000172*       COMPUTE MOVE-ICTVSPS = W-COM-NUM / 10 ** M-D(IND1)
000172        COMPUTE MOVE-ICTVLISPS = W-COM-NUM / 10 ** M-D(IND1)
000172
BPER51*----------------- CONTROVALORE DIVISA CONTABILITA'
000172        MOVE 'ZEC113501'              TO W-DECOD
000172        MOVE W-XXNN-N                 TO C
000172        COPY ZMZINDIR.
000172        MOVE WRK-DIVCON       TO WK-COMO-DEC1
000172
000172        COMPUTE W-COM1 = WK-COMO-DEC1 * (10 ** M-D(IND1))
000172        COPY ZMZFMMOD.
000172        MOVE SPACES       TO M-S(IND1)
000172        MOVE W-DECSIGCON  TO WRK-NDCLDIV
000172        PERFORM 0838-CNTL-DECIMALI
000172           THRU 0838-CNTL-DECIMALI-END
000172        IF M-S(IND1) = 'E'
000172           GO TO 0802-WNCSVE-OK-END
000172        END-IF
000172        MOVE W-DECSIGBASE TO WCM-DECIMALI
000172        MOVE IND1         TO WCM-IND-DEC
000172        COPY ZMZDECIM.
000172*------------------------------------- MOVE-ICTVSPS = ZEC113501
000172        COMPUTE MOVE-ICTVSPS = W-COM-NUM / 10 ** M-D(IND1)

              MOVE 'ZEC112601'              TO W-DECOD
              MOVE W-XXNN-N                 TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              IF W-COM-NUM = 2
                 COMPUTE MOVE-ICTVSPS = MOVE-ICTVSPS * -1
000172           COMPUTE MOVE-ICTVLISPS = MOVE-ICTVLISPS * -1
                 COMPUTE MOVE-ISPSVAL = MOVE-ISPSVAL * -1
              END-IF
              MOVE 'ZEC112101'              TO W-DECOD
              MOVE W-XXNN-N                 TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVE-PSPSBML = W-COM-NUM / 10 ** M-D(IND1)
              MOVE 'ZEC110201'              TO W-DECOD
              MOVE W-XXNN-N                 TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVE-TCEC = W-COM-NUM / (10 ** M-D(IND1))
              MOVE 'ZEC111201'              TO W-DECOD
              MOVE W-XXNN-N                 TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVE-CVOXCND = W-COM-NUM / (10 ** M-D(IND1))
              PERFORM 0885-SCRIVI-AMOVE
                 THRU 0885-SCRIVI-AMOVE-END
000092*---------------------------------- CAUSALI VALUTARIE --          TS006257
"     *--------------------------- CERCO SU TABCEC IL CODICE DELLA  -   TS006258
"     *--------------------------- RITENUTA PRECEDENTE (ZEC112001)      TS006259
"     *--------------------------------------------------------------   TS006260
"             IF WRK-FLAG-CAU = 1                                       TS006261
000142         AND WRK-CASSA = 'NO'                                     TS005680
"                MOVE 'ZEC112001'                 TO W-DECOD            TS006262
"                MOVE W-XXNN-N                    TO C                  TS006263
"                MOVE W-DEC-COORD                 TO W-COORD-CEC        TS006264
"                COPY ZMZINDIR.                                         TS006265
"                MOVE MOD(M-I(IND1):M-L(IND1))    TO ABCEC-CCEC         TS006266
"                                                                       TS006267
"                PERFORM 0818-LEGGI-TABCEC                              TS006692
"                   THRU 0818-LEGGI-TABCEC-END                          TS006693
"                IF W-SQL-NON-TROVATO                                   TS006716
"                   MOVE 'E'                        TO M-S(W-DIV)       TS006717
"                   MOVE W-COORD-CEC                TO W-MOD-ERR        TS006718
"                   MOVE M-M(W-CEC)                 TO W-MAP-ERR        TS006719
"                   MOVE 2                          TO W-FLAG-ERR       TS006720
"                   MOVE 'S149'                     TO W-COD-ERR        TS006721
"                   PERFORM 9999-GESTIONE-ERRORE                        TS006722
"                      THRU 9999-GESTIONE-ERRORE-END                    TS006723
"                ELSE                                                   TS006716
"                   PERFORM 0817-IMPOSTA-TTCEC                          TS006268
"                      THRU 0817-IMPOSTA-TTCEC-END                      TS006269
000164              MOVE ABCEC-CNATCONE   TO TCAEC-CNATCONE             TS006705
000092              PERFORM 0819-AMOVC-DA-TTCAE                         TS006121
"                      THRU 0819-AMOVC-DA-TTCAE-END                     TS006122
"                END-IF                                                 TS006716
"                                                                       TS006270
"              END-IF                                                   TS006273
BPEL69        END-IF
000092*--------------------------------------------------------------   TS006274
           END-IF.
      *-------------------------- ZEC113001/10 = WRK-MOVE-ISPSVAL
      *------------ CALCOLO IMPORTO RITENUTA ESPRESSO NELLA DIV.MOV.TO
210797*  LA RITENUTA E' STATA GIA' CONVERTITA PRECEDENTEMENTE NELLA
210797*  DIVISA DEL MOVIMENTO
210797*    IF MOVP-CISO NOT = MOVE-CDIVCAP
""    *       COMPUTE WRK-MOVE-ISPSVAL =
""    *              (WRK-MOVE-ISPSVAL * MOVE-ICABCAP /
""    *               MOVP-ICABMOV)
""    *       MOVE W-CIST                  TO DIV-CIST
""    *       MOVE MOVP-CISO               TO DIV-CISO
""    *       PERFORM 0870-TRATTA-DIVISA
""    *          THRU 0870-TRATTA-DIVISA-END
""    *       MOVE DIV-NDCLDIV            TO W-COM-NUM-C
""    *       IF W-COM-NUM-C < 3
""    *          COMPUTE W-DIFF = 3 - W-COM-NUM-C
""    *          COMPUTE WRK-MOVE-ISPSVAL =
""    *                  WRK-MOVE-ISPSVAL / 10 ** W-DIFF
""    *          COMPUTE WRK-MOVE-ISPSVAL =
""    *                  WRK-MOVE-ISPSVAL * 10 ** W-DIFF
""    *       END-IF
210797*    END-IF
           MOVE 'ZEC113001'                TO W-DECOD.
           MOVE W-XXNN-N                   TO C.
           COPY ZMZINDIR.
           COMPUTE W-COM1 = WRK-MOVE-ISPSVAL * (10 ** M-D(IND1)).
           COPY ZMZFMMOD.
           MOVE SPACES          TO M-S(IND1).
           MOVE W-CIST     TO   DIV-CIST
           MOVE MOVP-CISO  TO   DIV-CISO
           PERFORM 0870-TRATTA-DIVISA
              THRU 0870-TRATTA-DIVISA-END
           MOVE DIV-NDCLDIV  TO WRK-NDCLDIV
           PERFORM 0838-CNTL-DECIMALI
              THRU 0838-CNTL-DECIMALI-END
           IF M-S(IND1) = 'E'
              GO TO 0802-WNCSVE-OK-END
           END-IF
070797     MOVE DIV-NDCLDIV  TO WCM-DECIMALI
"          MOVE IND1         TO WCM-IND-DEC
"          COPY ZMZDECIM.
070797     .
       0802-WNCSVE-OK-END.
           EXIT.
      *-------------------------------------------------------------*
      * LETTURA TABELLA CASI DI SVILUPPO ECONOM. CON CURSORE CUR5   *
      *-------------------------------------------------------------*
       0810-LEGGI-TNCSVE.
           EXEC SQL INCLUDE ZMLOPE05 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8                        TO W-FLAG-ERR
              MOVE '9999'                   TO W-COD-ERR
              MOVE SPACES                   TO L-NOME-TABELLA
              MOVE W-SQLCODE                TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'               TO L-MODULO
              MOVE '0810-APERTURA-CURSORE5' TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
              GO TO 0810-LEGGI-TNCSVE-END.

           MOVE SPACES TO WRK-FINE-WNCSVE.
           MOVE ZEROES TO WRK-IND-LETTI-E.
           PERFORM 0810-SCORRI-TBWNCSVE
              THRU 0810-SCORRI-TBWNCSVE-END
                   UNTIL WRK-FINE-WNCSVE = 'SI' OR
                             L-ERR-ERR.
           IF L-ERR-ERR
270597     OR L-ERR-INF
              GO TO 0810-LEGGI-TNCSVE-END.
      *----------------------------------- SE CASI DI SVILUPPO ASSENTI
           IF WRK-IND-LETTI-E NOT GREATER ZEROES
              MOVE 'SI'                       TO W-FLAG-EXIT
              MOVE 'E'                        TO M-S(W-STC)
              MOVE M-M(W-STC)                 TO W-MAP-ERR
              MOVE W-COORD-STC                TO W-MOD-ERR
              MOVE 2                          TO W-FLAG-ERR
              MOVE 'S086'                     TO W-COD-ERR
              MOVE ' SVILUPPO ECONOMICO    '  TO WCM-TSVI-DESCR0
              MOVE NCSVE-TTNCECON             TO WCM-TSVI-TTNC
              MOVE SPACES                     TO WCM-TSVI-DESCR
              MOVE ' ASSENTE IN ZM.TBTTSVIE ' TO WCM-TSVI-DESCR
              MOVE WCM-ERR-TSVI               TO W-DES-ERR
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.

           EXEC SQL INCLUDE ZMLCLO05 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8                        TO W-FLAG-ERR
              MOVE '9999'                   TO W-COD-ERR
              MOVE SPACES                   TO L-NOME-TABELLA
              MOVE W-SQLCODE                TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'               TO L-MODULO
              MOVE '0810-CHIUSURA-CURSORE5' TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END.
       0810-LEGGI-TNCSVE-END.
           EXIT.
      *----------------------------------------------------------------
      * EFFETTUA LA FETCH SULLA TABELLA ZM.TBWNCSVE (322)
      * UTILIZZANDO IL CURSORE CUR5
      *----------------------------------------------------------------
       0810-SCORRI-TBWNCSVE.
           EXEC SQL INCLUDE ZMF32201 END-EXEC.
           IF W-SQL-NON-TROVATO
              MOVE 'SI' TO WRK-FINE-WNCSVE
           ELSE
              IF NOT W-SQL-OK
                 MOVE 8                      TO W-FLAG-ERR
                 MOVE '9999'                 TO W-COD-ERR
                 MOVE 'TBWNCSVE'             TO L-NOME-TABELLA
                 MOVE W-SQLCODE              TO L-CODICE-SQL
                 MOVE 'ZMBSVIL0'             TO L-MODULO
                 MOVE '0810-SCORRI-TBWNCSVE' TO L-SUB-MODULO
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              ELSE
                 ADD 1        TO WRK-IND-LETTI-E
                 INITIALIZE ZMWNCSVE
BPEL26           IF NCSVE-WDATSVE-LEN GREATER ZEROES
                    MOVE NCSVE-WDATSVE-TEXT(1:NCSVE-WDATSVE-LEN)
                                           TO ZMWNCSVE
BPEL26           END-IF
                 PERFORM 0801-ELABORA-WNCSVE
                    THRU 0801-ELABORA-WNCSVE-END
                         VARYING IND5 FROM 1 BY 1
                         UNTIL IND5 > W-MAX-SVE     OR
                         NCSVE-TAB (IND5)   NOT > SPACES  OR
                         L-ERR-ERR OR
                         L-ERR-INF.
       0810-SCORRI-TBWNCSVE-END.
           EXIT.

000092*-------------------------                                        TS006405
"      0811-CAUSALI-VALUT-AMOVE.                                        TS006406
"     *------------------------------------------------------           TS006407
"     * VENGONO VALORIZZATI I CAMPI DI TTCAEC SULLA BASE DEI            TS006408
"     * VALORI PRESENTI NELLA TTSVIP RELATIVAMENTE AL TIPO              TS006409
"     * DI CASO PATRIMONIALE ANALIZZATO.                                TS006410
"     *------------------------------------------------------           TS006411
"          MOVE OPE-TTNCPATR       TO NCSVP-TTNCPATR.                   TS006412
"          PERFORM 0812-CERCA-SU-WNCSVP                                 TS006413
"             THRU 0812-CERCA-SU-WNCSVP-END                             TS006414
"          IF WRK-MOVIMENTO-TROVATO = 'SI'                              TS006415
"             PERFORM 0813-LEGGI-TTDIV                                  TS006415
"                THRU 0813-LEGGI-TTDIV-END                              TS006416
"             PERFORM 0814-LEGGI-TTNDG                                  TS006417
"                THRU 0814-LEGGI-TTNDG-END                              TS006418
000187        PERFORM 0815-LEGGI-TTSTC                                  TS006417
000187           THRU 0815-LEGGI-TTSTC-END                              TS006418
000377        MOVE WRK-CAU-2000-CSTC    TO ABSC-CSTC
000377        MOVE W-CIST               TO ABSC-CIST
000377        PERFORM 0630-LEGGI-TABSC
000377           THRU 0630-LEGGI-TABSC-END
000187        PERFORM 0816-RIMPOSTA-TTFIG                               TS006417
000187           THRU 0816-RIMPOSTA-TTFIG-END                           TS006418
"          END-IF.                                                      TS006415
"     *-------------------------                                        TS006419
"      0811-CAUSALI-VALUT-AMOVE-END.                                    TS006420
000092     EXIT.                                                        TS006421
                                                                        TS006422
000092*-------------------------                                        TS006423
"      0812-CERCA-SU-WNCSVP.                                            TS006424
"     *---------------------------------------------                    TS006425
"     *  SI  CERCA IL CASO  PATRIMONIALE ANALIZZATO                     TS006426
"     *  UTILIZZANDO IND14 PER IL MOVIMENTO TROVATO                     TS006427
"     *---------------------------------------------                    TS006428
"                                                                       TS006429
"          EXEC SQL INCLUDE ZMLOPE04 END-EXEC.                          TS006430
"                                                                       TS006431
"          IF NOT W-SQL-OK                                              TS006432
"             MOVE 8                        TO W-FLAG-ERR               TS006433
"             MOVE '9999'                   TO W-COD-ERR                TS006434
"             MOVE SPACES                   TO L-NOME-TABELLA           TS006435
"             MOVE W-SQLCODE                TO L-CODICE-SQL             TS006436
"             MOVE 'ZMBSVIL0'               TO L-MODULO                 TS006437
"             MOVE '0812-APERTURA-CURSORE4' TO L-SUB-MODULO             TS006438
"             PERFORM 9999-GESTIONE-ERRORE                              TS006439
"                THRU 9999-GESTIONE-ERRORE-END                          TS006440
CAR417*        GO TO 0610-LEGGI-WNCSVP-END                              TS006441
CAR417         GO TO 0812-CERCA-SU-WNCSVP-END                           TS006485
"          END-IF.                                                      TS006442
"                                                                       TS006443
"          MOVE ZEROES TO IND14.                                        TS006444
"          MOVE SPACES TO WRK-FINE-WNCSVP.                              TS006445
"          MOVE ZEROES TO WRK-IND-LETTI-P.                              TS006446
"          MOVE SPACES TO WRK-MOVIMENTO-TROVATO.                        TS006447
"                                                                       TS006448
"          PERFORM 0812-SCORRI-WNCSVP                                   TS006449
"             THRU 0812-SCORRI-WNCSVP-END                               TS006450
"                UNTIL NOT W-SQL-OK                                     TS006451
"                  OR WRK-MOVIMENTO-TROVATO = 'SI'                      TS006452
"                     OR L-ERR-ERR                                      TS006453
"                        OR W-EXIT.                                     TS006454
"                                                                       TS006455
"          IF L-ERR-ERR                                                 TS006456
"             GO TO 0812-CERCA-SU-WNCSVP-END.                           TS006457
"     *----------------------------------- SE CASI DI SVILUPPO ASSENTI  TS006458
"          IF WRK-IND-LETTI-P NOT GREATER ZEROES                        TS006459
"             MOVE 2                          TO W-FLAG-ERR             TS006460
"             MOVE 'S075'                     TO W-COD-ERR              TS006461
"             MOVE '0'                        TO W-MAP-ERR              TS006462
"             MOVE SPACES                     TO W-MOD-ERR              TS006463
"             MOVE ' SVILUPPO PATRIMONIALE '  TO WCM-TSVI-DESCR0        TS006464
"             MOVE NCSVP-TTNCPATR             TO WCM-TSVI-TTNC          TS006465
"             MOVE SPACES                     TO WCM-TSVI-DESCR         TS006466
"             MOVE ' ASSENTE IN ZM.TBTTSVIP ' TO WCM-TSVI-DESCR         TS006467
"             MOVE WCM-ERR-TSVI               TO W-DES-ERR              TS006468
"             PERFORM 9999-GESTIONE-ERRORE                              TS006469
"                THRU 9999-GESTIONE-ERRORE-END                          TS006470
"          END-IF.                                                      TS006471
"                                                                       TS006472
"          EXEC SQL INCLUDE ZMLCLO04 END-EXEC.                          TS006473
"                                                                       TS006474
"          IF NOT W-SQL-OK                                              TS006475
"             MOVE 8                        TO W-FLAG-ERR               TS006476
"             MOVE '9999'                   TO W-COD-ERR                TS006477
"             MOVE SPACES                   TO L-NOME-TABELLA           TS006478
"             MOVE W-SQLCODE                TO L-CODICE-SQL             TS006479
"             MOVE 'ZMBSVIL0'               TO L-MODULO                 TS006480
"             MOVE '0812-CHIUSURA-CURSORE4' TO L-SUB-MODULO             TS006481
"             PERFORM 9999-GESTIONE-ERRORE                              TS006482
"                THRU 9999-GESTIONE-ERRORE-END.                         TS006483
"                                                                       TS006484
"      0812-CERCA-SU-WNCSVP-END.                                        TS006485
000092     EXIT.                                                        TS006486
"                                                                       TS006487
000092*-------------------                                              TS006488
"      0812-SCORRI-WNCSVP.                                              TS006489
"     *----------------------------------------------------------       TS006490
"     * MOVIMENTO(IND14) ----> = OPE-NPRGMOVP.                          TS006491
"     * SI CERCA TRA I VARI MOVIMENTI QUELLO CORRISPONDENTE.            TS006492
"     *----------------------------------------------------------       TS006493
"                                                                       TS006494
"          EXEC SQL INCLUDE ZMF32101 END-EXEC.                          TS006495
"                                                                       TS006496
"          IF NOT W-SQL-OK                                              TS006497
"             AND NOT W-SQL-NON-TROVATO                                 TS006497
"             MOVE 8                      TO W-FLAG-ERR                 TS006498
"             MOVE '9999'                 TO W-COD-ERR                  TS006499
"             MOVE 'TBWNCSVP'             TO L-NOME-TABELLA             TS006500
"             MOVE W-SQLCODE              TO L-CODICE-SQL               TS006501
"             MOVE 'ZMBSVIL0'             TO L-MODULO                   TS006502
"             MOVE '0812-SCORRI-TBWNCSVP' TO L-SUB-MODULO               TS006503
"             PERFORM 9999-GESTIONE-ERRORE                              TS006504
"                THRU 9999-GESTIONE-ERRORE-END                          TS006505
"          ELSE                                                         TS006506
"             IF W-SQL-OK                                               TS006497
"                ADD 1        TO WRK-IND-LETTI-P                        TS006507
"                INITIALIZE ZMWNCSVP                                    TS006508
BPEL26           IF NCSVP-WDATSVP-LEN GREATER ZEROES
"                   MOVE NCSVP-WDATSVP-TEXT(1:NCSVP-WDATSVP-LEN)        TS006509
"                                               TO ZMWNCSVP             TS006510
BPEL26           END-IF
"                                                                       TS006511
"                PERFORM VARYING IND14 FROM 1 BY 1                      TS006512
"                 UNTIL IND14 > W-MAX-SVP                               TS006513
"                  OR WRK-MOVIMENTO-TROVATO = 'SI'                      TS006514
"                                                                       TS006515
"                  IF NCSVP-TTNMOV(IND14) = MOVP-NPRGMOVP               TS006516
"                     IF NCSVP-TTZNAPPC1 (IND14) > SPACES               TS006517
"                                                                       TS006518
"     *----------- SE TTZNAPPC1 > SPACE CI SONO PIU' MOVIMENTI          TS006519
"     *----------- CON LO STESSO NUMERO PROGRESSIVO (NPRGMOVP)          TS006520
"                                                                       TS006521
BAVG90*"                MOVE NCSVP-TTZNAPPC1 (IND14)  TO COND-MOD-COORD
BAVG90*"                MOVE NCSVP-TTPRES    (IND14)  TO COND-CONDIZ
BAVG90*"                MOVE NCSVP-TTVALC11  (IND14)  TO COND-VALORE
BAVG90*"                PERFORM 0700-CHIAMA-COND
BAVG90*"                   THRU 0700-CHIAMA-COND-END
BAVG90*"                IF COND-RC NOT = ZEROES
BAVG90                  MOVE NCSVP-TTZNAPPC1 (IND14) TO C-COND-MOD-COORD
BAVG90                  MOVE NCSVP-TTPRES    (IND14) TO C-COND-CONDIZ
BAVG90                  MOVE NCSVP-TTVALC11  (IND14) TO C-COND-VALORE
BAVG90                  PERFORM CONDIZIONI-COPY
BAVG90                     THRU CONDIZIONI-COPY-EX
BAVG90                  MOVE SPACES                  TO W-TROVATO
BAVG90                  IF C-COND-RC NOT = ZEROES
"                          MOVE 8                    TO W-FLAG-ERR      TS006528
"                          MOVE '9999'               TO W-COD-ERR       TS006529
"                          MOVE 'ZMBSVIL0'           TO L-MODULO        TS006530
"                          MOVE '0812-SCORRI-WNCSVP' TO L-SUB-MODULO    TS006531
"                          PERFORM 9999-GESTIONE-ERRORE                 TS006532
"                             THRU 9999-GESTIONE-ERRORE-END             TS006533
"                       END-IF                                          TS006534
"                     ELSE                                              TS006535
BAVG90*"                       MOVE 'S'          TO COND-ESITO          TS006536
BAVG90                  MOVE 'S'          TO C-COND-ESITO               TS006536
"                     END-IF                                            TS006537
"                                                                       TS006538
"     *------------------------ SE COND-ESITO = 'S' IL MOVIMENTO        TS006539
"     *------------------------ TROVATO VERIFICA LE CONDIZIONI          TS006540
"                                                                       TS006541
BAVG90*"                     IF COND-ESITO  = 'S'                       TS006542
BAVG90                IF C-COND-ESITO  = 'S'                            TS006542
"                        MOVE 'SI'        TO WRK-MOVIMENTO-TROVATO      TS006543
"                     ELSE                                              TS006544
"                        MOVE SPACES      TO WRK-MOVIMENTO-TROVATO      TS006545
"                     END-IF                                            TS006546
"                  END-IF                                               TS006550
"                END-PERFORM                                            TS006551
"             END-IF                                                    TS006552
"          END-IF.                                                      TS006552
"                                                                       TS006553
"          IF WRK-MOVIMENTO-TROVATO = 'SI'                              TS006543
"             SUBTRACT 1 FROM IND14                                     TS006544
"          END-IF.                                                      TS006543
"                                                                       TS006553
"      0812-SCORRI-WNCSVP-END.                                          TS006554
000092     EXIT.                                                        TS006555
                                                                        TS006556
000092*-------------------------                                        TS006557
"      0813-LEGGI-TTDIV.                                                TS006558
"     *--------------------------------------------------------         TS006559
"     * ZOR036401 < 3  --->  DIVISA IN                                  TS006560
"     * ZOR036401 = 4  --->  DIVISA OUT                                 TS006561
"     *-------------------------------------------------                TS006562
"          IF NCSVP-TTDIV (IND14) = 'ORD'                               TS006563
"             MOVE 'ZOR036401'               TO W-DECOD                 TS006564
"             COPY ZMZINDIR.                                            TS006565
"             COPY ZMZVALNM.                                            TS006566
000312*       IF W-COM-NUM  < 3                                         TS006567
000312        IF W-COM-NUM  < 4                                         TS006567
"                MOVE  'ITL'         TO TCAEC-TTLITVALA                 TS006568
"             ELSE                                                      TS006569
"                IF W-COM-NUM  = 4                                      TS006570
"                   MOVE  'VAL'         TO TCAEC-TTLITVALA              TS006571
000312           ELSE
000312              MOVE  SPACES        TO TCAEC-TTLITVALA
"                END-IF                                                 TS006572
000312        END-IF                                                    TS006572
"          END-IF.                                                      TS006573
"                                                                       TS006574
"          IF NCSVP-TTDIV (IND14) (1:2) = 'DV'                          TS006575
              MOVE NCSVP-TTDIV(IND14)         TO W-XXN                  TS006576
"             MOVE 'ZDI043301'                TO W-DECOD                TS006577
"             MOVE W-XXN-N                    TO C                      TS006578
"             COPY ZMZINDIR.                                            TS006579
"             COPY ZMZVALNM.                                            TS006580
000312*       IF W-COM-NUM < 3                                          TS006581
000312        IF W-COM-NUM < 4                                          TS006581
"                MOVE  'ITL'         TO TCAEC-TTLITVALA                 TS006582
"             ELSE                                                      TS006583
"                IF W-COM-NUM = 4                                       TS006584
"                   MOVE  'VAL'         TO TCAEC-TTLITVALA              TS006585
000312           ELSE
000312              MOVE  SPACES        TO TCAEC-TTLITVALA
000312           END-IF
"             END-IF                                                    TS006586
"          END-IF.                                                      TS006587
"                                                                       TS006588
"      0813-LEGGI-TTDIV-END.                                            TS006589
000092     EXIT.                                                        TS006590
                                                                        TS006591
000092*-------------------------                                        TS006592
"      0814-LEGGI-TTNDG.                                                TS006593
"     *-------------------------                                        TS006594
"                                                                       TS006595
000312     MOVE SPACES          TO TCAEC-TTFIG.

"          MOVE 'ZOR031801'     TO W-DECOD.                             TS006596
"          COPY ZMZINDIR.                                               TS006597
"          MOVE MOD(M-I(IND1):M-L(IND1))   TO WRK-ORDINANTE.            TS006598
000164     MOVE SPACES                     TO WRK-CNTR-CAMPO123         TS006621
"                                                                       TS006599
"          IF NCSVP-TTNDG1(IND14)  = 'ORD'                              TS006600
000164*       AND WRK-ORDINANTE NOT = SPACES                            TS006601
000164        IF WRK-ORDINANTE NOT = SPACES                             TS006601
000377*--------------------------------------- SWIFT NDG
000377           MOVE 'ZOR032701'                   TO W-DECOD
000377           COPY ZMZINDIR.
000377           MOVE MOD(M-I(IND1):M-L(IND1)) TO WRK-CAU-2000-SWFNDG
000187           MOVE 'ZOR033101'                   TO W-DECOD          TS011780
000187           COPY ZMZINDIR.                                         TS011781
000187           COPY ZMZVALNM.                                         TS011782
000187           COMPUTE WRK-CABIBCA = W-COM-NUM / (10 ** M-D(IND1))    TS011783
000142           MOVE WRK-ORDINANTE           TO MOVC-NNDGSTA           TS006602
000092           MOVE NCSVP-TTNDG1(IND14)     TO WRK-TTNDG              TS006602
"                PERFORM 0616-NDG-ORDINANTE                             TS006603
"                   THRU 0616-NDG-ORDINANTE-END                         TS006604
"                MOVE WRK-TTFIG               TO TCAEC-TTFIG            TS006605
"                MOVE 'ZOR032401'      TO W-DECOD                       TS002895
"                COPY ZMZINDIR.                                         TS002896
"                MOVE  MOD(M-I(IND1):M-L(IND1))  TO MOVC-CSIGPAE        TS002897
000164        ELSE                                                      TS006606
000164           MOVE 'SI'         TO WRK-CNTR-CAMPO123                 TS006621
000164        END-IF                                                    TS006606
"          END-IF.                                                      TS006606
"                                                                       TS006607
"          IF NCSVP-TTNDG1 (IND14) (1:1) = 'F'                          TS006608
"             MOVE NCSVP-TTNDG1 (IND14)        TO W-XNN                 TS006609
000377*--------------------------------------- SWIFT NDG
000377        MOVE 'ZND061001'                   TO W-DECOD
000377        MOVE W-XNN-N                       TO C
000377        COPY ZMZINDIR.
000377        MOVE MOD(M-I(IND1):M-L(IND1)) TO WRK-CAU-2000-SWFNDG
000187        MOVE 'ZND061401'                   TO W-DECOD             TS011788
000187        MOVE W-XNN-N                       TO C                   TS011789
000187        COPY ZMZINDIR.                                            TS011790
000187        COPY ZMZVALNM.                                            TS011791
000187        IF W-COM-NUM NOT = 0                                      TS011792
000187           COMPUTE WRK-CABIBCA = W-COM-NUM / (10 ** M-D(IND1))    TS011793
000187        END-IF                                                    TS011795
"             MOVE 'ZND060101'                 TO W-DECOD               TS006610
"             MOVE W-XNN-N                     TO C                     TS006611
"                                                 WRK-NDG               TS006612
"             MOVE W-DEC-COORD                TO W-COORD-NDG            TS006613
"             COPY ZMZINDIR.                                            TS006614
"             IF MOD(M-I(IND1):M-L(IND1)) > SPACES                      TS006615
000142           MOVE MOD(M-I(IND1):M-L(IND1)) TO MOVC-NNDGSTA          TS006615
000092           MOVE NCSVP-TTNDG1(IND14) TO WRK-TTNDG                  TS006616
"                PERFORM 0617-NDG-FIGURE                                TS006617
"                   THRU 0617-NDG-FIGURE-END                            TS006618
"                   MOVE WRK-TTFIG        TO TCAEC-TTFIG                TS006619
"                   MOVE 'ZND060701'     TO W-DECOD                     TS002949
"                   MOVE W-XNN-N         TO C                           TS002950
"                   COPY ZMZINDIR.                                      TS002951
"                   MOVE  MOD(M-I(IND1):M-L(IND1))   TO MOVC-CSIGPAE    TS002952
000164              MOVE SPACES          TO WRK-CNTR-CAMPO123           TS006621
"             ELSE                                                      TS006620
"                MOVE 'SI'             TO WRK-CNTR-CAMPO123             TS006621
"             END-IF                                                    TS006622
"          END-IF.                                                      TS006623
"                                                                       TS006624
"          IF WRK-CNTR-CAMPO123 = 'SI'                                  TS006625
000164*       MOVE SPACES TO WRK-CNTR-CAMPO123                          TS006626
"             IF NCSVP-TTNDG2 (IND14) = 'ORD'                           TS006627
"                AND WRK-ORDINANTE NOT = SPACES                         TS006628
000377*--------------------------------------- SWIFT NDG
000377              MOVE 'ZOR032701'                   TO W-DECOD
000377              COPY ZMZINDIR.
000377              MOVE MOD(M-I(IND1):M-L(IND1)) TO WRK-CAU-2000-SWFNDG
000187              MOVE 'ZOR033101'                   TO W-DECOD       TS011780
000187              COPY ZMZINDIR.                                      TS011781
000187              COPY ZMZVALNM.                                      TS011782
000187              COMPUTE WRK-CABIBCA = W-COM-NUM /                   TS011783
000187                                             (10 ** M-D(IND1))    TS011783
000142              MOVE WRK-ORDINANTE            TO MOVC-NNDGSTA       TS006602
000092              MOVE NCSVP-TTNDG2(IND14) TO WRK-TTNDG               TS006629
"                   PERFORM 0616-NDG-ORDINANTE                          TS006630
"                      THRU 0616-NDG-ORDINANTE-END                      TS006631
"                   MOVE WRK-TTFIG        TO TCAEC-TTFIG                TS006632
"                   MOVE 'ZOR032401'      TO W-DECOD                    TS002895
"                   COPY ZMZINDIR.                                      TS002896
"                   MOVE  MOD(M-I(IND1):M-L(IND1))  TO MOVC-CSIGPAE     TS002897
000164              MOVE SPACES         TO WRK-CNTR-CAMPO123            TS006626
"             END-IF                                                    TS006633
"             IF NCSVP-TTNDG2 (IND14) (1:1) = 'F'                       TS006634
"                MOVE NCSVP-TTNDG2 (IND14)    TO W-XNN                  TS006635
"                                                WRK-TTNDG              TS006636
000377*--------------------------------------- SWIFT NDG
000377           MOVE 'ZND061001'                   TO W-DECOD
000377           MOVE W-XNN-N                       TO C
000377           COPY ZMZINDIR.
000377           MOVE MOD(M-I(IND1):M-L(IND1)) TO WRK-CAU-2000-SWFNDG
000187           MOVE 'ZND061401'                   TO W-DECOD          TS011788
000187           MOVE W-XNN-N                       TO C                TS011789
000187           COPY ZMZINDIR.                                         TS011790
000187           COPY ZMZVALNM.                                         TS011791
000187           IF W-COM-NUM NOT = 0                                   TS011792
000187              COMPUTE WRK-CABIBCA = W-COM-NUM / (10 ** M-D(IND1)) TS011793
000187           END-IF                                                 TS011795
"                MOVE 'ZND060101'             TO W-DECOD                TS006637
"                MOVE W-XNN-N                 TO C                      TS006638
"                MOVE W-DEC-COORD             TO W-COORD-NDG            TS006639
"                COPY ZMZINDIR.                                         TS006640
"                IF MOD(M-I(IND1):M-L(IND1)) > SPACES                   TS006641
000142              MOVE MOD(M-I(IND1):M-L(IND1)) TO MOVC-NNDGSTA       TS006641
000092              MOVE NCSVP-TTNDG2(IND14) TO WRK-TTNDG               TS006642
"                   PERFORM 0617-NDG-FIGURE                             TS006643
"                      THRU 0617-NDG-FIGURE-END                         TS006644
"                   MOVE WRK-TTFIG        TO TCAEC-TTFIG                TS006645
"                   MOVE 'ZND060701'     TO W-DECOD                     TS002949
"                   MOVE W-XNN-N         TO C                           TS002950
"                   COPY ZMZINDIR.                                      TS002951
"                   MOVE  MOD(M-I(IND1):M-L(IND1))   TO MOVC-CSIGPAE    TS002952
000164              MOVE SPACES TO WRK-CNTR-CAMPO123                    TS006626
"                ELSE                                                   TS006646
"                   MOVE 'SI'   TO WRK-CNTR-CAMPO123                    TS006647
"                END-IF                                                 TS006648
"             END-IF                                                    TS006649
"          END-IF.                                                      TS006650
"                                                                       TS006651
"          IF WRK-CNTR-CAMPO123 = 'SI'                                  TS006652
000164*       MOVE SPACES TO WRK-CNTR-CAMPO123                          TS006653
000092        IF NCSVP-TTNDG3 (IND14) = 'ORD'                           TS006654
"                AND WRK-ORDINANTE NOT = SPACES                         TS006655
000377*----------------------------------- SWIFT NDG
000377              MOVE 'ZOR032701'                   TO W-DECOD
000377              COPY ZMZINDIR.
000377              MOVE MOD(M-I(IND1):M-L(IND1)) TO WRK-CAU-2000-SWFNDG
000187              MOVE 'ZOR033101'                   TO W-DECOD       TS011780
000187              COPY ZMZINDIR.                                      TS011781
000187              COPY ZMZVALNM.                                      TS011782
000187              COMPUTE WRK-CABIBCA = W-COM-NUM /                   TS011783
000187                                             (10 ** M-D(IND1))    TS011783
"                   MOVE WRK-ORDINANTE       TO MOVC-NNDGSTA            TS006656
"                   MOVE NCSVP-TTNDG3(IND14) TO WRK-TTNDG               TS006656
"                   PERFORM 0616-NDG-ORDINANTE                          TS006657
"                      THRU 0616-NDG-ORDINANTE-END                      TS006658
"                   MOVE WRK-TTFIG        TO TCAEC-TTFIG                TS006659
"                   MOVE 'ZOR032401'      TO W-DECOD                    TS002895
"                   COPY ZMZINDIR.                                      TS002896
"                   MOVE  MOD(M-I(IND1):M-L(IND1))  TO MOVC-CSIGPAE     TS002897
000164              MOVE SPACES TO WRK-CNTR-CAMPO123                    TS006653
"             END-IF                                                    TS006660
"             IF NCSVP-TTNDG3 (IND14) (1:1) = 'F'                       TS006661
"                MOVE NCSVP-TTNDG3 (IND14)     TO W-XNN                 TS006662
000377*--------------------------------------- SWIFT NDG
000377           MOVE 'ZND061001'                   TO W-DECOD
000377           MOVE W-XNN-N                       TO C
000377           COPY ZMZINDIR.
000377           MOVE MOD(M-I(IND1):M-L(IND1))  TO WRK-CAU-2000-SWFNDG
000187           MOVE 'ZND061401'                   TO W-DECOD          TS011788
000187           MOVE W-XNN-N                       TO C                TS011789
000187           COPY ZMZINDIR.                                         TS011790
000187           COPY ZMZVALNM.                                         TS011791
000187           IF W-COM-NUM NOT = 0                                   TS011792
000187              COMPUTE WRK-CABIBCA = W-COM-NUM / (10 ** M-D(IND1)) TS011793
000187           END-IF                                                 TS011795
"                MOVE 'ZND060101'              TO W-DECOD               TS006663
"                MOVE W-XNN-N                  TO C                     TS006664
"                                                WRK-NDG                TS006665
"                MOVE W-DEC-COORD              TO W-COORD-NDG           TS006666
"                COPY ZMZINDIR.                                         TS006667
"                IF MOD(M-I(IND1):M-L(IND1)) > SPACES                   TS006668
000142              MOVE MOD(M-I(IND1):M-L(IND1)) TO MOVC-NNDGSTA       TS006668
000092              PERFORM 0617-NDG-FIGURE                             TS006669
"                      THRU 0617-NDG-FIGURE-END                         TS006670
"                   MOVE WRK-TTFIG        TO TCAEC-TTFIG                TS006671
"                   MOVE 'ZND060701'     TO W-DECOD                     TS002949
"                   MOVE W-XNN-N         TO C                           TS002950
"                   COPY ZMZINDIR.                                      TS002951
"                   MOVE  MOD(M-I(IND1):M-L(IND1))   TO MOVC-CSIGPAE    TS002952
000164              MOVE SPACES        TO WRK-CNTR-CAMPO123             TS006673
"                ELSE                                                   TS006672
"                   MOVE 'SI'          TO WRK-CNTR-CAMPO123             TS006673
"                END-IF                                                 TS006674
"             END-IF                                                    TS006675
"          END-IF.                                                      TS006676
"                                                                       TS006677
"          IF WRK-CNTR-CAMPO123 = 'SI'                                  TS006678
000164        OR NCSVP-TTNDG1 (IND14) = SPACES                          TS006661
000164           MOVE SPACES         TO WRK-CNTR-CAMPO123               TS002881
"                MOVE 'CLRES'        TO TCAEC-TTFIG                     TS006679
000142           MOVE SPACES         TO MOVC-NNDGSTA                    TS006679
000092     END-IF.                                                      TS006680
"                                                                       TS006681
"      0814-LEGGI-TTNDG-END.                                            TS006682
000092     EXIT.                                                        TS006683
                                                                        TS006684
000187 0815-LEGGI-TTSTC.                                                TS006682
000187                                                                  TS006681
000187     IF NCSVP-TTSTC (IND14) (1:1) = 'D' AND
000187        NCSVP-TTSTC (IND14) (2:1) NUMERIC
000214*       MOVE NCSVP-TTSTC (IND5)       TO W-XN
000214        MOVE NCSVP-TTSTC (IND14)      TO W-XN
000187        MOVE 'ZSC050701'              TO W-DECOD
000187        MOVE W-XN-N                   TO C
000187        COPY ZMZINDIR.
000187        COPY ZMZVALNM.
000187        MOVE W-COM-NUM                TO WRK-WORK-CTIPSTC
000377*--------- PRELEVO IL CODICE SOTTOCONTO
000377        MOVE 'ZSC050501'              TO W-DECOD
000377        MOVE W-XN-N                   TO C
000377        COPY ZMZINDIR.
000377        COPY ZMZVALNM.
000377        MOVE W-COM-NUM                TO WRK-CAU-2000-CSTC
000187     END-IF.
000187                                                                  TS006681
000214*    IF NCSVP-TTSTC (IND5) (1:1) = 'A' AND
000214*       NCSVP-TTSTC (IND5) (2:1) NUMERIC
000214*       MOVE NCSVP-TTSTC (IND5)       TO W-XN
000214     IF NCSVP-TTSTC (IND14) (1:1) = 'A' AND
000214        NCSVP-TTSTC (IND14) (2:1) NUMERIC
000214        MOVE NCSVP-TTSTC (IND14)      TO W-XN
000187        MOVE 'ZSC051001'              TO W-DECOD
000187        MOVE W-XN-N                   TO C
000187        COPY ZMZINDIR.
000187        COPY ZMZVALNM.
000187        MOVE W-COM-NUM                TO WRK-WORK-CTIPSTC
000377*----------------------- FLAG RESIDENZA
000377        MOVE 'ZSC050801'              TO W-DECOD
000377        MOVE W-XN-N                   TO C
000377        COPY ZMZINDIR.
000377        COPY ZMZVALNM.
000377        MOVE W-COM-NUM                TO WRK-CAU-2000-CSTC
000187     END-IF.
BPO115     IF NCSVP-TTSCCTP (IND14) (1:1) = 'D' AND
BPO115        NCSVP-TTSCCTP (IND14) (2:1) NUMERIC
BPO115*--------- PRELEVO IL CODICE SOTTOCONTO DI CONTROPARTITA
BPO115        MOVE NCSVP-TTSCCTP (IND14)    TO W-XN
BPO115        MOVE 'ZSC050501'              TO W-DECOD
BPO115        MOVE W-XN-N                   TO C
BPO115        COPY ZMZINDIR.
BPO115        COPY ZMZVALNM.
BPO115        MOVE W-COM-NUM                TO WRK-CSTC-CTP
BPO115     END-IF.
BPO115                                                                  TS006681
BPO115     IF NCSVP-TTSCCTP (IND14) (1:1) = 'A' AND
BPO115        NCSVP-TTSCCTP (IND14) (2:1) NUMERIC
BPO115*---------- PRELEVO IL CODICE SOTTOCONTO DI CONTROPARTITA
BPO115        MOVE NCSVP-TTSCCTP (IND14)    TO W-XN
BPO115        MOVE 'ZSC050801'              TO W-DECOD
BPO115        MOVE W-XN-N                   TO C
BPO115        COPY ZMZINDIR.
BPO115        COPY ZMZVALNM.
BPO115        MOVE W-COM-NUM                TO WRK-CSTC-CTP
BPO115     END-IF.
BPO115
BPO115     MOVE WRK-CSTC-CTP         TO ABSC-CSTC
BPO115     MOVE W-CIST               TO ABSC-CIST
BPO115     PERFORM 0630-LEGGI-TABSC
BPO115        THRU 0630-LEGGI-TABSC-END
BPO115
BPO115     MOVE ABSC-FRSDSTC         TO WRK-FRSDSTC-CTP.
000187                                                                  TS006681
000187 0815-LEGGI-TTSTC-END.                                            TS006682
000187     EXIT.                                                        TS006683
000187                                                                  TS006681
000187 0816-RIMPOSTA-TTFIG.                                             TS006682
000187                                                                  TS006681
000187     IF WRK-WORK-CTIPSTC = 101 OR 116                             TS006632
BPO105*----- NEL CASO DI C/NOSTRI PRESSO BANCHE RESIDENTI IL TIPO FIGURA
BPO105*----- DEVE ESSERE BCRIB E NON BCNSG
BPO105        IF ABSC-FRSDSTC = 1
BPO105           MOVE 'BCRIB'          TO TCAEC-TTFIG                   TS006632
BPO105        ELSE
000187           MOVE 'BCNSG'          TO TCAEC-TTFIG                   TS006632
BPO105        END-IF
000187     END-IF.                                                      TS006632
000187                                                                  TS006681
000377     IF WRK-FLAG-CAU-2000 = 0
000187        IF WRK-WORK-CTIPSTC = 112 OR 103                          TS006632
000187           MOVE 'BCRIB'          TO TCAEC-TTFIG                   TS006632
000377        END-IF
000187     END-IF.                                                      TS006632
000187                                                                  TS006681
000377     IF WRK-FLAG-CAU-2000 = 0
000187        IF WRK-WORK-CTIPSTC = 102 OR 111                          TS006632
000187           MOVE 'BCNCL'          TO TCAEC-TTFIG                   TS006632
000377        END-IF
000187     END-IF.                                                      TS006632
000187                                                                  TS006681
000377     IF WRK-FLAG-CAU-2000 = 1
000394        IF APROC-TPCS = 46
BPL035        OR APROC-TPCS = 67
000394           PERFORM 0822-COMPONI-FIGURA
000394              THRU 0822-COMPONI-FIGURA-END
000394        ELSE
000377           IF ABSC-FTPGEST = 1
000434           OR = 6
000377*----------------- SE SOTTOCONTO NON RESIDENTE
000377              IF ABSC-FRSDSTC = 2
000377                 IF WRK-WORK-CTIPSTC NOT = 101 AND 116
000377*-------------------------------------- REGOLATO CON EBA O NO.
000377                    IF WRK-CAU-2000-SWFNDG = 'EBAX'
000377                       MOVE 'BCNEB'          TO TCAEC-TTFIG
000377                       MOVE W-CIST           TO WRK-CABIBCA
000377                    ELSE
000377*------------------------------------------ CLIENTE O BANCA
000377                       IF ABSC-FRSTNDG = 2
000377                          MOVE 'BCNCL'          TO TCAEC-TTFIG
000377                       ELSE
000377                          MOVE 'CLNCL'          TO TCAEC-TTFIG
000377                       END-IF
000377                    END-IF
000377                 END-IF
000377              END-IF
000377*--------------- DISTINGUO SE REGOLATO CON BANCA ITALIA O NO
000377              IF WRK-WORK-CTIPSTC = 112 OR 103
000377                 IF WRK-CABIBCA NOT  = 1000
000377                    MOVE 'BCRIB'          TO TCAEC-TTFIG
000377                 ELSE
000377                    MOVE 'BCRTG'          TO TCAEC-TTFIG
000377                 END-IF
000377              END-IF
000377           END-IF
000394        END-IF
000377     END-IF.
000187
000377*---------------- PER I PRODOTTI DERIVATI VIENE PRESA LA FIG ORD.
000377     MOVE 'ZRA093101'     TO W-DECOD.
000377     COPY ZMZINDIR.
000377     IF MOD(M-I(IND1):M-L(IND1)) NOT = SPACES
000377
000377        MOVE 'ZOR036601'      TO W-DECOD
000377        COPY ZMZINDIR.
000377        COPY ZMZVALNM.
000377        COMPUTE WRK-SETTCLRES-9 =
000377                      W-COM-NUM / (10 ** M-D(IND1))
000377        MOVE WRK-SETTCLRES-9    TO WRK-SETTCLRES-4
000377        MOVE WRK-SETTCLRES-3    TO WRK-DER-SETTORE
000377        MOVE WRK-SETTCLRES-3    TO WRK-DER-SETTORECL
000377        MOVE 'ZOR032401'                 TO W-DECOD
000377        COPY ZMZINDIR.
000377        MOVE MOD(M-I(IND1):M-L(IND1)) TO WRK-DER-STATO
000377
000377        MOVE 'ZOR031901'        TO W-DECOD
000377        COPY ZMZINDIR.
000377        COPY ZMZVALNM.
000377        COMPUTE WRK-TIPONDG-ORD = W-COM-NUM / ( 10 ** M-D(IND1))
000377        MOVE 'ZOR032501'        TO W-DECOD
000377        COPY ZMZINDIR.
000377        COPY ZMZVALNM.
000377        COMPUTE WRK-RESIDENZA-ORD = W-COM-NUM / ( 10 ** M-D(IND1))
000377        IF WRK-TIPONDG-ORD = 1
000377           IF WRK-RESIDENZA-ORD = 1
000377                 MOVE 'CLR'      TO TCAEC-TTFIG(1:3)
000377           ELSE
000377                 MOVE 'CLN'      TO TCAEC-TTFIG(1:3)
000377           END-IF
000377        ELSE
000377           IF WRK-RESIDENZA-ORD = 1
000377                 MOVE 'BCR'      TO TCAEC-TTFIG(1:3)
000377           ELSE
000377                 MOVE 'BCN'      TO TCAEC-TTFIG(1:3)
000377           END-IF
000377        END-IF
000377     END-IF.
000187 0816-RIMPOSTA-TTFIG-END.                                         TS006682
000187     EXIT.                                                        TS006683
                                                                        TS006684
000092*--------------------                                             TS006686
"      0817-IMPOSTA-TTCEC.                                              TS006687
"     *------------------------------------------------------           TS006688
"     * IMPOSTA TIPO E NATURA DEL CONTO ECONOMICO           -           TS006689
"     *------------------------------------------------------           TS006690
"                                                                       TS006691
"     *-------                                                          TS006694
"           IF ABCEC-TCEC = 4                                           TS006695
"              MOVE  'I'            TO TCAEC-TTCEC                      TS006696
"           ELSE                                                        TS006697
"              MOVE  SPACE          TO TCAEC-TTCEC                      TS006698
"           END-IF.                                                     TS006699
"     *-------                                                          TS006700
000377      IF WRK-FLAG-CAU-2000 = 1
000377         IF ABCEC-TCEC = 4
000377            MOVE  'W'            TO TCAEC-TTCEC
000377         ELSE
000377            MOVE  'V'            TO TCAEC-TTCEC
000377         END-IF
000377      END-IF.
"          MOVE 'ZEC112601'                 TO W-DECOD.                 TS006701
"          MOVE W-XXNN-N                    TO C.                       TS006702
"          COPY ZMZINDIR.                                               TS006703
"          COPY ZMZVALNM.                                               TS006704
"          COMPUTE TCAEC-CNATCONE = W-COM-NUM / (10 ** M-D(IND1)).      TS006705
"     *-------                                                          TS006706
"      0817-IMPOSTA-TTCEC-END.                                          TS006707
000092     EXIT.                                                        TS006708

000142*-------------------------                                        TS006592
000142 0818-IMPOSTA-NDGCE.                                              TS006593
      *-------------------------                                        TS006594
                                                                        TS006595
000142     MOVE 'ZOR031801'     TO W-DECOD.                             TS006596
000142     COPY ZMZINDIR.                                               TS006597
000142     MOVE MOD(M-I(IND1):M-L(IND1))   TO WRK-ORDINANTE.            TS006598
                                                                        TS006599
000142     IF NCSVE-TTNDG1(IND5)  = 'ORD'                               TS006600
000142        AND WRK-ORDINANTE NOT = SPACES                            TS006601
000142        MOVE WRK-ORDINANTE           TO MOVC-NNDGSTA              TS006602
000142        MOVE NCSVE-TTNDG1(IND5)     TO WRK-TTNDG                  TS006602
000142        PERFORM 0616-NDG-ORDINANTE                                TS006603
000142           THRU 0616-NDG-ORDINANTE-END                            TS006604
000142        MOVE WRK-TTFIG               TO TCAEC-TTFIG               TS006605
000142     END-IF.                                                      TS006606
                                                                        TS006607
000142     IF NCSVE-TTNDG1 (IND5) (1:1) = 'F'                           TS006608
000142        MOVE NCSVE-TTNDG1 (IND5)         TO W-XNN                 TS006609
000142        MOVE 'ZND060101'                 TO W-DECOD               TS006610
000142        MOVE W-XNN-N                     TO C                     TS006611
000142                                            WRK-NDG               TS006612
000142        MOVE W-DEC-COORD                TO W-COORD-NDG            TS006613
000142        COPY ZMZINDIR.                                            TS006614
000142        IF MOD(M-I(IND1):M-L(IND1)) > SPACES                      TS006615
000142           MOVE MOD(M-I(IND1):M-L(IND1)) TO MOVC-NNDGSTA          TS006615
000142           MOVE NCSVE-TTNDG1(IND5) TO WRK-TTNDG                   TS006616
000142           PERFORM 0617-NDG-FIGURE                                TS006617
000142              THRU 0617-NDG-FIGURE-END                            TS006618
000142              MOVE WRK-TTFIG        TO TCAEC-TTFIG                TS006619
000142        ELSE                                                      TS006620
000142           MOVE 'SI'   TO WRK-CNTR-CAMPO123                       TS006621
000142        END-IF                                                    TS006622
000142     END-IF.                                                      TS006623
                                                                        TS006624
000142     IF WRK-CNTR-CAMPO123 = 'SI'                                  TS006625
000142        MOVE SPACES TO WRK-CNTR-CAMPO123                          TS006626
000142        IF NCSVE-TTNDG2 (IND5) = 'ORD'                            TS006627
000142           AND WRK-ORDINANTE NOT = SPACES                         TS006628
000142           MOVE WRK-ORDINANTE      TO MOVC-NNDGSTA                TS006602
000142           MOVE NCSVE-TTNDG2(IND5) TO WRK-TTNDG                   TS006629
000142              PERFORM 0616-NDG-ORDINANTE                          TS006630
000142                 THRU 0616-NDG-ORDINANTE-END                      TS006631
000142              MOVE WRK-TTFIG        TO TCAEC-TTFIG                TS006632
000142        END-IF                                                    TS006633
000142        IF NCSVE-TTNDG2 (IND5) (1:1) = 'F'                        TS006634
000142           MOVE NCSVE-TTNDG2 (IND5)    TO W-XNN                   TS006635
000142                                           WRK-TTNDG              TS006636
000142           MOVE 'ZND060101'             TO W-DECOD                TS006637
000142           MOVE W-XNN-N                 TO C                      TS006638
000142           MOVE W-DEC-COORD             TO W-COORD-NDG            TS006639
000142           COPY ZMZINDIR.                                         TS006640
000142           IF MOD(M-I(IND1):M-L(IND1)) > SPACES                   TS006641
000142              MOVE MOD(M-I(IND1):M-L(IND1)) TO MOVC-NNDGSTA       TS006641
000142              MOVE NCSVE-TTNDG2(IND5) TO WRK-TTNDG                TS006642
000142              PERFORM 0617-NDG-FIGURE                             TS006643
000142                 THRU 0617-NDG-FIGURE-END                         TS006644
000142              MOVE WRK-TTFIG        TO TCAEC-TTFIG                TS006645
000142           ELSE                                                   TS006646
000142              MOVE 'SI'   TO WRK-CNTR-CAMPO123                    TS006647
000142           END-IF                                                 TS006648
000142        END-IF                                                    TS006649
000142     END-IF.                                                      TS006650
"                                                                       TS006651
000142     IF WRK-CNTR-CAMPO123 = 'SI'                                  TS006652
000142        MOVE SPACES TO WRK-CNTR-CAMPO123                          TS006653
000142        IF NCSVE-TTNDG3 (IND5) = 'ORD'                            TS006654
000142           AND WRK-ORDINANTE NOT = SPACES                         TS006655
000142               MOVE WRK-ORDINANTE       TO MOVC-NNDGSTA           TS006656
000142               MOVE NCSVE-TTNDG3(IND5) TO WRK-TTNDG               TS006656
000142               PERFORM 0616-NDG-ORDINANTE                         TS006657
000142                  THRU 0616-NDG-ORDINANTE-END                     TS006658
000142               MOVE WRK-TTFIG        TO TCAEC-TTFIG               TS006659
000142        END-IF                                                    TS006660
000142        IF NCSVP-TTNDG3 (IND5) (1:1) = 'F'                        TS006661
000142           MOVE NCSVE-TTNDG3 (IND5)     TO W-XNN                  TS006662
000142           MOVE 'ZND060101'              TO W-DECOD               TS006663
000142           MOVE W-XNN-N                  TO C                     TS006664
000142                                           WRK-NDG                TS006665
000142           MOVE W-DEC-COORD              TO W-COORD-NDG           TS006666
000142           COPY ZMZINDIR.                                         TS006667
000142           IF MOD(M-I(IND1):M-L(IND1)) > SPACES                   TS006668
000142              MOVE MOD(M-I(IND1):M-L(IND1)) TO MOVC-NNDGSTA       TS006668
000142              PERFORM 0617-NDG-FIGURE                             TS006669
000142                 THRU 0617-NDG-FIGURE-END                         TS006670
000142              MOVE WRK-TTFIG        TO TCAEC-TTFIG                TS006671
000142           ELSE                                                   TS006672
000142              MOVE 'SI'   TO WRK-CNTR-CAMPO123                    TS006673
000142           END-IF                                                 TS006674
000142        END-IF                                                    TS006675
000142     END-IF.                                                      TS006676
                                                                        TS006677
000142 0818-IMPOSTA-NDGCE-END.                                          TS006682
000142     EXIT.                                                        TS006683
                                                                        TS006709
000092*--------------------------------------------------               TS006710
"      0818-LEGGI-TABCEC.                                               TS006711
"     *--------------------------------------------------               TS006712
"                                                                       TS006713
"          EXEC SQL INCLUDE ZMS20501 END-EXEC                           TS006714
"                                                                       TS006715
"          IF NOT W-SQL-OK                                              TS006725
"             AND NOT W-SQL-NON-TROVATO                                 TS006725
"                 MOVE 8                          TO W-FLAG-ERR         TS006726
"                MOVE '9999'                     TO W-COD-ERR           TS006727
"                MOVE 'TABCEC  '                 TO L-NOME-TABELLA      TS006728
"                MOVE W-SQLCODE                  TO L-CODICE-SQL        TS006729
"                MOVE 'ZMBSVIL0'                 TO L-MODULO            TS006730
"                MOVE '0818-LEGGI-TABCEC'        TO L-SUB-MODULO        TS006731
"                PERFORM 9999-GESTIONE-ERRORE                           TS006732
"                   THRU 9999-GESTIONE-ERRORE-END                       TS006733
"          END-IF.                                                      TS006734
"                                                                       TS006736
"      0818-LEGGI-TABCEC-END.                                           TS006737
000092     EXIT.                                                        TS006738
                                                                        TS006739
000092*--------------------                                             TS006740
"      0819-AMOVC-DA-TTCAE.                                             TS006741
"     *-----------------------------------------------------------      TS006742
"     * MEMORIZZA UN RECORD DI AMOVC                                    TS006743
"     *-----------------------------------------------------------      TS006744
"                                                                       TS006745
BPO741     IF WRK-FLAG-ABROG = 'T' AND
BPO741        CONFG-DATA-ABROG GREATER ZEROES
BPO741        AND MOVP-DVALNOA > CONFG-DATA-ABROG
BPO741              GO TO 0819-AMOVC-DA-TTCAE-END
BPO741     END-IF
000446     MOVE N-M-2     TO WRK-N-M-2
BPL056     MOVE SPACES        TO WRK-PAETG
000394     IF TCAEC-TTFIG (1:3) = 'BCR' OR 'CLR'
000394        MOVE MOVP-CISO TO DIV-CISO
000394        PERFORM 0833-LEGGI-ADIV
000394           THRU 0833-LEGGI-ADIV-END
000394        IF DIV-FINOUT < 4
BPL056*----------SE TARGET E EURO ALLORA SIGNIFICA CHE BK NON RES
BPO115*||||||||| PER BPOSTA NON E" SEMPRE VERA L"AFFERMAZIONE PRECEDENTE
BPL056           IF TCAEC-TTFIG = 'BCRTG'
BPL056              IF  DIV-FINOUT = 1
BPO115              AND WRK-FRSDSTC-CTP = 2
BPO115*----------SE TARGET E EURO E CONTROPARTITA NON RESIDENTE
BPL056                 MOVE 'BCNTG' TO TCAEC-TTFIG
BPL056                 MOVE 'SI'    TO WRK-PAETG
BPL056              ELSE
BPL056                 GO TO 0819-AMOVC-DA-TTCAE-END
BPL056              END-IF
BPO083*BPL056           ELSE
BPO083*000394              GO TO 0819-AMOVC-DA-TTCAE-END
BPL056           END-IF
000394        END-IF
000394     END-IF

"          PERFORM 0821-LEGGI-TTCAEC                                    TS006746
"             THRU 0821-LEGGI-TTCAEC-END.                               TS006747
"                                                                       TS006748
"          IF NOT W-SQL-OK                                              TS006749
"             GO TO 0819-AMOVC-DA-TTCAE-END                             TS006750
"          END-IF.                                                      TS006749

000394*    IF TCAEC-TTFIG (1:3) = 'BCR' OR 'CLR'
000394*       MOVE MOVP-CISO TO DIV-CISO
000394*       PERFORM 0833-LEGGI-ADIV
000394*          THRU 0833-LEGGI-ADIV-END
000394*       IF DIV-FINOUT < 4
000394*          GO TO 0819-AMOVC-DA-TTCAE-END
000394*       END-IF
000394*    END-IF

000142     MOVE MOVP-CIST        TO MOVC-CIST                           TS006749
000092     MOVE MOVP-DIPOPE      TO MOVC-DIPOPE                         TS006749
000092     MOVE MOVP-NUMOPE      TO MOVC-NUMOPE                         TS006750
"          MOVE MOVP-NPRGMOVP    TO MOVC-NPRGMOVP                       TS006751
"          MOVE MOVP-NSUBMOVP    TO MOVC-NSUBMOVP                       TS006752
"          MOVE MOVP-CISO        TO MOVC-CISO                           TS006752
"          MOVE TCAEC-CCAUFISSA  TO MOVC-CCAUIC                         TS006753
"          MOVE ZEROES           TO MOVC-CDPZGINT                       TS006754
"          MOVE ZEROES           TO MOVC-CDPZGINT                       TS006755
"          MOVE 1                TO MOVC-TCODCAU                        TS006756
"          MOVE TCAEC-TTINTESC   TO MOVC-TMOVCAU                        TS006757
"          MOVE ZEROES           TO MOVC-NPRGRIGA                       TS006758
"                                                                       TS006759
"          IF MOVE-ISPSVAL < ZEROES                                     TS006760
"             COMPUTE MOVC-ICAU = MOVE-ISPSVAL * -1                     TS006761
"          ELSE                                                         TS006762
"             MOVE MOVE-ISPSVAL  TO MOVC-ICAU                           TS006763
"          END-IF                                                       TS006764
"                                                                       TS006765
"          MOVE SPACE            TO MOVC-SETTCLRES.                     TS006766
"          MOVE SPACE            TO MOVC-SETTEMITVM.                    TS006767
000377     IF MOVC-CSIGPAEMIT = SPACES
000377        MOVE MOVC-CSIGPAE     TO MOVC-CSIGPAEMIT
000377     END-IF
000377*---------------- PER I PRODOTTI DERIVATI VALORIZZO SETTORE
000377*---------------- E PAESE CON I DATI SALVATI
000377     MOVE 'ZRA093101'     TO W-DECOD.
000377     COPY ZMZINDIR.
000377     IF MOD(M-I(IND1):M-L(IND1)) NOT = SPACES
000377        MOVE WRK-DER-SETTORE   TO MOVC-SETTCLRES
000377        MOVE WRK-DER-SETTORECL TO MOVC-SETTEMITVM
000377        MOVE WRK-DER-STATO     TO MOVC-CSIGPAEMIT
000377     END-IF
000377*    MOVE SPACE            TO MOVC-CSIGPAEMIT.
000187*    MOVE ZERO             TO MOVC-CODABI.                        TS006770
000187     MOVE WRK-CABIBCA      TO MOVC-CODABI.                        TS006770
000092     MOVE ZERO             TO MOVC-ICAUORI.                       TS006771
"                                                                       TS006772
"          MOVE TCAEC-VMATRICE   TO MOVC-VMATRICE.                      TS006773
"                                                                       TS006774
000394     IF TCAEC-TTFIG = 'BCNIB' OR 'BCRCL'
000394        MOVE W-CIST       TO NAPOS-CIST
APV200        IF MOVP-NNDGSET GREATER SPACES
000394           MOVE MOVP-NNDGSET TO NAPOS-NNDGSET
APV200        ELSE
APV200           MOVE MOVP-NNDGPART   TO NAPOS-NNDGSET
APV200        END-IF
APE001*SI CARTA CONTO
APE001     IF MOVP-CDPZAPP = CONFG-FILIALE-CARTA
APE001        AND W-TPCOLL = 'O'
000377        MOVE MOVP-LRRIFB      TO NAPOS-IDENT
APE001        PERFORM 0910-LEGGI-TBANAPOS-CARTA
APE001           THRU 0910-LEGGI-TBANAPOS-CARTA-END
APE001     ELSE
000394        PERFORM 0910-LEGGI-TBANAPOS
000394           THRU 0910-LEGGI-TBANAPOS-END
APE001     END-IF
000394        IF L-ERR-ERR
000394           GO TO 0819-AMOVC-DA-TTCAE-END
000394        END-IF
000394        MOVE NAPOS-CABIBCA TO MOVC-CODABI
000394     END-IF
000394     IF TCAEC-TTFIG = 'BCNIB' OR 'BCNTG'
BPL056        IF WRK-PAETG NOT = 'SI'
000394           MOVE W-CIST       TO NAPOS-CIST
000394           MOVE 'ZOR031801'  TO W-DECOD
000394           COPY ZMZINDIR.
000394           MOVE MOD(M-I(IND1):M-L(IND1)) TO NAPOS-NNDGSET
APE001*NO CARTA CONTO TRATTASI DI BANCA
000394           PERFORM 0910-LEGGI-TBANAPOS
000394              THRU 0910-LEGGI-TBANAPOS-END
000394           IF L-ERR-ERR
000394              GO TO 0819-AMOVC-DA-TTCAE-END
000394           END-IF
000394           MOVE NAPOS-CSIGPEND TO MOVC-CSIGPAE
000394                                  MOVC-CSIGPAEMIT
BPL056        ELSE
BPL056           MOVE 'ZRA091301'     TO W-DECOD
BPL056           COPY ZMZINDIR.
BPL056           MOVE MOD(M-I(IND1):M-L(IND1)) TO MOVC-CSIGPAE
BPL056                                            MOVC-CSIGPAEMIT
BPL056        END-IF
000394     END-IF
BPO083
BPO083     IF TCAEC-TTFIG = 'BCRIB'
BPO083        MOVE 'ZRA091301'     TO W-DECOD
BPO083        COPY ZMZINDIR.
BPO083        IF MOD(M-I(IND1):M-L(IND1)) NOT = 'IT'
BPO083           MOVE MOD(M-I(IND1):M-L(IND1)) TO MOVC-CSIGPAE
BPO083                                            MOVC-CSIGPAEMIT
BPO083        ELSE
BPO083           GO TO 0819-AMOVC-DA-TTCAE-END
BPO083        END-IF
BPO083     END-IF


000394     MOVE DCLTBAMOVC          TO WRK-DCLTBAMOVC
"     *-------------------------------MEMORIZZO UN RECORD AMOVC --      TS006775
"                                                                       TS006776
"          MOVE SPACES                        TO W-F-EX                 TS006777
000142     MOVE ZEROES                        TO MOVC-NPRGRIGA          TS003031
"          PERFORM 1090-INTAB-TTCAU-98                                  TS006778
"             THRU 1090-INTAB-TTCAU-98-END                              TS006779
"              VARYING INDC FROM 1 BY 1                                 TS006780
"               UNTIL INDC > 50                                         TS006781
"                 OR L-ERR-ERR  OR W-EXIT                               TS006783
"          IF L-ERR-ERR  OR W-EXIT                                      TS006784
"             GO TO 0819-AMOVC-DA-TTCAE-END                             TS006785
"          END-IF.                                                      TS006786
000394*----------- PER QUESTI TIPI DI FIGURA IL RECORD VIENE DUPLICATO
000394*----------- VARIANDO ALCUNI DATI
000394     IF TCAEC-TTFIG = 'BCRSG' OR 'BCRCL'
000394        INITIALIZE                    DCLTBAMOVC
000394        MOVE WRK-DCLTBAMOVC           TO DCLTBAMOVC
000394        MOVE W-CIST                   TO NAPOS-CIST
000394        MOVE MOVP-NNDGSET             TO NAPOS-NNDGSET
APE001*NO CARTA CONTO
000394        PERFORM 0910-LEGGI-TBANAPOS
000394           THRU 0910-LEGGI-TBANAPOS-END
000394        IF L-ERR-ERR
000394           GO TO 0819-AMOVC-DA-TTCAE-END
000394        END-IF
000394        MOVE NAPOS-CSIGPEND           TO MOVC-CSIGPAE
000394        MOVE 2                        TO MOVC-TCODCAU
000394        MOVE SPACES                   TO MOVC-CSIGPAEMIT
000394        IF TCAEC-TTFIG = 'BCRSG'
000394           IF MOVC-VMATRICE(1:4) = '7403'
000419*             MOVE '7421'             TO MOVC-VMATRICE
000419              MOVE '7451'             TO MOVC-VMATRICE
000394           ELSE
000394              IF MOVC-VMATRICE(1:4) = '7433'
000419*                MOVE '7451'          TO MOVC-VMATRICE
000419                 MOVE '7421'          TO MOVC-VMATRICE
000394              END-IF
000394           END-IF
000394        ELSE
000394           IF MOVC-VMATRICE(1:4) = '7403'
000419*             MOVE '7416'             TO MOVC-VMATRICE
000419              MOVE '7441'             TO MOVC-VMATRICE
000394           ELSE
000394              IF MOVC-VMATRICE(1:4) = '7433'
000419*                MOVE '7441'          TO MOVC-VMATRICE
000419                 MOVE '7416'          TO MOVC-VMATRICE
000394              END-IF
000394           END-IF
000394        END-IF
000394        MOVE 'ZOR031801'              TO W-DECOD
000394        COPY ZMZINDIR.
000394        MOVE MOD(M-I(IND1):M-L(IND1)) TO NAPOS-NNDGSET
000394        MOVE W-CIST                   TO NAPOS-CIST
APE001*SI CARTA CONTO ???
000394        PERFORM 0910-LEGGI-TBANAPOS
000394           THRU 0910-LEGGI-TBANAPOS-END
000394        IF L-ERR-ERR
000394           GO TO 0819-AMOVC-DA-TTCAE-END
000394        END-IF
000394        MOVE NAPOS-CABIBCA            TO MOVC-CCAUIC
000394                                         MOVC-CODABI
000394
000419        EVALUATE MOVC-TMOVCAU
000419                 WHEN 'I'
000419                    MOVE 'E'          TO MOVC-TMOVCAU
000419                 WHEN'E'
000419                    MOVE 'I'          TO MOVC-TMOVCAU
000419        END-EVALUATE
000394*-------------------------------MEMORIZZO UN RECORD AMOVC --
000394        MOVE SPACES                        TO W-F-EX
000394        MOVE ZEROES                        TO MOVC-NPRGRIGA
000394        PERFORM 1090-INTAB-TTCAU-98
000394           THRU 1090-INTAB-TTCAU-98-END
000394            VARYING INDC FROM 1 BY 1
000394             UNTIL INDC > 50
000394               OR L-ERR-ERR  OR W-EXIT
000394        IF L-ERR-ERR  OR W-EXIT
000394           GO TO 0819-AMOVC-DA-TTCAE-END
000394        END-IF
000394     END-IF.

000446     MOVE WRK-N-M-2     TO N-M-2.
"                                                                       TS006787
"      0819-AMOVC-DA-TTCAE-END.                                         TS006788
000092     EXIT.                                                        TS006789
                                                                        TS006790
       0820-CERCA-AMOVP.
           IF WS-TAB-TBAMOVP(INDP) = SPACES
              MOVE 36                            TO INDP
           ELSE
              MOVE WS-TAB-TBAMOVP(INDP)          TO DCLTBAMOVP
              IF MOVP-NPRGMOVP = W-NPRGMOVP-CERCA AND
                 MOVP-NSUBMOVP = W-NSUBMOVP-CERCA
                 MOVE SPACES      TO MOVP-NON-TROVATO
              END-IF
           END-IF.
       0820-CERCA-AMOVP-END.
           EXIT.
                                                                        TS006790
000142 0820-CERCA-AMOVC.
000142     IF WS-TAB-TBAMOVC(INDC) = SPACES
000142        MOVE 50                            TO INDC
000142     ELSE
000142        MOVE WS-TAB-TBAMOVC(INDC)          TO DCLTBAMOVC
000142        IF MOVC-NPRGMOVP = W-NPRGMOVP-CERCA AND
000142           MOVC-NSUBMOVP = W-NSUBMOVP-CERCA AND
000142           WS-TAB-CAUSALE-FISSA(INDC) = 'S'
000142           MOVE SPACES      TO MOVC-NON-TROVATO
000142        END-IF
000142     END-IF.
000142 0820-CERCA-AMOVC-END.
000142     EXIT.
                                                                        TS006805
000092*--------------------------------------------------               TS006806
"      0821-LEGGI-TTCAEC.                                               TS006807
"     *--------------------------------------------------               TS006808
"                                                                       TS006809
"          EXEC SQL INCLUDE ZMS27201 END-EXEC                           TS006810
"                                                                       TS006811
"          IF NOT W-SQL-OK                                              TS006812
"             AND NOT W-SQL-NON-TROVATO                                 TS006812
"                 MOVE 8                          TO W-FLAG-ERR         TS006813
"                 MOVE '9999'                     TO W-COD-ERR          TS006814
"                 MOVE 'TTCAEC  '                 TO L-NOME-TABELLA     TS006815
"                 MOVE W-SQLCODE                  TO L-CODICE-SQL       TS006816
"                 MOVE 'ZMBSVIL0'                 TO L-MODULO           TS006817
"                 MOVE '0821-LEGGI-TTCAEC'        TO L-SUB-MODULO       TS006818
"                 PERFORM 9999-GESTIONE-ERRORE                          TS006819
"                   THRU 9999-GESTIONE-ERRORE-END                       TS006820
"          END-IF.                                                      TS006821
"                                                                       TS006822
"      0821-LEGGI-TTCAEC-END.                                           TS006823
000092     EXIT.                                                        TS006824
                                                                        TS006825
000394 0822-COMPONI-FIGURA.
000394     PERFORM 0616-NDG-ORDINANTE
000394        THRU 0616-NDG-ORDINANTE-END
000394*------------------ SE SOTTOCONTO NON RESIDENTE
000394     IF ABSC-FRSDSTC = 2
000394        IF WRK-WORK-CTIPSTC NOT = 101 AND 116
000394*-------------------------------------- REGOLATO CON EBA O NO.
000394           IF WRK-CAU-2000-SWFNDG = 'EBAX'
000394              MOVE 'BCNEB'             TO TCAEC-TTFIG
000394              MOVE W-CIST              TO WRK-CABIBCA
000394           ELSE
000394*------------------------------------------ CLIENTE O BANCA
000394              IF ABSC-FRSTNDG = 2
000394                 MOVE 'BCNCL'          TO TCAEC-TTFIG
000394              ELSE
000394                 MOVE 'CLNCL'          TO TCAEC-TTFIG
000394              END-IF
000394           END-IF
000394        END-IF
000394     END-IF
000394
000394     IF ABSC-FRSDSTC = 1
000434     OR = 6
000394        IF WRK-WORK-CTIPSTC = 101 OR 116
000394           MOVE 'BCRSG'                TO TCAEC-TTFIG
000394        ELSE
000394           MOVE 'BCRCL'                TO TCAEC-TTFIG
000394        END-IF
000394     END-IF
000394
000394*--------------- DISTINGUO SE REGOLATO CON BANCA ITALIA O NO
000394     IF WRK-WORK-CTIPSTC = 112 OR 103
000394        IF WRK-CABIBCA NOT  = 1000
000394           MOVE 'BCRIB'                TO TCAEC-TTFIG
000394        ELSE
000394           MOVE 'BCRTG'                TO TCAEC-TTFIG
000394        END-IF
000394     END-IF
000394
000394     MOVE WRK-TTFIG(1:3)               TO TCAEC-TTFIG(1:3).
000394
000394 0822-COMPONI-FIGURA-END.
000394     EXIT.

       0830-TRATTA-TTCECO.
           MOVE 'ZEC110101'                      TO W-DECOD
           MOVE W-XXNN-N                         TO C
           MOVE W-DEC-COORD                      TO W-COORD-CEC
           COPY ZMZINDIR.
           IF MOD(M-I(IND1):M-L(IND1)) = SPACES
              MOVE 'S'                           TO W-NO-TTCECO
              GO TO 0830-TRATTA-TTCECO-END
           END-IF.
           MOVE 'ZEC110201'                      TO W-DECOD
           MOVE W-XXNN-N                         TO C
           MOVE W-DEC-COORD                      TO W-COORD-CEC
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE W-COM-NUM                        TO W-NUM-TEST
           MOVE IND1                             TO W-CEC
           IF W-NUM-TEST = ZEROS
              GO TO 0830-TRATTA-TTCECO-END
           END-IF.
           IF W-NUM-TEST NOT = 1 AND 2 AND 3 AND 4
              IF M-S(W-CEC) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 MOVE 'E'                        TO M-S(W-CEC)
                 MOVE W-COORD-CEC                TO W-MOD-ERR
                 MOVE M-M(W-CEC)                 TO W-MAP-ERR
                 MOVE 2                          TO W-FLAG-ERR
                 MOVE 'S038'                     TO W-COD-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
      *-----------------------------------------------------------
      *         TRATTASI DI INTERESSI
      *-----------------------------------------------------------
           IF W-NUM-TEST = 4
           AND WRK-ZEC1131 NOT = 'TI'
              MOVE NCSVE-TTCECO(IND5)            TO W-XXNN
              PERFORM 0850-INTERESSI
                 THRU 0850-INTERESSI-END
CAR443        IF W-EXIT
CAR443           GO TO 0830-TRATTA-TTCECO-END
CAR443        END-IF
           END-IF.
           IF W-NUM-TEST = 4     AND
              WRK-ZEC1131 = 'TI' AND
              NCSVE-TTDCA (IND5) (1:2) = 'DV'
              PERFORM 0851-INTERESSI-TI
                 THRU 0851-INTERESSI-TI-END
CAR443        IF W-EXIT
CAR443           GO TO 0830-TRATTA-TTCECO-END
CAR443        END-IF
           END-IF.
      *----------------------------- SE ZEC112101/08(SIGLA DIVISA) = 3
      *----------------------------- CONTROLLA ZDV130101/08
           IF W-NUM-TEST = 3
              MOVE NCSVE-TTCECO(IND5)     TO W-XXNN
              PERFORM 0852-PERMILLARE
                 THRU 0852-PERMILLARE-END
           END-IF.
           IF W-NUM-TEST = 2 OR 1
              MOVE NCSVE-TTCECO(IND5)            TO W-XXNN
              PERFORM 0854-SPESA-FISSA
                 THRU 0854-SPESA-FISSA-END
           END-IF.
           IF W-NUM-TEST = 2
              MOVE NCSVE-TTCECO(IND5)            TO W-XXNN
              PERFORM 0856-SPESA-FISSA-VALUTA
                 THRU 0856-SPESA-FISSA-VALUTA-END
      *--------------------------------- SE ZEC112101/08(SIGLA DIVISA)
      *--------------------------------- NON E' VALORIZZATA, ELABORA UN
      *--------------------------------- ALTRO CONTO ECONOMICO
              IF WRK-DIVISA-ERR = 'SI'
                 GO TO 0830-TRATTA-TTCECO-END
              END-IF
290897        MOVE ZEROES    TO  W-COM-QTA
           END-IF.
           IF W-NUM-TEST = 1 AND
              WRK-ZEC1131 NOT GREATER SPACES
000172*--------------- SPESE FISSE LIRE /EURO
              MOVE NCSVE-TTCECO(IND5)            TO W-XXNN
              PERFORM 0858A-SPESA-FISSA-LIRE
                 THRU 0858A-SPESA-FISSA-LIRE-END
290897        MOVE ZEROES    TO  W-COM-QTA
           END-IF.
      *------------------------------------------ ELABORA "TC"
           IF W-NUM-TEST = 1 AND
              WRK-ZEC1131 = 'TC'
              PERFORM 0858B-SPESA-TC
                 THRU 0858B-SPESA-TC-END
              MOVE NCSVE-TTCECO(IND5)       TO W-XXNN
              IF W-COM-QTA GREATER ZEROES
000172*          PERFORM 0858A-SPESA-FISSA-LIRE
000172*             THRU 0858A-SPESA-FISSA-LIRE-END
000172           PERFORM 0856-SPESA-FISSA-VALUTA
000172              THRU 0856-SPESA-FISSA-VALUTA-END
              ELSE
                 MOVE 'ZEC110601'  TO W-DECOD
                 MOVE W-XXNN-N     TO C
                 COPY ZMZINDIR.
                 MOVE ZEROES       TO W-COM1
                 COPY ZMZFMMOD.
                 MOVE SPACES       TO M-S(IND1)
                 MOVE W-DECSIGBASE TO WRK-NDCLDIV
                 PERFORM 0838-CNTL-DECIMALI
                    THRU 0838-CNTL-DECIMALI-END
                 IF M-S(IND1) = 'E'
                    GO TO 0830-TRATTA-TTCECO-END
                 END-IF
070797           MOVE W-DECSIGBASE TO WCM-DECIMALI
"                MOVE IND1         TO WCM-IND-DEC
070797           COPY ZMZDECIM.
              END-IF
              MOVE ZEROES          TO W-COM-QTA
           END-IF.
      *------------------------------------------ ELABORA "TS"
           IF W-NUM-TEST = 1 AND
              WRK-ZEC1131 = 'TS'
              PERFORM 0858C-SPESA-TS
                 THRU 0858C-SPESA-TS-END
              MOVE NCSVE-TTCECO(IND5)         TO W-XXNN
              IF W-COM-QTA GREATER ZEROES
                 PERFORM 0858A-SPESA-FISSA-LIRE
                    THRU 0858A-SPESA-FISSA-LIRE-END
              ELSE
                 MOVE 'ZEC110601'  TO W-DECOD
                 MOVE W-XXNN-N     TO C
                 COPY ZMZINDIR.
                 MOVE ZEROES       TO W-COM1
                 COPY ZMZFMMOD.
                 MOVE SPACES       TO M-S(IND1)
                 MOVE W-DECSIGBASE TO WRK-NDCLDIV
                 PERFORM 0838-CNTL-DECIMALI
                    THRU 0838-CNTL-DECIMALI-END
                 IF M-S(IND1) = 'E'
                    GO TO 0830-TRATTA-TTCECO-END
                 END-IF
070797           MOVE W-DECSIGBASE TO WCM-DECIMALI
"                MOVE IND1         TO WCM-IND-DEC
070797           COPY ZMZDECIM.
              END-IF
              MOVE ZEROES          TO W-COM-QTA
           END-IF.
      *------------------------------------------ ELABORA "TN"
           IF W-NUM-TEST = 1 AND
              WRK-ZEC1131 = 'TN'
              PERFORM 0858F-SPESA-TN
                 THRU 0858F-SPESA-TN-END
              MOVE NCSVE-TTCECO(IND5)       TO W-XXNN
              IF W-COM-QTA GREATER ZEROES
                 PERFORM 0858A-SPESA-FISSA-LIRE
                    THRU 0858A-SPESA-FISSA-LIRE-END
              ELSE
                 MOVE 'ZEC110601'  TO W-DECOD
                 MOVE W-XXNN-N     TO C
                 COPY ZMZINDIR.
                 MOVE ZEROES       TO W-COM1
                 COPY ZMZFMMOD.
                 MOVE SPACES       TO M-S(IND1)
                 MOVE W-DECSIGBASE TO WRK-NDCLDIV
                 PERFORM 0838-CNTL-DECIMALI
                    THRU 0838-CNTL-DECIMALI-END
                 IF M-S(IND1) = 'E'
                    GO TO 0830-TRATTA-TTCECO-END
                 END-IF
070797           MOVE W-DECSIGBASE TO WCM-DECIMALI
"                MOVE IND1         TO WCM-IND-DEC
070797           COPY ZMZDECIM.
              END-IF
              MOVE ZEROES          TO W-COM-QTA
           END-IF.
       0830-TRATTA-TTCECO-END.
           EXIT.
       0832-SOTTRAI-DATA.
           MOVE MOVE-DTINIZ                      TO W-NUM-DT
           MOVE W-COM-DT                         TO DT-CMPI
           MOVE 'AAAAMMGG'                       TO DT-FINP
           MOVE 'GGGGGGGG'                       TO DT-FOUT
           PERFORM 0710-CHIAMA-DATA
              THRU 0710-CHIAMA-DATA-END
           IF DT-RC NOT = 0
              IF M-S(W-CEC) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 MOVE 'E'                        TO M-S(W-CEC)
                 MOVE W-COORD-CEC                TO W-MOD-ERR
                 MOVE M-M(W-CEC)                 TO W-MAP-ERR
                 MOVE 2                          TO W-FLAG-ERR
                 MOVE 'S040'                     TO W-COD-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
           MOVE DT-CMPI                          TO W-COM-DT
           MOVE W-NUM-DT                         TO W-COM-DATA-A
           MOVE MOVE-DTFIN                       TO W-NUM-DT
           MOVE W-COM-DT                         TO DT-CMPI
           MOVE 'AAAAMMGG'                       TO DT-FINP
           MOVE 'GGGGGGGG'                       TO DT-FOUT
           PERFORM 0710-CHIAMA-DATA
              THRU 0710-CHIAMA-DATA-END
           IF DT-RC NOT = 0
              IF M-S(W-CEC) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 MOVE 'E'                        TO M-S(W-CEC)
                 MOVE W-COORD-CEC                TO W-MOD-ERR
                 MOVE M-M(W-CEC)                 TO W-MAP-ERR
                 MOVE 2                          TO W-FLAG-ERR
                 MOVE 'S041'                     TO W-COD-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
           MOVE DT-CMPI                          TO W-COM-DT
           MOVE W-NUM-DT                         TO W-COM-DATA-B
           MOVE ZEROES TO WRK-GGSPS.
           COMPUTE WRK-GGSPS = W-COM-DATA-B - W-COM-DATA-A.
       0832-SOTTRAI-DATA-END.
           EXIT.
       0833-LEGGI-ADIV.
           EXEC SQL INCLUDE ZMS10101 END-EXEC
           IF W-SQL-NON-TROVATO
              IF M-S(W-DIV) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 MOVE 'E'                        TO M-S(W-DIV)
                 MOVE W-COORD-DIV                TO W-MOD-ERR
                 MOVE M-M(W-DIV)                 TO W-MAP-ERR
                 MOVE 2                          TO W-FLAG-ERR
                 MOVE 'S042'                     TO W-COD-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           ELSE
              IF NOT W-SQL-OK
                 MOVE 8                          TO W-FLAG-ERR
                 MOVE '9999'                     TO W-COD-ERR
                 MOVE 'TBADIV  '                 TO L-NOME-TABELLA
                 MOVE W-SQLCODE                  TO L-CODICE-SQL
                 MOVE 'ZMBSVIL0'                 TO L-MODULO
                 MOVE '0833-LEGGI-ADIV '         TO L-SUB-MODULO
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
       0833-LEGGI-ADIV-END.
           EXIT.
       0834-VEDI-SE-INTAB.
           IF L-DIV-KEY(IND9) = DIV-CISO
              MOVE 'SI'                          TO W-EXPERFORM
              MOVE 'SI'                          TO W-TROVATA-DIV
              MOVE L-DCLTBADIV(IND9)             TO DCLTBADIV
           ELSE
              IF L-DCLTBADIV(IND9) NOT > SPACES
                 PERFORM 0833-LEGGI-ADIV
                    THRU 0833-LEGGI-ADIV-END
                 MOVE DCLTBADIV                  TO L-DCLTBADIV(IND9)
                 MOVE 'SI'                       TO W-EXPERFORM
                 MOVE 'SI'                       TO W-TROVATA-DIV
           END-IF.
       0834-VEDI-SE-INTAB-END.
           EXIT.
       0835-CALC-COMO-DT.
           MOVE MOVE-DTINIZ                      TO W-NUM-DT
           MOVE W-COM-DT                         TO DT-CMPI
           MOVE 'AAAAMMGG'                       TO DT-FINP
           MOVE 'GGGGGGGG'                       TO DT-FOUT
           PERFORM 0710-CHIAMA-DATA
              THRU 0710-CHIAMA-DATA-END
           IF DT-RC NOT = 0
              IF M-S(W-CEC) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 MOVE 'E'                        TO M-S(W-CEC)
                 MOVE W-COORD-CEC                TO W-MOD-ERR
                 MOVE M-M(W-CEC)                 TO W-MAP-ERR
                 MOVE 2                          TO W-FLAG-ERR
                 MOVE 'S043'                     TO W-COD-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
           MOVE DT-CMPI                          TO W-COM-DT
           MOVE W-NUM-DT                         TO W-COM-DATA-A
           MOVE MOVE-DTFIN                       TO W-NUM-DT
           MOVE W-COM-DT                         TO DT-CMPI
           MOVE 'AAAAMMGG'                       TO DT-FINP
           MOVE 'GGGGGGGG'                       TO DT-FOUT
           PERFORM 0710-CHIAMA-DATA
              THRU 0710-CHIAMA-DATA-END
           IF DT-RC NOT = 0
              IF M-S(W-CEC) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 MOVE 'E'                        TO M-S(W-CEC)
                 MOVE W-COORD-CEC                TO W-MOD-ERR
                 MOVE M-M(W-CEC)                 TO W-MAP-ERR
                 MOVE 2                          TO W-FLAG-ERR
                 MOVE 'S044'                     TO W-COD-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
           MOVE DT-CMPI                          TO W-COM-DT
           MOVE W-NUM-DT                         TO W-COM-DATA-B
           MOVE W-COM-NUM-DT1                    TO W-NUM-DT
           MOVE W-COM-DT                         TO DT-CMPI
           MOVE 'AAAAMMGG'                       TO DT-FINP
           MOVE 'GGGGGGGG'                       TO DT-FOUT
           PERFORM 0710-CHIAMA-DATA
              THRU 0710-CHIAMA-DATA-END
           IF DT-RC NOT = 0
              IF M-S(W-CEC) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 MOVE 'E'                        TO M-S(W-CEC)
                 MOVE W-COORD-CEC                TO W-MOD-ERR
                 MOVE M-M(W-CEC)                 TO W-MAP-ERR
                 MOVE 2                          TO W-FLAG-ERR
                 MOVE 'S045'                     TO W-COD-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
           MOVE DT-CMPI                          TO W-COM-DT.
           MOVE W-NUM-DT                         TO W-COM-DATA-C.
           COMPUTE W-COM-NUM-DT2 = W-COM-DATA-C - W-COM-DATA-A.
           COMPUTE W-COM-NUM-DT3 = W-COM-DATA-B - W-COM-DATA-C.
       0835-CALC-COMO-DT-END.
           EXIT.
       0836-ABBINA2.
           MOVE 'ZDI040101'                      TO W-DECOD
           MOVE IND8                             TO C
           COPY ZMZINDIR.
           IF MOD(M-I(IND7):M-L(IND7)) = MOD(M-I(IND1):M-L(IND1))
              MOVE 'SI'                          TO W-EXPERFORM
           END-IF.
       0836-ABBINA2-END.
           EXIT.
       0837-LEGGI-ALICMB.
           EXEC SQL INCLUDE ZMS10601 END-EXEC
           IF NOT W-SQL-OK
000172        AND NOT W-SQL-NON-TROVATO
              MOVE 8                             TO W-FLAG-ERR
              MOVE '9999'                        TO W-COD-ERR
              MOVE 'TBALICMB'                    TO L-NOME-TABELLA
              MOVE W-SQLCODE                     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                    TO L-MODULO
              MOVE '0837-LEGGI-ALICMB'           TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       0837-LEGGI-ALICMB-END.
           EXIT.
      *---------------------------------------------------------------*
      * CONTROLLA I DECIMALI DIGITATI CON QUELLI PREVISTI(WRK-NDCLDIV)*
      *---------------------------------------------------------------*
       0838-CNTL-DECIMALI.
           IF M-D(IND1) > WRK-NDCLDIV
              COMPUTE W-DIFF-DEC = M-D(IND1) - WRK-NDCLDIV
              MOVE ZEROES                    TO WRK-COM-VALORE
              COMPUTE DA1 = M-I(IND1) + M-L(IND1) - W-DIFF-DEC
              COMPUTE DA2 = 19 - W-DIFF-DEC
              MOVE MOD(DA1:W-DIFF-DEC)
                               TO WRK-COM-VALORE-X(DA2:W-DIFF-DEC)
              IF WRK-COM-VALORE GREATER ZEROES
                 MOVE 'E'            TO M-S(IND1)
                 MOVE 'S101'         TO W-COD-ERR
                 MOVE M-M(IND1)      TO W-MAP-ERR
                 MOVE W-DEC-COORD    TO W-MOD-ERR
                 IF M-E(IND1) = 'E'
                    MOVE 'D'         TO M-E(IND1)
                 END-IF
                 IF M-E(IND1) = 'S'
                    MOVE 'L'         TO M-E(IND1)
                 END-IF
                 IF M-E(IND1) = 'Q'
                    MOVE 'V'         TO M-E(IND1)
                 END-IF
                 IF M-E(IND1) = 'W'
                    MOVE '*'         TO M-E(IND1)
                 END-IF
                 MOVE 'SI'           TO W-FLAG-EXIT
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
       0838-CNTL-DECIMALI-END.
           EXIT.
       0850-INTERESSI.
           IF (NCSVE-TTTAS (IND5) = SPACES) OR
              (NCSVE-TTDCA (IND5) = SPACES) OR
              (NCSVE-TTMCO (IND5) = ZEROES)
              IF M-S(W-CEC) NOT = SPACES
CAR443*          NEXT SENTENCE
CAR443           GO TO 0850-INTERESSI-END
              ELSE
                 MOVE 'E'                        TO M-S(W-CEC)
                 MOVE W-COORD-CEC                TO W-MOD-ERR
                 MOVE M-M(W-CEC)                 TO W-MAP-ERR
                 MOVE 2                          TO W-FLAG-ERR
                 MOVE 'S046'                     TO W-COD-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
                 GO TO 0850-INTERESSI-END
              END-IF
           END-IF.
           IF NCSVE-TTDCA (IND5) = 'ORD'
              MOVE 'ZOR030201'                TO W-DECOD
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVE-CDIVCAP
              MOVE 'ZOR030901'                TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVE-ICABCAP = W-COM-NUM / (10 ** M-D(IND1))
              MOVE 'ZOR030501'                TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVE-ICAPSPS = W-COM-NUM / (10 ** M-D(IND1))
              MOVE 'ZOR030401'                TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                  TO W-COM-NUM-A
           END-IF.
           IF NCSVE-TTDCA (IND5) (1:2) = 'DV'
              MOVE NCSVE-TTDCA (IND5)         TO W-XXN
              MOVE 'ZDI040101'                TO W-DECOD
              MOVE W-XXN-N                    TO C
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVE-CDIVCAP
              MOVE 'ZDI042601'                TO W-DECOD
              MOVE W-XXN-N                    TO C
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))   TO W-SEGNO
              IF W-SEGNO = 'P'
                 MOVE 'ZDI040901'                TO W-DECOD
                 MOVE W-XXN-N                    TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 COMPUTE W-COM-NUM-DEC1 = W-COM-NUM / 10 ** M-D(IND1)
                 MOVE 'ZDI042501'                TO W-DECOD
                 MOVE W-XXN-N                    TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 COMPUTE W-COM-NUM-DEC2 = W-COM-NUM / 10 ** M-D(IND1)
                 COMPUTE MOVE-ICABCAP = W-COM-NUM-DEC1 +
                         (W-COM-NUM-DEC1 * W-COM-NUM-DEC2 / 100)
              ELSE
                 IF W-SEGNO = 'M'
                    MOVE 'ZDI040901'                TO W-DECOD
                    MOVE W-XXN-N                    TO C
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    COMPUTE W-COM-NUM-DEC1 =
                            W-COM-NUM / 10 ** M-D(IND1)
                    MOVE 'ZDI042501'                TO W-DECOD
                    MOVE W-XXN-N                    TO C
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    COMPUTE W-COM-NUM-DEC2 =
                            W-COM-NUM / 10 ** M-D(IND1)
                    COMPUTE MOVE-ICABCAP = W-COM-NUM-DEC1 -
                         (W-COM-NUM-DEC1 * W-COM-NUM-DEC2 / 100)
                 ELSE
                    IF W-SEGNO = SPACES
                       MOVE 'ZDI040901'                TO W-DECOD
                       MOVE W-XXN-N                    TO C
                       COPY ZMZINDIR.
                       COPY ZMZVALNM.
                       COMPUTE MOVE-ICABCAP =
                            W-COM-NUM / 10 ** M-D(IND1)
                    END-IF
                 END-IF
              END-IF
              MOVE 'ZDI040401'                TO W-DECOD
              MOVE W-XXN-N                    TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVE-ICAPSPS = W-COM-NUM / (10 ** M-D(IND1))
              MOVE 'ZDI040301'                TO W-DECOD
              MOVE W-XXN-N                    TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                  TO W-COM-NUM-A
           END-IF.
           IF NCSVE-TTTAS (IND5) (1:2) = 'TT'
              MOVE NCSVE-TTTAS (IND5)         TO W-XXN
              MOVE 'ZFI071101'                TO W-DECOD
              MOVE W-XXN-N                    TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                  TO MOVE-DTFIN
              MOVE 'ZFI071001'                TO W-DECOD
              MOVE W-XXN-N                    TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                  TO MOVE-DTINIZ
      *--------------------------------------- MOVE-DTFIN = ZFI0711
              IF MOVE-DTFIN NOT GREATER ZEROES
                 MOVE 'ZFI071201'             TO W-DECOD
                 MOVE W-XXN-N                 TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 IF W-COM-NUM NOT GREATER ZEROES
                    MOVE 'E'                  TO M-S(W-CEC)
                    MOVE W-COORD-CEC          TO W-MOD-ERR
                    MOVE M-M(W-CEC)           TO W-MAP-ERR
                    MOVE 2                    TO W-FLAG-ERR
                    MOVE 'S089'               TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                    GO TO 0850-INTERESSI-END
                 END-IF
                 COMPUTE MOVE-GGSPS = W-COM-NUM / 10 ** M-D(IND1)
              END-IF
              MOVE 'ZFI070601'                TO W-DECOD
              MOVE W-XXN-N                    TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVE-RRAP = W-COM-NUM / 1000000000
           END-IF.

           MOVE 'ZEC110501'     TO W-DECOD
           MOVE W-XXNN-N        TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE MOVE-ISPSVAL = W-COM-NUM / 10 ** M-D(IND1)

           MOVE W-CIST          TO DIV-CIST
           MOVE MOVE-CDIVCAP    TO DIV-CISO
           PERFORM 0870-TRATTA-DIVISA
              THRU 0870-TRATTA-DIVISA-END.

           MOVE DIV-NDCLDIV  TO WRK-NDCLDIV
           PERFORM 0838-CNTL-DECIMALI
              THRU 0838-CNTL-DECIMALI-END
           IF M-S(IND1) = 'E'
              GO TO 0850-INTERESSI-END
           END-IF
070797     MOVE DIV-NDCLDIV  TO WCM-DECIMALI
"          MOVE IND1         TO WCM-IND-DEC
070797     COPY ZMZDECIM.

           IF M-S(W-DIV) = 'E'
              GO TO 0850-INTERESSI-END
           END-IF.
      *------------------------------------- ZFI071301/08 = DIV-FDVSINT
           MOVE 'ZFI071301'     TO W-DECOD
           MOVE W-XXN-N         TO C
           COPY ZMZINDIR.
120997     COPY ZMZVALNM.
120997     IF W-COM-NUM = ZEROES
              COMPUTE W-COM1 = DIV-FDVSINT * (10 ** M-D(IND1))
              COPY ZMZFMMOD.
              MOVE SPACES          TO M-S(IND1)
      *------------------------------------ MOVE-FDVSINT = DIV-FDVSINT
120997        MOVE DIV-FDVSINT     TO MOVE-FDVSINT
120997     ELSE
      *------------------------------------ MOVE-FDVSINT = ZFI071301/08
120997        COMPUTE MOVE-FDVSINT = W-COM-NUM / (10 ** M-D(IND1))
120997     END-IF.

      *------------------------------------ MOVE-FDVSINT = DIV-FDVSINT
120997*    MOVE DIV-FDVSINT     TO MOVE-FDVSINT
      *--------------------------------------------------------------
      *       IMPORTO INTERESSI NON VALORIZZATO
      *--------------------------------------------------------------
           IF MOVE-ISPSVAL = 0
              IF MOVE-GGSPS NOT GREATER ZEROES
                 PERFORM 0832-SOTTRAI-DATA
                    THRU 0832-SOTTRAI-DATA-END
                 MOVE WRK-GGSPS TO MOVE-GGSPS
              END-IF
              IF MOVE-FDVSINT = 1 OR MOVE-DTINIZ = ZEROES
                 MOVE 36000         TO W-COM-NUM-B
              ELSE
                 IF MOVE-FDVSINT = 2
                    PERFORM 0831-VEDI-SE-BISESTILE
                       THRU 0831-VEDI-SE-BISESTILE-END
                 END-IF
              END-IF
              IF W-COM-NUM-B GREATER ZEROES
000241*          COMPUTE MOVE-ISPSVAL = (MOVE-ICAPSPS * MOVE-GGSPS *
000241           COMPUTE WRK-ISPSVAL-TRANSIT-P =
000241                                   (MOVE-ICAPSPS * MOVE-GGSPS *
                                         MOVE-RRAP) / W-COM-NUM-B
                 IF W-COM-NUM-A < 3
000241              MOVE WRK-ISPSVAL-TRANSIT-P
000241                          TO WRK-ISPSVAL-TRANSIT-A
                    COMPUTE W-DIFF = 3 - W-COM-NUM-A
                    COMPUTE MOVE-ISPSVAL =
CAR417*                  MOVE-ISPSVAL / 10 ** W-DIFF
CAR417                   WRK-ISPSVAL-TRANSIT-P / 10 ** W-DIFF
                    COMPUTE MOVE-ISPSVAL =
                         MOVE-ISPSVAL * 10 ** W-DIFF
000241              COMPUTE WRK-DIFFERENZA = WRK-ISPSVAL-TRANSIT-A
000241                                     - MOVE-ISPSVAL
000241              IF WRK-DIFFERENZA NOT = ZEROES
000241                 COMPUTE DA1 = W-COM-NUM-A + 1
000241                 IF WRK-DIFFERENZA-X(DA1:1) NOT < 5
000241                    COMPUTE MOVE-ISPSVAL = MOVE-ISPSVAL +
000241                        (1 / (10 ** W-COM-NUM-A))
000241                 END-IF
000241              END-IF
000241           ELSE
000241              MOVE WRK-ISPSVAL-TRANSIT-P TO MOVE-ISPSVAL
                 END-IF
                 MOVE 'ZEC110501'     TO W-DECOD
                 MOVE W-XXNN-N        TO C
                 COPY ZMZINDIR.
                 COMPUTE W-COM1 = MOVE-ISPSVAL  * (10 ** M-D(IND1))
                 COPY ZMZFMMOD.
                 MOVE SPACES          TO M-S(IND1)
              ELSE
                 MOVE ZEROES TO MOVE-ISPSVAL
              END-IF
      *------------ CALCOLO IMPORTO VALUTA ESPRESSO NELLA DIV.MOV.TO
000172*------------ALCUNE ISTRUZIONI SONO STATE ASTERISCATE E SOSTITUITE
000172*---------------------------------------  PER GLI ADEGUAMENTI EURO
              IF MOVP-CISO NOT = MOVE-CDIVCAP
000172*          COMPUTE MOVE-ISPSVAL =
000172*              (MOVE-ISPSVAL * MOVE-ICABCAP /
000172*               MOVP-ICABMOV)
                 MOVE W-CIST                  TO DIV-CIST
                 MOVE MOVP-CISO               TO DIV-CISO
                 PERFORM 0870-TRATTA-DIVISA
                    THRU 0870-TRATTA-DIVISA-END
                 MOVE DIV-NDCLDIV            TO W-COM-NUM-C
000172*          IF W-COM-NUM-C < 3
000172*             COMPUTE W-DIFF = 3 - W-COM-NUM-C
000172*             COMPUTE MOVE-ISPSVAL =
000172*                     MOVE-ISPSVAL / 10 ** W-DIFF
000172*             COMPUTE MOVE-ISPSVAL =
000172*                     MOVE-ISPSVAL * 10 ** W-DIFF
000172*          END-IF
000172*--------------------------------------CALCOLA L'IMPORTO IN VALUTA
000172*-----------------------------------------------CHIAMANDO ZMBCTV00
000172*-----------------------------------------IMPORTO SPESE INVALUTA
000172           INITIALIZE ZMWCTV00
000172           COMPUTE WCTV00-IMPORTO = MOVE-ISPSVAL * (10 ** 3)
000172*-----------------------------------------------------CAMBIO
000172           COMPUTE WCTV00-CAMBIO = MOVE-ICABCAP * (10 ** 7)
000172*------------------------------------------CAMBIO EQUIVALENTE
000172           COMPUTE WCTV00-CAMBIO-CTP = MOVP-ICABMOV * (10 ** 7)
000172           MOVE 7                  TO WCTV00-CAMBIO-CTP-DEC
000172           MOVE 6                  TO WCTV00-CAMBIO-CTP-INT
000172*--------------------CAMPO RISULTATO IMPORTO DI CONTROPARTITA
000172*------------------------SI ARROTONDA AI DECIMALI CISO DI AMOVP
000172           MOVE W-COM-NUM-C        TO WCTV00-CTVCP-DEC
000172           COMPUTE WCTV00-CTVCP-INT = 18 - WCTV00-CTVCP-DEC
000172*----------------------CODICE COMANDO
000172           MOVE 'CTVCP' TO        WCTV00-COMANDO
000172           PERFORM 0869-CALCOLA-CONTROVALORI
000172              THRU 0869-CALCOLA-CONTROVALORI-END
000172           MOVE WCTV00-CTVCP        TO WRK-ISPSVAL-TRANSIT
000172           MOVE WRK-ISPSVAL-TRANSIT TO MOVE-ISPSVAL
              END-IF
      *--------------------------------------------------------------
      *   IMPORTO INTERESSI DIGITATO
      *--------------------------------------------------------------
           ELSE
              MOVE 'ZFI071201'                TO W-DECOD
              MOVE W-XXN-N                    TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE W-COM-NUM                  TO MOVE-GGSPS
           END-IF.
      *--------------------------------------------------------------
      *   COMUNE PER INTERESSI
      *--------------------------------------------------------------
           MOVE 'ZEC111001'                   TO W-DECOD
           MOVE W-XXNN-N                      TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE W-COM-NUM-DEC = W-COM-NUM / 10 ** M-D(IND1)
      *--------------------------------------------------------------
      *   CALCOLO CTV CON CAMBIO CAPITALE SE CAMBIO COPERT.INT. = 0
      *--------------------------------------------------------------
           IF W-COM-NUM-DEC = 0
000172*       COMPUTE MOVE-ICTVSPS = MOVE-ISPSVAL * MOVP-ICABMOV
000172*       IF W-DECSIGBASE < 3
000172*          COMPUTE W-DIFF = 3 - W-DECSIGBASE
000172*          COMPUTE MOVE-ICTVSPS =
000172*               MOVE-ICTVSPS / 10 ** W-DIFF
000172*          COMPUTE MOVE-ICTVSPS =
000172*               MOVE-ICTVSPS * 10 ** W-DIFF
000172*       END-IF
000172*--------------------------------------CALCOLA CONTROVALORE DEGLI
000172*----------------------------------INTERESSI ESPRESSI NELLA DIVISA
000172*---------------------------------------LISTINO WRK-ICTVLISPS
000172*---------------------------------------DI CONTABILITA WRK-ICTVSPS
000172*----------------------------------------------CHIAMANDO ZMBCTV00
000172           INITIALIZE ZMWCTV00
000172*--------------------------------------------IMPORTO SPESEVALUTA
000172           COMPUTE WCTV00-IMPORTO = MOVE-ISPSVAL * (10 ** 3)
000172*-----------------------------------------------------CAMBIO
000172           COMPUTE WCTV00-CAMBIO = MOVP-ICABMOV * (10 ** 7)
000172*----------------------CODICE COMANDO
000172           MOVE 'CTVDC' TO        WCTV00-COMANDO
000172           PERFORM 0869-CALCOLA-CONTROVALORI
000172              THRU 0869-CALCOLA-CONTROVALORI-END
000172           MOVE WRK-DIVLIS            TO WRK-ICTVLISPS
000172           MOVE WRK-DIVCON            TO WRK-ICTVSPS
           ELSE
      *--------------------------------------------------------------
      *   CALCOLO CTV CON CAMBIO CAPITALE SE CAMBIO COPERT.INT. <> 0
      *--------------------------------------------------------------
000172*------------ALCUNE ISTRUZIONI SONO STATE ASTERISCATE E SOSTITUITE
000172*---------------------------------------  PER GLI ADEGUAMENTI EURO
000172*       COMPUTE MOVE-ICTVSPS = MOVE-ISPSVAL * W-COM-NUM-DEC
000172*       IF W-DECSIGBASE < 3
000172*          COMPUTE W-DIFF = 3 - W-DECSIGBASE
000172*          COMPUTE MOVE-ICTVSPS =
000172*               MOVE-ICTVSPS / 10 ** W-DIFF
000172*          COMPUTE MOVE-ICTVSPS =
000172*               MOVE-ICTVSPS * 10 ** W-DIFF
000172*       END-IF
000172        INITIALIZE ZMWCTV00
000172*-----------------------------------------------------CAMBIO
000172        MOVE '1110'                  TO COORD-4
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        MOVE W-COM-NUM             TO WCTV00-CAMBIO
000172*--------------------------------------------IMPORTO SPESEVALUTA
000172        COMPUTE WCTV00-IMPORTO = MOVE-ISPSVAL * (10 ** 3)
000172*----------------------CODICE COMANDO
000172        MOVE 'CTVDC' TO        WCTV00-COMANDO
000172        PERFORM 0869-CALCOLA-CONTROVALORI
000172           THRU 0869-CALCOLA-CONTROVALORI-END
000172        MOVE WRK-DIVLIS            TO WRK-ICTVLISPS
000172        MOVE WRK-DIVCON            TO WRK-ICTVSPS
           END-IF.
000172     MOVE WRK-ICTVSPS           TO MOVE-ICTVSPS
000172     MOVE WRK-ICTVLISPS         TO MOVE-ICTVLISPS
      *--------------------------------------------------------------
      *   COMUNE PER INTERESSI
      *--------------------------------------------------------------
           IF WRK-ZEC1131 NOT GREATER SPACES
              MOVE 'ZFI071201'     TO W-DECOD
              MOVE W-XXN-N         TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE MOVE-GGSPS      TO W-COM-NUM
              MOVE W-COM-NUM(DA1:) TO
                                     MOD(M-I(IND1):M-L(IND1))
           END-IF
           MOVE 'ZEC112901'        TO W-DECOD
           MOVE W-XXNN-N           TO C
           COPY ZMZINDIR.
           COMPUTE W-COM1 = MOVE-ISPSVAL * (10 ** M-D(IND1))
           COPY ZMZFMMOD.
           MOVE SPACES          TO M-S(IND1)
           MOVE W-CIST          TO DIV-CIST
           MOVE MOVP-CISO       TO DIV-CISO
           PERFORM 0870-TRATTA-DIVISA
              THRU 0870-TRATTA-DIVISA-END
           MOVE DIV-NDCLDIV  TO WRK-NDCLDIV
           PERFORM 0838-CNTL-DECIMALI
              THRU 0838-CNTL-DECIMALI-END
           IF M-S(IND1) = 'E'
              GO TO 0850-INTERESSI-END
           END-IF
070797     MOVE DIV-NDCLDIV  TO WCM-DECIMALI
"          MOVE IND1         TO WCM-IND-DEC
070797     COPY ZMZDECIM.

000172*    MOVE 'ZEC110601'       TO W-DECOD
000172     MOVE 'ZEC113601'       TO W-DECOD
           MOVE W-XXNN-N          TO C
           COPY ZMZINDIR.
000172*    COMPUTE W-COM1 = MOVE-ICTVSPS * (10 ** M-D(IND1))
000172     COMPUTE W-COM1 = MOVE-ICTVLISPS * (10 ** M-D(IND1))
           COPY ZMZFMMOD.
           MOVE SPACES       TO M-S(IND1)
           MOVE W-DECSIGBASE TO WRK-NDCLDIV
           PERFORM 0838-CNTL-DECIMALI
              THRU 0838-CNTL-DECIMALI-END
           IF M-S(IND1) = 'E'
              GO TO 0850-INTERESSI-END
           END-IF
070797     MOVE W-DECSIGBASE TO WCM-DECIMALI
"          MOVE IND1         TO WCM-IND-DEC
070797     COPY ZMZDECIM.
000172     MOVE 'ZEC113301'       TO W-DECOD
000172     MOVE W-XXNN-N          TO C
000172     COPY ZMZINDIR.
000172     COMPUTE W-COM1 = MOVE-ICTVSPS * (10 ** M-D(IND1))
000172     COPY ZMZFMMOD.
000172     MOVE SPACES       TO M-S(IND1)
000172     MOVE W-DECSIGCON  TO WRK-NDCLDIV
000172     PERFORM 0838-CNTL-DECIMALI
000172        THRU 0838-CNTL-DECIMALI-END
000172     IF M-S(IND1) = 'E'
000172        GO TO 0850-INTERESSI-END
000172     END-IF
000172     MOVE W-DECSIGCON  TO WCM-DECIMALI
000172     MOVE IND1         TO WCM-IND-DEC
000172     COPY ZMZDECIM.
      *--------------------------------------------------------------
      *   ZONA RITENUTA X INTERESSI
      *--------------------------------------------------------------
           MOVE 'ZEC110501'             TO W-DECOD
           MOVE W-XXNN-N                TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE W-COM-NUM-DEC7 = W-COM-NUM / 10 ** M-D(IND1)

      *--------------------------------------------------------------
      *   RITENUTA VALORIZZATA E DATA DECORR <= DATA INIZ.
      *--------------------------------------------------------------
      *------------------------------- LEGGE TABELLA TABSC PER
      *------------------------------- CONTROLLARE GESTIONE RITENUTA
           INITIALIZE WRK-TAB-TBAMOVP.
           IF NCSVE-TTMCO(IND5) GREATER ZEROES
              MOVE DCLTBAMOVP            TO WRK-TAB-TBAMOVP
              MOVE 'SI'                  TO MOVP-NON-TROVATO
              MOVE NCSVE-TTMCO(IND5)     TO MOVP-NPRGMOVP
                                            W-NPRGMOVP-CERCA
              MOVE IND-KCS               TO MOVP-NSUBMOVP
                                            W-NSUBMOVP-CERCA
              PERFORM 0820-CERCA-AMOVP
                 THRU 0820-CERCA-AMOVP-END
                    VARYING INDP FROM 1 BY 1
                       UNTIL INDP > 35  OR
                          MOVP-NON-TROVATO = SPACES
              MOVE MOVP-CSTC              TO ABSC-CSTC

000202        INITIALIZE W-AREA-RITENUTA
000202        MOVE MOVP-CSTC              TO WRK-CSTC-RIT
000202        MOVE MOVP-CDPZ              TO WRK-CDPZ-RIT
000202        MOVE MOVP-CISO              TO WRK-CISO-RIT
000202        MOVE MOVP-NNDGSET           TO WRK-NNDGSET-RIT
000202        MOVE MOVP-NSUFABT           TO WRK-NSUFABT-RIT
000202        MOVE MOVP-NPRGOPE           TO WRK-NPRGOPE-RIT
              MOVE WRK-TAB-TBAMOVP        TO DCLTBAMOVP
              IF MOVP-NON-TROVATO = SPACES
                 MOVE W-CIST              TO ABSC-CIST
                 PERFORM 0630-LEGGI-TABSC
                    THRU 0630-LEGGI-TABSC-END
000202***--------------- SE IL SOTTOCONTO NON E' SOGGETTO A RITENUTA
000202***---------------    FISCALE
000202***--------------- OPPURE
000202***---------------  E' UN SOTTOCONTO NON INTESTATO A CLIENTELA
000202***--------------- OPPURE
000202***---------------  SIAMO PRESENTI AD UN NON CENSITO
000202***---------------   NON SI DEVE CALCOLARE LA RITENUTA DI ACCONTO
                 IF ABSC-FRITACT NOT = 2
000202           OR ABSC-FRSTNDG NOT = '1'
000202           OR MOVP-NNDGSET = ALL '9'
                    GO TO 0850-FINE-INTERESSI
000202           ELSE
000202              PERFORM 0900-RITENUTA-FISCALE
000202                 THRU 0900-RITENUTA-FISCALE-END
                 END-IF
              END-IF
           END-IF.
           MOVE 'ZEC111401'                   TO W-DECOD
           MOVE W-XXNN-N                      TO C
           COPY ZMZINDIR.
           MOVE IND1                          TO IND2
           MOVE 'ZEC111601'                   TO W-DECOD
           MOVE W-XXNN-N                      TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           IF MOD(M-I(IND2):M-L(IND2)) > SPACES
              IF W-COM-NUM NOT > MOVE-DTINIZ
                 MOVE 'ZEC111501'             TO W-DECOD
                 MOVE W-XXNN-N                TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 COMPUTE W-COM-NUM-DEC9 = W-COM-NUM / 10 ** M-D(IND1)
160697*          COMPUTE W-COM-NUM-DEC3 = (W-COM-NUM-DEC9 *
160697           COMPUTE WK-RITE-DEC3   = (W-COM-NUM-DEC9 *
                                           W-COM-NUM-DEC7) / 100
                 MOVE 'ZEC111701'             TO W-DECOD
                 MOVE W-XXNN-N                TO C
                 COPY ZMZINDIR.
                 IF W-COM-NUM-A < M-D(IND1)
                    COMPUTE W-DIFF = M-D(IND1) - W-COM-NUM-A
160697*             COMPUTE W-COM-NUM-DEC3 =
      *                  W-COM-NUM-DEC3 / 10 ** W-DIFF
      *             COMPUTE W-COM-NUM-DEC3 =
160697*                  W-COM-NUM-DEC3 * 10 ** W-DIFF
160697              COMPUTE WK-RITE-DEC3 = WK-RITE-DEC3 / 10 ** W-DIFF
160697              COMPUTE WK-RITE-DEC3 = WK-RITE-DEC3 * 10 ** W-DIFF
                 END-IF

160697*          COMPUTE W-COM1 = W-COM-NUM-DEC3  * (10 ** M-D(IND1))
160697           COMPUTE W-COM1 = WK-RITE-DEC3  * (10 ** M-D(IND1))
000172           MOVE W-COM1      TO W-COM-NUM-5
                 COPY ZMZFMMOD.
                 MOVE SPACES       TO M-S(IND1)
                 MOVE W-COM-NUM-A  TO WRK-NDCLDIV
                 PERFORM 0838-CNTL-DECIMALI
                    THRU 0838-CNTL-DECIMALI-END
                 IF M-S(IND1) = 'E'
                    GO TO 0850-INTERESSI-END
                 END-IF
070797           MOVE W-COM-NUM-A  TO WCM-DECIMALI
"                MOVE IND1         TO WCM-IND-DEC
070797           COPY ZMZDECIM.
000172
000172*--------------------------------------CALCOLA CONTROVALORE DELLA
000172*------------------------------------------------RITENUTA FISCALE
000172*----------------------------------------------CHIAMANDO ZMBCTV00
000172           INITIALIZE ZMWCTV00
000172*--------------------------------------------IMPORTO
000172           MOVE W-COM-NUM-5    TO WCTV00-IMPORTO
000172*-----------------------------------------------------CAMBIO
000172           COMPUTE WCTV00-CAMBIO = MOVE-ICABCAP * (10 ** 7)
000172*----------------------CODICE COMANDO
000172           MOVE 'CTVDC' TO        WCTV00-COMANDO
000172           PERFORM 0869-CALCOLA-CONTROVALORI
000172              THRU 0869-CALCOLA-CONTROVALORI-END
000172*---------------------------------------------------CTV LISTINO
000172           MOVE 'ZEC111801'             TO W-DECOD
000172           MOVE W-XXNN-N                TO C
000172           COPY ZMZINDIR.
000172           COMPUTE W-COM1 = WRK-DIVLIS * (10 ** M-D(IND1))
000172           COPY ZMZFMMOD.
000172           MOVE SPACES       TO M-S(IND1)
000172*---------------------------------------------------CTV CONTAB
000172           MOVE 'ZEC113401'             TO W-DECOD
000172           MOVE W-XXNN-N                TO C
000172           COPY ZMZINDIR.
000172           COMPUTE W-COM1 = WRK-DIVCON * (10 ** M-D(IND1))
000172           COPY ZMZFMMOD.
000172           MOVE SPACES       TO M-S(IND1)
      *--------------------------------------------------------------
      *   TRATTASI DI RITENUTA A CAVALLO DI PERIODI DIVERSI
      *--------------------------------------------------------------
              ELSE
                 MOVE 'ZEC112001'                TO W-DECOD
                 MOVE W-XXNN-N                   TO C
                 COPY ZMZINDIR.
                 IF MOD(M-I(IND1):M-L(IND1)) NOT > SPACES
                    IF M-S(W-CEC) NOT = SPACES
                       NEXT SENTENCE
                    ELSE
                       MOVE 'E'                  TO M-S(W-CEC)
                       MOVE W-COORD-CEC          TO W-MOD-ERR
                       MOVE M-M(W-CEC)           TO W-MAP-ERR
                       MOVE 2                    TO W-FLAG-ERR
                       MOVE 'S047'               TO W-COD-ERR
                       PERFORM 9999-GESTIONE-ERRORE
                          THRU 9999-GESTIONE-ERRORE-END
                    END-IF
                 END-IF
                 MOVE 'ZEC111501'             TO W-DECOD
                 MOVE W-XXNN-N                TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 COMPUTE W-COM-NUM-G = W-COM-NUM / 10 ** M-D(IND1)
                 MOVE 'ZEC111601'             TO W-DECOD
                 MOVE W-XXNN-N                TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM               TO W-COM-NUM-DT1
                 PERFORM 0835-CALC-COMO-DT
                    THRU 0835-CALC-COMO-DT-END
000235*          COMPUTE W-COM-NUM-DEC4 = ((MOVE-ICAPSPS *
000235           COMPUTE WK-RITE-DEC3 = ((MOVE-ICAPSPS *
                         W-COM-NUM-DT2 * MOVE-RRAP) /
                         W-COM-NUM-B) * W-COM-NUM-G / 100
                 MOVE 'ZEC111701'             TO W-DECOD
                 MOVE W-XXNN-N                TO C
                 COPY ZMZINDIR.
                 IF W-COM-NUM-A < M-D(IND1)
                    COMPUTE W-DIFF = M-D(IND1) - W-COM-NUM-A
000235*             COMPUTE W-COM-NUM-DEC4 =
000235*                     W-COM-NUM-DEC4 / 10 ** W-DIFF
000235*             COMPUTE W-COM-NUM-DEC4 =
000235*                     W-COM-NUM-DEC4 * 10 ** W-DIFF
000235              COMPUTE WK-RITE-DEC3 =
000235                      WK-RITE-DEC3 / 10 ** W-DIFF
000235              COMPUTE WK-RITE-DEC3 =
000235                      WK-RITE-DEC3 * 10 ** W-DIFF
                 END-IF

000235*          COMPUTE W-COM1 = W-COM-NUM-DEC4  * (10 ** M-D(IND1))
000235           COMPUTE W-COM1 = WK-RITE-DEC3  * (10 ** M-D(IND1))
000172           MOVE W-COM1       TO W-COM-NUM-5
                 COPY ZMZFMMOD.
                 MOVE SPACES       TO M-S(IND1)
                 MOVE W-COM-NUM-A  TO WRK-NDCLDIV
                 PERFORM 0838-CNTL-DECIMALI
                    THRU 0838-CNTL-DECIMALI-END
                 IF M-S(IND1) = 'E'
                    GO TO 0850-INTERESSI-END
                 END-IF
070797           MOVE W-COM-NUM-A  TO WCM-DECIMALI
"                MOVE IND1         TO WCM-IND-DEC
070797           COPY ZMZDECIM.
000172
000172*--------------------------------------CALCOLA CONTROVALORE DELLA
000172*------------------------------------------------RITENUTA FISCALE
000172*----------------------------------------------CHIAMANDO ZMBCTV00
000172           INITIALIZE ZMWCTV00
000172*--------------------------------------------IMPORTO
000172           MOVE W-COM-NUM-5    TO WCTV00-IMPORTO
000172*-----------------------------------------------------CAMBIO
000172           COMPUTE WCTV00-CAMBIO = MOVE-ICABCAP * (10 ** 7)
000172*----------------------CODICE COMANDO
000172           MOVE 'CTVDC' TO        WCTV00-COMANDO
000172           PERFORM 0869-CALCOLA-CONTROVALORI
000172              THRU 0869-CALCOLA-CONTROVALORI-END
000172*---------------------------------------------------CTV LISTINO
000172           MOVE 'ZEC111801'             TO W-DECOD
000172           MOVE W-XXNN-N                TO C
000172           COPY ZMZINDIR.
000172           COMPUTE W-COM1 = WRK-DIVLIS * (10 ** M-D(IND1))
000172           COPY ZMZFMMOD.
000172           MOVE SPACES       TO M-S(IND1)
000172*---------------------------------------------------CTV CONTAB
000172           MOVE 'ZEC113401'             TO W-DECOD
000172           MOVE W-XXNN-N                TO C
000172           COPY ZMZINDIR.
000172           COMPUTE W-COM1 = WRK-DIVCON * (10 ** M-D(IND1))
000172           COPY ZMZFMMOD.
000172           MOVE SPACES       TO M-S(IND1)
                 MOVE 'ZEC112101'             TO W-DECOD
                 MOVE W-XXNN-N                TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 COMPUTE W-COM-NUM-G = W-COM-NUM / 10 ** M-D(IND1)
160697*          COMPUTE W-COM-NUM-DEC4 = ((MOVE-ICAPSPS *
160697           COMPUTE WK-RITE-DEC3 = ((MOVE-ICAPSPS *
                         W-COM-NUM-DT3 * MOVE-RRAP) /
                         W-COM-NUM-B) * W-COM-NUM-G / 100
                 MOVE 'ZEC112301'             TO W-DECOD
                 MOVE W-XXNN-N                TO C
                 COPY ZMZINDIR.
                 IF W-COM-NUM-A < M-D(IND1)
000235*             COMPUTE W-DIFF = M-D(IND1) - W-COM-NUM
000235              COMPUTE W-DIFF = M-D(IND1) - W-COM-NUM-A
160697*             COMPUTE W-COM-NUM-DEC4 =
      *                     W-COM-NUM-DEC4 / 10 ** W-DIFF
      *             COMPUTE W-COM-NUM-DEC4 =
160697*                     W-COM-NUM-DEC4 * 10 ** W-DIFF
160697              COMPUTE WK-RITE-DEC3 = WK-RITE-DEC3 / 10 ** W-DIFF
160697              COMPUTE WK-RITE-DEC3 = WK-RITE-DEC3 * 10 ** W-DIFF
                 END-IF

160697*          COMPUTE W-COM1 = W-COM-NUM-DEC4  * (10 ** M-D(IND1))
160697           COMPUTE W-COM1 = WK-RITE-DEC3 * (10 ** M-D(IND1))
000172           MOVE W-COM1          TO W-COM-NUM-6
                 COPY ZMZFMMOD.
                 MOVE SPACES          TO M-S(IND1)
                 MOVE W-COM-NUM-A  TO WRK-NDCLDIV
                 PERFORM 0838-CNTL-DECIMALI
                    THRU 0838-CNTL-DECIMALI-END
                 IF M-S(IND1) = 'E'
                    GO TO 0850-INTERESSI-END
                 END-IF
070797           MOVE W-COM-NUM-A  TO WCM-DECIMALI
"                MOVE IND1         TO WCM-IND-DEC
070797           COPY ZMZDECIM.
000172
000172*--------------------------------------CALCOLA CONTROVALORE DELLA
000172*------------------------------------------------RITENUTA FISCALE
000172*----------------------------------------------CHIAMANDO ZMBCTV00
000172           INITIALIZE ZMWCTV00
000172*--------------------------------------------IMPORTO
000172           MOVE W-COM-NUM-6    TO WCTV00-IMPORTO
000172*-----------------------------------------------------CAMBIO
000172           COMPUTE WCTV00-CAMBIO = MOVE-ICABCAP * (10 ** 7)
000172*----------------------CODICE COMANDO
000172           MOVE 'CTVDC' TO        WCTV00-COMANDO
000172           PERFORM 0869-CALCOLA-CONTROVALORI
000172              THRU 0869-CALCOLA-CONTROVALORI-END
000172*---------------------------------------------------CTV LISTINO
000172           MOVE 'ZEC112401'             TO W-DECOD
000172           MOVE W-XXNN-N                TO C
000172           COPY ZMZINDIR.
000172           COMPUTE W-COM1 = WRK-DIVLIS * (10 ** M-D(IND1))
000172           COPY ZMZFMMOD.
000172           MOVE SPACES       TO M-S(IND1)
000172*---------------------------------------------------CTV CONTAB
000172           MOVE 'ZEC113501'             TO W-DECOD
000172           MOVE W-XXNN-N                TO C
000172           COPY ZMZINDIR.
000172           COMPUTE W-COM1 = WRK-DIVCON * (10 ** M-D(IND1))
000172           COPY ZMZFMMOD.
000172           MOVE SPACES       TO M-S(IND1)
           END-IF.
       0850-FINE-INTERESSI.
           MOVE MOVE-ICABCAP   TO WRK-MOVE-ICABCAP.
           MOVE MOVE-CDIVCAP   TO WRK-MOVE-CDIVCAP.
       0850-INTERESSI-END.
           EXIT.
      *--------------------------------------------------------------*
      * CALCOLO INTERESSI PER 'TI' SULLO SCONTO                      *
      *--------------------------------------------------------------*
       0851-INTERESSI-TI.
           MOVE ZEROES              TO WRK-ISPSVAL.
           MOVE 'ZEC110501'         TO W-DECOD.
           MOVE NCSVE-TTCECO (IND5) TO W-XXNN.
           MOVE W-XXNN-N            TO C.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE WRK-ISPSVAL =  W-COM-NUM / 10 ** M-D(IND1).


           MOVE 'ZEC111001'         TO W-DECOD.
           MOVE W-XXNN-N            TO C.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE W-COM-NUM-DEC = W-COM-NUM / 10 ** M-D(IND1)
      *------------------------------------ PRELEVO GIORNI VISTA
           MOVE 'ZFI071207'         TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE WRK-GG-VISTA = W-COM-NUM / 10 ** M-D(IND1).

      *------------------------------------ PRELEVO GIORNI NO VISTA
           MOVE 'ZFI071208'         TO W-DECOD.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE WRK-GG-NOVISTA = W-COM-NUM / 10 ** M-D(IND1).

           IF NCSVE-TTDCA(IND5) (3:1) NOT = NCSVE-TTTAS(IND5) (3:1)
              MOVE 'E'                  TO M-S(W-CEC)
              MOVE W-COORD-CEC          TO W-MOD-ERR
              MOVE M-M(W-CEC)           TO W-MAP-ERR
              MOVE 2                    TO W-FLAG-ERR
              MOVE 'S104'               TO W-COD-ERR
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
              GO TO 0851-INTERESSI-TI-END
           END-IF.
           MOVE NCSVE-TTDCA (IND5)   TO W-XXN.
           MOVE W-XXN-N              TO N-M-2.
           MOVE 'NO'                 TO WRK-FINE-TI.
           PERFORM
              VARYING N-M-2 FROM N-M-2 BY 1
                               UNTIL N-M-2 > WCM-INDMAX(04)
                                  OR WRK-FINE-TI = 'SI'
              MOVE '1312'            TO COORD-4
              COPY ZMZINDIR.
              IF MOD(M-I(IND1):M-L(IND1)) NOT GREATER SPACES
                 MOVE WRK-ICTVSPS         TO MOVE-ICTVSPS
000172           MOVE WRK-ICTVLISPS       TO MOVE-ICTVLISPS
                 MOVE WRK-ISPSVAL-TRANSIT TO MOVE-ISPSVAL
                 MOVE 'SI'           TO WRK-FINE-TI
              END-IF
              IF WRK-FINE-TI NOT = 'SI'
                 IF (NCSVE-TTTAS (IND5) = SPACES) OR
                    (NCSVE-TTDCA (IND5) = SPACES) OR
                    (NCSVE-TTMCO (IND5) = ZEROES)
                    IF M-S(W-CEC) NOT = SPACES
                       NEXT SENTENCE
                    ELSE
                       MOVE 'E'         TO M-S(W-CEC)
                       MOVE W-COORD-CEC TO W-MOD-ERR
                       MOVE M-M(W-CEC)  TO W-MAP-ERR
                       MOVE 2           TO W-FLAG-ERR
                       MOVE 'S046'      TO W-COD-ERR
                       PERFORM 9999-GESTIONE-ERRORE
                          THRU 9999-GESTIONE-ERRORE-END
                       GO TO 0851-INTERESSI-TI-END
                    END-IF
                 END-IF
                 MOVE '0401'                     TO COORD-4
                 COPY ZMZINDIR.
                 MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVE-CDIVCAP
000172           MOVE W-CIST          TO DIV-CIST
000172           MOVE MOVE-CDIVCAP    TO DIV-CISO
000172           PERFORM 0870-TRATTA-DIVISA
000172              THRU 0870-TRATTA-DIVISA-END
000172
000172           MOVE DIV-NDCLDIV  TO WRK-NDCLDIV
000172           PERFORM 0838-CNTL-DECIMALI
000172              THRU 0838-CNTL-DECIMALI-END
000172           IF M-S(IND1) = 'E'
000172              GO TO 0851-INTERESSI-TI-END
000172           END-IF
000172           MOVE DIV-NDCLDIV  TO WCM-DECIMALI
000172           MOVE IND1         TO WCM-IND-DEC
000172           COPY ZMZDECIM.
                 MOVE '0426'                     TO COORD-4
                 COPY ZMZINDIR.
                 MOVE MOD(M-I(IND1):M-L(IND1))   TO W-SEGNO
                 IF W-SEGNO = 'P'
                    MOVE '0409'                     TO COORD-4
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    COMPUTE W-COM-NUM-DEC1 = W-COM-NUM /
                                                10 ** M-D(IND1)
                    MOVE '0425'                     TO COORD-4
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    COMPUTE W-COM-NUM-DEC2 = W-COM-NUM /
                                                10 ** M-D(IND1)
                    COMPUTE MOVE-ICABCAP = W-COM-NUM-DEC1 +
                            (W-COM-NUM-DEC1 * W-COM-NUM-DEC2 / 100)
                 ELSE
                    IF W-SEGNO = 'M'
                       MOVE '0409'                     TO COORD-4
                       COPY ZMZINDIR.
                       COPY ZMZVALNM.
                       COMPUTE W-COM-NUM-DEC1 =
                               W-COM-NUM / 10 ** M-D(IND1)
                       MOVE '0425'                     TO COORD-4
                       COPY ZMZINDIR.
                       COPY ZMZVALNM.
                       COMPUTE W-COM-NUM-DEC2 =
                               W-COM-NUM / 10 ** M-D(IND1)
                       COMPUTE MOVE-ICABCAP = W-COM-NUM-DEC1 -
                            (W-COM-NUM-DEC1 * W-COM-NUM-DEC2 / 100)
                    ELSE
                       IF W-SEGNO = SPACES
                          MOVE '0409'                     TO COORD-4
                          COPY ZMZINDIR.
                          COPY ZMZVALNM.
                          COMPUTE MOVE-ICABCAP =
                               W-COM-NUM / 10 ** M-D(IND1)
                       END-IF
                    END-IF
                 END-IF
                 MOVE '0404'                     TO COORD-4
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 COMPUTE MOVE-ICAPSPS = W-COM-NUM / (10 ** M-D(IND1))
                 MOVE '0403'                     TO COORD-4
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO W-COM-NUM-A
                 MOVE ZEROES                     TO WRK-DTFIN
                 INITIALIZE SC-AREA
                 IF NCSVE-TTTAS (IND5) (1:2) = 'TT'
                    MOVE ZEROES                     TO WRK-GGSPS
170797              INITIALIZE SC-AREA
                    MOVE '0711'                     TO COORD-4
                    COPY ZMZINDIR.
                    MOVE MOD(M-I(IND1):M-L(IND1))   TO SC-CAMPO-DATA
                    PERFORM 2053-DECOD-SCAD
                       THRU 2053-DECOD-SCAD-END
                    IF SC-CODICE-RITORNO = ZEROES
                       IF SC-TIPO-DATA = 'N'
                          COPY ZMZVALNM.
                          MOVE W-COM-NUM            TO MOVE-DTFIN
                       ELSE
                          IF SC-TIPO-DATA = 'NS'
                             COPY ZMZVALNM.
                             MOVE W-COM-NUM         TO MOVE-DTFIN
                                                       WRK-DTFIN
                          END-IF
                       END-IF
                    ELSE
                       MOVE ZEROES                  TO MOVE-DTFIN
                    END-IF
                    MOVE '0710'                     TO COORD-4
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    MOVE W-COM-NUM                  TO MOVE-DTINIZ
      *--------------------------------------- MOVE-DTFIN = ZFI0711
                    IF MOVE-DTFIN NOT GREATER ZEROES
                       MOVE 'E'                  TO M-S(W-CEC)
                       MOVE W-COORD-CEC          TO W-MOD-ERR
                       MOVE M-M(W-CEC)           TO W-MAP-ERR
                       MOVE 2                    TO W-FLAG-ERR
                       MOVE 'S096'               TO W-COD-ERR
                       PERFORM 9999-GESTIONE-ERRORE
                          THRU 9999-GESTIONE-ERRORE-END
                       GO TO 0851-INTERESSI-TI-END
                    END-IF
                    MOVE '0706'                  TO COORD-4
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    COMPUTE MOVE-RRAP = W-COM-NUM / 1000000000
                 END-IF
      *------------------------------------- ZFI071301/08 = DIV-FDVSINT
                 MOVE '0713'          TO COORD-4
                 COPY ZMZINDIR.
120997           COPY ZMZVALNM.
120997           IF W-COM-NUM = ZEROES
                    COMPUTE W-COM1 = DIV-FDVSINT * (10 ** M-D(IND1))
                    COPY ZMZFMMOD.
                    MOVE SPACES          TO M-S(IND1)
      *------------------------------------ MOVE-FDVSINT = DIV-FDVSINT
120997              MOVE DIV-FDVSINT     TO MOVE-FDVSINT
120997           ELSE
      *------------------------------------ MOVE-FDVSINT = ZFI071301/08
120997              COMPUTE MOVE-FDVSINT = W-COM-NUM / (10 ** M-D(IND1))
120997           END-IF

      *------------------------------------ MOVE-FDVSINT = DIV-FDVSINT
120997*          MOVE DIV-FDVSINT     TO MOVE-FDVSINT

      *--------------------------------------------------------------
      *       IMPORTO INTERESSI NON VALORIZZATO
      *--------------------------------------------------------------
                 IF WRK-ISPSVAL = 0
                    IF WRK-GGSPS NOT GREATER ZEROES
                       IF SC-TIPO-DATA = 'NS'
      *------------------------------- WRK-GG-VISTA = ZFI071207
                          COMPUTE WRK-GGSPS = WRK-GG-VISTA +
                                              WRK-NN3-DTFIN
                       ELSE
                          PERFORM 0832-SOTTRAI-DATA
                             THRU 0832-SOTTRAI-DATA-END
      *------------------------------- WRK-GG-NOVISTA = ZFI071208
                          COMPUTE WRK-GGSPS = WRK-GGSPS +
                                              WRK-GG-NOVISTA
                       END-IF
                       MOVE '1303'          TO COORD-4
                       COPY ZMZINDIR.
                       COMPUTE W-COM1 = WRK-GGSPS * (10 ** M-D(IND1))
                       COPY ZMZFMMOD.
                       MOVE SPACES          TO M-S(IND1)
                    END-IF
                    IF MOVE-FDVSINT = 1 OR MOVE-DTINIZ = ZEROES
                       MOVE 36000         TO W-COM-NUM-B
                    ELSE
                       IF MOVE-FDVSINT = 2
                          PERFORM 0831-VEDI-SE-BISESTILE
                             THRU 0831-VEDI-SE-BISESTILE-END
                       END-IF
                    END-IF
                    IF W-COM-NUM-B GREATER ZEROES
                       MOVE ZEROES TO WRK-ISPSVAL-TRANSIT
APV029*                COMPUTE WRK-ISPSVAL-TRANSIT =
APV029                 COMPUTE WRK-ISPSVAL-TRANSIT-P =
                                         (MOVE-ICAPSPS * WRK-GGSPS *
                                          MOVE-RRAP) / W-COM-NUM-B
                       IF W-COM-NUM-A < 3
                          COMPUTE W-DIFF = 3 - W-COM-NUM-A
000241                    MOVE WRK-ISPSVAL-TRANSIT-P
000241                               TO WRK-ISPSVAL-TRANSIT-A
APV029*                   COMPUTE WRK-ISPSVAL-TRANSIT =
000241*                   COMPUTE WRK-ISPSVAL-TRANSIT-P =
000241                    COMPUTE WRK-ISPSVAL-TRANSIT =
                               WRK-ISPSVAL-TRANSIT-P / 10 ** W-DIFF
                          COMPUTE WRK-ISPSVAL-TRANSIT =
                               WRK-ISPSVAL-TRANSIT * 10 ** W-DIFF
000241                    COMPUTE WRK-DIFFERENZA = WRK-ISPSVAL-TRANSIT-A
000241                                           - WRK-ISPSVAL-TRANSIT
000241                    IF WRK-DIFFERENZA NOT = ZEROES
000241                       COMPUTE DA1 = W-COM-NUM-A + 1
000241                       IF WRK-DIFFERENZA-X(DA1:1) NOT < 5
000241                          COMPUTE WRK-ISPSVAL-TRANSIT =
000241                                  WRK-ISPSVAL-TRANSIT +
000241                                  (1 / (10 ** W-COM-NUM-A))
000241                       END-IF
000241                    END-IF
000241                 ELSE
000241                    MOVE WRK-ISPSVAL-TRANSIT-P
000241                                        TO WRK-ISPSVAL-TRANSIT
                       END-IF
                       MOVE '1302'          TO COORD-4
                       COPY ZMZINDIR.
                       COMPUTE W-COM1 = WRK-ISPSVAL-TRANSIT *
                                             (10 ** M-D(IND1))
                       COPY ZMZFMMOD.
                       MOVE SPACES          TO M-S(IND1)
070797                 MOVE W-COM-NUM-A  TO WCM-DECIMALI
"                      MOVE IND1         TO WCM-IND-DEC
070797                 COPY ZMZDECIM.
                    ELSE
                       MOVE ZEROES TO WRK-ISPSVAL-TRANSIT
                    END-IF
      *------------ CALCOLO IMPORTO VALUTA ESPRESSO NELLA DIV.MOV.TO
000172*------------ALCUNE ISTRUZIONI SONO STATE ASTERISCATE E SOSTITUITE
000172*---------------------------------------  PER GLI ADEGUAMENTI EURO
                    IF MOVP-CISO NOT = MOVE-CDIVCAP
000172*                COMPUTE WRK-ISPSVAL-TRANSIT =
000172*                    (WRK-ISPSVAL-TRANSIT * MOVE-ICABCAP /
000172*                     MOVP-ICABMOV)
000172                 MOVE W-CIST                  TO DIV-CIST
000172                 MOVE MOVP-CISO               TO DIV-CISO
000172                 PERFORM 0870-TRATTA-DIVISA
000172                    THRU 0870-TRATTA-DIVISA-END
000172                 MOVE DIV-NDCLDIV            TO W-COM-NUM-C
000172*                IF W-COM-NUM-C < 3
000172*                   COMPUTE W-DIFF = 3 - W-COM-NUM-C
000172*                   COMPUTE WRK-ISPSVAL-TRANSIT =
000172*                           WRK-ISPSVAL-TRANSIT / 10 ** W-DIFF
000172*                   COMPUTE WRK-ISPSVAL-TRANSIT =
000172*                           WRK-ISPSVAL-TRANSIT * 10 ** W-DIFF
000172*                END-IF
000172*--------------------------------------CALCOLA L'IMPORTO IN VALUTA
000172*-----------------------------------------------CHIAMANDO ZMBCTV00
000172                 MOVE N-M-2      TO   WRK-N-M-2
000172                 INITIALIZE ZMWCTV00
000172                 MOVE '1302'                  TO COORD-4
000172                 COPY ZMZINDIR.
000172                 COPY ZMZVALNM.
000172                 MOVE W-COM-NUM             TO WCTV00-IMPORTO
000172*-----------------------------------------------------CAMBIO
000172                 COMPUTE WCTV00-CAMBIO = MOVE-ICABCAP * (10 ** 7)
000172*------------------------------------------CAMBIO EQUIVALENTE
000172                 COMPUTE WCTV00-CAMBIO-CTP =
000172                                       MOVP-ICABMOV * (10 ** 7)
000172                 MOVE 7            TO WCTV00-CAMBIO-CTP-DEC
000172                 MOVE 6            TO WCTV00-CAMBIO-CTP-INT
000172*------------------------SI ARROTONDA AI DECIMALI CISO DI AMOVP
000172                 MOVE W-COM-NUM-C        TO WCTV00-CTVCP-DEC
000172                 COMPUTE WCTV00-CTVCP-INT = 18 - WCTV00-CTVCP-DEC
000172*----------------------CODICE COMANDO
000172                 MOVE 'CTVCP' TO        WCTV00-COMANDO
000172                 PERFORM 0869-CALCOLA-CONTROVALORI
000172                    THRU 0869-CALCOLA-CONTROVALORI-END
000172                 MOVE WCTV00-CTVCP      TO WRK-ISPSVAL-TRANSIT
000172                 MOVE WRK-N-M-2      TO   N-M-2
                       MOVE '1302'          TO COORD-4
                       COPY ZMZINDIR.
                       COMPUTE W-COM1 = WRK-ISPSVAL-TRANSIT *
                                           (10 ** M-D(IND1))
                       COPY ZMZFMMOD.
                       MOVE SPACES          TO M-S(IND1)
070797                 MOVE W-COM-NUM-C  TO WCM-DECIMALI
"                      MOVE IND1         TO WCM-IND-DEC
070797                 COPY ZMZDECIM.
                    END-IF
                 END-IF
      *--------------------------------------------------------------
      *   COMUNE PER INTERESSI
      *--------------------------------------------------------------
                 MOVE '1302'          TO COORD-4
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 COMPUTE WRK-ISPSVAL-TRANSIT = W-COM-NUM /
                                               10 ** M-D(IND1)
      *--------------------------------------------------------------
      *   CALCOLO CTV CON CAMBIO CAPITALE SE CAMBIO COPERT.INT. = 0
      *--------------------------------------------------------------
000172*------------ALCUNE ISTRUZIONI SONO STATE ASTERISCATE E SOSTITUITE
000172*---------------------------------------  PER GLI ADEGUAMENTI EURO
                 MOVE ZEROES          TO WRK-ICTVSPS
      *------------------------------ W-COM-NUM-DEC = ZEC111001/10
                 IF W-COM-NUM-DEC = 0
000172*             COMPUTE WRK-ICTVSPS = WRK-ISPSVAL-TRANSIT *
000172*                                                MOVP-ICABMOV
000172*             IF W-DECSIGBASE < 3
000172*                COMPUTE W-DIFF = 3 - W-DECSIGBASE
000172*                COMPUTE WRK-ICTVSPS =
000172*                     WRK-ICTVSPS / 10 ** W-DIFF
000172*                COMPUTE WRK-ICTVSPS =
000172*                     WRK-ICTVSPS * 10 ** W-DIFF
000172*             END-IF
000172*--------------------------------------CALCOLA CONTROVALORE DEGLI
000172*----------------------------------INTERESSI ESPRESSI NELLA DIVISA
000172*---------------------------------------LISTINO WRK-ICTVLISPS
000172*---------------------------------------DI CONTABILITA WRK-ICTVSPS
000172*----------------------------------------------CHIAMANDO ZMBCTV00
000172                 MOVE N-M-2      TO   WRK-N-M-2
000172                 INITIALIZE ZMWCTV00
000172*---------------------------------------------------- TAGLIO
000172                 MOVE '1302'                  TO COORD-4
000172                 COPY ZMZINDIR.
000172                 COPY ZMZVALNM.
000172                 MOVE W-COM-NUM             TO WCTV00-IMPORTO
000172*-----------------------------------------------------CAMBIO
000172                 COMPUTE WCTV00-CAMBIO = MOVP-ICABMOV * (10 ** 7)
000172*----------------------CODICE COMANDO
000172                 MOVE 'CTVDC' TO        WCTV00-COMANDO
000172                 PERFORM 0869-CALCOLA-CONTROVALORI
000172                    THRU 0869-CALCOLA-CONTROVALORI-END
000172                 MOVE WRK-DIVLIS            TO WRK-ICTVLISPS
000172                 MOVE WRK-DIVCON            TO WRK-ICTVSPS
000172                 MOVE WRK-N-M-2             TO N-M-2
                 ELSE
      *--------------------------------------------------------------
      *   CALCOLO CTV CON CAMBIO CAPITALE SE CAMBIO COPERT.INT. <> 0
      *--------------------------------------------------------------
000172*------------ALCUNE ISTRUZIONI SONO STATE ASTERISCATE E SOSTITUITE
000172*---------------------------------------  PER GLI ADEGUAMENTI EURO
000172*             COMPUTE WRK-ICTVSPS = WRK-ISPSVAL-TRANSIT *
000172*                                           W-COM-NUM-DEC
000172*             IF W-DECSIGBASE < 3
000172*                COMPUTE W-DIFF = 3 - W-DECSIGBASE
000172*                COMPUTE WRK-ICTVSPS =
000172*                     WRK-ICTVSPS / 10 ** W-DIFF
000172*                COMPUTE WRK-ICTVSPS =
000172*                     WRK-ICTVSPS * 10 ** W-DIFF
000172*             END-IF
000172*------------------------------------------CHIAMATA ZMBCTV00
000172              MOVE N-M-2             TO WRK-N-M-2
000172              INITIALIZE ZMWCTV00
000172*---------------------------------------------------- TAGLIO
000172              MOVE '1302'                  TO COORD-4
000172              COPY ZMZINDIR.
000172              COPY ZMZVALNM.
000172              MOVE W-COM-NUM             TO WCTV00-IMPORTO
000172*-----------------------------------------------------CAMBIO
000172              MOVE '1110'                  TO COORD-4
000172              COPY ZMZINDIR.
000172              COPY ZMZVALNM.
000172              MOVE W-COM-NUM             TO WCTV00-CAMBIO
000172*----------------------CODICE COMANDO
000172              MOVE 'CTVDC' TO        WCTV00-COMANDO
000172              PERFORM 0869-CALCOLA-CONTROVALORI
000172                 THRU 0869-CALCOLA-CONTROVALORI-END
000172              MOVE WRK-DIVLIS            TO WRK-ICTVLISPS
000172              MOVE WRK-DIVCON            TO WRK-ICTVSPS
000172              MOVE WRK-N-M-2             TO N-M-2
                 END-IF
                 MOVE '1319'          TO COORD-4
                 COPY ZMZINDIR.
                 COMPUTE W-COM1 = WRK-ICTVSPS * (10 ** M-D(IND1))
                 COPY ZMZFMMOD.
                 MOVE SPACES          TO M-S(IND1)
000172           MOVE W-DECSIGCON  TO WCM-DECIMALI
000172           MOVE IND1         TO WCM-IND-DEC
000172           COPY ZMZDECIM.
000172           MOVE '1323'     TO COORD-4
000172           COPY ZMZINDIR.
000172           COMPUTE W-COM1 = WRK-ICTVLISPS  * (10 ** M-D(IND1))
000172           COPY ZMZFMMOD.
000172           MOVE SPACES                TO M-S (IND1)
070797           MOVE W-DECSIGBASE TO WCM-DECIMALI
"                MOVE IND1         TO WCM-IND-DEC
070797           COPY ZMZDECIM.
              END-IF
           END-PERFORM.
       0851-INTERESSI-TI-END.
           EXIT.
       0831-VEDI-SE-BISESTILE.
000335     MOVE W-COM-NUM                        TO ME-PARO.
000335     MOVE 'ZOR031901'                      TO W-DECOD.
000335     COPY ZMZINDIR.
000335     COPY ZMZVALNM.
000335     IF W-COM-NUM = 2
000335        MOVE 36500                         TO W-COM-NUM-B
000335        GO TO 0831-VEDI-SE-BISESTILE-END
000335     END-IF.
000335     MOVE ME-PARO                          TO W-COM-NUM.
           MOVE MOVE-DTFIN                       TO W-NUM-DT.
           MOVE 29                               TO W-NUM-DT-GG.
           MOVE 02                               TO W-NUM-DT-MM.
           MOVE W-COM-DT                         TO DT-CMPI.
           MOVE 'AAAAMMGG'                       TO DT-FINP.
           MOVE 'AAAAMMGG'                       TO DT-FOUT.
           PERFORM 0710-CHIAMA-DATA
              THRU 0710-CHIAMA-DATA-END
           IF DT-RC = 7
000288*       IF MOVE-DTINIZ > W-NUM-DT
000288*          MOVE 36500                      TO  W-COM-NUM-B
000288*       ELSE
000288*          IF MOVE-DTFIN < W-NUM-DT
000288*             MOVE 36500                   TO W-COM-NUM-B
000288*          ELSE
000288*             MOVE 36600                   TO  W-COM-NUM-B
000288*          END-IF
000288*       END-IF
000288        MOVE MOVE-DTINIZ                      TO W-NUM-DT
000288        MOVE 29                               TO W-NUM-DT-GG
000288        MOVE 02                               TO W-NUM-DT-MM
000288        MOVE W-COM-DT                         TO DT-CMPI
000288        MOVE 'AAAAMMGG'                       TO DT-FINP
000288        MOVE 'AAAAMMGG'                       TO DT-FOUT
000288        PERFORM 0710-CHIAMA-DATA
000288           THRU 0710-CHIAMA-DATA-END
000288        IF DT-RC = 7
000288           MOVE 36500                         TO  W-COM-NUM-B
000288        ELSE
000288           IF MOVE-DTINIZ < W-NUM-DT
000288              MOVE 36600                         TO  W-COM-NUM-B
000288           ELSE
000288              MOVE 36500                         TO  W-COM-NUM-B
000288           END-IF
000288        END-IF
           ELSE
              IF DT-RC = 0
000281           IF MOVE-DTFIN < W-NUM-DT
000281              MOVE 36500             TO W-COM-NUM-B
000281           ELSE
000281              IF MOVE-DTINIZ > W-NUM-DT
000281                 MOVE 36500                      TO  W-COM-NUM-B
000281              ELSE
                       MOVE 36600                      TO  W-COM-NUM-B
000281              END-IF
000281           END-IF
              ELSE
                 IF M-S(W-CEC) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'E'                     TO M-S(W-CEC)
                    MOVE W-COORD-CEC             TO W-MOD-ERR
                    MOVE M-M(W-CEC)              TO W-MAP-ERR
                    MOVE 2                       TO W-FLAG-ERR
                    MOVE 'S039'                  TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
              END-IF
           END-IF.
       0831-VEDI-SE-BISESTILE-END.
           EXIT.
       0852-PERMILLARE.
000172     MOVE 'ZEC112701'   TO W-DECOD.
000172     MOVE W-XXNN-N      TO C.
000172     COPY ZMZINDIR.
000172     IF MOD(M-I(IND1):M-L(IND1)) NOT GREATER SPACES
000172        MOVE CONFG-DIVISA-CONDIZ TO MOD(M-I(IND1):M-L(IND1))
000172     END-IF
000172     MOVE IND1          TO IND7.
           MOVE 'ZEC110901'                      TO W-DECOD
           MOVE W-XXNN-N                         TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE W-COM-NUM-DEC = W-COM-NUM / 10 ** M-D(IND1)
           MOVE W-COM-NUM-DEC                    TO MOVE-IMAXSPS
           MOVE 'ZEC110801'                      TO W-DECOD
           MOVE W-XXNN-N                         TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE W-COM-NUM-DEC = W-COM-NUM / 10 ** M-D(IND1)
           MOVE W-COM-NUM-DEC                    TO MOVE-IMINSPS
           MOVE 'ZEC110401'                      TO W-DECOD
           MOVE W-XXNN-N                         TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE W-COM-NUM-DEC = W-COM-NUM / 10 ** M-D(IND1)
           MOVE W-COM-NUM-DEC                    TO MOVE-PSPSBML
080597     MOVE 'ZEC111301'                      TO W-DECOD
080597     MOVE W-XXNN-N                         TO C
080597     COPY ZMZINDIR.
080597     COPY ZMZVALNM.
080597     COMPUTE WRK-TVOXCND = W-COM-NUM / 10 ** M-D(IND1)
      *-------------------- CONTROLLA LA ZONE ZDV1301 DA 01 A 08I
           MOVE ZEROES TO W-COM-NUM-DEC8
000172     MOVE ZEROES TO W-COM-NUM-DEC8B
           PERFORM 0852-CNTR-ZDV1301
              THRU 0852-CNTR-ZDV1301-END
140597     IF W-FLAG-ERR > ZEROES
140597        GO TO 0852-PERMILLARE-END.
      *------------- SE LA ZONE ZDV1301 RISULTA A SPAZI OPPURE
      *------------- LA ZDV1317 E' VALORIZZATA E ZDV1317 = 5 (EFFETTI)
      *------------- CALCOLARE IL PERMILLARE SULL'IMPORTO DELL'ORDINE
070197     MOVE 'ZDV131701'    TO W-DECOD
070197     COPY ZMZINDIR.
070197     COPY ZMZVALNM.
           MOVE NCSVE-TTCECO(IND5)     TO W-XXNN
           IF (WRK-ZDV1301-VAL = 'NO') OR
070197        (WRK-ZDV1301-VAL = 'SI' AND W-COM-NUM = 5)
              MOVE 'ZOR030501'         TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              MOVE ZEROES TO WRK-ISPSVAL-TRANSIT
APV029        MOVE ZEROES TO WRK-ISPSVAL-TRANSIT-P
APV029*       COMPUTE WRK-ISPSVAL-TRANSIT = W-COM-NUM /
000252*       COMPUTE WRK-ISPSVAL-TRANSIT-P = W-COM-NUM /
000252        COMPUTE WRK-ISPSVAL-TRANSIT = W-COM-NUM /
                                            10 ** M-D(IND1)
APV029*       COMPUTE WRK-ISPSVAL-TRANSIT = WRK-ISPSVAL-TRANSIT *
000252*       COMPUTE WRK-ISPSVAL-TRANSIT-P = WRK-ISPSVAL-TRANSIT-P *
000252        COMPUTE WRK-ISPSVAL-TRANSIT-P = WRK-ISPSVAL-TRANSIT *
                                     MOVE-PSPSBML / 1000
000172        MOVE 'ZOR030401'   TO W-DECOD
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        MOVE W-COM-NUM     TO WRK-DEC-ORD
000215*       IF WRK-DEC-ORD  < 3
000215*          COMPUTE W-DIFF = 3 - WRK-DEC-ORD
000215*          COMPUTE WRK-ISPSVAL-TRANSIT =
000215*                  WRK-ISPSVAL-TRANSIT / 10 ** W-DIFF
000215*          COMPUTE WRK-ISPSVAL-TRANSIT =
000215*                  WRK-ISPSVAL-TRANSIT * 10 ** W-DIFF
000215*       END-IF
              MOVE 'ZOR030901'         TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE WRK-CAMBIO-TRANSIT = W-COM-NUM / 10 ** M-D(IND1)
000172*       COMPUTE MOVE-ICTVSPS = WRK-ISPSVAL-TRANSIT *
000172*                              WRK-CAMBIO-TRANSIT
000172*---------------------------------------CHIAMATA ZMBCTV00
000172        INITIALIZE ZMWCTV00
000172*----------------------------------------WRK-CAMBIO-TRANSIT
000172        MOVE W-COM-NUM          TO WCTV00-CAMBIO
APV029*       COMPUTE WCTV00-IMPORTO = WRK-ISPSVAL-TRANSIT * (10 ** 3)
APV029        COMPUTE WCTV00-IMPORTO = WRK-ISPSVAL-TRANSIT-P * (10 ** 8)
000172        MOVE 'CTVDC'           TO WCTV00-COMANDO
AVP029*       PERFORM 0869-CALCOLA-CONTROVALORI
AVP029*          THRU 0869-CALCOLA-CONTROVALORI-END
AVP029        PERFORM 0869-CALCOLA-CONTR-PER
AVP029           THRU 0869-CALCOLA-CONTR-PER-END
000172        MOVE WRK-DIVCON      TO MOVE-ICTVSPS
000172        MOVE WRK-DIVLIS      TO MOVE-ICTVLISPS
           ELSE
000172*       COMPUTE MOVE-ICTVSPS = W-COM-NUM-DEC8 *
000241*       COMPUTE MOVE-ICTVSPS = W-COM-NUM-DEC8B *
000241        COMPUTE WRK-ISPSVAL-TRANSIT-P = W-COM-NUM-DEC8B *
                                     MOVE-PSPSBML / 1000
000241        IF W-DECSIGCON  < 3
000241           COMPUTE W-DIFF = 3 - W-DECSIGCON
000241           MOVE WRK-ISPSVAL-TRANSIT-P TO WRK-ISPSVAL-TRANSIT-A
000241           COMPUTE MOVE-ICTVSPS =
000241                   WRK-ISPSVAL-TRANSIT-P / 10 ** W-DIFF
000241           COMPUTE MOVE-ICTVSPS =
000241                   MOVE-ICTVSPS * 10 ** W-DIFF
000241           COMPUTE WRK-DIFFERENZA = WRK-ISPSVAL-TRANSIT-A
000241                                  - MOVE-ICTVSPS
000241           IF WRK-DIFFERENZA NOT = ZEROES
000241              COMPUTE DA1 = W-DECSIGCON + 1
000241              IF WRK-DIFFERENZA(DA1:1) NOT < 5
000241                 COMPUTE MOVE-ICTVSPS = MOVE-ICTVSPS
000241                        + (1 / (10 ** W-DECSIGCON))
000241              END-IF
000241           END-IF
000241        ELSE
000241           MOVE WRK-ISPSVAL-TRANSIT-P TO MOVE-ICTVSPS
000241        END-IF
000241*       COMPUTE MOVE-ICTVLISPS = W-COM-NUM-DEC8 *
000241        COMPUTE WRK-ISPSVAL-TRANSIT-P = W-COM-NUM-DEC8 *
000172                               MOVE-PSPSBML / 1000
000241        IF W-DECSIGBASE < 3
000241           COMPUTE W-DIFF = 3 - W-DECSIGBASE
000241           MOVE WRK-ISPSVAL-TRANSIT-P TO WRK-ISPSVAL-TRANSIT-A
000241           COMPUTE MOVE-ICTVLISPS =
000241                   WRK-ISPSVAL-TRANSIT-P / 10 ** W-DIFF
000241           COMPUTE MOVE-ICTVLISPS =
000241                   MOVE-ICTVLISPS * 10 ** W-DIFF
000241           COMPUTE WRK-DIFFERENZA = WRK-ISPSVAL-TRANSIT-A
000241                                  - MOVE-ICTVLISPS
000241           IF WRK-DIFFERENZA NOT = ZEROES
000241              COMPUTE DA1 = W-DECSIGBASE + 1
000241              IF WRK-DIFFERENZA(DA1:1) NOT < 5
000241                 COMPUTE MOVE-ICTVLISPS = MOVE-ICTVLISPS
000241                        + (1 / (10 ** W-DECSIGBASE))
000241              END-IF
000241           END-IF
000241        ELSE
000241           MOVE WRK-ISPSVAL-TRANSIT-P TO MOVE-ICTVLISPS
000241        END-IF
APV035*       MOVE MOVE-ICTVSPS      TO WRK-ISPSVAL-TRANSIT
000241        IF MOVP-CISO = W-CSIGDBASE
000241           MOVE MOVE-ICTVLISPS  TO  WRK-ISPSVAL-TRANSIT-P
000241        ELSE
000241           IF MOVP-CISO = W-CSIGDCON
000241              MOVE MOVE-ICTVSPS  TO  WRK-ISPSVAL-TRANSIT-P
000241           ELSE
APV035               MOVE W-CIST            TO DIV-CIST
APV035               MOVE MOVP-CISO         TO DIV-CISO
APV035               PERFORM 0870-TRATTA-DIVISA
APV035                  THRU 0870-TRATTA-DIVISA-END
APV035              COMPUTE WCTV00-IMPORTO = MOVE-ICTVLISPS * (10 ** 3)
APV035              COMPUTE WCTV00-CAMBIO = 1 * (10 ** 7)
AVP035              MOVE  6                TO WCTV00-CAMBIO-CTP-INT
AVP035              MOVE  7                TO WCTV00-CAMBIO-CTP-DEC
APV035              COMPUTE WCTV00-CAMBIO-CTP = MOVP-ICABMOV * (10 ** 7)
APV035              MOVE DIV-NDCLDIV       TO WCTV00-CTVCP-DEC
APV035              COMPUTE WCTV00-CTVCP-INT = 18 - WCTV00-CTVCP-DEC
APV035              MOVE 'CTVCP'           TO WCTV00-COMANDO
AVP035              PERFORM 0869-CALCOLA-CONTROVALORI
AVP035                 THRU 0869-CALCOLA-CONTROVALORI-END
APV035              MOVE WCTV00-CTVCP      TO WRK-ISPSVAL-TRANSIT-P
000247              MOVE MOVP-ICABMOV      TO WRK-CAMBIO-TRANSIT
000241           END-IF
000241        END-IF
           END-IF
000172*    IF W-DECSIGBASE < 3
000172     IF W-DECSIGCON  < 3
000172*       COMPUTE W-DIFF = 3 - W-DECSIGBASE
000172        COMPUTE W-DIFF = 3 - W-DECSIGCON
000172        COMPUTE MOVE-ICTVSPS =
000172                MOVE-ICTVSPS / 10 ** W-DIFF
000172        COMPUTE MOVE-ICTVSPS =
000172                MOVE-ICTVSPS * 10 ** W-DIFF
000172     END-IF
000172     IF W-DECSIGBASE < 3
000172        COMPUTE W-DIFF = 3 - W-DECSIGBASE
000172        COMPUTE MOVE-ICTVLISPS =
000172                MOVE-ICTVLISPS / 10 ** W-DIFF
000172        COMPUTE MOVE-ICTVLISPS =
000172                MOVE-ICTVLISPS * 10 ** W-DIFF
000172     END-IF
           MOVE 'ZEC110301'                      TO W-DECOD
           MOVE W-XXNN-N                         TO C
           COPY ZMZINDIR.
           MOVE 'N' TO WRK-FORZA-MAX-MIN.
000293*    IF MOD(M-I(IND1):M-L(IND1)) NOT = 'F'
000198*       IF (MOVE-IMAXSPS NOT = 0) AND
000198*          (MOVE-IMINSPS NOT = 0)
000198*          IF MOVE-ICTVSPS > MOVE-IMAXSPS
000198*             MOVE MOVE-IMAXSPS      TO MOVE-ICTVSPS
000198*             MOVE 'S'               TO WRK-FORZA-MAX-MIN
000198*          ELSE
000198*             IF MOVE-ICTVSPS < MOVE-IMINSPS
000198*                MOVE MOVE-IMINSPS   TO MOVE-ICTVSPS
000198*                MOVE 'S'            TO WRK-FORZA-MAX-MIN
000198*             END-IF
000198*          END-IF
000198*       END-IF
000172*       IF MOVE-IMINSPS NOT = 0
000172*          IF MOVE-ICTVSPS < MOVE-IMINSPS
000172*             MOVE MOVE-IMINSPS             TO MOVE-ICTVSPS
000172*             MOVE 'S'                      TO WRK-FORZA-MAX-MIN
000172*          END-IF
000172*       END-IF
000172*       IF MOVE-IMAXSPS NOT = 0
000172*          IF MOVE-ICTVSPS > MOVE-IMAXSPS
000172*             MOVE MOVE-IMAXSPS             TO MOVE-ICTVSPS
000172*             MOVE 'S'                      TO WRK-FORZA-MAX-MIN
000172*          END-IF
000172*       END-IF
000172*-----------------------------------------IND7 PER ZEC112701
000172        IF MOD(M-I(IND7):M-L(IND7)) =  W-CSIGDBASE
000172           IF MOVE-IMINSPS NOT = 0
000172              IF MOVE-ICTVLISPS < MOVE-IMINSPS
000172                 MOVE MOVE-IMINSPS   TO MOVE-ICTVLISPS
000172                 IF W-CSIGDBASE = W-CSIGDCON
000172                    MOVE MOVE-IMINSPS   TO MOVE-ICTVSPS
000172                 ELSE
000172*-----------------------------------CHIAMATA ZMBCTV00
000172                   INITIALIZE ZMWCTV00
000172                   COMPUTE WCTV00-CAMBIO =  1 * (10 ** 7)
000172                   COMPUTE WCTV00-IMPORTO =
000172                                    MOVE-IMINSPS * (10 ** 3)
000172                   MOVE 'CTVDC'            TO WCTV00-COMANDO
000172                   PERFORM 0869-CALCOLA-CONTROVALORI
000172                      THRU 0869-CALCOLA-CONTROVALORI-END
000172                   MOVE WRK-DIVCON      TO MOVE-ICTVSPS
000172                 END-IF
000172                 MOVE 'S'            TO WRK-FORZA-MAX-MIN
000172                 MOVE 'MIN'          TO WRK-FORZA
000172              END-IF
000172           END-IF
000172           IF MOVE-IMAXSPS NOT = 0
000172              IF MOVE-ICTVLISPS > MOVE-IMAXSPS
000172                 MOVE MOVE-IMAXSPS      TO MOVE-ICTVLISPS
000172                 IF W-CSIGDBASE = W-CSIGDCON
000172                    MOVE MOVE-IMAXSPS   TO MOVE-ICTVSPS
000172                 ELSE
000172*-----------------------------------CHIAMATA ZMBCTV00
000172                   INITIALIZE ZMWCTV00
000172                   COMPUTE WCTV00-CAMBIO =  1 * (10 ** 7)
000172                   COMPUTE WCTV00-IMPORTO =
000172                                    MOVE-IMAXSPS * (10 ** 3)
000172                   MOVE 'CTVDC'            TO WCTV00-COMANDO
000172                   PERFORM 0869-CALCOLA-CONTROVALORI
000172                      THRU 0869-CALCOLA-CONTROVALORI-END
000172                   MOVE WRK-DIVCON      TO MOVE-ICTVSPS
000172                 END-IF
000172                 MOVE 'S'               TO WRK-FORZA-MAX-MIN
000172                 MOVE 'MAX'             TO WRK-FORZA
000172              END-IF
000172           END-IF
000172        ELSE
000172           MOVE ZEROES                   TO WRK-IMINSPS
000172                                            WRK-IMINSPS-C
000172                                            WRK-IMAXSPS
000172                                            WRK-IMAXSPS-C
000172           INITIALIZE  DCLTBALICMB
000172           MOVE MOD(M-I(IND7):M-L(IND7)) TO LICMB-CISO
000172           MOVE 'OP'                     TO LICMB-CSIGBORCMB
000172           MOVE MOVP-CIST                TO LICMB-CIST
000172           MOVE L-DATA-OGGI              TO LICMB-ANNOMMGG
000172           PERFORM 0837-LEGGI-ALICMB
000172              THRU 0837-LEGGI-ALICMB-END
000172           IF W-SQL-NON-TROVATO                                   TS006716
000172              MOVE 'E'                        TO M-S(IND7)        TS006717
000172              MOVE W-DEC-COORD                TO W-MOD-ERR        TS006718
000172              MOVE M-M(IND7)                  TO W-MAP-ERR        TS006719
000172              MOVE 2                          TO W-FLAG-ERR       TS006720
000172              MOVE 'S165'                     TO W-COD-ERR        TS006721
000172              PERFORM 9999-GESTIONE-ERRORE                        TS006722
000172                 THRU 9999-GESTIONE-ERRORE-END                    TS006723
000172              GO  TO 0852-PERMILLARE-END                          TS006723
000172           END-IF                                                 TS006723
000172           MOVE W-CIST                   TO DIV-CIST
000172           MOVE MOD(M-I(IND7):M-L(IND7)) TO DIV-CISO
000172           PERFORM 0870-TRATTA-DIVISA
000172              THRU 0870-TRATTA-DIVISA-END
000252*          IF WRK-IMINSPS NOT = 0
000252           IF MOVE-IMINSPS NOT = 0
000172*-----------------------------------------CHIAMATA ZMBCTV00
000172              INITIALIZE ZMWCTV00
APV035*             COMPUTE WCTV00-CAMBIO = LICMB-ICABTLF * (10 ** 7)
000252*             COMPUTE WCTV00-CAMBIO = LICMB-ICABVLTT * (10 ** 7)
000252              COMPUTE WCTV00-CAMBIO = LICMB-ICABVDEN * (10 ** 7)
000172              COMPUTE WCTV00-IMPORTO = MOVE-IMINSPS * (10 ** 3)
000172              MOVE 'CTVDC'                 TO WCTV00-COMANDO
000172              PERFORM 0869-CALCOLA-CONTROVALORI
000172                 THRU 0869-CALCOLA-CONTROVALORI-END
000172              MOVE WRK-DIVLIS                 TO WRK-IMINSPS
000172              MOVE WRK-DIVCON                 TO WRK-IMINSPS-C
000172              IF MOVE-ICTVLISPS < WRK-IMINSPS
000172                 MOVE WRK-IMINSPS       TO MOVE-ICTVLISPS
000172                 MOVE WRK-IMINSPS-C     TO MOVE-ICTVSPS
000172                 MOVE 'S'               TO WRK-FORZA-MAX-MIN
000172                 MOVE 'MIN'             TO WRK-FORZA
000172              END-IF
000172           END-IF
000252*          IF WRK-IMAXSPS NOT = 0
000252           IF MOVE-IMAXSPS NOT = 0
000172*-----------------------------------------CHIAMATA ZMBCTV00
000172              INITIALIZE ZMWCTV00
APV035*             COMPUTE WCTV00-CAMBIO = LICMB-ICABTLF * (10 ** 7)
000252*             COMPUTE WCTV00-CAMBIO = LICMB-ICABVLTT * (10 ** 7)
000252              COMPUTE WCTV00-CAMBIO = LICMB-ICABVDEN * (10 ** 7)
000172              COMPUTE WCTV00-IMPORTO = MOVE-IMAXSPS * (10 ** 3)
000172              MOVE 'CTVDC'                  TO WCTV00-COMANDO
000172              PERFORM 0869-CALCOLA-CONTROVALORI
000172                 THRU 0869-CALCOLA-CONTROVALORI-END
000172              MOVE WRK-DIVLIS                 TO WRK-IMAXSPS
000172              MOVE WRK-DIVCON                 TO WRK-IMAXSPS-C
000172              IF MOVE-ICTVLISPS > WRK-IMAXSPS
000172                 MOVE WRK-IMAXSPS       TO MOVE-ICTVLISPS
000172                 MOVE WRK-IMAXSPS-C     TO MOVE-ICTVSPS
000172                 MOVE 'S'               TO WRK-FORZA-MAX-MIN
000172                 MOVE 'MAX'             TO WRK-FORZA
000172              END-IF
000172           END-IF
000293*          END-IF
           END-IF.

           IF WRK-FORZA-MAX-MIN = 'N'
              IF WRK-ZDV1301-VAL = 'NO'
                 IF MOVP-CISO = W-DIVORD
000172              IF MOVP-CISO NOT = W-CSIGDCON
000172              AND MOVP-CISO NOT = W-CSIGDBASE
000215                 IF WRK-DEC-ORD  < 3
000215                    COMPUTE W-DIFF = 3 - WRK-DEC-ORD
000215                    COMPUTE WRK-ISPSVAL-TRANSIT =
APW029                          WRK-ISPSVAL-TRANSIT-P / 10 ** W-DIFF
APW029*                         WRK-ISPSVAL-TRANSIT / 10 ** W-DIFF
000215                    COMPUTE WRK-ISPSVAL-TRANSIT =
000215                         WRK-ISPSVAL-TRANSIT * 10 ** W-DIFF
APV029                    MOVE WRK-ISPSVAL-TRANSIT TO
APV029                         WRK-ISPSVAL-TRANSIT-P
000215                 END-IF
APV029*                MOVE WRK-ISPSVAL-TRANSIT      TO MOVE-ISPSVAL
APV029                 MOVE WRK-ISPSVAL-TRANSIT-P    TO MOVE-ISPSVAL
000172              ELSE
000172                 IF MOVP-CISO = W-CSIGDCON
000172                    MOVE MOVE-ICTVSPS         TO MOVE-ISPSVAL
000172                 END-IF
000172                 IF MOVP-CISO = W-CSIGDBASE
000172                    MOVE MOVE-ICTVLISPS       TO MOVE-ISPSVAL
000172                 END-IF
000172              END-IF
                    GO TO 0852-SALTA-CALCOLO
                 END-IF
              END-IF
           END-IF.

000172*    COMPUTE MOVE-ISPSVAL = MOVE-ICTVSPS / MOVP-ICABMOV

           MOVE W-CIST                     TO DIV-CIST
           MOVE MOVP-CISO                  TO DIV-CISO

           PERFORM 0870-TRATTA-DIVISA
              THRU 0870-TRATTA-DIVISA-END

           MOVE DIV-NDCLDIV                TO W-COM-NUM-C

000172*------------- VERIFICA SE LA SPESA E' STATA FORZATA
000172*------------- SE FORZATA CONTROLLO
000172*-------------    DIVISA CONDIZIONE = DIVISA MOVIMENTO
000172*-------------       CONTROLLO
000172*-------------           FORZATO CON MASSIMO
000172*-------------              IMPOSTO SPESA UGUALE AL MASSIMO
000172*-------------           FORZATO CON MINIMO
000172*-------------              IMPOSTO SPESA UGUALE AL MINIMO
000172*-------------    DIVISA CONDIZIONE NOT = DIVISA MOVIMENTO
000172*-------------       SPESA = SPESA IN VALUTA ESPRESSA NELLA
000172*-------------               DIVISA DEL MOVIMENTO
000172*------------- SE NON FORZATA
000172*-------------    SE DIVISA ORDINE = DIVISA MOVIMENTO
000172*-------------       VALORIZZA SPESA DIRETTAMENTE CON SPESA IN
000172*-------------       VALUTA CALCOLATA APPLICANDO IL PERMILLARE
000172*-------------       ALL'IMPORTO DELL'ORDINE
000172*-------------    ALTRIMENTI
000172*-------------       SPESA = SPESA IN VALUTA ESPRESSA NELLA
000172*-------------               DIVISA DEL MOVIMENTO
000172     IF WRK-FORZA-MAX-MIN = 'S'
000172        IF MOD(M-I(IND7):M-L(IND7)) = MOVP-CISO
000172           IF WRK-FORZA = 'MIN'
000172              MOVE MOVE-IMINSPS    TO   MOVE-ISPSVAL
000172           END-IF
000172           IF WRK-FORZA = 'MAX'
000172              MOVE MOVE-IMAXSPS    TO   MOVE-ISPSVAL
000172           END-IF
000172        ELSE
000172*-----------------------------------CHIAMATA ZMBCTV00
000172           IF MOVP-CISO NOT = W-CSIGDCON
000172           AND MOVP-CISO NOT = W-CSIGDBASE
APV035               INITIALIZE  DCLTBALICMB
APV035               MOVE MOD(M-I(IND7):M-L(IND7)) TO LICMB-CISO
APV035               MOVE 'OP'                     TO LICMB-CSIGBORCMB
APV035               MOVE MOVP-CIST                TO LICMB-CIST
APV035               MOVE L-DATA-OGGI              TO LICMB-ANNOMMGG
APV035               PERFORM 0837-LEGGI-ALICMB
APV035                  THRU 0837-LEGGI-ALICMB-END
APV035               IF W-SQL-NON-TROVATO                               TS006716
APV035                  MOVE 'E'                        TO M-S(IND7)    TS006717
APV035                  MOVE W-DEC-COORD                TO W-MOD-ERR    TS006718
APV035                  MOVE M-M(IND7)                  TO W-MAP-ERR    TS006719
APV035                  MOVE 2                          TO W-FLAG-ERR   TS006720
APV035                  MOVE 'S165'                     TO W-COD-ERR    TS006721
APV035                  PERFORM 9999-GESTIONE-ERRORE                    TS006722
APV035                     THRU 9999-GESTIONE-ERRORE-END                TS006723
APV035                  GO TO 0852-PERMILLARE-END                       TS006723
APV035               END-IF                                             TS006723
APV035               MOVE W-CIST                     TO DIV-CIST
APV035               MOVE MOD(M-I(IND7):M-L(IND7))   TO DIV-CISO
APV035               PERFORM 0870-TRATTA-DIVISA
APV035                  THRU 0870-TRATTA-DIVISA-END
000172              INITIALIZE ZMWCTV00
000172              IF WRK-FORZA = 'MIN'
000172                 COMPUTE WCTV00-IMPORTO =
000172                                MOVE-IMINSPS * (10 ** 3)
000172              END-IF
000172              IF WRK-FORZA = 'MAX'
000172                 COMPUTE WCTV00-IMPORTO =
000172                                MOVE-IMAXSPS * (10 ** 3)
000172              END-IF
000172              COMPUTE WCTV00-CAMBIO  =
APV035*                               WRK-CAMBIO-TRANSIT * (10 ** 7)
000252*                               LICMB-ICABVLTT * (10 ** 7)
000252                                LICMB-ICABVDEN * (10 ** 7)
000172              MOVE 6                  TO WCTV00-CAMBIO-CTP-INT
000172              MOVE 7                  TO WCTV00-CAMBIO-CTP-DEC
000172              COMPUTE WCTV00-CAMBIO-CTP = MOVP-ICABMOV * (10 ** 7)
BAV158*             MOVE DIV-NDCLDIV        TO WCTV00-CTVCP-DEC
BAV158              MOVE W-COM-NUM-C        TO WCTV00-CTVCP-DEC
000172              COMPUTE WCTV00-CTVCP-INT = 18 - WCTV00-CTVCP-DEC
000172              MOVE 'CTVCP'            TO WCTV00-COMANDO
000172              PERFORM 0869-CALCOLA-CONTROVALORI
000172                 THRU 0869-CALCOLA-CONTROVALORI-END
000172              MOVE WCTV00-CTVCP       TO MOVE-ISPSVAL
000172           ELSE
000172              IF MOVP-CISO = W-CSIGDCON
000172                 MOVE MOVE-ICTVSPS     TO  MOVE-ISPSVAL
000172              END-IF
000172              IF MOVP-CISO = W-CSIGDBASE
000172                 MOVE MOVE-ICTVLISPS   TO  MOVE-ISPSVAL
000172              END-IF
000172           END-IF
000172        END-IF
000172     ELSE
000172*-----------------------------------CHIAMATA ZMBCTV00
000172        IF MOVP-CISO = W-DIVORD
000172           MOVE 'ZOR030401'   TO W-DECOD
000172           COPY ZMZINDIR.
000172           COPY ZMZVALNM.
000172           MOVE W-COM-NUM     TO WRK-DEC-ORD
000172           IF WRK-DEC-ORD  < 3
000172              COMPUTE W-DIFF = 3 - WRK-DEC-ORD
000172              COMPUTE WRK-ISPSVAL-TRANSIT =
APV029*                       WRK-ISPSVAL-TRANSIT / 10 ** W-DIFF
APV029                        WRK-ISPSVAL-TRANSIT-P / 10 ** W-DIFF
000172              COMPUTE WRK-ISPSVAL-TRANSIT =
000172                        WRK-ISPSVAL-TRANSIT * 10 ** W-DIFF
APV029              MOVE WRK-ISPSVAL-TRANSIT TO WRK-ISPSVAL-TRANSIT-P
000172           END-IF
APV029*          MOVE WRK-ISPSVAL-TRANSIT   TO MOVE-ISPSVAL
000172           MOVE WRK-ISPSVAL-TRANSIT-P  TO MOVE-ISPSVAL
000172        ELSE
000172           IF MOVP-CISO NOT = W-CSIGDCON
000172           AND MOVP-CISO NOT = W-CSIGDBASE
000172              INITIALIZE ZMWCTV00
000172              COMPUTE WCTV00-IMPORTO =
000241*                           WRK-ISPSVAL-TRANSIT * (10 ** 3)
000241                            WRK-ISPSVAL-TRANSIT-P * (10 ** 8)
000172              COMPUTE WCTV00-CAMBIO  =
000172                             WRK-CAMBIO-TRANSIT * (10 ** 7)
000172              MOVE 6                  TO WCTV00-CAMBIO-CTP-INT
000172              MOVE 7                  TO WCTV00-CAMBIO-CTP-DEC
000172              COMPUTE WCTV00-CAMBIO-CTP = MOVP-ICABMOV * (10 ** 7)
BAV158*             MOVE DIV-NDCLDIV        TO WCTV00-CTVCP-DEC
BAV158              MOVE W-COM-NUM-C        TO WCTV00-CTVCP-DEC
000172              COMPUTE WCTV00-CTVCP-INT = 18 - WCTV00-CTVCP-DEC
000172              MOVE 'CTVCP'            TO WCTV00-COMANDO
000241*             PERFORM 0869-CALCOLA-CONTROVALORI
000241*                THRU 0869-CALCOLA-CONTROVALORI-END
000241              PERFORM 0869-CALCOLA-CONTR-PER
000241                 THRU 0869-CALCOLA-CONTR-PER-END
000172              MOVE WCTV00-CTVCP       TO MOVE-ISPSVAL
000172           ELSE
000172              IF MOVP-CISO = W-CSIGDCON
000172                 MOVE MOVE-ICTVSPS     TO  MOVE-ISPSVAL
000172              END-IF
000172              IF MOVP-CISO = W-CSIGDBASE
000172                 MOVE MOVE-ICTVLISPS   TO  MOVE-ISPSVAL
000172              END-IF
000172           END-IF
000172        END-IF
000172     END-IF.

000172*    IF W-COM-NUM-C < 3
000172*       COMPUTE W-DIFF = 3 - W-COM-NUM-C
000172*       COMPUTE MOVE-ISPSVAL   =
000172*               MOVE-ISPSVAL   / 10 ** W-DIFF
000172*       COMPUTE MOVE-ISPSVAL   =
000172*               MOVE-ISPSVAL   * 10 ** W-DIFF
000172*    END-IF.

       0852-SALTA-CALCOLO.

           MOVE 'ZEC112901'        TO W-DECOD
           MOVE W-XXNN-N           TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE W-COM-NUM = MOVE-ISPSVAL * 1000

           MOVE W-COM-NUM          TO MOD(M-I(IND1):M-L(IND1))
           MOVE W-CIST             TO DIV-CIST
           MOVE MOVP-CISO          TO DIV-CISO

           PERFORM 0870-TRATTA-DIVISA
              THRU 0870-TRATTA-DIVISA-END

           MOVE DIV-NDCLDIV        TO WRK-NDCLDIV
           PERFORM 0838-CNTL-DECIMALI
              THRU 0838-CNTL-DECIMALI-END
           IF M-S(IND1) = 'E'
              GO TO 0852-PERMILLARE-END
           END-IF

070797     MOVE DIV-NDCLDIV  TO WCM-DECIMALI
"          MOVE IND1         TO WCM-IND-DEC
070797     COPY ZMZDECIM.

000172*    MOVE 'ZEC110601'        TO W-DECOD
000172     MOVE 'ZEC113601'        TO W-DECOD
           MOVE W-XXNN-N           TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
000172*    COMPUTE W-COM-NUM = MOVE-ICTVSPS * 1000
000172     COMPUTE W-COM-NUM = MOVE-ICTVLISPS * 1000
           MOVE W-COM-NUM          TO MOD(M-I(IND1):M-L(IND1)).

           MOVE W-DECSIGBASE       TO WRK-NDCLDIV
           PERFORM 0838-CNTL-DECIMALI
              THRU 0838-CNTL-DECIMALI-END
           IF M-S(IND1) = 'E'
              GO TO 0852-PERMILLARE-END
           END-IF
070797     MOVE W-DECSIGBASE TO WCM-DECIMALI
"          MOVE IND1         TO WCM-IND-DEC
070797     COPY ZMZDECIM.

000172     MOVE 'ZEC110601'        TO W-DECOD
000172     MOVE W-XXNN-N           TO C
000172     COPY ZMZINDIR.
000172     COPY ZMZVALNM.
000172     IF MOD(M-I(IND7):M-L(IND7)) = W-CSIGDBASE
000172        COMPUTE W-COM-NUM = MOVE-ICTVLISPS * 1000
000172        MOVE W-DECSIGBASE    TO WRK-NDCLDIV
000172        MOVE W-DECSIGBASE    TO WCM-DECIMALI
000172     END-IF
000172     IF MOD(M-I(IND7):M-L(IND7)) = W-CSIGDCON
000172        COMPUTE W-COM-NUM = MOVE-ICTVSPS * 1000
000172        MOVE W-DECSIGCON     TO WRK-NDCLDIV
000172        MOVE W-DECSIGCON     TO WCM-DECIMALI
000172     END-IF

000172     MOVE W-COM-NUM          TO MOD(M-I(IND1):M-L(IND1)).

000172     PERFORM 0838-CNTL-DECIMALI
000172        THRU 0838-CNTL-DECIMALI-END
000172     IF M-S(IND1) = 'E'
000172        GO TO 0852-PERMILLARE-END
000172     END-IF
000172     MOVE IND1         TO WCM-IND-DEC
000172     COPY ZMZDECIM.

000172     MOVE 'ZEC113301'        TO W-DECOD
000172     MOVE W-XXNN-N           TO C
000172     COPY ZMZINDIR.
000172     COPY ZMZVALNM.
000172     COMPUTE W-COM-NUM = MOVE-ICTVSPS * 1000
000172     MOVE W-COM-NUM          TO MOD(M-I(IND1):M-L(IND1)).

000172     MOVE W-DECSIGCON        TO WRK-NDCLDIV
000172     PERFORM 0838-CNTL-DECIMALI
000172        THRU 0838-CNTL-DECIMALI-END
000172     IF M-S(IND1) = 'E'
000172        GO TO 0852-PERMILLARE-END
000172     END-IF
000172     MOVE W-DECSIGCON  TO WCM-DECIMALI
000172     MOVE IND1         TO WCM-IND-DEC
000172     COPY ZMZDECIM.

           IF WRK-ZDV1301-VAL = 'NO'
              MOVE 'ZOR030201'                TO W-DECOD
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVE-CDIVCAP
              MOVE 'ZOR030501'                TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVE-ICAPSPS = W-COM-NUM / (10 ** M-D(IND1))
              MOVE 'ZOR030901'                TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE MOVE-ICABCAP = W-COM-NUM / (10 ** M-D(IND1))
000172*       MOVE 'ZEC110601'        TO W-DECOD
000172        MOVE 'ZEC113601'        TO W-DECOD
              MOVE W-XXNN-N           TO C
              COPY ZMZINDIR.
              MOVE IND1               TO IND16
              MOVE W-CIST             TO DIV-CIST
000172*       MOVE MOVE-CDIVCAP       TO DIV-CISO
000172        MOVE W-CSIGDBASE        TO DIV-CISO
              PERFORM 0870-TRATTA-DIVISA
                 THRU 0870-TRATTA-DIVISA-END

000172*       MOVE DIV-NDCLDIV        TO WRK-NDCLDIV
000172        MOVE W-DECSIGBASE       TO WRK-NDCLDIV
              PERFORM 0838-CNTL-DECIMALI
                 THRU 0838-CNTL-DECIMALI-END
              IF M-S(IND1) = 'E'
                 GO TO 0852-PERMILLARE-END
              END-IF
000172        MOVE 'ZEC113301'        TO W-DECOD
000172        MOVE W-XXNN-N           TO C
000172        COPY ZMZINDIR.
000172        MOVE IND1               TO IND16
000172        MOVE W-CIST             TO DIV-CIST
000172        MOVE W-CSIGDCON         TO DIV-CISO
000172        PERFORM 0870-TRATTA-DIVISA
000172           THRU 0870-TRATTA-DIVISA-END
000172
000172        MOVE W-DECSIGCON        TO WRK-NDCLDIV
000172        PERFORM 0838-CNTL-DECIMALI
000172           THRU 0838-CNTL-DECIMALI-END
000172        IF M-S(IND1) = 'E'
000172           GO TO 0852-PERMILLARE-END
000172        END-IF
              MOVE 'ZEC110501'              TO W-DECOD
              MOVE W-XXNN-N                 TO C
              COPY ZMZINDIR.
000172        MOVE W-CIST                   TO DIV-CIST
000172        MOVE MOD(M-I(IND7):M-L(IND7)) TO DIV-CISO
000172        PERFORM 0870-TRATTA-DIVISA
000172           THRU 0870-TRATTA-DIVISA-END
              MOVE DIV-NDCLDIV        TO WRK-NDCLDIV
              PERFORM 0838-CNTL-DECIMALI
                 THRU 0838-CNTL-DECIMALI-END
              IF M-S(IND1) = 'E'
                 GO TO 0852-PERMILLARE-END
              END-IF
070797        MOVE DIV-NDCLDIV  TO WCM-DECIMALI
"             MOVE IND1         TO WCM-IND-DEC
070797        COPY ZMZDECIM.
070797        MOVE W-DECSIGBASE TO WCM-DECIMALI
"             MOVE IND16        TO WCM-IND-DEC
070797        COPY ZMZDECIM.
           ELSE
              MOVE W-CSIGDBASE                TO MOVE-CDIVCAP
              MOVE W-COM-NUM-DEC8             TO MOVE-ICAPSPS
              MOVE 1                          TO MOVE-ICABCAP
000172*       MOVE 'ZEC110601'        TO W-DECOD
000172        MOVE 'ZEC113601'        TO W-DECOD
              MOVE W-XXNN-N           TO C
              COPY ZMZINDIR.
              MOVE IND1               TO IND16
              MOVE W-DECSIGBASE       TO WRK-NDCLDIV
              PERFORM 0838-CNTL-DECIMALI
                 THRU 0838-CNTL-DECIMALI-END
              IF M-S(IND1) = 'E'
                 GO TO 0852-PERMILLARE-END
              END-IF
              MOVE 'ZEC110501'              TO W-DECOD
              MOVE W-XXNN-N                 TO C
              COPY ZMZINDIR.
000172*       MOVE W-DECSIGBASE             TO WRK-NDCLDIV
000172        MOVE W-CIST                   TO DIV-CIST
000172        MOVE MOD(M-I(IND7):M-L(IND7)) TO DIV-CISO
000172        PERFORM 0870-TRATTA-DIVISA
000172           THRU 0870-TRATTA-DIVISA-END
000172        MOVE DIV-NDCLDIV        TO WRK-NDCLDIV
              PERFORM 0838-CNTL-DECIMALI
                 THRU 0838-CNTL-DECIMALI-END
              IF M-S(IND1) = 'E'
                 GO TO 0852-PERMILLARE-END
              END-IF
000172*       MOVE W-DECSIGBASE TO WCM-DECIMALI
000172        MOVE DIV-NDCLDIV  TO WCM-DECIMALI
070797        MOVE IND1         TO WCM-IND-DEC
070797        COPY ZMZDECIM.
070797        MOVE W-DECSIGBASE TO WCM-DECIMALI
"             MOVE IND16        TO WCM-IND-DEC
070797        COPY ZMZDECIM.
           END-IF.
       0852-PERMILLARE-END.
           EXIT.
       0852-CNTR-ZDV1301.
           MOVE 'NO'  TO WRK-ZDV1301-VAL

120597     MOVE 'ZEC113201' TO W-DECOD
120597     MOVE W-XXNN-N    TO C
120597     COPY ZMZINDIR.
120597     MOVE MOD(M-I(IND1):M-L(IND1)) TO W-XXN

000256*    IF WRK-TVOXCND = 10
000256     IF (WRK-TVOXCND = 10 OR 11)
140597     AND W-XXN-N NOT NUMERIC
               MOVE SPACES               TO W-MOD-ERR
               MOVE '0'                  TO W-MAP-ERR
               MOVE 'S107'               TO W-COD-ERR
               MOVE 2                    TO W-FLAG-ERR
               PERFORM 9999-GESTIONE-ERRORE
                  THRU 9999-GESTIONE-ERRORE-END
140597        GO TO 0852-CNTR-ZDV1301-END
140597     END-IF.
BDR117*- MODIFICA PER CALCOLO COMMISSIONI SU TRAVELLERS CHEQUES.
BDR117*- ESSENDO LE RICORRENZE DEI VARI TAGLI MOVIMENTATI POSTE TUTTE
BDR117*- SULLA RICORRENZA 1 DELLA DISTINTA VALORI(ZONA ZDV13) VENGONO
BDR117*- SOMMATI TURTTI I CTV PRESENTI SULLA SINGOLE RICORRENZE DELLA
BDR117*- ZONA DELLE DIVISE (ZDI04)
BDR117*-------------------------- SE ZDV130101 = TC TRATTA SOLO
BDR117*-------------------------- LA PRIMA RICORRENZA
BDR117     MOVE 'ZDV130101'               TO W-DECOD.
BDR117     COPY ZMZINDIR.
BDR117     IF MOD(M-I(IND1):M-L(IND1)) = 'TC'
BDR117        MOVE 'SI'                   TO WRK-ZDV1301-VAL
BDR117        MOVE 'ZDV131701'            TO W-DECOD
BDR117        COPY ZMZINDIR.
BDR117        COPY ZMZVALNM.
BDR117        IF W-COM-NUM = 4
BDR117           MOVE 'ZDV130201'         TO W-DECOD
BDR117           COPY ZMZINDIR.
BDR117           COPY ZMZVALNM.
BDR117           IF W-COM-NUM > 0
BDR117              MOVE 'ZDI040601'         TO W-DECOD
BDR117              COPY ZMZINDIR.
BDR117              COPY ZMZVALNM.
BDR117              COMPUTE W-COM-NUM-DEC8 = W-COM-NUM-DEC8 +
BDR117                            (W-COM-NUM / 10 ** M-D(IND1))
000172              MOVE '0434'         TO COORD-4
000172              COPY ZMZINDIR.
000172              COPY ZMZVALNM.
000172              COMPUTE W-COM-NUM-DEC8B = W-COM-NUM-DEC8B +
000172                                 (W-COM-NUM / 10 ** M-D(IND1))
BDR117           END-IF
BDR117           MOVE 'ZDV131901'         TO W-DECOD
BDR117           COPY ZMZINDIR.
BDR117           COPY ZMZVALNM.
BDR117           IF W-COM-NUM > 0
BDR117              MOVE 'ZDI040602'         TO W-DECOD
BDR117              COPY ZMZINDIR.
BDR117              COPY ZMZVALNM.
BDR117              COMPUTE W-COM-NUM-DEC8 = W-COM-NUM-DEC8 +
BDR117                            (W-COM-NUM / 10 ** M-D(IND1))
000172              MOVE '0434'         TO COORD-4
000172              COPY ZMZINDIR.
000172              COPY ZMZVALNM.
000172              COMPUTE W-COM-NUM-DEC8B = W-COM-NUM-DEC8B +
000172                                 (W-COM-NUM / 10 ** M-D(IND1))
BDR117           END-IF
BDR117           MOVE 'ZDV132301'         TO W-DECOD
BDR117           COPY ZMZINDIR.
BDR117           COPY ZMZVALNM.
BDR117           IF W-COM-NUM > 0
BDR117              MOVE 'ZDI040603'         TO W-DECOD
BDR117              COPY ZMZINDIR.
BDR117              COPY ZMZVALNM.
BDR117              COMPUTE W-COM-NUM-DEC8 = W-COM-NUM-DEC8 +
BDR117                            (W-COM-NUM / 10 ** M-D(IND1))
000172              MOVE '0434'         TO COORD-4
000172              COPY ZMZINDIR.
000172              COPY ZMZVALNM.
000172              COMPUTE W-COM-NUM-DEC8B = W-COM-NUM-DEC8B +
000172                                 (W-COM-NUM / 10 ** M-D(IND1))
BDR117           END-IF
BDR117           MOVE 'ZDV132701'         TO W-DECOD
BDR117           COPY ZMZINDIR.
BDR117           COPY ZMZVALNM.
BDR117           IF W-COM-NUM > 0
BDR117              MOVE 'ZDI040604'         TO W-DECOD
BDR117              COPY ZMZINDIR.
BDR117              COPY ZMZVALNM.
BDR117              COMPUTE W-COM-NUM-DEC8 = W-COM-NUM-DEC8 +
BDR117                            (W-COM-NUM / 10 ** M-D(IND1))
000172              MOVE '0434'         TO COORD-4
000172              COPY ZMZINDIR.
000172              COPY ZMZVALNM.
000172              COMPUTE W-COM-NUM-DEC8B = W-COM-NUM-DEC8B +
000172                                 (W-COM-NUM / 10 ** M-D(IND1))
BDR117           END-IF
BDR117           MOVE 'ZDV133101'         TO W-DECOD
BDR117           COPY ZMZINDIR.
BDR117           COPY ZMZVALNM.
BDR117           IF W-COM-NUM > 0
BDR117              MOVE 'ZDI040605'         TO W-DECOD
BDR117              COPY ZMZINDIR.
BDR117              COPY ZMZVALNM.
BDR117              COMPUTE W-COM-NUM-DEC8 = W-COM-NUM-DEC8 +
000172                            (W-COM-NUM / 10 ** M-D(IND1))
000172              MOVE '0434'         TO COORD-4
000172              COPY ZMZINDIR.
000172              COPY ZMZVALNM.
000172              COMPUTE W-COM-NUM-DEC8B = W-COM-NUM-DEC8B +
000172                                 (W-COM-NUM / 10 ** M-D(IND1))
BDR117           END-IF
BDR117        END-IF
BDR117     END-IF.
BDR117*----------FINE MODIFICA
           PERFORM
              VARYING N-M-2 FROM 1 BY 1 UNTIL N-M-2 > WCM-INDMAX(13)
              MOVE '1301'                    TO COORD-4
              COPY ZMZINDIR.
      *-------------------------- PER OGNI ZDZ130101/08, DIVERSO DA
      *-------------------------- SPAZI SOMMA LA RELATIVA RICORRENZA
      *-------------------------- DI ZDI040601/08
BDR117*       IF MOD(M-I(IND1):M-L(IND1)) GREATER SPACES
BDR117        IF MOD(M-I(IND1):M-L(IND1)) GREATER SPACES AND
BDR117           MOD(M-I(IND1):M-L(IND1)) NOT = 'TC'
                 MOVE 'SI'           TO WRK-ZDV1301-VAL
                 MOVE '1317'         TO COORD-4
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
080597***--- PER VOCE DI CONDIZIONE 10 BISOGNA CONSIDERARE TUTTI I
080597***--- GENERI VALORI COMPRESI LE BANCONOTE (TP SPORTELLO,
080597***--- VERSAMENTI,PRELEVAMENTI VOCE 2013(BPN))
080597           IF WRK-TVOXCND = 10
120597              IF W-XXN-N = N-M-2
  ""                   IF W-COM-NUM GREATER ZEROES
  ""                      MOVE '0406'         TO COORD-4
  ""                      COPY ZMZINDIR.
  ""                      COPY ZMZVALNM.
  ""                      COMPUTE W-COM-NUM-DEC8 = W-COM-NUM-DEC8 +
  ""                                   (W-COM-NUM / 10 ** M-D(IND1))
000172                    MOVE '0434'         TO COORD-4
000172                    COPY ZMZINDIR.
000172                    COPY ZMZVALNM.
000172                    COMPUTE W-COM-NUM-DEC8B = W-COM-NUM-DEC8B +
000172                                 (W-COM-NUM / 10 ** M-D(IND1))
080597                 END-IF
  ""                END-IF
080597           ELSE
                    IF W-COM-NUM GREATER ZEROES AND
                       (W-COM-NUM NOT = 6 AND
                       W-COM-NUM NOT = 8 AND
                       W-COM-NUM NOT = 5)
000256                 AND WRK-TVOXCND NOT = 11
                       MOVE '0406'         TO COORD-4
                       COPY ZMZINDIR.
                       COPY ZMZVALNM.
                       COMPUTE W-COM-NUM-DEC8 = W-COM-NUM-DEC8 +
                                       (W-COM-NUM / 10 ** M-D(IND1))
000172                 MOVE '0434'         TO COORD-4
000172                 COPY ZMZINDIR.
000172                 COPY ZMZVALNM.
000172                 COMPUTE W-COM-NUM-DEC8B = W-COM-NUM-DEC8B +
000172                                 (W-COM-NUM / 10 ** M-D(IND1))
                    END-IF
000256              IF W-COM-NUM GREATER ZEROES AND
000256                 (W-COM-NUM = 6 AND WRK-TVOXCND = 11)
000256                 MOVE '0433'         TO COORD-4
000256                 COPY ZMZINDIR.
000256                 COPY ZMZVALNM.
000256                 IF W-COM-NUM = 3
000256                    MOVE '0406'         TO COORD-4
000256                    COPY ZMZINDIR.
000256                    COPY ZMZVALNM.
000256                    COMPUTE W-COM-NUM-DEC8 = W-COM-NUM-DEC8 +
000256                                 (W-COM-NUM / 10 ** M-D(IND1))
000256                    MOVE '0434'         TO COORD-4
000256                    COPY ZMZINDIR.
000256                    COPY ZMZVALNM.
000256                    COMPUTE W-COM-NUM-DEC8B = W-COM-NUM-DEC8B +
000256                                 (W-COM-NUM / 10 ** M-D(IND1))
000256                 END-IF
000256              END-IF
080597           END-IF
              END-IF
           END-PERFORM.
       0852-CNTR-ZDV1301-END.
           EXIT.
       0854-SPESA-FISSA.
           MOVE 'ZEC112801'                      TO W-DECOD
           MOVE W-XXNN-N                         TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           IF W-COM-NUM NOT = 0
              MOVE W-COM-NUM                     TO W-COM-QTA
           END-IF.
           MOVE 'ZEC110901'                      TO W-DECOD
           MOVE W-XXNN-N                         TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE W-COM-NUM-DEC = W-COM-NUM / 10 ** M-D(IND1)
           MOVE W-COM-NUM-DEC                    TO MOVE-IMAXSPS
           MOVE 'ZEC110801'                      TO W-DECOD
           MOVE W-XXNN-N                         TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE W-COM-NUM-DEC = W-COM-NUM / 10 ** M-D(IND1)
           MOVE W-COM-NUM-DEC                    TO MOVE-IMINSPS.
       0854-SPESA-FISSA-END.
           EXIT.
       0856-SPESA-FISSA-VALUTA.
           MOVE SPACES        TO WRK-DIVISA-ERR.
           MOVE 'ZEC112701'   TO W-DECOD.
           MOVE W-XXNN-N      TO C.
           COPY ZMZINDIR.
           MOVE IND1          TO IND7.
      *--------------------------------- SE ZEC112701/08(SIGLA DIVISA)
      *--------------------------------- NON E' VALORIZZATA, ELABORA UN
      *--------------------------------- ALTRO CONTO ECONOMICO
           IF MOD(M-I(IND7):M-L(IND7)) NOT GREATER SPACES
              MOVE 'SI'          TO WRK-DIVISA-ERR
              MOVE 'E'           TO M-S(IND1)
              MOVE 'S083'        TO W-COD-ERR
              MOVE M-M(IND1)     TO W-MAP-ERR
              MOVE W-DEC-COORD   TO W-MOD-ERR
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
              GO TO 0856-SPESA-FISSA-VALUTA-END
           END-IF
           MOVE SPACES                           TO W-EXPERFORM.
EUR005     IF WRK-DIVISA-MOVIMENTO =  MOD(M-I(IND7):M-L(IND7))
EUR005        MOVE WRK-CAMBIO-MOVIMENTO TO  W-CAMBIO
EUR005        MOVE 'SI'                 TO  W-EXPERFORM
EUR005     ELSE
              PERFORM 0836-ABBINA2
                 THRU 0836-ABBINA2-END
                 VARYING IND8 FROM 1 BY 1
                 UNTIL IND8 > WCM-INDMAX(04) OR
                 W-EXPERFORM = 'SI'
              IF W-EXPERFORM = 'SI'
                 SUBTRACT 1 FROM IND8
                 PERFORM 0857-CALCOLA-CAMBIO
                    THRU 0857-CALCOLA-CAMBIO-END
000172*          MOVE 'ZEC110501'                   TO W-DECOD
000172*          MOVE W-XXNN-N                      TO C
000172*          COPY ZMZINDIR.
000172*          COPY ZMZVALNM.
000172*          COMPUTE W-COM-NUM-DEC6 = W-COM-NUM / 10 ** M-D(IND1)
000172*          COMPUTE W-COM-NUM-DEC5 = W-COM-NUM-DEC6 * W-CAMBIO

000172*          MOVE MOD(M-I(IND7):M-L(IND7)) TO DIV-CISO
000172*          MOVE W-CIST                   TO DIV-CIST
000172*          PERFORM 0870-TRATTA-DIVISA
000172*             THRU 0870-TRATTA-DIVISA-END
000172*          MOVE DIV-NDCLDIV      TO WRK-NDCLDIV
000172*          PERFORM 0838-CNTL-DECIMALI
000172*             THRU 0838-CNTL-DECIMALI-END
000172*          IF M-S(IND1) = 'E'
000172*             GO TO 0856-SPESA-FISSA-VALUTA-END
000172*          END-IF
000172*          MOVE DIV-NDCLDIV  TO WCM-DECIMALI
000172*          MOVE IND1         TO WCM-IND-DEC
000172*          COPY ZMZDECIM.
EUR005        END-IF
EUR005     END-IF.

EUR005     IF W-EXPERFORM = 'SI'

000172*------------------------------------------CALCOLA IN CONTROVALORE
000172*-----------------------------------------------CHIAMANDO ZMBCTV00
000172        INITIALIZE ZMWCTV00
000172        COMPUTE WCTV00-CAMBIO = W-CAMBIO * (10 ** 7)
000172        MOVE 'ZEC110501'             TO W-DECOD
000172        MOVE W-XXNN-N                TO C
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        MOVE W-COM-NUM               TO WCTV00-IMPORTO
000172        COMPUTE W-COM-NUM-DEC7 = W-COM-NUM / (10 ** M-D(IND1))
000172        MOVE 'CTVDC'                 TO WCTV00-COMANDO
000172        PERFORM 0869-CALCOLA-CONTROVALORI
000172           THRU 0869-CALCOLA-CONTROVALORI-END
000172        IF MOD(M-I(IND7):M-L(IND7)) = W-CSIGDBASE
000172           MOVE W-COM-NUM-DEC7          TO W-COM-NUM-DEC5
000172        ELSE
000172           MOVE WRK-DIVLIS              TO W-COM-NUM-DEC5
000172        END-IF
000172        IF MOD(M-I(IND7):M-L(IND7)) = W-CSIGDCON
000172           MOVE W-COM-NUM-DEC7          TO W-COM-NUM-DEC6
000172        ELSE
000172           MOVE WRK-DIVCON              TO W-COM-NUM-DEC6
000172        END-IF

000172*       MOVE 'ZEC110601'                   TO W-DECOD
000172        MOVE 'ZEC113601'                   TO W-DECOD
              MOVE W-XXNN-N                      TO C
              COPY ZMZINDIR.
000172        COMPUTE W-COM1 = W-COM-NUM-DEC5 * (10 ** M-D(IND1))
000172        COPY ZMZFMMOD.
000172        MOVE SPACES          TO M-S(IND1)
000172*       COPY ZMZVALNM.
000172*       IF W-DECSIGBASE < M-D(IND1)
000172*          COMPUTE W-DIFF = M-D(IND1) - W-DECSIGBASE
000172*          COMPUTE W-COM-NUM-DEC5 =
000172*                  W-COM-NUM-DEC5 / 10 ** W-DIFF
000172*          COMPUTE W-COM-NUM-DEC5 =
000172*                  W-COM-NUM-DEC5 * 10 ** W-DIFF
000172*       END-IF
000172*       COMPUTE W-COM-NUM = W-COM-NUM-DEC5 * 10 ** M-D(IND1)
000172*       MOVE W-COM-NUM(DA1:)               TO
000172*                                  MOD(M-I(IND1):M-L(IND1))
              MOVE W-DECSIGBASE     TO WRK-NDCLDIV
              PERFORM 0838-CNTL-DECIMALI
                 THRU 0838-CNTL-DECIMALI-END
              IF M-S(IND1) = 'E'
                 GO TO 0856-SPESA-FISSA-VALUTA-END
              END-IF

070797        MOVE W-DECSIGBASE TO WCM-DECIMALI
"             MOVE IND1         TO WCM-IND-DEC
070797        COPY ZMZDECIM.

000172        MOVE 'ZEC113301'                   TO W-DECOD
000172        MOVE W-XXNN-N                      TO C
000172        COPY ZMZINDIR.
000172        COMPUTE W-COM1 = W-COM-NUM-DEC6 * (10 ** M-D(IND1))
000172        COPY ZMZFMMOD.
000172        MOVE SPACES           TO M-S(IND1)
000172        MOVE W-DECSIGCON      TO WRK-NDCLDIV
000172        PERFORM 0838-CNTL-DECIMALI
000172           THRU 0838-CNTL-DECIMALI-END
000172        IF M-S(IND1) = 'E'
000172           GO TO 0856-SPESA-FISSA-VALUTA-END
000172        END-IF
000172        MOVE W-DECSIGCON  TO WCM-DECIMALI
000172        MOVE IND1         TO WCM-IND-DEC
000172        COPY ZMZDECIM.
           ELSE
              IF W-EXPERFORM = SPACES
                 MOVE 'ZOR030201'                TO W-DECOD
                 COPY ZMZINDIR.
                 IF MOD(M-I(IND7):M-L(IND7)) = MOD(M-I(IND1):M-L(IND1))
000172*             PERFORM 0859-CALCOLA-ZEC1106
000172*                THRU 0859-CALCOLA-ZEC1106-END
000172              PERFORM 0859-CALCOLA-ZEC1136
000172                 THRU 0859-CALCOLA-ZEC1136-END
                 ELSE
000172              INITIALIZE DCLTBALICMB
                    MOVE MOD(M-I(IND7):M-L(IND7)) TO LICMB-CISO
000172*             MOVE 'MI'                     TO LICMB-CSIGBORCMB
000172              MOVE 'OP'                     TO LICMB-CSIGBORCMB
                    MOVE MOVP-CIST                TO LICMB-CIST
                    MOVE L-DATA-OGGI              TO LICMB-ANNOMMGG
                    PERFORM 0837-LEGGI-ALICMB
                       THRU 0837-LEGGI-ALICMB-END
000172              IF W-SQL-NON-TROVATO                                TS006716
000172                 MOVE 'E'                        TO M-S(IND7)     TS006717
000172                 MOVE '1127'                     TO COORD-4
000172                 MOVE W-XXNN-N                   TO N-M-2
000172                 MOVE W-DEC-COORD                TO W-MOD-ERR     TS006718
000172                 MOVE M-M(IND7)                  TO W-MAP-ERR     TS006719
000172                 MOVE 2                          TO W-FLAG-ERR    TS006720
000172                 MOVE 'S165'                     TO W-COD-ERR     TS006721
000172                 PERFORM 9999-GESTIONE-ERRORE                     TS006722
000172                    THRU 9999-GESTIONE-ERRORE-END                 TS006723
000172                 GO  TO 0856-SPESA-FISSA-VALUTA-END               TS006723
000172              END-IF                                              TS006723
000172*             MOVE 'ZEC110601'             TO W-DECOD
000172              MOVE 'ZEC113601'             TO W-DECOD
                    MOVE W-XXNN-N                TO C
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    MOVE IND1                    TO IND2
                    MOVE 'ZEC110501'             TO W-DECOD
                    MOVE W-XXNN-N                TO C
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    COMPUTE W-COM-NUM-DEC7 = W-COM-NUM / 10
                                         ** M-D(IND1)
000172*             COMPUTE W-COM-NUM-DEC5 = W-COM-NUM-DEC7 *
000172*                                      LICMB-ICABVLTT
130597***--- IMPOSTA DECIMALI DIVISA DI ZEC1127(IND7)
130597              MOVE W-CIST                   TO DIV-CIST
130597              MOVE MOD(M-I(IND7):M-L(IND7)) TO DIV-CISO
130597              PERFORM 0870-TRATTA-DIVISA
130597                 THRU 0870-TRATTA-DIVISA-END
130597              MOVE DIV-NDCLDIV      TO WRK-NDCLDIV
130597              PERFORM 0838-CNTL-DECIMALI
130597                 THRU 0838-CNTL-DECIMALI-END
130597              IF M-S(IND1) = 'E'
130597                 GO TO 0856-SPESA-FISSA-VALUTA-END
130597              END-IF

070797              MOVE DIV-NDCLDIV  TO WCM-DECIMALI
"                   MOVE IND1         TO WCM-IND-DEC
070797              COPY ZMZDECIM.
000172*------------------------------------------CALCOLA IN CONTROVALORE
000172*-----------------------------------------------CHIAMANDO ZMBCTV00
000172              INITIALIZE ZMWCTV00
000252*             COMPUTE WCTV00-CAMBIO = LICMB-ICABVLTT * (10 ** 7)
000252              COMPUTE WCTV00-CAMBIO = LICMB-ICABVDEN * (10 ** 7)
000172              COMPUTE WCTV00-IMPORTO = W-COM-NUM-DEC7 * (10 ** 3)
000172              MOVE 'CTVDC'         TO WCTV00-COMANDO
000172              PERFORM 0869-CALCOLA-CONTROVALORI
000172                 THRU 0869-CALCOLA-CONTROVALORI-END
000172              IF MOD(M-I(IND7):M-L(IND7)) = W-CSIGDBASE
000172                 MOVE W-COM-NUM-DEC7  TO W-COM-NUM-DEC5
000172              ELSE
000172                 MOVE WRK-DIVLIS      TO W-COM-NUM-DEC5
000172              END-IF
000172              IF MOD(M-I(IND7):M-L(IND7)) = W-CSIGDCON
000172                 MOVE W-COM-NUM-DEC7  TO W-COM-NUM-DEC6
000172              ELSE
000172                 MOVE WRK-DIVCON      TO W-COM-NUM-DEC6
000172              END-IF
000172*             IF W-DECSIGBASE < M-D(IND2)
000172*                COMPUTE W-DIFF = M-D(IND2) - W-DECSIGBASE
000172*                COMPUTE W-COM-NUM-DEC5 =
000172*                        W-COM-NUM-DEC5 / 10 ** W-DIFF
000172*                COMPUTE W-COM-NUM-DEC5 =
000172*                        W-COM-NUM-DEC5 * 10 ** W-DIFF
000172*             END-IF
000172*             COMPUTE W-COM-NUM = W-COM-NUM-DEC5 * 10
000172*                                            ** M-D(IND2)
000172*             MOVE W-COM-NUM(DA1:)  TO
000172*                                 MOD(M-I(IND2):M-L(IND2))
                    MOVE IND1             TO IND11
                    MOVE IND2             TO IND1
000172              COMPUTE W-COM1 = W-COM-NUM-DEC5 * (10 ** M-D(IND1))
000172              COPY ZMZFMMOD.
000172              MOVE SPACES           TO M-S(IND1)
                    MOVE W-DECSIGBASE     TO WRK-NDCLDIV
                    PERFORM 0838-CNTL-DECIMALI
                       THRU 0838-CNTL-DECIMALI-END
                    IF M-S(IND1) = 'E'
                       GO TO 0856-SPESA-FISSA-VALUTA-END
                    END-IF
                    MOVE IND11            TO IND1
070797              MOVE W-DECSIGBASE TO WCM-DECIMALI
"                   MOVE IND2         TO WCM-IND-DEC
070797              COPY ZMZDECIM.
000172              MOVE 'ZEC113301'                   TO W-DECOD
000172              MOVE W-XXNN-N                      TO C
000172              COPY ZMZINDIR.
000172              COMPUTE W-COM1 =
000172                      W-COM-NUM-DEC6 * (10 ** M-D(IND1))
000172              COPY ZMZFMMOD.
000172              MOVE SPACES          TO M-S(IND1)
000172              MOVE W-DECSIGCON  TO WCM-DECIMALI
000172              MOVE IND1         TO WCM-IND-DEC
000172              COPY ZMZDECIM.
                 END-IF
              END-IF
           END-IF.
000172*----------------------------------------VALORIZZO ICTVSPS
000172     MOVE 'ZEC113301'                      TO W-DECOD.
000172     MOVE W-XXNN-N                         TO C.
000172     COPY ZMZINDIR.
000172     COPY ZMZVALNM.
000172     COMPUTE W-COM-NUM-DEC6 = W-COM-NUM / 10 ** M-D(IND1).
000172     IF W-COM-QTA = 0
000172        MOVE W-COM-NUM-DEC6            TO MOVE-ICTVSPS
000172     ELSE
000172        COMPUTE MOVE-ICTVSPS = W-COM-NUM-DEC6 * W-COM-QTA
000172     END-IF
000172     MOVE W-DECSIGCON      TO WRK-NDCLDIV
000172     PERFORM 0838-CNTL-DECIMALI
000172        THRU 0838-CNTL-DECIMALI-END
000172     IF M-S(IND1) = 'E'
000172        GO TO 0856-SPESA-FISSA-VALUTA-END
000172     END-IF
000172     MOVE W-DECSIGCON  TO WCM-DECIMALI
000172     MOVE IND1         TO WCM-IND-DEC
000172     COPY ZMZDECIM.

000172*----------------------------------------VALORIZZO ICTVLISPS
000172*    MOVE 'ZEC110601'                      TO W-DECOD.
000172     MOVE 'ZEC113601'                      TO W-DECOD.
           MOVE W-XXNN-N                         TO C.
           COPY ZMZINDIR.
           COPY ZMZVALNM.
000172*    COMPUTE W-COM-NUM-DEC7 = W-COM-NUM / 10 ** M-D(IND1).
000172     COMPUTE W-COM-NUM-DEC5 = W-COM-NUM / 10 ** M-D(IND1).
           IF W-COM-QTA = 0
000172*       MOVE W-COM-NUM-DEC7                TO MOVE-ICTVSPS
000172        MOVE W-COM-NUM-DEC5                TO MOVE-ICTVLISPS
           ELSE
000172*       COMPUTE MOVE-ICTVSPS = W-COM-NUM-DEC7 * W-COM-QTA
000172        COMPUTE MOVE-ICTVLISPS = W-COM-NUM-DEC5 * W-COM-QTA
           END-IF.
           MOVE W-DECSIGBASE     TO WRK-NDCLDIV
           PERFORM 0838-CNTL-DECIMALI
              THRU 0838-CNTL-DECIMALI-END
           IF M-S(IND1) = 'E'
              GO TO 0856-SPESA-FISSA-VALUTA-END
           END-IF
070797     MOVE W-DECSIGBASE TO WCM-DECIMALI
"          MOVE IND1         TO WCM-IND-DEC
070797     COPY ZMZDECIM.
000172     MOVE SPACES                           TO WRK-FORZA.
           MOVE 'ZEC110301'                      TO W-DECOD.
           MOVE W-XXNN-N                         TO C.
           COPY ZMZINDIR.
           IF MOD(M-I(IND1):M-L(IND1)) NOT = 'F'
000198*       IF MOVE-IMAXSPS NOT = 0 AND
000198*          MOVE-IMINSPS NOT = 0
000198*             IF MOVE-ICTVSPS > MOVE-IMAXSPS
000198*             MOVE MOVE-IMAXSPS               TO MOVE-ICTVSPS
000198*          ELSE
000198*             IF MOVE-ICTVSPS < MOVE-IMINSPS
000198*                MOVE MOVE-IMINSPS            TO MOVE-ICTVSPS
000198*             END-IF
000198*          END-IF
000198*       END-IF
000172*       IF MOVE-IMINSPS NOT = 0
000172*          IF MOVE-ICTVSPS < MOVE-IMINSPS
000172*             MOVE MOVE-IMINSPS             TO MOVE-ICTVSPS
000172*          END-IF
000172*       END-IF
000172*       IF MOVE-IMAXSPS NOT = 0
000172*          IF MOVE-ICTVSPS > MOVE-IMAXSPS
000172*             MOVE MOVE-IMAXSPS             TO MOVE-ICTVSPS
000172*          END-IF
000172*       END-IF
000172
000172        IF MOD(M-I(IND7):M-L(IND7)) =  W-CSIGDBASE
000172           IF MOVE-IMINSPS NOT = 0
000172              IF MOVE-ICTVLISPS < MOVE-IMINSPS
000172                 MOVE MOVE-IMINSPS   TO MOVE-ICTVLISPS
000172                 IF W-CSIGDBASE = W-CSIGDCON
000172                    MOVE MOVE-IMINSPS   TO MOVE-ICTVSPS
000172                 ELSE
000172*-----------------------------------CHIAMATA ZMBCTV00
000172                   INITIALIZE ZMWCTV00
000172                   COMPUTE WCTV00-CAMBIO =  1 * (10 ** 7)
000172                   COMPUTE WCTV00-IMPORTO =
000172                                    MOVE-IMINSPS * (10 ** 3)
000172                   MOVE 'CTVDC'            TO WCTV00-COMANDO
000172                   PERFORM 0869-CALCOLA-CONTROVALORI
000172                      THRU 0869-CALCOLA-CONTROVALORI-END
000172                   MOVE WRK-DIVCON      TO MOVE-ICTVSPS
000172                 END-IF
000172                 MOVE 'MIN'             TO WRK-FORZA
000172              END-IF
000172           END-IF
000172           IF MOVE-IMAXSPS NOT = 0
000172              IF MOVE-ICTVLISPS > MOVE-IMAXSPS
000172                 MOVE MOVE-IMAXSPS      TO MOVE-ICTVLISPS
000172                 IF W-CSIGDBASE = W-CSIGDCON
000172                    MOVE MOVE-IMAXSPS   TO MOVE-ICTVSPS
000172                 ELSE
000172*-----------------------------------CHIAMATA ZMBCTV00
000172                   INITIALIZE ZMWCTV00
000172                   COMPUTE WCTV00-CAMBIO =  1 * (10 ** 7)
000172                   COMPUTE WCTV00-IMPORTO =
000172                                    MOVE-IMAXSPS * (10 ** 3)
000172                   MOVE 'CTVDC'            TO WCTV00-COMANDO
000172                   PERFORM 0869-CALCOLA-CONTROVALORI
000172                      THRU 0869-CALCOLA-CONTROVALORI-END
000172                   MOVE WRK-DIVCON      TO MOVE-ICTVSPS
000172                 END-IF
000172                 MOVE 'MAX'             TO WRK-FORZA
000172              END-IF
000172           END-IF
000172        ELSE
000172           MOVE ZEROES                   TO WRK-IMINSPS
000172                                            WRK-IMINSPS-C
000172                                            WRK-IMAXSPS
000172                                            WRK-IMAXSPS-C
000172           INITIALIZE  DCLTBALICMB
000172           MOVE MOD(M-I(IND7):M-L(IND7)) TO LICMB-CISO
000172           MOVE 'OP'                     TO LICMB-CSIGBORCMB
000172           MOVE MOVP-CIST                TO LICMB-CIST
000172           MOVE L-DATA-OGGI              TO LICMB-ANNOMMGG
000172           PERFORM 0837-LEGGI-ALICMB
000172              THRU 0837-LEGGI-ALICMB-END
000172           IF W-SQL-NON-TROVATO                                   TS006716
000172              MOVE 'E'                        TO M-S(IND1)        TS006717
000172              MOVE W-DEC-COORD                TO W-MOD-ERR        TS006718
000172              MOVE M-M(IND1)                  TO W-MAP-ERR        TS006719
000172              MOVE 2                          TO W-FLAG-ERR       TS006720
000172              MOVE 'S165'                     TO W-COD-ERR        TS006721
000172              PERFORM 9999-GESTIONE-ERRORE                        TS006722
000172                 THRU 9999-GESTIONE-ERRORE-END                    TS006723
000172              GO  TO 0856-SPESA-FISSA-VALUTA-END                  TS006723
000172           END-IF                                                 TS006723
000172           MOVE W-CIST                   TO DIV-CIST
000172           MOVE MOD(M-I(IND7):M-L(IND7)) TO DIV-CISO
000172           PERFORM 0870-TRATTA-DIVISA
000172              THRU 0870-TRATTA-DIVISA-END
000172*-----------------------------------CHIAMATA ZMBCTV00
000172           IF WRK-IMINSPS NOT = 0
000172              INITIALIZE ZMWCTV00
APV035*             COMPUTE WCTV00-CAMBIO = LICMB-ICABTLF * (10 ** 7)
000252*             COMPUTE WCTV00-CAMBIO = LICMB-ICABVLTT * (10 ** 7)
000252              COMPUTE WCTV00-CAMBIO = LICMB-ICABVDEN * (10 ** 7)
000172              COMPUTE WCTV00-IMPORTO = MOVE-IMINSPS * (10 ** 3)
000172              MOVE 'CTVDC'                    TO WCTV00-COMANDO
000172              PERFORM 0869-CALCOLA-CONTROVALORI
000172                 THRU 0869-CALCOLA-CONTROVALORI-END
000172              MOVE WRK-DIVLIS                 TO WRK-IMINSPS
000172              MOVE WRK-DIVCON                 TO WRK-IMINSPS-C
000172              IF MOVE-ICTVSPS < WRK-IMINSPS
000172                 MOVE WRK-IMINSPS       TO MOVE-ICTVLISPS
000172                 MOVE WRK-IMINSPS-C     TO MOVE-ICTVSPS
000172                 MOVE 'MIN'             TO WRK-FORZA
000172              END-IF
000172           END-IF
000172           IF WRK-IMAXSPS NOT = 0
000172              INITIALIZE ZMWCTV00
APV035*             COMPUTE WCTV00-CAMBIO = LICMB-ICABTLF * (10 ** 7)
000252*             COMPUTE WCTV00-CAMBIO = LICMB-ICABVLTT * (10 ** 7)
000252              COMPUTE WCTV00-CAMBIO = LICMB-ICABVDEN * (10 ** 7)
000172              COMPUTE WCTV00-IMPORTO = MOVE-IMAXSPS * (10 ** 3)
000172              MOVE 'CTVDC'                    TO WCTV00-COMANDO
000172              PERFORM 0869-CALCOLA-CONTROVALORI
000172                 THRU 0869-CALCOLA-CONTROVALORI-END
000172              MOVE WRK-DIVLIS                 TO WRK-IMAXSPS
000172              MOVE WRK-DIVCON                 TO WRK-IMAXSPS-C
000172              IF MOVE-ICTVSPS > WRK-IMAXSPS
000172                 MOVE WRK-IMAXSPS       TO MOVE-ICTVLISPS
000172                 MOVE WRK-IMAXSPS-C     TO MOVE-ICTVSPS
000172                 MOVE 'MIN'             TO WRK-FORZA
000172              END-IF
000172           END-IF
000172        END-IF
           END-IF.
      *-------------------------------- SE ZEC1127(IND7) NOT= CISO-MOVP
      *-------------------------------- CALCOLA ISPSVAL ALTRIMENTI
      *------------------------------- ISPSVAL = ZEC110501/10
000172*    IF MOD(M-I(IND7):M-L(IND7)) NOT = MOVP-CISO
000172*       COMPUTE MOVE-ISPSVAL = MOVE-ICTVSPS / MOVP-ICABMOV
000172*       MOVE W-CIST                           TO DIV-CIST
000172*       MOVE MOVP-CISO                        TO DIV-CISO
000172*       PERFORM 0870-TRATTA-DIVISA
000172*          THRU 0870-TRATTA-DIVISA-END
000172*       MOVE DIV-NDCLDIV                      TO W-COM-NUM-C
000172*       IF W-COM-NUM-C < 3
000172*          COMPUTE W-DIFF = 3 - W-COM-NUM-C
000172*          COMPUTE MOVE-ISPSVAL   =
000172*                  MOVE-ISPSVAL   / 10 ** W-DIFF
000172*          COMPUTE MOVE-ISPSVAL   =
000172*                  MOVE-ISPSVAL   * 10 ** W-DIFF
000172*       END-IF
000172*    ELSE
000172*       MOVE 'ZEC110501'       TO W-DECOD
000172*       MOVE W-XXNN-N          TO C
000172*       COPY ZMZINDIR.
000172*       COPY ZMZVALNM.
000172*       COMPUTE MOVE-ISPSVAL = W-COM-NUM / (10 ** M-D(IND1))
000172*    END-IF.
000172*------------- VERIFICA SE LA SPESA E' STATA FORZATA
000172*------------- SE FORZATA CONTROLLO
000172*-------------    DIVISA CONDIZIONE = DIVISA MOVIMENTO
000172*-------------       CONTROLLO
000172*-------------           FORZATO CON MASSIMO
000172*-------------              IMPOSTO SPESA UGUALE AL MASSIMO
000172*-------------           FORZATO CON MINIMO
000172*-------------              IMPOSTO SPESA UGUALE AL MINIMO
000172*-------------    DIVISA CONDIZIONE NOT = DIVISA MOVIMENTO
000172*-------------       SPESA = SPESA IN VALUTA ESPRESSA NELLA
000172*-------------               DIVISA DEL MOVIMENTO
000172*------------- SE NON FORZATA
000172*-------------    SE DIVISA CONDIZIONI NOT = DIVISA MOVIMENTO
000172*-------------       SPESA = SPESA IN VALUTA ESPRESSA NELLA
000172*-------------               DIVISA DEL MOVIMENTO
000172*-------------    ALTRIMENTI
000172*-------------       SPESA = SPESA IN VALUTA
000172     IF WRK-FORZA > SPACES
000172        IF MOD(M-I(IND7):M-L(IND7)) = MOVP-CISO
000172           IF WRK-FORZA = 'MIN'
000172              MOVE MOVE-IMINSPS    TO   MOVE-ISPSVAL
000172           END-IF
000172           IF WRK-FORZA = 'MAX'
000172              MOVE MOVE-IMAXSPS    TO   MOVE-ISPSVAL
000172           END-IF
000172        ELSE
000172           MOVE W-CIST                           TO DIV-CIST
000172           MOVE MOVP-CISO                        TO DIV-CISO
000172           PERFORM 0870-TRATTA-DIVISA
000172              THRU 0870-TRATTA-DIVISA-END
000172           INITIALIZE DCLTBALICMB
000172           MOVE MOD(M-I(IND7):M-L(IND7)) TO LICMB-CISO
000172           MOVE 'OP'                     TO LICMB-CSIGBORCMB
000172           MOVE MOVP-CIST                TO LICMB-CIST
000172           MOVE L-DATA-OGGI              TO LICMB-ANNOMMGG
000172           PERFORM 0837-LEGGI-ALICMB
000172              THRU 0837-LEGGI-ALICMB-END
000172           IF W-SQL-NON-TROVATO                                   TS006716
000172              MOVE 'E'                        TO M-S(IND7)        TS006717
000172              MOVE '1127'                     TO COORD-4
000172              MOVE W-XXNN-N                   TO N-M-2
000172              MOVE W-DEC-COORD                TO W-MOD-ERR        TS006718
000172              MOVE M-M(IND7)                  TO W-MAP-ERR        TS006719
000172              MOVE 2                          TO W-FLAG-ERR       TS006720
000172              MOVE 'S165'                     TO W-COD-ERR        TS006721
000172              PERFORM 9999-GESTIONE-ERRORE                        TS006722
000172                 THRU 9999-GESTIONE-ERRORE-END                    TS006723
000172              GO  TO 0856-SPESA-FISSA-VALUTA-END                  TS006723
000172           END-IF                                                 TS006723
000172*--------------------------------------CHIAMATA ZMBCTV00
000172           IF MOVP-CISO NOT = W-CSIGDBASE
000172           AND MOVP-CISO NOT = W-CSIGDCON
000172              INITIALIZE ZMWCTV00
000172              IF WRK-FORZA = 'MIN'
000172                 COMPUTE WCTV00-IMPORTO = MOVE-IMINSPS * (10 ** 3)
000172              END-IF
000172              IF WRK-FORZA = 'MAX'
000172                 COMPUTE WCTV00-IMPORTO = MOVE-IMAXSPS * (10 ** 3)
000172              END-IF
000252*             COMPUTE WCTV00-CAMBIO  = LICMB-ICABVLTT * (10 ** 7)
000252              COMPUTE WCTV00-CAMBIO  = LICMB-ICABVDEN * (10 ** 7)
000172              MOVE 6                  TO WCTV00-CAMBIO-CTP-INT
000172              MOVE 7                  TO WCTV00-CAMBIO-CTP-DEC
000172              COMPUTE WCTV00-CAMBIO-CTP = MOVP-ICABMOV * (10 ** 7)
000172              MOVE DIV-NDCLDIV        TO WCTV00-CTVCP-DEC
000172              COMPUTE WCTV00-CTVCP-INT = 18 - WCTV00-CTVCP-DEC
000172              MOVE 'CTVCP'            TO WCTV00-COMANDO
000172              PERFORM 0869-CALCOLA-CONTROVALORI
000172                 THRU 0869-CALCOLA-CONTROVALORI-END
000172              MOVE WCTV00-CTVCP       TO MOVE-ISPSVAL
000172           ELSE
000172              IF MOVP-CISO  = W-CSIGDBASE
000172                 MOVE MOVE-ICTVLISPS     TO MOVE-ISPSVAL
000172              END-IF
000172              IF MOVP-CISO  = W-CSIGDCON
000172                 MOVE MOVE-ICTVSPS       TO MOVE-ISPSVAL
000172              END-IF
000172           END-IF
000172        END-IF
000172     ELSE
000172        IF MOD(M-I(IND7):M-L(IND7)) NOT = MOVP-CISO
000172           IF MOVP-CISO  NOT = W-CSIGDBASE
000172           AND MOVP-CISO NOT = W-CSIGDCON
000172              MOVE W-CIST                           TO DIV-CIST
000172              MOVE MOVP-CISO                        TO DIV-CISO
000172              PERFORM 0870-TRATTA-DIVISA
000172                 THRU 0870-TRATTA-DIVISA-END
000172              INITIALIZE DCLTBALICMB
000172              MOVE MOD(M-I(IND7):M-L(IND7)) TO LICMB-CISO
000172              MOVE 'OP'                     TO LICMB-CSIGBORCMB
000172              MOVE MOVP-CIST                TO LICMB-CIST
000172              MOVE L-DATA-OGGI              TO LICMB-ANNOMMGG
000172              PERFORM 0837-LEGGI-ALICMB
000172                 THRU 0837-LEGGI-ALICMB-END
000172              IF W-SQL-NON-TROVATO                                TS006716
000172                 MOVE 'E'                        TO M-S(IND7)     TS006717
000172                 MOVE '1127'                     TO COORD-4
000172                 MOVE W-XXNN-N                   TO N-M-2
000172                 MOVE W-DEC-COORD                TO W-MOD-ERR     TS006718
000172                 MOVE M-M(IND7)                  TO W-MAP-ERR     TS006719
000172                 MOVE 2                          TO W-FLAG-ERR    TS006720
000172                 MOVE 'S165'                     TO W-COD-ERR     TS006721
000172                 PERFORM 9999-GESTIONE-ERRORE                     TS006722
000172                    THRU 9999-GESTIONE-ERRORE-END                 TS006723
000172                 GO TO 0856-SPESA-FISSA-VALUTA-END                TS006723
000172              END-IF                                              TS006723
000172*--------------------------------------CHIAMATA ZMBCTV00
000172              INITIALIZE ZMWCTV00
000172              COMPUTE WCTV00-IMPORTO =
000172                               W-COM-NUM-DEC7 * (10 ** 3)
000172              COMPUTE WCTV00-CAMBIO  =
000252*                              LICMB-ICABVLTT  * (10 ** 7)
000252                               LICMB-ICABVDEN  * (10 ** 7)
000172              MOVE 6                  TO WCTV00-CAMBIO-CTP-INT
000172              MOVE 7                  TO WCTV00-CAMBIO-CTP-DEC
000172              COMPUTE WCTV00-CAMBIO-CTP = MOVP-ICABMOV * (10 ** 7)
000172              MOVE DIV-NDCLDIV        TO WCTV00-CTVCP-DEC
000172              COMPUTE WCTV00-CTVCP-INT = 18 - WCTV00-CTVCP-DEC
000172              MOVE 'CTVCP'            TO WCTV00-COMANDO
000172              PERFORM 0869-CALCOLA-CONTROVALORI
000172                 THRU 0869-CALCOLA-CONTROVALORI-END
000172              MOVE WCTV00-CTVCP       TO MOVE-ISPSVAL
000172           ELSE
000172              IF MOVP-CISO  = W-CSIGDBASE
000172                 MOVE MOVE-ICTVLISPS     TO MOVE-ISPSVAL
000172              END-IF
000172              IF MOVP-CISO  = W-CSIGDCON
000172                 MOVE MOVE-ICTVSPS       TO MOVE-ISPSVAL
000172              END-IF
000172           END-IF
000172        ELSE
000172           MOVE 'ZEC110501'       TO W-DECOD
000172           MOVE W-XXNN-N          TO C
000172           COPY ZMZINDIR.
000172           COPY ZMZVALNM.
000172           COMPUTE MOVE-ISPSVAL = W-COM-NUM / (10 ** M-D(IND1))
000172        END-IF
000172     END-IF
           MOVE 'ZEC112901'       TO W-DECOD
           MOVE W-XXNN-N          TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE W-COM-NUM = MOVE-ISPSVAL * 1000
           MOVE W-COM-NUM(DA1:)   TO MOD(M-I(IND1):M-L(IND1)).
           MOVE W-CIST            TO DIV-CIST
           MOVE MOVP-CISO         TO DIV-CISO.
           PERFORM 0870-TRATTA-DIVISA
              THRU 0870-TRATTA-DIVISA-END
           MOVE DIV-NDCLDIV  TO WRK-NDCLDIV
           PERFORM 0838-CNTL-DECIMALI
              THRU 0838-CNTL-DECIMALI-END
           IF M-S(IND1) = 'E'
              GO TO 0856-SPESA-FISSA-VALUTA-END
           END-IF
070797     MOVE DIV-NDCLDIV  TO WCM-DECIMALI
"          MOVE IND1         TO WCM-IND-DEC
"          COPY ZMZDECIM.

000172     MOVE 'ZEC113301'       TO W-DECOD
000172     MOVE W-XXNN-N          TO C
000172     COPY ZMZINDIR.
000172     COPY ZMZVALNM.
000172     COMPUTE W-COM-NUM = MOVE-ICTVSPS * 1000
000172     MOVE W-COM-NUM(DA1:)   TO MOD(M-I(IND1):M-L(IND1)).
000172     MOVE W-DECSIGCON  TO WRK-NDCLDIV
000172     PERFORM 0838-CNTL-DECIMALI
000172        THRU 0838-CNTL-DECIMALI-END
000172     IF M-S(IND1) = 'E'
000172        GO TO 0856-SPESA-FISSA-VALUTA-END
000172     END-IF
000172     MOVE W-DECSIGCON  TO WCM-DECIMALI
000172     MOVE IND1         TO WCM-IND-DEC
000172     COPY ZMZDECIM.

000172     MOVE 'ZEC113601'       TO W-DECOD
000172     MOVE W-XXNN-N          TO C
000172     COPY ZMZINDIR.
000172     COPY ZMZVALNM.
000172     COMPUTE W-COM-NUM = MOVE-ICTVLISPS * 1000
000172     MOVE W-COM-NUM(DA1:)   TO MOD(M-I(IND1):M-L(IND1)).
000172     MOVE W-DECSIGBASE TO WRK-NDCLDIV
000172     PERFORM 0838-CNTL-DECIMALI
000172        THRU 0838-CNTL-DECIMALI-END
000172     IF M-S(IND1) = 'E'
000172        GO TO 0856-SPESA-FISSA-VALUTA-END
000172     END-IF
000172     MOVE W-DECSIGBASE TO WCM-DECIMALI
000172     MOVE IND1         TO WCM-IND-DEC
000172     COPY ZMZDECIM.
           .
       0856-SPESA-FISSA-VALUTA-END.
           EXIT.
       0857-CALCOLA-CAMBIO.
           MOVE 'ZDI040901'                   TO W-DECOD
           MOVE IND8                          TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE WK-COMO-DEC4 = W-COM-NUM / 10 ** M-D(IND1)
           MOVE 'ZDI042501'                   TO W-DECOD
           MOVE IND8                          TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE WK-COMO-DEC5 = W-COM-NUM / 10 ** M-D(IND1)
           MOVE 'ZDI042601'                   TO W-DECOD
           MOVE IND8                          TO C
           COPY ZMZINDIR.
           IF MOD(M-I(IND1):M-L(IND1)) = 'P'
              COMPUTE W-CAMBIO = WK-COMO-DEC4 + (WK-COMO-DEC4 *
                                 WK-COMO-DEC5 / 100)
           ELSE
              IF MOD(M-I(IND1):M-L(IND1)) = 'M'
                 COMPUTE W-CAMBIO = WK-COMO-DEC4 - (WK-COMO-DEC4 *
                                    WK-COMO-DEC5 / 100)
              ELSE
                 COMPUTE W-CAMBIO = WK-COMO-DEC4
              END-IF
           END-IF.
       0857-CALCOLA-CAMBIO-END.
           EXIT.
       0858A-SPESA-FISSA-LIRE.

000172     MOVE 'ZEC112701'                   TO W-DECOD.
000172     MOVE W-XXNN-N                      TO C
000172     COPY ZMZINDIR.
000172     IF MOD(M-I(IND1):M-L(IND1)) NOT GREATER SPACES
000172        MOVE CONFG-DIVISA-CONDIZ  TO MOD(M-I(IND1):M-L(IND1))
000172     END-IF
000172     MOVE IND1                          TO IND7.

           MOVE 'ZEC110601'                   TO W-DECOD
           MOVE W-XXNN-N                      TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE W-COM-NUM-DEC7 = W-COM-NUM / 10 ** M-D(IND1)

           IF W-COM-QTA NOT = 0
000172*       COMPUTE MOVE-ICTVSPS = W-COM-NUM-DEC7 * W-COM-QTA
000172        COMPUTE WRK-ISPSVAL-TRANSIT = W-COM-NUM-DEC7 * W-COM-QTA
           ELSE
000172*       MOVE W-COM-NUM-DEC7                TO MOVE-ICTVSPS
000172        MOVE W-COM-NUM-DEC7                TO WRK-ISPSVAL-TRANSIT
           END-IF.

000172*    MOVE W-DECSIGBASE TO WRK-NDCLDIV
000172     MOVE W-CIST                   TO DIV-CIST
000172     MOVE MOD(M-I(IND7):M-L(IND7)) TO DIV-CISO

000172     PERFORM 0870-TRATTA-DIVISA
000172        THRU 0870-TRATTA-DIVISA-END

000172     MOVE DIV-NDCLDIV              TO WRK-NDCLDIV

           PERFORM 0838-CNTL-DECIMALI
              THRU 0838-CNTL-DECIMALI-END
           IF M-S(IND1) = 'E'
             GO TO 0858A-SPESA-FISSA-LIRE-END
           END-IF
000172*    MOVE W-DECSIGBASE TO WCM-DECIMALI
000172     MOVE DIV-NDCLDIV  TO WCM-DECIMALI
"          MOVE IND1         TO WCM-IND-DEC
070797     COPY ZMZDECIM.

000172     INITIALIZE DCLTBALICMB
000172     MOVE MOD(M-I(IND7):M-L(IND7)) TO LICMB-CISO
000172     MOVE 'OP'                     TO LICMB-CSIGBORCMB
000172     MOVE W-CIST                   TO LICMB-CIST
000172     MOVE L-DATA-OGGI              TO LICMB-ANNOMMGG
000172     PERFORM 0837-LEGGI-ALICMB
000172        THRU 0837-LEGGI-ALICMB-END
000172     IF W-SQL-NON-TROVATO                                         TS006716
000172        MOVE 'E'                        TO M-S(IND7)              TS006717
000172        MOVE '1127'                     TO COORD-4
000172        MOVE W-XXNN-N                   TO N-M-2
000172        MOVE W-DEC-COORD                TO W-MOD-ERR              TS006718
000172        MOVE M-M(IND7)                  TO W-MAP-ERR              TS006719
000172        MOVE 2                          TO W-FLAG-ERR             TS006720
000172        MOVE 'S165'                     TO W-COD-ERR              TS006721
000172        PERFORM 9999-GESTIONE-ERRORE                              TS006722
000172           THRU 9999-GESTIONE-ERRORE-END                          TS006723
000172        GO  TO 0858A-SPESA-FISSA-LIRE-END                         TS006723
000172     END-IF                                                       TS006723
000172*------------------------------------------CHIAMATA ZMBCTV00
000172     INITIALIZE ZMWCTV00
000252*    COMPUTE WCTV00-CAMBIO  = LICMB-ICABVLTT * (10 ** 7)
000252     COMPUTE WCTV00-CAMBIO  = LICMB-ICABVDEN * (10 ** 7)
000172     COMPUTE WCTV00-IMPORTO = WRK-ISPSVAL-TRANSIT * (10 ** 3)
000172     MOVE 'CTVDC'                    TO WCTV00-COMANDO
000172     PERFORM 0869-CALCOLA-CONTROVALORI
000172        THRU 0869-CALCOLA-CONTROVALORI-END
000241*    IF  MOD(M-I(IND7):M-L(IND7)) NOT = W-CSIGDCON
000241*    AND MOD(M-I(IND7):M-L(IND7)) NOT = W-CSIGDBASE
000241*       MOVE WRK-DIVLIS       TO MOVE-ICTVLISPS
000241*       MOVE WRK-DIVCON       TO MOVE-ICTVSPS
000241*    END-IF
000241*    IF  MOD(M-I(IND7):M-L(IND7)) = W-CSIGDCON
000241*        MOVE WRK-DIVLIS          TO MOVE-ICTVLISPS
000241*        MOVE WRK-ISPSVAL-TRANSIT TO MOVE-ICTVSPS
000241*    END-IF
000241*    IF  MOD(M-I(IND7):M-L(IND7)) = W-CSIGDBASE
000241*        MOVE WRK-DIVCON          TO MOVE-ICTVSPS
000241*        MOVE WRK-ISPSVAL-TRANSIT TO MOVE-ICTVLISPS
000241*    END-IF
000241     IF  MOD(M-I(IND7):M-L(IND7)) = W-CSIGDCON
000241        MOVE WRK-ISPSVAL-TRANSIT TO MOVE-ICTVSPS
000241     ELSE
000241        MOVE WRK-DIVCON       TO MOVE-ICTVSPS
000241     END-IF
000241     IF  MOD(M-I(IND7):M-L(IND7)) = W-CSIGDBASE
000241        MOVE WRK-ISPSVAL-TRANSIT TO MOVE-ICTVLISPS
000241     ELSE
000241        MOVE WRK-DIVLIS       TO MOVE-ICTVLISPS
000241     END-IF

000172     MOVE SPACES       TO WRK-FORZA

           MOVE 'ZEC110301'                      TO W-DECOD.
           MOVE W-XXNN-N                         TO C.
           COPY ZMZINDIR.
           IF MOD(M-I(IND1):M-L(IND1)) NOT = 'F'
000198*       IF MOVE-IMINSPS NOT = 0 AND
000198*          MOVE-IMAXSPS NOT = 0
000198*          IF MOVE-ICTVSPS > MOVE-IMAXSPS
000198*             MOVE MOVE-IMAXSPS               TO MOVE-ICTVSPS
000198*          ELSE
000198*             IF MOVE-ICTVSPS < MOVE-IMINSPS
000198*                MOVE MOVE-IMINSPS            TO MOVE-ICTVSPS
000198*             END-IF
000198*          END-IF
000198*       END-IF
000172*       IF MOVE-IMINSPS NOT = 0
000172*          IF MOVE-ICTVSPS < MOVE-IMINSPS
000172*             MOVE MOVE-IMINSPS               TO MOVE-ICTVSPS
000172*          END-IF
000172*       END-IF
000172*       IF MOVE-IMAXSPS NOT = 0
000172*          IF MOVE-ICTVSPS > MOVE-IMAXSPS
000172*             MOVE MOVE-IMAXSPS               TO MOVE-ICTVSPS
000172*          END-IF
000172*       END-IF
000172        IF MOVE-IMINSPS NOT = 0
000172           IF CONFG-DIVISA-CONDIZ = W-CSIGDBASE
000172              IF MOVE-ICTVLISPS < MOVE-IMINSPS
000172                 MOVE MOVE-IMINSPS            TO MOVE-ICTVLISPS
000172                 IF W-CSIGDCON = W-CSIGDBASE
000172                    MOVE MOVE-IMINSPS         TO MOVE-ICTVSPS
000172                 ELSE
000172*--------------------------------------------- CHIAMATA ZMBCTV00
000172                    INITIALIZE ZMWCTV00
000172                    COMPUTE WCTV00-CAMBIO = 1 * (10 ** 7)
000172                    COMPUTE WCTV00-IMPORTO =
000172                                  MOVE-IMINSPS * (10 ** 3)
000172                    MOVE 'CTVDC' TO        WCTV00-COMANDO
000172                    PERFORM 0869-CALCOLA-CONTROVALORI
000172                       THRU 0869-CALCOLA-CONTROVALORI-END
000172                    MOVE WRK-DIVCON              TO MOVE-ICTVSPS
000172                 END-IF
000172              END-IF
000172           ELSE
000172              IF CONFG-DIVISA-CONDIZ = W-CSIGDCON
000172                 IF  MOVE-ICTVSPS < MOVE-IMINSPS
000172                     MOVE MOVE-IMINSPS   TO MOVE-ICTVSPS
000172                     MOVE W-CSIGDCON     TO LICMB-CISO
000172                     MOVE 'OP'           TO LICMB-CSIGBORCMB
000172                     MOVE MOVE-CIST      TO LICMB-CIST
000172                     MOVE L-DATA-OGGI    TO LICMB-ANNOMMGG
000172                     PERFORM 0837-LEGGI-ALICMB
000172                        THRU 0837-LEGGI-ALICMB-END
000172                     IF W-SQL-NON-TROVATO
000172                        MOVE 'E'          TO M-S(IND7)
000172                        MOVE 'ZEC112701'  TO W-DECOD
000172                        MOVE W-XXNN-N     TO C
000172                        MOVE W-DEC-COORD  TO W-MOD-ERR
000172                        MOVE M-M(IND7)    TO W-MAP-ERR
000172                        MOVE 2            TO W-FLAG-ERR
000172                        MOVE 'S165'       TO W-COD-ERR
000172                        PERFORM 9999-GESTIONE-ERRORE
000172                           THRU 9999-GESTIONE-ERRORE-END
000172                        GO  TO 0858A-SPESA-FISSA-LIRE-END
000172                     END-IF
000172*-----------------------------------------CHIAMATA ZMBCTV00
000172                     INITIALIZE ZMWCTV00
000172                     COMPUTE WCTV00-CAMBIO =
APV035*                                      LICMB-ICABTLF * (10 ** 7)
000252*                                      LICMB-ICABVLTT * (10 ** 7)
000252                                       LICMB-ICABVDEN * (10 ** 7)
000172                     COMPUTE WCTV00-IMPORTO =
000172                                        MOVE-IMINSPS * (10 ** 3)
000172                     MOVE 'CTVLS'        TO WCTV00-COMANDO
000172                     PERFORM 0869-CALCOLA-CONTROVALORI
000172                        THRU 0869-CALCOLA-CONTROVALORI-END
000172                     MOVE WRK-DIVLIS     TO MOVE-ICTVLISPS
000172                 END-IF
000172              END-IF
000172           END-IF
000172        END-IF
000172        IF MOVE-IMAXSPS NOT = 0
000172           IF CONFG-DIVISA-CONDIZ = W-CSIGDBASE
000172              IF MOVE-ICTVLISPS > MOVE-IMAXSPS
000172                 MOVE MOVE-IMAXSPS             TO MOVE-ICTVLISPS
000172                 IF W-CSIGDCON = W-CSIGDBASE
000172                    MOVE MOVE-IMINSPS         TO MOVE-ICTVSPS
000172                 ELSE
000172                    INITIALIZE ZMWCTV00
000172                    COMPUTE WCTV00-CAMBIO = 1 * (10 ** 7)
000172                    COMPUTE WCTV00-IMPORTO =
000172                                    MOVE-IMAXSPS * (10 ** 3)
000172                    MOVE 'CTVDC' TO        WCTV00-COMANDO
000172                    PERFORM 0869-CALCOLA-CONTROVALORI
000172                       THRU 0869-CALCOLA-CONTROVALORI-END
000172                    MOVE WRK-DIVCON           TO MOVE-ICTVSPS
000172                 END-IF
000172              END-IF
000172           ELSE
000172              IF CONFG-DIVISA-CONDIZ = W-CSIGDCON
APV203*000172          IF  MOVE-ICTVSPS < MOVE-IMAXSPS
APV203                 IF  MOVE-ICTVSPS > MOVE-IMAXSPS
000172                     MOVE MOVE-IMAXSPS      TO MOVE-ICTVSPS
000172                     MOVE W-CSIGDCON        TO LICMB-CISO
000172                     MOVE 'OP'              TO LICMB-CSIGBORCMB
000172                     MOVE MOVE-CIST         TO LICMB-CIST
000172                     MOVE L-DATA-OGGI       TO LICMB-ANNOMMGG
000172                     PERFORM 0837-LEGGI-ALICMB
000172                        THRU 0837-LEGGI-ALICMB-END
000172                     IF W-SQL-NON-TROVATO
000172                        MOVE 'E'          TO M-S(IND7)
000172                        MOVE 'ZEC112701'  TO W-DECOD
000172                        MOVE W-XXNN-N     TO C
000172                        MOVE W-DEC-COORD  TO W-MOD-ERR
000172                        MOVE M-M(IND7)    TO W-MAP-ERR
000172                        MOVE 2            TO W-FLAG-ERR
000172                        MOVE 'S165'       TO W-COD-ERR
000172                        PERFORM 9999-GESTIONE-ERRORE
000172                           THRU 9999-GESTIONE-ERRORE-END
000172                        GO  TO 0858A-SPESA-FISSA-LIRE-END
000172                     END-IF
000172*-----------------------------------------CHIAMATA ZMBCTV00
000172                     INITIALIZE ZMWCTV00
000172                     COMPUTE WCTV00-CAMBIO =
APV035*                                      LICMB-ICABTLF * (10 ** 7)
000252*                                      LICMB-ICABVLTT * (10 ** 7)
000252                                       LICMB-ICABVDEN * (10 ** 7)
000172                     COMPUTE WCTV00-IMPORTO =
000172                                        MOVE-IMAXSPS * (10 ** 3)
000172                     MOVE 'CTVLS'              TO WCTV00-COMANDO
000172                     PERFORM 0869-CALCOLA-CONTROVALORI
000172                        THRU 0869-CALCOLA-CONTROVALORI-END
000172                     MOVE WRK-DIVLIS           TO MOVE-ICTVLISPS
000172                 END-IF
000172              END-IF
000172           END-IF
000172        END-IF
           END-IF.
000172*    COMPUTE MOVE-ISPSVAL = MOVE-ICTVSPS / MOVP-ICABMOV
000172*    MOVE W-CIST                           TO DIV-CIST
000172*    MOVE MOVP-CISO                        TO DIV-CISO
000172*    PERFORM 0870-TRATTA-DIVISA
000172*       THRU 0870-TRATTA-DIVISA-END
000172*    MOVE DIV-NDCLDIV                      TO W-COM-NUM-C
000172*    IF W-COM-NUM-C < 3
000172*       COMPUTE W-DIFF = 3 - W-COM-NUM-C
000172*       COMPUTE MOVE-ISPSVAL   =
000172*               MOVE-ISPSVAL   / 10 ** W-DIFF
000172*       COMPUTE MOVE-ISPSVAL   =
000172*               MOVE-ISPSVAL   * 10 ** W-DIFF
000172*    END-IF

000172     IF  MOVP-CISO NOT = W-CSIGDBASE
000172     AND MOVP-CISO NOT = W-CSIGDCON
000172*-----------------------------------CHIAMATA ZMBCTV00
000172        MOVE W-CIST             TO DIV-CIST
000172        MOVE MOVP-CISO          TO DIV-CISO
000172        PERFORM 0870-TRATTA-DIVISA
000172           THRU 0870-TRATTA-DIVISA-END
000172        INITIALIZE ZMWCTV00
000172        COMPUTE WCTV00-IMPORTO = MOVE-ICTVLISPS * (10 ** 3)
000172        COMPUTE WCTV00-CAMBIO  = 1 * (10 ** 7)
000172        MOVE 6                  TO WCTV00-CAMBIO-CTP-INT
000172        MOVE 7                  TO WCTV00-CAMBIO-CTP-DEC
000172        COMPUTE WCTV00-CAMBIO-CTP = MOVP-ICABMOV * (10 ** 7)
000172        MOVE DIV-NDCLDIV        TO WCTV00-CTVCP-DEC
000172        COMPUTE WCTV00-CTVCP-INT = 18 - WCTV00-CTVCP-DEC
000172        MOVE 'CTVCP'            TO WCTV00-COMANDO
000172        PERFORM 0869-CALCOLA-CONTROVALORI
000172           THRU 0869-CALCOLA-CONTROVALORI-END
000172        MOVE WCTV00-CTVCP       TO MOVE-ISPSVAL
000172     END-IF

000172     IF  MOVP-CISO = W-CSIGDBASE
000172         MOVE MOVE-ICTVLISPS   TO  MOVE-ISPSVAL
000172     END-IF

000172     IF  MOVP-CISO = W-CSIGDCON
000172         MOVE MOVE-ICTVSPS     TO  MOVE-ISPSVAL
000172     END-IF


           MOVE 'ZEC112901'      TO W-DECOD
           MOVE W-XXNN-N         TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           COMPUTE W-COM-NUM = MOVE-ISPSVAL * 1000
           MOVE W-COM-NUM(DA1:)  TO MOD(M-I(IND1):M-L(IND1)).
           MOVE W-CIST        TO  DIV-CIST
           MOVE MOVP-CISO     TO  DIV-CISO
           PERFORM 0870-TRATTA-DIVISA
              THRU 0870-TRATTA-DIVISA-END
           MOVE DIV-NDCLDIV  TO WRK-NDCLDIV
           PERFORM 0838-CNTL-DECIMALI
              THRU 0838-CNTL-DECIMALI-END
           IF M-S(IND1) = 'E'
             GO TO 0858A-SPESA-FISSA-LIRE-END
           END-IF
070797     MOVE DIV-NDCLDIV  TO WCM-DECIMALI
"          MOVE IND1         TO WCM-IND-DEC
070797     COPY ZMZDECIM.

           MOVE 'ZEC110501'      TO W-DECOD
           MOVE W-XXNN-N         TO C
           COPY ZMZINDIR.
000172*    COMPUTE W-COM1 = MOVE-ICTVSPS * (10 ** M-D(IND1)).
000172     COMPUTE W-COM1 = MOVE-ISPSVAL * (10 ** M-D(IND1)).
           COPY ZMZFMMOD.
           MOVE SPACES            TO M-S(IND1).
000172*    MOVE W-DECSIGBASE TO WRK-NDCLDIV
000172     MOVE W-CIST                   TO  DIV-CIST
000172     MOVE MOVP-CISO                TO  DIV-CISO
000172     PERFORM 0870-TRATTA-DIVISA
000172        THRU 0870-TRATTA-DIVISA-END
000172     MOVE DIV-NDCLDIV  TO WRK-NDCLDIV
           PERFORM 0838-CNTL-DECIMALI
              THRU 0838-CNTL-DECIMALI-END
           IF M-S(IND1) = 'E'
             GO TO 0858A-SPESA-FISSA-LIRE-END
           END-IF
000172*    MOVE W-DECSIGBASE TO WCM-DECIMALI
000172     MOVE DIV-NDCLDIV  TO WCM-DECIMALI
070797     MOVE IND1         TO WCM-IND-DEC
070797     COPY ZMZDECIM.

010497     MOVE 'ZEC110601'      TO W-DECOD.
           MOVE W-XXNN-N         TO C.
           COPY ZMZINDIR.
000172*    COMPUTE W-COM1 = MOVE-ICTVSPS * (10 ** M-D(IND1)).
000172     IF CONFG-DIVISA-CONDIZ = W-CSIGDBASE
000172        COMPUTE W-COM1 = MOVE-ICTVLISPS * (10 ** M-D(IND1))
000172     END-IF
000172     IF CONFG-DIVISA-CONDIZ = W-CSIGDCON
000172        COMPUTE W-COM1 = MOVE-ICTVSPS * (10 ** M-D(IND1))
000172     END-IF
           COPY ZMZFMMOD.
           MOVE SPACES            TO M-S(IND1).
000172*    MOVE W-DECSIGBASE TO WRK-NDCLDIV.
000172     MOVE MOD(M-I(IND7):M-L(IND7))  TO  DIV-CISO
000172     MOVE W-CIST                    TO  DIV-CIST
000172     PERFORM 0870-TRATTA-DIVISA
000172        THRU 0870-TRATTA-DIVISA-END
000172     MOVE DIV-NDCLDIV TO WRK-NDCLDIV.
           PERFORM 0838-CNTL-DECIMALI
              THRU 0838-CNTL-DECIMALI-END.
           IF M-S(IND1) = 'E'
             GO TO 0858A-SPESA-FISSA-LIRE-END
           END-IF.
000172*    MOVE W-DECSIGBASE TO WCM-DECIMALI
000172     MOVE DIV-NDCLDIV  TO WCM-DECIMALI
070797     MOVE IND1         TO WCM-IND-DEC
070797     COPY ZMZDECIM.

000172     MOVE 'ZEC113601'      TO W-DECOD.
000172     MOVE W-XXNN-N         TO C.
000172     COPY ZMZINDIR.
000172     COMPUTE W-COM1 = MOVE-ICTVLISPS * (10 ** M-D(IND1)).
000172     COPY ZMZFMMOD.
000172     MOVE SPACES            TO M-S(IND1).
000172     MOVE W-DECSIGBASE TO WRK-NDCLDIV.
000172     PERFORM 0838-CNTL-DECIMALI
000172        THRU 0838-CNTL-DECIMALI-END.
000172     IF M-S(IND1) = 'E'
000172       GO TO 0858A-SPESA-FISSA-LIRE-END
000172     END-IF.
000172     MOVE W-DECSIGBASE TO WCM-DECIMALI
000172     MOVE IND1         TO WCM-IND-DEC
000172     COPY ZMZDECIM.

000172     MOVE 'ZEC113301'      TO W-DECOD.
000172     MOVE W-XXNN-N         TO C.
000172     COPY ZMZINDIR.
000172     COMPUTE W-COM1 = MOVE-ICTVSPS * (10 ** M-D(IND1)).
000172     COPY ZMZFMMOD.
000172     MOVE SPACES            TO M-S(IND1).
000172     MOVE W-DECSIGCON  TO WRK-NDCLDIV.
000172     PERFORM 0838-CNTL-DECIMALI
000172        THRU 0838-CNTL-DECIMALI-END.
000172     IF M-S(IND1) = 'E'
000172       GO TO 0858A-SPESA-FISSA-LIRE-END
000172     END-IF.
000172     MOVE W-DECSIGCON  TO WCM-DECIMALI
000172     MOVE IND1         TO WCM-IND-DEC
000172     COPY ZMZDECIM.

070797     .
       0858A-SPESA-FISSA-LIRE-END.
           EXIT.
       0858B-SPESA-TC.
           MOVE ZEROES                  TO W-COM-QTA.
           PERFORM
              VARYING N-M-2 FROM 1 BY 1 UNTIL N-M-2 > WCM-INDMAX(13)
              MOVE '1312'               TO COORD-4
              MOVE W-DEC-COORD          TO W-COM-COORD
              COPY ZMZINDIR.
              IF MOD(M-I(IND1):M-L(IND1)) = 'A'
                 ADD 1                  TO W-COM-QTA
              END-IF
           END-PERFORM.
       0858B-SPESA-TC-END.
           EXIT.
       0858C-SPESA-TS.
           MOVE ZEROES                  TO W-COM-QTA.
           MOVE 'ZAA171501'             TO W-DECOD.
           COPY ZMZINDIR.
           MOVE MOD(M-I(IND1):M-L(IND1)) TO W-DAT.
           MOVE IND1                    TO IND12.
           PERFORM
              VARYING N-M-2 FROM 1 BY 1 UNTIL N-M-2 > WCM-INDMAX(07)
              MOVE '0709'               TO COORD-4
              MOVE W-DEC-COORD          TO W-COM-COORD
              COPY ZMZINDIR.
              MOVE IND1                 TO IND13
              IF MOD(M-I(IND13):M-L(IND13)) GREATER ZEROES
                 MOVE '0712'               TO COORD-4
                 MOVE W-DEC-COORD          TO W-COM-COORD
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 IF W-COM-NUM NOT GREATER ZEROES
                    MOVE 'E'               TO M-S(W-CEC)
                    MOVE W-COORD-CEC       TO W-MOD-ERR
                    MOVE M-M(W-CEC)        TO W-MAP-ERR
                    MOVE 'S094'            TO W-COD-ERR
                    MOVE 'SI'              TO W-FLAG-EXIT
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                    GO TO 0858C-SPESA-TS-END
                 END-IF
                 MOVE W-COM-NUM   TO WRK-GIORNI1
                 PERFORM 0858D-ESAMINA-SCADENZA
CAR417*             THRU 0858D-ESAMINA-SCADENZA
CAR417              THRU 0858D-ESAMINA-SCADENZA-END
              END-IF
           END-PERFORM.
       0858C-SPESA-TS-END.
           EXIT.
       0858D-ESAMINA-SCADENZA.
      *--------------------------------------- IND12 = ZAA171501
      *--------------------------------------- IND13 = ZFI070901/10
170797     INITIALIZE SC-AREA
           MOVE MOD(M-I(IND13):M-L(IND13)) TO SC-CAMPO-DATA.
           PERFORM 0720-CHIAMA-SGSCA
              THRU 0720-CHIAMA-SGSCA-END
           IF SC-CODICE-RITORNO = ZEROES
              IF SC-TIPO-DATA = 'NS'
                 ADD 1                      TO W-COM-QTA
              ELSE
                 IF SC-TIPO-DATA = 'N'
                    PERFORM 0858E-CNTR-GIORNI
                       THRU 0858E-CNTR-GIORNI-END
                    IF WRK-GIORNI NOT GREATER WRK-GIORNI1
                       ADD 1                TO W-COM-QTA
                    END-IF
                 END-IF
              END-IF
           END-IF.
       0858D-ESAMINA-SCADENZA-END.
           EXIT.
      *-----------------------------------------------------------------
      * CALCOLA DIFFERENZA IN GIORNI TRA DATA (ZFI070901/N) E ZAA171501
      *-----------------------------------------------------------------
       0858E-CNTR-GIORNI.
      *------------------------------------- IND13 = ZFI070901/10
           MOVE MOD(M-I(IND13):M-L(IND13))  TO WRK-DATA-MODX.
           MOVE WRK-DATA-MOD             TO   DT-CMPI
           MOVE 'AAAAMMGG'               TO   DT-FINP
           MOVE 'GGGGGGGG'               TO   DT-FOUT.
           PERFORM 9010-CTR-DAT
              THRU 9010-CTR-DAT-END
           IF DT-RC NOT = ZEROES
              MOVE 8                    TO W-FLAG-ERR
              MOVE '9999'               TO W-COD-ERR
              MOVE 'ZMBSVIL0'           TO L-MODULO
              MOVE '0858E-CNTR-GIORNI'  TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           ELSE
              MOVE DT-CMPI              TO WRK-DATA-GGMM-1X.
      *------------------------------------- IND12 = ZAA171501
           MOVE MOD(M-I(IND12):M-L(IND12))  TO WRK-DATA-MODX.
           MOVE WRK-DATA-MOD             TO   DT-CMPI
           MOVE 'AAAAMMGG'               TO   DT-FINP.
           MOVE 'GGGGGGGG'               TO   DT-FOUT.
           PERFORM 9010-CTR-DAT
              THRU 9010-CTR-DAT-END.
           IF DT-RC NOT = ZEROES
              MOVE 8                    TO W-FLAG-ERR
              MOVE '9999'               TO W-COD-ERR
              MOVE 'ZMBSVIL0'           TO L-MODULO
              MOVE '0858E-CNTR-GIORNI'  TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           ELSE
              MOVE DT-CMPI              TO WRK-DATA-GGMM-2X.
           COMPUTE WRK-GIORNI = WRK-DATA-GGMM-1  -  WRK-DATA-GGMM-2.
       0858E-CNTR-GIORNI-END.
           EXIT.
       0858F-SPESA-TN.
           MOVE ZEROES                  TO W-COM-QTA.
           PERFORM
              VARYING N-M-2 FROM 1 BY 1 UNTIL N-M-2 > WCM-INDMAX(13)
              MOVE '1309'               TO COORD-4
              MOVE W-DEC-COORD          TO W-COM-COORD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              IF W-COM-NUM > ZEROES
                 ADD 1                  TO W-COM-QTA
              ELSE
                 MOVE '1310'               TO COORD-4
                 MOVE W-DEC-COORD          TO W-COM-COORD
                 COPY ZMZINDIR.
                 IF MOD(M-I(IND1):M-L(IND1)) > SPACES
                    ADD 1                  TO W-COM-QTA
                 END-IF
              END-IF
           END-PERFORM.
       0858F-SPESA-TN-END.
           EXIT.
       0859-CALCOLA-ZEC1106.
      *-------------------------------- ZEC110601 = CTV LISTINO
           MOVE 'ZEC110601'             TO W-DECOD.
           MOVE W-XXNN-N                TO C.
           COPY ZMZINDIR.
           MOVE IND1                    TO IND3.
      *-------------------------------- ZEC110501 = SPESA IN VALUTA
000172*    MOVE 'ZEC110501'             TO W-DECOD.
000172*    MOVE W-XXNN-N                TO C.
000172*    COPY ZMZINDIR.
000172*    MOVE IND1                    TO IND4.
130597***--- IMPOSTA DECIMALI DIVISA DI ZEC1127(IND7)
130597     MOVE W-CIST                   TO DIV-CIST
130597     MOVE MOD(M-I(IND7):M-L(IND7)) TO DIV-CISO
130597     PERFORM 0870-TRATTA-DIVISA
130597        THRU 0870-TRATTA-DIVISA-END
130597     MOVE DIV-NDCLDIV      TO WRK-NDCLDIV
130597     PERFORM 0838-CNTL-DECIMALI
130597        THRU 0838-CNTL-DECIMALI-END
130597     IF M-S(IND1) = 'E'
130597        GO TO 0859-CALCOLA-ZEC1106-END
130597     END-IF
070797     MOVE DIV-NDCLDIV  TO WCM-DECIMALI
"          MOVE IND1         TO WCM-IND-DEC
070797     COPY ZMZDECIM.

           MOVE 'ZOR030901'             TO W-DECOD
           COPY ZMZINDIR.
000172     COPY ZMZVALNM.
000172*    COPY ZMZMULTI.
000172*    IF W-DECSIGBASE < M-D(IND3)
000172*       MOVE ZEROES                   TO W-COM-NUM-3
000172*       COMPUTE DA3 = 19 - M-L(IND3)
000172*       MOVE MOD(M-I(IND3):M-L(IND3)) TO W-COM-NUM-3(DA3:)
000172*       COMPUTE W-DIFF-DEC = M-D(IND3) - W-DECSIGBASE
000172*       COMPUTE W-COM-NUM-3 = W-COM-NUM-3 / 10 ** W-DIFF-DEC
000172*       COMPUTE W-COM-NUM-3 = W-COM-NUM-3 * 10 ** W-DIFF-DEC
000172*       MOVE W-COM-NUM-3(DA3:) TO MOD(M-I(IND3):M-L(IND3))
000172*    END-IF.
000172*------------------------------------------CALCOLA IL CONTROVALORE
000172*-----------------------------------------------CHIAMANDO ZMBCTV00
000172     INITIALIZE ZMWCTV00
000172     MOVE W-COM-NUM                   TO WCTV00-CAMBIO
      *-------------------------------- ZEC110501 = SPESA IN VALUTA
000172     MOVE 'ZEC110501'             TO W-DECOD.
000172     MOVE W-XXNN-N                TO C.
000172     COPY ZMZINDIR.
000172     COPY ZMZVALNM.
000172     COMPUTE W-COM-NUM-DEC7  = W-COM-NUM / (10 ** M-D(IND1))
000172     MOVE W-COM-NUM               TO WCTV00-IMPORTO
000172     MOVE 'CTVDC'                 TO WCTV00-COMANDO
000172     PERFORM 0869-CALCOLA-CONTROVALORI
000172        THRU 0869-CALCOLA-CONTROVALORI-END
000172     IF MOD(M-I(IND7):M-L(IND7)) = W-CSIGDBASE
000172        MOVE W-COM-NUM-DEC7  TO  W-COM-NUM-DEC5
000172     ELSE
000172        MOVE WRK-DIVLIS   TO  W-COM-NUM-DEC5
000172     END-IF
000172     IF MOD(M-I(IND7):M-L(IND7)) = W-CSIGDCON
000172        MOVE W-COM-NUM-DEC7  TO  W-COM-NUM-DEC6
000172     ELSE
000172        MOVE WRK-DIVCON   TO  W-COM-NUM-DEC6
000172     END-IF
000172     COMPUTE W-COM1 = W-COM-NUM-DEC5 * (10 ** M-D(IND3))
000172     MOVE IND3         TO IND1
000172     COPY ZMZFMMOD.

           MOVE IND1         TO IND11
           MOVE IND3         TO IND1
           MOVE W-DECSIGBASE TO WRK-NDCLDIV
           PERFORM 0838-CNTL-DECIMALI
              THRU 0838-CNTL-DECIMALI-END
           IF M-S(IND1) = 'E'
              GO TO 0859-CALCOLA-ZEC1106-END
           END-IF
           MOVE IND11        TO IND1
070797     MOVE W-DECSIGBASE TO WCM-DECIMALI
"          MOVE IND3         TO WCM-IND-DEC
"          COPY ZMZDECIM.

000172     MOVE 'ZEC113301'                   TO W-DECOD
000172     MOVE W-XXNN-N                      TO C
000172     COPY ZMZINDIR.
000172     COMPUTE W-COM1 = W-COM-NUM-DEC6 * (10 ** M-D(IND1))
000172     COPY ZMZFMMOD.
000172     MOVE SPACES          TO M-S(IND1)
000172     MOVE W-DECSIGCON  TO WCM-DECIMALI
000172     MOVE IND1         TO WCM-IND-DEC
000172     COPY ZMZDECIM.
070797     .
       0859-CALCOLA-ZEC1106-END.
           EXIT.
000172 0859-CALCOLA-ZEC1136.
000172*-------------------------------- ZEC110601 = CTV LISTINO
000172     MOVE 'ZEC113601'             TO W-DECOD.
000172     MOVE W-XXNN-N                TO C.
000172     COPY ZMZINDIR.
000172     MOVE IND1                    TO IND3.
000172*-------------------------------- ZEC110501 = SPESA IN VALUTA
000172*    MOVE 'ZEC110501'             TO W-DECOD.
000172*    MOVE W-XXNN-N                TO C.
000172*    COPY ZMZINDIR.
000172*    MOVE IND1                    TO IND4.
000172***--- IMPOSTA DECIMALI DIVISA DI ZEC1127(IND7)
000172     MOVE W-CIST                   TO DIV-CIST
000172     MOVE MOD(M-I(IND7):M-L(IND7)) TO DIV-CISO
000172     PERFORM 0870-TRATTA-DIVISA
000172        THRU 0870-TRATTA-DIVISA-END
000172     MOVE DIV-NDCLDIV      TO WRK-NDCLDIV
000172     PERFORM 0838-CNTL-DECIMALI
000172        THRU 0838-CNTL-DECIMALI-END
000172     IF M-S(IND1) = 'E'
CAR417*       GO TO 0859-CALCOLA-ZEC1106-END
CAR417        GO TO 0859-CALCOLA-ZEC1136-END
000172     END-IF
000172     MOVE DIV-NDCLDIV  TO WCM-DECIMALI
000172     MOVE IND1         TO WCM-IND-DEC
000172     COPY ZMZDECIM.
000172
000172     MOVE 'ZOR030901'             TO W-DECOD
000172     COPY ZMZINDIR.
000172     COPY ZMZVALNM.
000172*------------------------------------------CALCOLA IL CONTROVALORE
000172*-----------------------------------------------CHIAMANDO ZMBCTV00
000172     INITIALIZE ZMWCTV00
000172     MOVE W-COM-NUM                   TO WCTV00-CAMBIO
000172*-------------------------------- ZEC110501 = SPESA IN VALUTA
000172     MOVE 'ZEC110501'             TO W-DECOD.
000172     MOVE W-XXNN-N                TO C.
000172     COPY ZMZINDIR.
000172     COPY ZMZVALNM.
000172     COMPUTE W-COM-NUM-DEC7 = W-COM-NUM / (10 ** M-D(IND1))
000172     MOVE W-COM-NUM               TO WCTV00-IMPORTO
000172     MOVE 'CTVDC'                 TO WCTV00-COMANDO
000172     PERFORM 0869-CALCOLA-CONTROVALORI
000172        THRU 0869-CALCOLA-CONTROVALORI-END
000172     IF MOD(M-I(IND7):M-L(IND7)) = W-CSIGDBASE
000172        MOVE W-COM-NUM-DEC7  TO  W-COM-NUM-DEC5
000172     ELSE
000172        MOVE WRK-DIVLIS   TO  W-COM-NUM-DEC5
000172     END-IF
000172     IF MOD(M-I(IND7):M-L(IND7)) = W-CSIGDCON
000172        MOVE W-COM-NUM-DEC7  TO  W-COM-NUM-DEC6
000172     ELSE
000172        MOVE WRK-DIVCON   TO  W-COM-NUM-DEC6
000172     END-IF
000172     COMPUTE W-COM1 = W-COM-NUM-DEC5 * (10 ** M-D(IND3))
000172     MOVE IND3         TO IND1
000172     COPY ZMZFMMOD.

000172     MOVE IND1         TO IND11
000172     MOVE IND3         TO IND1
000172     MOVE W-DECSIGBASE TO WRK-NDCLDIV
000172     PERFORM 0838-CNTL-DECIMALI
000172        THRU 0838-CNTL-DECIMALI-END
000172     IF M-S(IND1) = 'E'
CAR417*       GO TO 0859-CALCOLA-ZEC1106-END
CAR417        GO TO 0859-CALCOLA-ZEC1136-END
000172     END-IF
000172     MOVE IND11        TO IND1
000172     MOVE W-DECSIGBASE TO WCM-DECIMALI
000172     MOVE IND3         TO WCM-IND-DEC
000172     COPY ZMZDECIM.
000172
000172     MOVE 'ZEC113301'                   TO W-DECOD
000172     MOVE W-XXNN-N                      TO C
000172     COPY ZMZINDIR.
000172     COMPUTE W-COM1 = W-COM-NUM-DEC6 * (10 ** M-D(IND1))
000172     COPY ZMZFMMOD.
000172     MOVE SPACES          TO M-S(IND1)
000172     MOVE W-DECSIGCON  TO WCM-DECIMALI
000172     MOVE IND1         TO WCM-IND-DEC
000172     COPY ZMZDECIM.
000172     .
000172 0859-CALCOLA-ZEC1136-END.
000172     EXIT.
AVP029 0869-CALCOLA-CONTR-PER.
AVP029*---------------------PARITA TIPO QUOTAZIONE DECIM. DIVISA DI
AVP029*-------------------- LISTINO E CONTABILITA'
AVP029        PERFORM 0423-COMUNI-CTV
AVP029           THRU 0423-COMUNI-CTV-END
AVP029*----------------------------------------IMPORTO
AVP029        MOVE 10                    TO WCTV00-IMPORTO-INT
AVP029        MOVE 8                     TO WCTV00-IMPORTO-DEC
AVP029*-----------------------------------------------------CAMBIO
AVP029        MOVE 7                  TO WCTV00-CAMBIO-DEC
AVP029        MOVE 6                  TO WCTV00-CAMBIO-INT
AVP029*--------------------CAMPO  RISULTATO DIVISA LISTINO    '
AVP029        MOVE W-DECSIGBASE          TO WCTV00-CTVLS-DEC
AVP029        COMPUTE  WCTV00-CTVLS-INT = 18 - WCTV00-CTVLS-DEC
AVP029*--------------------CAMPO  RISULTATO DIVISA CONTABILITA'
AVP029        MOVE W-DECSIGCON           TO WCTV00-CTVDC-DEC
AVP029        COMPUTE  WCTV00-CTVDC-INT = 18 - WCTV00-CTVDC-DEC
AVP029*----------------------CHIAMATA ZMBCTV00  ------------
AVP029*       IF WCTV00-IMPORTO  GREATER ZEROES
AVP029        IF WCTV00-IMPORTO  NOT = 0
AVP029           PERFORM 0424-CHIAMA-ZMBCTV00
AVP029              THRU 0424-CHIAMA-ZMBCTV00-END
AVP029           IF WCTV00-RETURN-CODE EQUAL '00'
AVP029*----------------------------------------CONTROVALORE CSIGDLIS
AVP029              MOVE WCTV00-CTVLS          TO WRK-DIVLIS
AVP029*----------------------------------------CONTROVALORE CSIGDCON
AVP029              MOVE WCTV00-CTVDC          TO WRK-DIVCON
AVP029           END-IF
AVP029        ELSE
AVP029           MOVE ZEROES                   TO WRK-DIVLIS
AVP029           MOVE ZEROES                   TO WRK-DIVCON
AVP029        END-IF.
AVP029
AVP029 0869-CALCOLA-CONTR-PER-END.
AVP029     EXIT.
000172 0869-CALCOLA-CONTROVALORI.
000172*---------------------PARITA TIPO QUOTAZIONE DECIM. DIVISA DI
000172*-------------------- LISTINO E CONTABILITA'
000172        PERFORM 0423-COMUNI-CTV
000172           THRU 0423-COMUNI-CTV-END
000172*----------------------------------------IMPORTO
000172        MOVE 15                    TO WCTV00-IMPORTO-INT
000172        MOVE 3                     TO WCTV00-IMPORTO-DEC
000172*-----------------------------------------------------CAMBIO
000172        MOVE 7                  TO WCTV00-CAMBIO-DEC
000172        MOVE 6                  TO WCTV00-CAMBIO-INT
000172*--------------------CAMPO  RISULTATO DIVISA LISTINO    '
000172        MOVE W-DECSIGBASE          TO WCTV00-CTVLS-DEC
000172        COMPUTE  WCTV00-CTVLS-INT = 18 - WCTV00-CTVLS-DEC
000172*--------------------CAMPO  RISULTATO DIVISA CONTABILITA'
000172        MOVE W-DECSIGCON           TO WCTV00-CTVDC-DEC
000172        COMPUTE  WCTV00-CTVDC-INT = 18 - WCTV00-CTVDC-DEC
000172*----------------------CHIAMATA ZMBCTV00  ------------
000241*       IF WCTV00-IMPORTO  GREATER ZEROES
000241        IF WCTV00-IMPORTO  NOT = 0
000172           PERFORM 0424-CHIAMA-ZMBCTV00
000172              THRU 0424-CHIAMA-ZMBCTV00-END
000172           IF WCTV00-RETURN-CODE EQUAL '00'
000172*----------------------------------------CONTROVALORE CSIGDLIS
000172              MOVE WCTV00-CTVLS          TO WRK-DIVLIS
000172*----------------------------------------CONTROVALORE CSIGDCON
000172              MOVE WCTV00-CTVDC          TO WRK-DIVCON
000172           END-IF
000172        ELSE
000172           MOVE ZEROES                   TO WRK-DIVLIS
000172           MOVE ZEROES                   TO WRK-DIVCON
000172        END-IF.
000172
000172 0869-CALCOLA-CONTROVALORI-END.
000172     EXIT.
       0870-TRATTA-DIVISA.
           MOVE SPACES                           TO W-EXPERFORM.
           MOVE 'NO'                             TO W-TROVATA-DIV.
           PERFORM 0834-VEDI-SE-INTAB
              THRU 0834-VEDI-SE-INTAB-END
                   VARYING IND9 FROM 1 BY 1
                   UNTIL IND9 > 6 OR W-EXPERFORM = 'SI'.
           IF W-TROVATA-DIV = 'NO'
              PERFORM 0833-LEGGI-ADIV
                 THRU 0833-LEGGI-ADIV-END
           END-IF.
       0870-TRATTA-DIVISA-END.
           EXIT.
       0880-TRATTA-TTNDG.
           MOVE SPACES   TO WRK-CNTR-CAMPO123.
           MOVE SPACES   TO MOVE-NNDGSET.
           IF NCSVE-TTNDG1 (IND5) = 'ORD'
              MOVE 'ZOR031801'                TO W-DECOD
              COPY ZMZINDIR.
              MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVE-NNDGSET
              MOVE IND1                       TO W-NDG
              IF MOVE-NNDGSET NOT GREATER SPACES
                 MOVE 'SI'     TO WRK-CNTR-CAMPO123
              END-IF
           END-IF.
           IF NCSVE-TTNDG1 (IND5) (1:1) = 'F'
              MOVE NCSVE-TTNDG1 (IND5)        TO W-XNN
              MOVE 'ZND060101'                TO W-DECOD
              MOVE W-XNN-N                    TO C
              COPY ZMZINDIR.
              IF MOD(M-I(IND1):M-L(IND1)) > SPACES
                 MOVE IND1                    TO W-NDG
                 MOVE MOD(M-I(IND1):M-L(IND1))
                                              TO MOVE-NNDGSET
              ELSE
                 MOVE 'SI'     TO WRK-CNTR-CAMPO123
              END-IF
           END-IF.
           IF WRK-CNTR-CAMPO123 = 'SI'
              MOVE SPACES TO WRK-CNTR-CAMPO123
              IF NCSVE-TTNDG2(IND5) NOT GREATER SPACES AND
                 NCSVE-TTNDG3(IND5) GREATER SPACES
                 MOVE 'S049'       TO W-COD-ERR
                 MOVE '0'          TO W-MAP-ERR
                 MOVE SPACES       TO W-MOD-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
                 GO TO 0880-TRATTA-TTNDG-END
              END-IF
              IF NCSVE-TTNDG2 (IND5) = 'ORD'
                 MOVE 'ZOR031801'                TO W-DECOD
                 COPY ZMZINDIR.
                 MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVE-NNDGSET
                 MOVE IND1                       TO W-NDG
                 IF MOVE-NNDGSET NOT GREATER SPACES
                    MOVE 'SI'     TO WRK-CNTR-CAMPO123
                 END-IF
              END-IF
              IF NCSVE-TTNDG2 (IND5) (1:1) = 'F'
                 MOVE NCSVE-TTNDG2 (IND5)     TO W-XNN
                 MOVE 'ZND060101'             TO W-DECOD
                 MOVE W-XNN-N                 TO C
                 COPY ZMZINDIR.
                 IF MOD(M-I(IND1):M-L(IND1)) > SPACES
                    MOVE IND1                 TO W-NDG
                    MOVE MOD(M-I(IND1):M-L(IND1)) TO MOVE-NNDGSET
                 ELSE
                    MOVE 'SI'     TO WRK-CNTR-CAMPO123
                 END-IF
              END-IF
           END-IF.
           IF WRK-CNTR-CAMPO123 = 'SI'
              MOVE SPACES TO WRK-CNTR-CAMPO123
              IF NCSVE-TTNDG3 (IND5) = 'ORD'
                 MOVE 'ZOR031801'                TO W-DECOD
                 COPY ZMZINDIR.
                 MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVE-NNDGSET
                 MOVE IND1                       TO W-NDG
                 IF MOVE-NNDGSET NOT GREATER SPACES
                    MOVE 'SI'     TO WRK-CNTR-CAMPO123
                 END-IF
              END-IF
              IF NCSVE-TTNDG3 (IND5) (1:1) = 'F'
                 MOVE NCSVE-TTNDG3 (IND5)     TO W-XNN
                 MOVE 'ZND060101'             TO W-DECOD
                 MOVE W-XNN-N                 TO C
                 COPY ZMZINDIR.
                 IF MOD(M-I(IND1):M-L(IND1)) > SPACES
                    MOVE IND1                  TO W-NDG
                    MOVE MOD(M-I(IND1):M-L(IND1)) TO MOVE-NNDGSET
                 ELSE
                    MOVE 'SI'     TO WRK-CNTR-CAMPO123
                 END-IF
              END-IF
           END-IF.
           IF WRK-CNTR-CAMPO123 = 'SI'
              IF W-NUM-TEST = 4
                 MOVE 'S048'       TO W-COD-ERR
                 MOVE '0'          TO W-MAP-ERR
                 MOVE SPACES       TO W-MOD-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              ELSE
                 MOVE SPACES            TO MOVE-NNDGSET
              END-IF
           END-IF.
       0880-TRATTA-TTNDG-END.
           EXIT.
       0885-SCRIVI-AMOVE.
           MOVE 'SI'                             TO W-ISRT-MOVE.
           PERFORM
              VARYING INDP FROM 1 BY 1
                   UNTIL INDP > 35
              IF W-COM-NPRGMOVP(INDP) NOT GREATER ZEROES
                 MOVE MOVE-NPRGMOVP     TO W-COM-NPRGMOVP(INDP)
                 MOVE MOVE-NSUBMOVP     TO W-COM-NSUBMOVP(INDP)
                 MOVE MOVE-ISPSVAL      TO W-COM-ISPSVAL(INDP)
                 MOVE MOVE-ICTVSPS      TO W-COM-ICTVSPS(INDP)
000172           MOVE MOVE-ICTVLISPS    TO W-COM-ICTVLISPS(INDP)
                 MOVE 36                TO INDP
              ELSE
                 IF MOVE-NPRGMOVP = W-COM-NPRGMOVP(INDP) AND
                    MOVE-NSUBMOVP = W-COM-NSUBMOVP(INDP)
                    ADD MOVE-ISPSVAL    TO W-COM-ISPSVAL(INDP)
                    ADD MOVE-ICTVSPS    TO W-COM-ICTVSPS(INDP)
000172              ADD MOVE-ICTVLISPS  TO W-COM-ICTVLISPS(INDP)
                    MOVE 36             TO INDP
                 END-IF
              END-IF
           END-PERFORM.
           MOVE ZEROES  TO W-LAST-NPRGRIGA.
           PERFORM
              VARYING WRK-IND-INTAB FROM 1 BY 1
                UNTIL WRK-IND-INTAB GREATER 35
140597*            OR WRK-INTAB-NMOVP(WRK-IND-INTAB) = ZEROES
140597*            IF WRK-INTAB-NMOVP(WRK-IND-INTAB) = MOVE-NPRGMOVP
140597*            AND WRK-INTAB-SUBMOVP(WRK-IND-INTAB) = MOVE-NSUBMOVP
BAV170             MOVE WS-TAB-TBAMOVP(WRK-IND-INTAB) TO DCLTBAMOVP
BAV170*            OR WS-TAB-TBAMOVP(WRK-IND-INTAB) NOT > SPACES
BAV170             IF MOVP-CISO GREATER SPACES
BAV170                MOVE WS-TAB-TBAMOVP(WRK-IND-INTAB) TO DCLTBAMOVP

140597                IF MOVP-NPRGMOVP = MOVE-NPRGMOVP
140597                AND MOVP-NSUBMOVP = MOVE-NSUBMOVP
140597*                   MOVE WRK-INTAB-NPRGRIGA-E(WRK-IND-INTAB)
                          MOVE WS-TAB-NPRGRIGA-E(WRK-IND-INTAB)
                                                 TO W-LAST-NPRGRIGA
                          ADD 1                      TO W-LAST-NPRGRIGA
                          MOVE W-LAST-NPRGRIGA
                                TO WS-TAB-NPRGRIGA-E(WRK-IND-INTAB)
                          MOVE 36 TO WRK-IND-INTAB
                      END-IF
BAV170             END-IF
           END-PERFORM.
           ADD 1                           TO INDE.
           MOVE W-LAST-NPRGRIGA            TO MOVE-NPRGRIGA.
           MOVE DCLTBAMOVE                 TO WS-TAB-TBAMOVE(INDE).
       0885-SCRIVI-AMOVE-END.
           EXIT.
       0890-CONT-MOVP.
           MOVE 'SI'                   TO MOVP-NON-TROVATO
           MOVE W-COM-NPRGMOVP(IND10)  TO W-NPRGMOVP-CERCA
           MOVE W-COM-NSUBMOVP(IND10)  TO W-NSUBMOVP-CERCA
           PERFORM 0820-CERCA-AMOVP
              THRU 0820-CERCA-AMOVP-END
                 VARYING INDP FROM 1 BY 1
                    UNTIL INDP > 35  OR
                          MOVP-NON-TROVATO = SPACES
           SUBTRACT 1 FROM INDP.
           IF MOVP-NON-TROVATO = 'SI'
              MOVE '0'                        TO W-MAP-ERR
              MOVE SPACES                     TO W-MOD-ERR
              MOVE 2                          TO W-FLAG-ERR
              MOVE 'S050'                     TO W-COD-ERR
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
              GO TO 0890-CONT-MOVP-END
           END-IF.
           IF MOVP-IMOV   = ZEROES AND
              MOVP-ICTMOV = ZEROES
000172     AND MOVP-ICTVLIS = ZEROES
      *---------------------------- (TRATTASI DI REGOLAMENTO SPESE)
              IF W-COM-ISPSVAL(IND10) NOT GREATER ZEROES AND
                 MOVP-TMOV = 2
                 COMPUTE MOVP-IMOV    = W-COM-ISPSVAL(IND10) * -1
                 COMPUTE MOVP-ICTMOV  = W-COM-ICTVSPS(IND10) * -1
000172           COMPUTE MOVP-ICTVLIS = W-COM-ICTVLISPS(IND10) * -1
              END-IF
              IF W-COM-ISPSVAL(IND10) LESS ZEROES AND
                 MOVP-TMOV = 1
                 MOVE '0'                        TO W-MAP-ERR
                 MOVE SPACES                     TO W-MOD-ERR
                 MOVE 2                          TO W-FLAG-ERR
                 MOVE 'S090'                     TO W-COD-ERR
                 MOVE 'SI'                    TO W-FLAG-EXIT
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
                 GO TO 0890-CONT-MOVP-END
              END-IF
              IF W-COM-ISPSVAL(IND10) NOT LESS ZEROES AND
                 MOVP-TMOV = 1
                 COMPUTE MOVP-IMOV    = W-COM-ISPSVAL(IND10) * -1
                 COMPUTE MOVP-ICTMOV  = W-COM-ICTVSPS(IND10) * -1
000172           COMPUTE MOVP-ICTVLIS = W-COM-ICTVLISPS(IND10) * -1
              END-IF
              IF W-COM-ISPSVAL(IND10) GREATER ZEROES AND
                 MOVP-TMOV = 2
                 MOVE '0'              TO W-MAP-ERR
                 MOVE SPACES           TO W-MOD-ERR
                 MOVE 2                TO W-FLAG-ERR
                 MOVE 'S091'           TO W-COD-ERR
                 MOVE 'SI'             TO W-FLAG-EXIT
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
                 GO TO 0890-CONT-MOVP-END
              END-IF
           ELSE
      *---------------------------- (MOVIMENTO PRINCIPALE CON SPESE)
BAVF40*       MOVE MOVP-IMOV            TO WRK-IMOV-VALASS
BAVF40*       MOVE W-COM-ISPSVAL(IND10) TO WRK-ISPSVAL-VALASS
BAVF40*       IF WRK-IMOV-VALASS LESS WRK-ISPSVAL-VALASS
BAVF40*          MOVE '0'              TO W-MAP-ERR
BAVF40*          MOVE SPACES           TO W-MOD-ERR
BAVF40*          MOVE 2                TO W-FLAG-ERR
BAVF40*          MOVE 'S092'           TO W-COD-ERR
BAVF40*          MOVE 'SI'             TO W-FLAG-EXIT
BAVF40*          PERFORM 9999-GESTIONE-ERRORE
BAVF40*             THRU 9999-GESTIONE-ERRORE-END
BAVF40*          GO TO 0890-CONT-MOVP-END
BAVF40*       END-IF
BAVF40        MOVE MOVP-IMOV            TO WRK-IMOV-VALASS
BAVF40        MOVE W-COM-ISPSVAL(IND10) TO WRK-ISPSVAL-VALASS
BAVF40        IF WRK-IMOV-VALASS LESS WRK-ISPSVAL-VALASS
BAVF40           IF MOVP-TMOV = 1
BAVF40              IF W-COM-ISPSVAL(IND10) < 0
BAVF40                 MOVE '0'              TO W-MAP-ERR
BAVF40                 MOVE SPACES           TO W-MOD-ERR
BAVF40                 MOVE 2                TO W-FLAG-ERR
BAVF40                 MOVE 'S092'           TO W-COD-ERR
BAVF40                 MOVE 'SI'             TO W-FLAG-EXIT
BAVF40                 PERFORM 9999-GESTIONE-ERRORE
BAVF40                    THRU 9999-GESTIONE-ERRORE-END
BAVF40                 GO TO 0890-CONT-MOVP-END
BAVF40              END-IF
BAVF40              IF W-COM-ISPSVAL(IND10) > 0
BAVF40                 MOVE 'N'              TO W-BLOCC
BAVF40                 MOVE 'A'              TO W-MAP-ERR
BAVF40                 MOVE SPACES           TO W-MOD-ERR
BAVF40                 MOVE 'S092'           TO W-COD-ERR
BAVF40                 PERFORM 9999-GESTIONE-ERRORE
BAVF40                    THRU 9999-GESTIONE-ERRORE-END
BAVF40              END-IF
BAVF40           ELSE
BAVF40              IF W-COM-ISPSVAL(IND10) > 0
BAVF40                 MOVE '0'              TO W-MAP-ERR
BAVF40                 MOVE SPACES           TO W-MOD-ERR
BAVF40                 MOVE 2                TO W-FLAG-ERR
BAVF40                 MOVE 'S092'           TO W-COD-ERR
BAVF40                 MOVE 'SI'             TO W-FLAG-EXIT
BAVF40                 PERFORM 9999-GESTIONE-ERRORE
BAVF40                    THRU 9999-GESTIONE-ERRORE-END
BAVF40                 GO TO 0890-CONT-MOVP-END
BAVF40              END-IF
BAVF40              IF W-COM-ISPSVAL(IND10) < 0
BAVF40                 MOVE 'N'              TO W-BLOCC
BAVF40                 MOVE 'A'              TO W-MAP-ERR
BAVF40                 MOVE SPACES           TO W-MOD-ERR
BAVF40                 MOVE 'S092'           TO W-COD-ERR
BAVF40                 PERFORM 9999-GESTIONE-ERRORE
BAVF40                    THRU 9999-GESTIONE-ERRORE-END
BAVF40              END-IF
BAVF40           END-IF
BAVF40        END-IF
              MOVE ZEROES TO WRK-ISPSVAL
                             WRK-ICTVSPS
000172                       WRK-ICTVLISPS
              COMPUTE WRK-ISPSVAL = W-COM-ISPSVAL(IND10) * -1
              COMPUTE WRK-ICTVSPS = W-COM-ICTVSPS(IND10) * -1
000172        COMPUTE WRK-ICTVLISPS = W-COM-ICTVLISPS(IND10) * -1
              COMPUTE MOVP-IMOV   = MOVP-IMOV   + WRK-ISPSVAL
              COMPUTE MOVP-ICTMOV = MOVP-ICTMOV + WRK-ICTVSPS
000172        COMPUTE MOVP-ICTVLIS = MOVP-ICTVLIS + WRK-ICTVLISPS
000142***-------------------- VERIFICA SE E' STATA SCRITTA UNA
000142***-------------------- CAUSALE FISSA PER IL MOVIMENTO TRATTATO
000142***-------------------- SE PRESENTE L'IMPORTO DELLA CAUSALE DEVE
000142***-------------------- ESSERE AGGIORNATO CON IL NUOVO IMPORTO
000142***-------------------- DEL MOVIMENTO
000142        MOVE 'SI'                   TO MOVC-NON-TROVATO
000142        MOVE W-COM-NPRGMOVP(IND10)  TO W-NPRGMOVP-CERCA
000142        MOVE W-COM-NSUBMOVP(IND10)  TO W-NSUBMOVP-CERCA
000142        PERFORM 0820-CERCA-AMOVC
000142           THRU 0820-CERCA-AMOVC-END
000142        VARYING INDC FROM 1 BY 1
000142          UNTIL INDC > 50  OR
000142                    MOVC-NON-TROVATO = SPACES
000142        SUBTRACT 1 FROM INDC
000142        IF MOVC-NON-TROVATO = SPACES
000142           IF MOVP-IMOV < 0                                       TS003012
000142              COMPUTE MOVC-ICAU = ( MOVP-IMOV * -1 )              TS003013
000142           ELSE                                                   TS003014
000142              MOVE MOVP-IMOV        TO MOVC-ICAU                  TS003015
000142           END-IF                                                 TS003016
000142           MOVE DCLTBAMOVC     TO WS-TAB-TBAMOVC(INDC)
000142        END-IF
           END-IF.

           MOVE DCLTBAMOVP     TO WS-TAB-TBAMOVP(INDP).


       0890-CONT-MOVP-END.
           EXIT.
000202 0900-RITENUTA-FISCALE.

000202***---------- VALORIZZAZIONE RESIDENZA,PAESE,DATA-DICHIARAZIONE
000202***----------                FASCIA ALIQUOTA
000202***----------   SE NON CENSITO POSSO REPERIRE SOLO RESIDENZA E
000202***----------   PAESE DAL MODELLO
000202***----------   SE CENSITO POSSO REPERIRE LE INFORMAZIONI DA
000202***----------   ANAPOS

APE001*NO CARTA CONTO
000202     IF MOVP-NNDGPART = '9999999999999999'
000202****-----..DA MODELLO VALORIZZO FRSD E CSIGPAE COME LI PRENDO ?
000344*       MOVE ZEROES    TO  WRK-DATA-DICHIARAZIONE-RIT
000344        MOVE 1         TO  WRK-AUTOCERTIFICAZIONE
000202        MOVE 'P'       TO  WRK-FCAPGAIN-RIT
000202     ELSE
000202        MOVE MOVP-NNDGPART TO  NAPOS-NNDGSET
000202        MOVE W-CIST        TO  NAPOS-CIST
000202        PERFORM 0910-LEGGI-TBANAPOS
000202           THRU 0910-LEGGI-TBANAPOS-END
000202        IF L-ERR-ERR
000202           GO TO 0900-RITENUTA-FISCALE-END
000202        END-IF
000202        MOVE NAPOS-FRSD       TO  WRK-FRSD-RIT
000202        MOVE NAPOS-CSIGPEND   TO  WRK-CSIGPAE-RIT
000344*       MOVE NAPOS-DVARDEL    TO  WRK-DATA-DICHIARAZIONE-RIT
000344        MOVE NAPOS-CSTATODEL  TO  WRK-AUTOCERTIFICAZIONE
000202        MOVE NAPOS-FCAPGAIN   TO  WRK-FCAPGAIN-RIT
000202     END-IF.
000202***--- SE E' PRESENTE LA DATA DI DICHIARAZIONE IMPOSTO LA DATA
000202***--- DI SCADENZA CHE E' SEMPRE IL 31 MARZO DELL'ANNO SUCCESSIVO
000344***---                   A T T E N Z I O N E
000344***--- QUESTA PARTE VIENE ASTERISCATA PER ADEGUAMENTO ALLA NUOVA
000344***--- NORMATIVA SULLA RITENUTA FISCALE.

000344*    IF WRK-DATA-DICHIARAZIONE-RIT > ZEROES
000344*       MOVE WRK-DATA-DICHIARAZIONE-RIT TO WRK-DATA-SCADENZA-RIT
000344*       MOVE 31                         TO WRK-GIORNO-SCADENZA-RIT
000344*       MOVE 03                         TO WRK-MESE-SCADENZA-RIT
000344*       ADD  1                          TO WRK-ANNO-SCADENZA-RIT
000344*    END-IF.

000202***--- IN PRESENZA DI NON RESIDENTI VERIFICO SE HANNO UN'ECCEZIONE
000202***--- A LIVELLO DI RAPPORTO TRATTATO. SE PRESENTE DEVO RICOPRIRE
000202***---  LA DATA DICHIARAZIONE, LA FASCIA DI RIFERIMENTO E LA DATA
000202***---  DI SCADENZA CON LE INFORMAZIONI PRESENTI SUL RECORD LETTO
000344***---                   A T T E N Z I O N E
000344***--- QUESTA PARTE VIENE ASTERISCATA PER ADEGUAMENTO ALLA NUOVA
000344***--- NORMATIVA SULLA RITENUTA FISCALE.

000202     IF WRK-FRSD-RIT = 2
000202        PERFORM 0920-CERCA-ECCEZIONE
000202           THRU 0920-CERCA-ECCEZIONE-END
000202     END-IF.

000202***--- SE ALIQUOTA DA PAESE (FCAPGAIN = P) ACCEDERE SULLA TABELLA
000202***---    PAESI ED IMPOSTARE L'INDICATORE DELL'ALIQUOTA CON QUELLO
000202***---    DEL PAESE LETTO
000202***--- SE ALIQUOTA PARTICOLARE (FCAPGAIN <> P) IMPOSTARE
000202***---    INDICATORE ALIQUOTA CON QUELLO RICAVATO PRECEDENTEMENTE
000202***---    ED IL PAESE CON IL PAESE IMPOSTATO PRIMA
000344***---                   A T T E N Z I O N E
000344***--- QUESTA PARTE VIENE ASTERISCATA PER ADEGUAMENTO ALLA NUOVA
000344***--- NORMATIVA SULLA RITENUTA FISCALE.

000344*    IF WRK-FCAPGAIN-RIT = 'P' OR SPACES
000344*       MOVE WRK-CSIGPAE-RIT   TO  PAE-CSIGPAE
000344*       MOVE W-CIST            TO  PAE-CIST
000344*       PERFORM 0930-LEGGI-TBTPAE
000344*          THRU 0930-LEGGI-TBTPAE-END
000344*       MOVE PAE-FESENTE   TO  WRK-INDICATORE-RIT
000344*       MOVE SPACES        TO  WRK-PAESE-RIT
000344*    ELSE
000344*       MOVE WRK-FCAPGAIN-RIT TO  WRK-INDICATORE-RIT
000344*       MOVE WRK-CSIGPAE-RIT  TO  WRK-PAESE-RIT
000344*    END-IF.

000344     MOVE SPACES                   TO  WRK-PAESE-RIT
000344     IF WRK-FRSD-RIT = 2
000344        MOVE 'E'                   TO  WRK-INDICATORE-RIT
000344     ELSE
000344        MOVE 'I'                   TO  WRK-INDICATORE-RIT
000344     END-IF.

000202***--- PREPARA CHIAVE PER LEGGERE LE ALIQUOTE
000202     MOVE W-CIST                   TO  ALQRC-CIST
000202     MOVE WRK-INDICATORE-RIT       TO  ALQRC-FCAPGAIN
000202     MOVE WRK-PAESE-RIT            TO  ALQRC-CSIGPAE
000202     MOVE L-DATA-OGGI              TO  ALQRC-DDDECVDTA.

000202*-------------------------------- LEGGE TABELLA ZM.TBTALQRC
000202*------------------------------- PER DDDECVDTA <= DATA OGGI
000202     PERFORM 0950-APRI-CURSORE19
000202        THRU 0950-APRI-CURSORE19-END.
000202     IF L-ERR-ERR
000202        GO TO 0900-RITENUTA-FISCALE-END
000202     END-IF.

000202     PERFORM 0960-LEGGI-TBTALQRC
000202        THRU 0960-LEGGI-TBTALQRC-END.
000202     IF L-ERR-ERR
000202        GO TO 0900-RITENUTA-FISCALE-END
000202     END-IF.

000202***--- SE L'ALIQUOTA NON E' PRESENTE E' UN ERRORE

000202     IF W-SQL-NON-TROVATO
000202        MOVE SPACES                     TO W-MOD-ERR
000202        MOVE '0'                        TO W-MAP-ERR
000202        MOVE 2                          TO W-FLAG-ERR
000202        MOVE 'S166'                     TO W-COD-ERR
000202        PERFORM 9999-GESTIONE-ERRORE
000202           THRU 9999-GESTIONE-ERRORE-END
000202        GO TO 0900-RITENUTA-FISCALE-END
000202     END-IF.
000202*--------------------------------------- ZEC111501 = PRCRIT
000202     MOVE 'ZEC111501'                   TO W-DECOD
000202     MOVE W-XXNN-N                      TO C
000202     COPY ZMZINDIR.
000202     MOVE ZEROES                             TO W-COM1.

000202***--- SE LA DATA DI DICHIARAZIONE E' SCADUTA OPPURE NON E'
000202***--- STATA PRESENTATA DATA-DICHIARAZIONE = ZEROES
000202***--- CONSIDERO L'ALIQUOTA PRESENTE SU PRCRITA
000202***--- ALTRIMENTI CONSIDERO L'ALIQUOTA PRESENTE SU PRCRIT

000344*    IF WRK-DATA-DICHIARAZIONE-RIT = ZEROES
000344*    OR (WRK-DATA-DICHIARAZIONE-RIT NOT = ZEROES
000344*                     AND WRK-DATA-SCADENZA-RIT < L-DATA-OGGI)
000344     IF WRK-AUTOCERTIFICAZIONE NOT = 2
000202        IF ALQRC-PRCRITA NOT = ZEROES
000202           COMPUTE W-COM1 = ALQRC-PRCRITA * (10 ** M-D(IND1))
000202        ELSE
000202           GO TO 0900-RITENUTA-FISCALE-END
000202        END-IF
000202     ELSE
000202        IF ALQRC-PRCRIT NOT = ZEROES
000202           COMPUTE W-COM1 = ALQRC-PRCRIT * (10 ** M-D(IND1))
000202        ELSE
000202           GO TO 0900-RITENUTA-FISCALE-END
000202        END-IF
000202     END-IF.
000202     COPY ZMZFMMOD.
000202     MOVE SPACES                             TO M-S(IND1).
000202*--------------------------------------- ZEC111401 = CRITCEC
000202     MOVE 'ZEC111401'           TO W-DECOD
000202     MOVE W-XXNN-N              TO C
000202     COPY ZMZINDIR.
000202     MOVE ALQRC-CRITCEC         TO MOD(M-I(IND1):M-L(IND1))
000202     MOVE SPACES                TO M-S(IND1)
000202*--------------------------------------- ZEC111601  = DDDECVDTA
000202     MOVE 'ZEC111601'                   TO W-DECOD
000202     MOVE W-XXNN-N                      TO C
000202     COPY ZMZINDIR.
000202     MOVE ALQRC-DDDECVDTA                    TO W-DATN.
000202     COPY ZMZFMMOD.
000202     MOVE SPACES                             TO M-S(IND1).

000202*--- RICERCA IL CODICE STAMPA DEL CONTO ECONOMICO
000202*--------------------------------------------- ZEC111401/10
000202     MOVE '1114'                       TO COORD-4
000202     COPY ZMZINDIR.
000202     IF MOD(M-I(IND1):M-L(IND1)) NOT = SPACES
000202*--------------------------- LETTURA TABELLA ZM.TBTABCEC (205)
000202        MOVE MOD(M-I(IND1):M-L(IND1))    TO ABCEC-CCEC
000202        MOVE W-CIST                      TO ABCEC-CIST
000202        PERFORM 0818-LEGGI-TABCEC
000202           THRU 0818-LEGGI-TABCEC-END
000202        IF W-SQL-NON-TROVATO
000202           MOVE 'E'           TO M-S(IND1)
000202           MOVE 'S119'        TO W-COD-ERR
000202           MOVE M-M(IND1)     TO W-MAP-ERR
000202           MOVE W-DEC-COORD   TO W-MOD-ERR
000202           MOVE WCM-ERR-ABCEC TO W-DES-ERR
000202           PERFORM 9999-GESTIONE-ERRORE
000202              THRU 9999-GESTIONE-ERRORE-END
000202           GO TO 0900-RITENUTA-FISCALE-END
000202        END-IF
000202        IF M-S(IND1) = 'E'
000202        OR L-ERR-ERR
000202           GO TO 0900-RITENUTA-FISCALE-END
000202        END-IF
000202*--------------------------------------- ZEC111901/10 = CFRSRAC
000202        MOVE '1119'                       TO COORD-4
000202        MOVE W-XXNN-N                      TO C
000202        COPY ZMZINDIR.
000202        COMPUTE W-COM1 = ABCEC-CFRSRAC * (10 ** M-D(IND1))
000202        COPY ZMZFMMOD.
000202        MOVE SPACES                       TO M-S(IND1)
000202     END-IF
000202*-------------------------- RILEGGE PER VERIFICARE L'ESISTENZE DI
000202*-------------------------- UN ALTRO RECORD PER LA STESSA CHIAVE
000202*-------------------------- CON DDDECVDTA INFERIORE
000202     PERFORM 0960-LEGGI-TBTALQRC
000202        THRU 0960-LEGGI-TBTALQRC-END.
000202     IF W-SQL-NON-TROVATO
000202        PERFORM 0970-CHIUDI-CURSORE19
000202           THRU 0970-CHIUDI-CURSORE19-END
000202        GO TO 0900-RITENUTA-FISCALE-END
000202     END-IF.
000202     IF L-ERR-ERR
000202        GO TO 0900-RITENUTA-FISCALE-END
000202     END-IF.
000202     PERFORM 0970-CHIUDI-CURSORE19
000202        THRU 0970-CHIUDI-CURSORE19-END.
000202     IF L-ERR-ERR
000202        GO TO 0900-RITENUTA-FISCALE-END
000202     END-IF.
000202*--------------------------------------- ZEC112001 = CRITCEC
000202     MOVE 'ZEC112001'                   TO W-DECOD
000202     MOVE W-XXNN-N                      TO C
000202     COPY ZMZINDIR.
000202     MOVE ALQRC-CRITCEC             TO MOD(M-I(IND1):M-L(IND1)).
000202     MOVE SPACES                    TO M-S(IND1).
000202*--------------------------------------- ZEC112101 = PRCRIT
000202     MOVE 'ZEC112101'                   TO W-DECOD
000202     MOVE W-XXNN-N                      TO C
000202     COPY ZMZINDIR.
000202     MOVE ZEROES                    TO W-COM1.

000202***--- SE LA DATA DI DICHIARAZIONE E' SCADUTA OPPURE NON E'
000202***--- STATA PRESENTATA DATA-DICHIARAZIONE = ZEROES
000202***--- CONSIDERO L'ALIQUOTA PRESENTE SU PRCRITA
000202***--- ALTRIMENTI CONSIDERO L'ALIQUOTA PRESENTE SU PRCRIT

000344*    IF WRK-DATA-DICHIARAZIONE-RIT = ZEROES
000344*    OR (WRK-DATA-DICHIARAZIONE-RIT NOT = ZEROES
000344*                     AND WRK-DATA-SCADENZA-RIT < L-DATA-OGGI)
000344     IF WRK-AUTOCERTIFICAZIONE NOT = 2
000202        COMPUTE W-COM1 = ALQRC-PRCRITA * (10 ** M-D(IND1))
000202     ELSE
000202        COMPUTE W-COM1 = ALQRC-PRCRIT * (10 ** M-D(IND1))
000202     END-IF.

000202     COPY ZMZFMMOD.
000202     MOVE SPACES                    TO M-S(IND1).
      *--------------------------------------- ZEC112201  = DDDECVDTA
000202     MOVE 'ZEC112201'                   TO W-DECOD
000202     MOVE W-XXNN-N                      TO C
000202     COPY ZMZINDIR.
000202     MOVE ALQRC-DDDECVDTA           TO W-DATN.
000202     COPY ZMZFMMOD.
000202     MOVE SPACES                    TO M-S(IND1).

000202*--- RICERCA IL CODICE STAMPA DEL CONTO ECONOMICO
000202*-------------------------------------------- ZEC112001/10
000202     MOVE '1120'                       TO COORD-4
000202     COPY ZMZINDIR.
000202     IF MOD(M-I(IND1):M-L(IND1)) NOT = SPACES
000202*--------------------------- LETTURA TABELLA ZM.TBTABCEC (205)
000202        MOVE MOD(M-I(IND1):M-L(IND1))    TO ABCEC-CCEC
000202        MOVE W-CIST                      TO ABCEC-CIST
000202        PERFORM 0818-LEGGI-TABCEC
000202           THRU 0818-LEGGI-TABCEC-END
000202        IF W-SQL-NON-TROVATO
000202           MOVE 'E'           TO M-S(IND1)
000202           MOVE 'S119'        TO W-COD-ERR
000202           MOVE M-M(IND1)     TO W-MAP-ERR
000202           MOVE W-DEC-COORD   TO W-MOD-ERR
000202           MOVE WCM-ERR-ABCEC TO W-DES-ERR
000202           PERFORM 9999-GESTIONE-ERRORE
000202              THRU 9999-GESTIONE-ERRORE-END
000202           GO TO 0900-RITENUTA-FISCALE-END
000202        END-IF
000202        IF M-S(IND1) = 'E'
000202        OR L-ERR-ERR
000202           GO TO 0900-RITENUTA-FISCALE-END
000202        END-IF
000202*--------------------------------------- ZEC112501/10 = CFRSRAC
000202        MOVE '1125'                       TO COORD-4
000202        MOVE W-XXNN-N                     TO C
000202        COPY ZMZINDIR.
000202        COMPUTE W-COM1 = ABCEC-CFRSRAC * (10 ** M-D(IND1))
000202        COPY ZMZFMMOD.
000202        MOVE SPACES                          TO M-S(IND1)
000202     END-IF.

000202 0900-RITENUTA-FISCALE-END.
000202     EXIT.
000202 0910-LEGGI-TBANAPOS.
000202     MOVE ZEROES                      TO W-SQLCODE.
000202         MOVE 'ZMBANAG2'     TO ZINTE-CINTERF
000202         PERFORM LEGGI-TZINTE
000202            THRU LEGGI-TZINTE-END
000202         MOVE ZINTE-WCINTERF TO WCM-CHIAMATO

000202     EXEC SQL INCLUDE ZMYANAG2  END-EXEC.

000202     IF NOT W-SQL-OK AND
000202        NOT W-SQL-NON-TROVATO
000202        MOVE 8                   TO W-FLAG-ERR
000202        MOVE '9999'              TO W-COD-ERR
000202        MOVE 'TBANAPOS'          TO L-NOME-TABELLA
000202        MOVE W-SQLCODE           TO L-CODICE-SQL
000202        MOVE 'ZMBSVIL0'          TO L-MODULO
000202        MOVE 'ZMBANAG2'          TO L-SUB-MODULO
000202        PERFORM 9999-GESTIONE-ERRORE
000202           THRU 9999-GESTIONE-ERRORE-END
000202     END-IF.

000202 0910-LEGGI-TBANAPOS-END.
000202     EXIT.
APE001
APE001 0910-LEGGI-TBANAPOS-CARTA.
APE001     MOVE ZEROES                      TO W-SQLCODE.
APE001         MOVE 'ZMBANAM2'     TO ZINTE-CINTERF
APE001         PERFORM LEGGI-TZINTE
APE001            THRU LEGGI-TZINTE-END
APE001         MOVE ZINTE-WCINTERF TO WCM-CHIAMATO
APE001
APE001     EXEC SQL INCLUDE ZMYANAM2  END-EXEC.

APE001     IF NOT W-SQL-OK AND
APE001        NOT W-SQL-NON-TROVATO
APE001        MOVE 8                   TO W-FLAG-ERR
APE001        MOVE '9999'              TO W-COD-ERR
APE001        MOVE 'TBANAPOS'          TO L-NOME-TABELLA
APE001        MOVE W-SQLCODE           TO L-CODICE-SQL
APE001        MOVE 'ZMBSVIL0'          TO L-MODULO
APE001        MOVE 'ZMBANAM2'          TO L-SUB-MODULO
APE001        PERFORM 9999-GESTIONE-ERRORE
APE001           THRU 9999-GESTIONE-ERRORE-END
APE001     END-IF.
APE001
APE001 0910-LEGGI-TBANAPOS-CARTA-END.
APE001     EXIT.

APE001*NO CARTA CONTO
000202 0920-CERCA-ECCEZIONE.


000202     MOVE MOVP-CIST       TO  TRTRC-CIST
000202     MOVE WRK-CSTC-RIT    TO  TRTRC-CSTC
000202     MOVE WRK-CISO-RIT    TO  TRTRC-CISO
000202     MOVE WRK-NNDGSET-RIT TO  TRTRC-NNDGSET
000202     MOVE WRK-NSUFABT-RIT TO  TRTRC-NSUFABT
000202     MOVE WRK-CDPZ-RIT    TO  TRTRC-CDPZ
000202     MOVE WRK-NPRGOPE-RIT TO  TRTRC-NPRGOPE.

000202     PERFORM 0921-LEGGI-TBATRTRC
000202        THRU 0921-LEGGI-TBATRTRC-END.

000202     IF L-ERR-ERR
000202        GO TO 0920-CERCA-ECCEZIONE-END
000202     END-IF.


000202     IF W-SQL-OK
000202        MOVE TRTRC-DVARDEL     TO   WRK-DATA-DICHIARAZIONE-RIT
000202        MOVE TRTRC-FCAPGAIN    TO   WRK-FCAPGAIN-RIT
000202        IF WRK-DATA-DICHIARAZIONE-RIT > ZEROES
000202           MOVE WRK-DATA-DICHIARAZIONE-RIT
000202                                   TO WRK-DATA-SCADENZA-RIT
000202           MOVE 31                 TO WRK-GIORNO-SCADENZA-RIT
000202           MOVE 03                 TO WRK-MESE-SCADENZA-RIT
000202           ADD  1                  TO WRK-ANNO-SCADENZA-RIT
000202        END-IF
000202     END-IF.

000202 0920-CERCA-ECCEZIONE-END.
000202     EXIT.
000202 0921-LEGGI-TBATRTRC.

000202     EXEC SQL INCLUDE ZMS18701 END-EXEC.

000202     IF NOT W-SQL-OK
000202     AND NOT W-SQL-NON-TROVATO
000202        MOVE 8                        TO W-FLAG-ERR
000202        MOVE '9999'                   TO W-COD-ERR
000202        MOVE 'TBATRTRC'               TO L-NOME-TABELLA
000202        MOVE W-SQLCODE                TO L-CODICE-SQL
000202        MOVE 'ZMBSVIL0'               TO L-MODULO
000202        MOVE '0921-LEGGI-TBATRTRC'    TO L-SUB-MODULO
000202        PERFORM 9999-GESTIONE-ERRORE
000202           THRU 9999-GESTIONE-ERRORE-END
000202     END-IF.

000202 0921-LEGGI-TBATRTRC-END.
000202     EXIT.

000202 0930-LEGGI-TBTPAE.

000202     EXEC SQL INCLUDE ZMS21501 END-EXEC.

000202     IF NOT W-SQL-OK
000202        MOVE 8                        TO W-FLAG-ERR
000202        MOVE '9999'                   TO W-COD-ERR
000202        MOVE SPACES                   TO L-NOME-TABELLA
000202        MOVE W-SQLCODE                TO L-CODICE-SQL
000202        MOVE 'ZMBSVIL0'               TO L-MODULO
000202        MOVE '0930-LEGGI-TBTPAE'      TO L-SUB-MODULO
000202        PERFORM 9999-GESTIONE-ERRORE
000202           THRU 9999-GESTIONE-ERRORE-END
000202     END-IF.

000202 0930-LEGGI-TBTPAE-END.
000202     EXIT.
CAR443*-----------------
CAR443 0931-DIVISA-IN.
CAR443*-----------------
CAR443* SE LA DIVISA DEL RAPPORTO EFFETTIVO E' UNA DIVISA 'IN' DEBBO
CAR443* CALCOLARE IL CONTROVALORE.
CAR443*------------------------------------------------------------
CAR443      INITIALIZE ZMWCTV00
CAR443      COMPUTE WCTV00-IMPORTO    = MOVP-IMOV * ( 10 ** 3)
CAR443      COMPUTE WCTV00-CAMBIO     = WRK-PARITA-FITTIZIO * ( 10 ** 7)
CAR443      COMPUTE WCTV00-CAMBIO-CTP =
CAR443                            WRK-PARITA-EFFETTIVO * ( 10 ** 7)
CAR443      MOVE 7              TO WCTV00-CAMBIO-CTP-DEC
CAR443      MOVE 6              TO WCTV00-CAMBIO-CTP-INT
CAR443      MOVE DIV-NDCLDIV    TO WCTV00-CTVCP-DEC
CAR443      COMPUTE WCTV00-CTVCP-INT  = 18 - WCTV00-CTVCP-DEC
CAR443      MOVE 'CTVCP' TO        WCTV00-COMANDO
CAR443      PERFORM 0869-CALCOLA-CONTROVALORI
CAR443         THRU 0869-CALCOLA-CONTROVALORI-END
CAR443      COMPUTE MOVP-IMOV     =  WCTV00-CTVCP  * -1
CAR443*--------------------------------------
CAR443*--------------------------------------
CAR443      COMPUTE MOVP-ICTMOV   = MOVP-ICTMOV  * (-1)
CAR443      COMPUTE MOVP-ICTVLIS  = MOVP-ICTVLIS * (-1)
CAR443      IF MOVP-TMOV = 1
CAR443         MOVE 2    TO MOVP-TMOV
CAR443      ELSE
CAR443         MOVE 1    TO MOVP-TMOV
CAR443      END-IF.
CAR443 0931-DIVISA-IN-END.
CAR443      EXIT.
000202 0950-APRI-CURSORE19.

000202     EXEC SQL INCLUDE ZMLOPE19 END-EXEC.

000202     IF NOT W-SQL-OK
000202        MOVE 8                        TO W-FLAG-ERR
000202        MOVE '9999'                   TO W-COD-ERR
000202        MOVE SPACES                   TO L-NOME-TABELLA
000202        MOVE W-SQLCODE                TO L-CODICE-SQL
000202        MOVE 'ZMBSVIL0'               TO L-MODULO
000202        MOVE '0950-APRI-CURSORE19'    TO L-SUB-MODULO
000202        PERFORM 9999-GESTIONE-ERRORE
000202           THRU 9999-GESTIONE-ERRORE-END
000202     END-IF.

000202 0950-APRI-CURSORE19-END.
000202     EXIT.

000202 0960-LEGGI-TBTALQRC.

000202     EXEC SQL INCLUDE ZMF28101 END-EXEC.

000202     IF  NOT W-SQL-OK
000202     AND NOT W-SQL-NON-TROVATO
000202         MOVE 8                          TO W-FLAG-ERR
000202         MOVE '9999'                     TO W-COD-ERR
000202         MOVE 'TBTALQRC'                 TO L-NOME-TABELLA
000202         MOVE W-SQLCODE                  TO L-CODICE-SQL
000202         MOVE 'ZMBSVIL0'                 TO L-MODULO
000202         MOVE '0960-LEGGI-TBTALQRC'      TO L-SUB-MODULO
000202         PERFORM 9999-GESTIONE-ERRORE
000202            THRU 9999-GESTIONE-ERRORE-END
000202     END-IF.

000202 0960-LEGGI-TBTALQRC-END.
000202     EXIT.

000202 0970-CHIUDI-CURSORE19.

000202     EXEC SQL INCLUDE ZMLCLO19 END-EXEC.

000202     IF NOT W-SQL-OK
000202        MOVE 8                        TO W-FLAG-ERR
000202        MOVE '9999'                   TO W-COD-ERR
000202        MOVE SPACES                   TO L-NOME-TABELLA
000202        MOVE W-SQLCODE                TO L-CODICE-SQL
000202        MOVE 'ZMBSVIL0'               TO L-MODULO
000202        MOVE '0970-CHIUDI-CURSORE19'  TO L-SUB-MODULO
000202        PERFORM 9999-GESTIONE-ERRORE
000202           THRU 9999-GESTIONE-ERRORE-END
000202     END-IF.

000202 0970-CHIUDI-CURSORE19-END.
000202     EXIT.
                                                                        00010001
000172 0900-MOV-PATRIM-DIVISE-IN.                                       00122001
000172*--------------------------------SCORRO I MOVIMENTI PATRIMONIALI  00122102
000172*---------------------------------PER PRENDERE IL NUMERO         00122202
000172*----------------------------------DELL'UTLIMO MOVIMENTO CREATO   00122302
000172     PERFORM VARYING IND1 FROM 1 BY 1                             00123002
000172       UNTIL IND1 > 35  OR                                        00124005
000172             WS-TAB-TBAMOVP(IND1) NOT GREATER SPACES              00124105
000172        IF WS-TAB-TBAMOVP (IND1) NOT EQUAL SPACES                 00124210
000172           MOVE WS-TAB-TBAMOVP (IND1) TO DCLTBAMOVP               00124310
000172           IF MOVP-NPRGMOVP > 20 AND                              00124410
000172              MOVP-NPRGMOVP < 151                                 00124510
000172              MOVE MOVP-NPRGMOVP         TO WRK-MOVP-NPRGMOVP     00124610
000172           END-IF                                                 00124710
000172        END-IF                                                    00124810
000172     END-PERFORM                                                  00125302
000172     IF IND1 > 35                                                 00125411
000172        GO TO 0900-MOV-PATRIM-DIVISE-IN-END                       00125511
000172     END-IF                                                       00125911
000172                                                                  00126002
000172*--------------------------------SCORRO I MOVIMENTI PATRIMONIALI  00126102
000172*---------------------------------PER CIASCUNO VERIFICO:          00126202
000172*----------------------------------SE DIVISA IN                   00126302
000172*-----------------------------------ACCEDO AD AINDRA E VERIFICO:  00126402
000172*------------------------------------SE CONTO FITTIZIO            00126502
000172*-------------------------------------ACCEDO AD TRPEUR            00126602
000172*--------------------------------------SCRIVO UN MOVIMENTO =      00126702
000172*--------------------------------------- MOVIMENTO TRATTATO       00126802
000172*-----------------------------------------CON SEGNO OPPOSTO       00126902
000172*--------------------------------------SCRIVO UN MOVIMENTO =      00127102
000172*--------------------------------------- MOVIMENTO TRATTATO       00127202
000172*-----------------------------------------CON IMPORTO PARI AL CTV 00127302
000172*------------------------------------------DIVISA LISTINO         00127402
000172*------------------------------------------E CHIAVE RAPPORTO PARI 00127502
000172*----------------------------------------------A QUELLA LETTA SU  00127602
000172*---------------------------------------------------TRPEUR        00127702
CAR417*------------- CERCO IL NUMERO DI PRGMOVP/IND1 PIU' ALTI.         00127702
CAR417     MOVE ZEROES        TO WRK-NPRGMOVP-MAX                       00128304
CAR417     PERFORM VARYING IND1 FROM 1 BY 1                             00127902
CAR417      UNTIL IND1 > 35 OR                                          00128002
CAR417       WS-TAB-TBAMOVP(IND1) NOT GREATER SPACES OR                 00128102
CAR417        L-ERR-ERR OR W-EXIT                                       00128202
CAR417           MOVE WS-TAB-TBAMOVP (IND1) TO DCLTBAMOVP               00128304
CAR417           IF MOVP-NPRGMOVP > 20 AND < 151                        00128304
CAR417              IF MOVP-NPRGMOVP > WRK-NPRGMOVP-MAX                 00128304
CAR417                 MOVE MOVP-NPRGMOVP TO WRK-NPRGMOVP-MAX           00128304
CAR417              END-IF                                              00128304
CAR417           END-IF                                                 00128304
CAR417     END-PERFORM                                                  00127902
CAR417*-----                                                            00127702
CAR417     MOVE SPACES           TO WRK-RAPPORTO-FITTIZIO
000252     MOVE WRK-NPRGMOVP-MAX TO WRK-MOVP-NPRGMOVP
000172     PERFORM VARYING WRK-IND FROM 1 BY 1                          00127902
000172       UNTIL WRK-IND > 35 OR                                      00128002
000172             WS-TAB-TBAMOVP(WRK-IND) NOT GREATER SPACES OR        00128102
000172             L-ERR-ERR                OR W-EXIT                   00128202
000172          MOVE WS-TAB-TBAMOVP (WRK-IND) TO DCLTBAMOVP             00128304
000172          MOVE W-CIST                TO DIV-CIST                  00128404
000172          MOVE MOVP-CISO             TO DIV-CISO                  00128504
000172          PERFORM 0870-TRATTA-DIVISA                              00128604
000172             THRU 0870-TRATTA-DIVISA-END                          00128704
CAR417*         IF DIV-FINOUT = 3 OR 2                                  00129206
CAR443*         IF ( DIV-FINOUT = 3 OR 2 )
CAR443          IF ( DIV-FINOUT < 4 )
CAR417          AND ( MOVP-NPRGMOVP NOT > WRK-NPRGMOVP-MAX )
000172             MOVE W-CIST                TO INDRA-CIST             00129206
000172             MOVE MOVP-NNDGSET          TO INDRA-NNDGSET          00129302
000172             MOVE MOVP-CSTC             TO INDRA-CSTC             00129402
000172             MOVE MOVP-CISO             TO INDRA-CISO             00129502
000172             MOVE MOVP-NSUFABT          TO INDRA-NSUFABT          00129602
000172             MOVE MOVP-CDPZ             TO INDRA-CDPZ             00129702
000172             MOVE MOVP-NPRGOPE          TO INDRA-NPRGOPE          00129802
000172             PERFORM 0940-LEGGI-AINDRA                            00129904
000172                THRU 0940-LEGGI-AINDRA-END                        00130004
CAR417*            IF L-ERR-ERR OR W-SQL-NON-TROVATO                    00130504
CAR417*               NEXT SENTENCE                                     00130705
CAR417*            ELSE                                                 00130805
CAR417             IF NOT L-ERR-ERR AND NOT W-SQL-NON-TROVATO           00130504
000172               IF INDRA-FTIPOCONTO = 'S'                          00130905
000172                  MOVE INDRA-NNDGSET          TO RPEUR-NNDGSET    00131005
000172                  MOVE INDRA-CSTC             TO RPEUR-CSTC       00131105
000172                  MOVE INDRA-CISO             TO RPEUR-CISO       00131205
000172                  MOVE INDRA-NSUFABT          TO RPEUR-NSUFABT    00131305
000172                  MOVE INDRA-CDPZ             TO RPEUR-CDPZ       00131405
000172                  MOVE INDRA-NPRGOPE          TO RPEUR-NPRGOPE    00131505
000172                  PERFORM 0930-LEGGI-TRPEUR                       00131605
000172                     THRU 0930-LEGGI-TRPEUR-END                   00131705
000172                  IF L-ERR-ERR  OR W-EXIT                         00131805
000172                     NEXT SENTENCE                                00132005
000172                  ELSE                                            00132105
000172                   IF W-SQL-OK                                    00132205
000172                      IF RPEUR-STATO = 'A'                        00132305
000172*---------------------------------------MOVIMENTO SEGNO OPPOSTO   00132405
CAR417                         MOVE 'S' TO WRK-RAPPORTO-FITTIZIO        00132505
CAR417                         MOVE WRK-MOVP-NPRGMOVP TO MOVP-NPRGMOVP  00132505
000172                         COMPUTE MOVP-NPRGMOVP =                  00132505
000252*                                      WRK-MOVP-NPRGMOVP  + 1     00132605
000252                                           MOVP-NPRGMOVP  + 1     00132605
000172                         COMPUTE MOVP-IMOV =                      00132705
000172                                             MOVP-IMOV * (-1)     00132805
000172                         COMPUTE MOVP-ICTMOV =                    00132905
000172                                             MOVP-ICTMOV * (-1)   00133005
000172                         COMPUTE MOVP-ICTVLIS =                   00133105
000172                                            MOVP-ICTVLIS * (-1)   00133205
CAR400                         IF MOVP-TMOV =1                          00133305
CAR400                            MOVE 2  TO  MOVP-TMOV                 00133305
CAR400                         ELSE                                     00133305
CAR400                            MOVE 1  TO  MOVP-TMOV                 00133305
CAR400                         END-IF                                   00133305
000255                         MOVE RPEUR-DCISO  TO MOVP-CDIVCTP
000255                         MOVE RPEUR-DCSTC  TO MOVP-CSTCCTP
000172                         MOVE ZEROES TO MOVP-ISPSVAL              00133305
000172                         MOVE DCLTBAMOVP  TO                      00133505
000172                                           WS-TAB-TBAMOVP(IND1)   00133611
000172*
000172* CREO IL MOVIMENTO EFFETTIVO CHE PUO' ESSERE :
000172*
000172                         COMPUTE MOVP-NPRGMOVP =                  00134305
000172                                            MOVP-NPRGMOVP  + 1    00134405
000252                         MOVE MOVP-NPRGMOVP   TO WRK-MOVP-NPRGMOVP00134405
000172                         MOVE RPEUR-CDPZ      TO MOVP-CDPZ        00135006
000172                         MOVE RPEUR-DCISO     TO MOVP-CISO        00135106
000172                         MOVE RPEUR-DCSTC     TO MOVP-CSTC        00135206
000172                         MOVE RPEUR-DNNDGSET  TO MOVP-NNDGSET     00135306
000172                         MOVE RPEUR-DNPRGOPE  TO MOVP-NPRGOPE     00135405
000172                         MOVE RPEUR-DNSUFABT  TO MOVP-NSUFABT     00135505
000255                         MOVE RPEUR-CISO      TO MOVP-CDIVCTP
000255                         MOVE RPEUR-CSTC      TO MOVP-CSTCCTP
000172*    LEGGO LA DIVISA DEL RAPPORTO EFFETTIVO
CAR443                         MOVE W-CIST         TO DIV-CIST
CAR443                         MOVE MOVP-CISO      TO DIV-CISO
CAR443                         PERFORM 0870-TRATTA-DIVISA
CAR443                            THRU 0870-TRATTA-DIVISA-END
CAR443                         MOVE DIV-PARITAFIS
CAR443                                     TO WRK-PARITA-EFFETTIVO
000172* IN EURO...
000172                         IF MOVP-CISO = W-CSIGDBASE               00137305
CAR400*                           MOVE MOVP-ICTVLIS TO MOVP-IMOV        00137405
CAR400                            COMPUTE MOVP-IMOV = MOVP-ICTVLIS * -1 00137405
CAR400                            COMPUTE MOVP-ICTMOV = MOVP-ICTMOV * -100137405
CAR400                            COMPUTE MOVP-ICTVLIS =                00137405
CAR400                                                 MOVP-ICTVLIS * -100137405
CAR400                            IF MOVP-TMOV = 1                      00137405
CAR400                               MOVE 2  TO  MOVP-TMOV              00137405
CAR400                            ELSE                                  00137405
CAR400                               MOVE 1  TO  MOVP-TMOV              00137405
CAR400                            END-IF                                00137405
000172                         ELSE                                     00137505
CAR443* IN LIRE...
CAR443                            IF MOVP-CISO = W-CSIGDCON             00137305
CAR443                              COMPUTE MOVP-IMOV = MOVP-ICTMOV * -100137405
CAR443                              COMPUTE MOVP-ICTMOV =               00137405
CAR443                                                  MOVP-ICTMOV * -100137405
CAR443                              COMPUTE MOVP-ICTVLIS =              00137405
CAR443                                                 MOVP-ICTVLIS * -100137405
CAR443                              IF MOVP-TMOV = 1                    00137405
CAR443                                 MOVE 2  TO  MOVP-TMOV            00137405
CAR443                              ELSE                                00137405
CAR443                                 MOVE 1  TO  MOVP-TMOV            00137405
CAR443                              END-IF                              00137405
CAR443                            ELSE                                  00137505
CAR443* O IN DIVISA 'IN'
000394*CAR443                        IF DIV-FINOUT = 3
000394                               IF DIV-FINOUT < 4
CAR443                                  MOVE IND1 TO WRK-IND1
CAR443                                  PERFORM 0931-DIVISA-IN
CAR443                                    THRU  0931-DIVISA-IN-END
CAR443                                  MOVE WRK-IND1 TO IND1
CAR443                               ELSE
000172                                  MOVE ZEROES       TO W-MAP-ERR  00137812
000172                                  MOVE 2            TO W-FLAG-ERR 00137912
000172                                  MOVE 'S162'       TO W-COD-ERR  00138012
000172                                  PERFORM 9999-GESTIONE-ERRORE    00138112
000172                                     THRU 9999-GESTIONE-ERRORE-END00138212
000172                                  MOVE 'SI'         TO W-FLAG-EXIT00138312
CAR443                               END-IF
CAR443                            END-IF                                00137505
000172                         END-IF                                   00139012
CAR443*                        MOVE 1         TO MOVP-ICABACC           00140912
CAR443*                        MOVE 1         TO MOVP-ICABARP           00141012
CAR443*                        MOVE 1         TO MOVP-ICABART           00141112
CAR443*                        MOVE 1         TO MOVP-ICABCTC           00141212
CAR443*                        MOVE 1         TO MOVP-ICABDI            00141312
CAR443*                        MOVE 1         TO MOVP-ICABDL            00141412
CAR443*                        MOVE 1         TO MOVP-ICABLI            00141512
CAR443*                        MOVE 1         TO MOVP-ICABLL            00141612
CAR443*                        MOVE 1         TO MOVP-ICABMOV           00141712
CAR443*                        MOVE 1         TO MOVP-ICABPM            00141812
CAR443*                        MOVE 1         TO MOVP-ICABTER           00141912
CAR443*-------------------------------- IL CAMBIO E' LA PARITA' FISSA
CAR443                         MOVE DIV-PARITAFIS  TO MOVP-ICABACC
CAR443                                MOVP-ICABARP    MOVP-ICABART
CAR443                                MOVP-ICABCTC    MOVP-ICABDI
CAR443                                MOVP-ICABDL     MOVP-ICABLI
CAR443                                MOVP-ICABLL     MOVP-ICABMOV
CAR443                                MOVP-ICABPM     MOVP-ICABTER
000172                         COMPUTE IND1 = IND1 + 1                  00142112
000172                         MOVE DCLTBAMOVP  TO WS-TAB-TBAMOVP(IND1) 00142212
000252                         COMPUTE IND1 = IND1 + 1                  00142112
CAR400                      ELSE                                        00137505
CAR400                         MOVE ZEROES       TO W-MAP-ERR           00137812
CAR400                         MOVE 2            TO W-FLAG-ERR          00137912
CAR400                         MOVE 'S184'       TO W-COD-ERR           00138012
CAR400                         PERFORM 9999-GESTIONE-ERRORE             00138112
CAR400                            THRU 9999-GESTIONE-ERRORE-END         00138212
CAR400                         MOVE 'SI'         TO W-FLAG-EXIT         00138312
000172                      END-IF                                      00142312
000172                   END-IF                                         00142412
000172                  END-IF                                          00142512
000172               END-IF                                             00142612
000172             END-IF                                               00142712
000172          END-IF                                                  00142812
000172     END-PERFORM.                                                 00142912
000172 0900-MOV-PATRIM-DIVISE-IN-END.                                   00143012
000172     EXIT.                                                        00143112
                                                                        00143212
000172 0930-LEGGI-TRPEUR.                                               00143312
000172                                                                  00143412
000172      EXEC SQL INCLUDE ZMS28201 END-EXEC.                         00143512
000172      IF W-SQL-NON-TROVATO                                        00143612
000172         MOVE 'SI'                       TO W-FLAG-EXIT           00144312
000172         MOVE ZEROES                     TO W-MAP-ERR             00144312
000172         MOVE 2                          TO W-FLAG-ERR            00144312
000172         MOVE 'S167'                     TO W-COD-ERR             00144413
000172         PERFORM 9999-GESTIONE-ERRORE                             00144512
000172           THRU 9999-GESTIONE-ERRORE-END                          00144612
000172      ELSE                                                        00146004
000172           IF NOT W-SQL-OK                                        00147004
000172              MOVE 8                             TO W-FLAG-ERR    00148004
000172              MOVE '9999'                        TO W-COD-ERR     00149004
000172              MOVE 'TBTRPEUR'                    TO L-NOME-TABELLA00149104
000172              MOVE W-SQLCODE                     TO L-CODICE-SQL  00149204
000172              MOVE 'ZMBSVIL0'                    TO L-MODULO      00149304
000172              MOVE '0930-LEGGI-TRPEUR'           TO L-SUB-MODULO  00149404
000172              PERFORM 9999-GESTIONE-ERRORE                        00149504
000172                 THRU 9999-GESTIONE-ERRORE-END                    00149604
000172           END-IF                                                 00149704
000172      END-IF.                                                     00149807
000172    0930-LEGGI-TRPEUR-END.                                        00149904
000172        EXIT.                                                     00150004
                                                                        00160002
000172 0940-LEGGI-AINDRA.                                               00143312
000172                                                                  00143412
000172      EXEC SQL INCLUDE ZMS11701 END-EXEC.                         00143512
000172      IF NOT W-SQL-OK                                             00147004
000172      AND NOT W-SQL-NON-TROVATO                                   00147004
000172         MOVE 8                             TO W-FLAG-ERR         00148004
000172         MOVE '9999'                        TO W-COD-ERR          00149004
000172         MOVE 'TBAINDRA'                    TO L-NOME-TABELLA     00149104
000172         MOVE W-SQLCODE                     TO L-CODICE-SQL       00149204
000172         MOVE 'ZMBSVIL0'                    TO L-MODULO           00149304
000172         MOVE '0940-LEGGI-AINDRA'           TO L-SUB-MODULO       00149404
000172         PERFORM 9999-GESTIONE-ERRORE                             00149504
000172            THRU 9999-GESTIONE-ERRORE-END                         00149604
000172      END-IF.                                                     00149807
000172    0940-LEGGI-AINDRA-END.                                        00149904
000172        EXIT.                                                     00150004
                                                                        00160002
      *---------------------------------------------------------*
      * PASSO 7 : REGISTRAZIONE CAUSALI VALUTARIE               *
      *           TABELLA DI RIFERIMENTO TTSVIC                 *
      *---------------------------------------------------------*
       1000-CAU-VALUT.
999999*---------------------- PER LA NUOVE CAUSALI NON E'
999999*----------------------- NECESSARIO TESTARE IL CAMPO TTNCCAU
999999*    IF WRK-FLAG-CAU = 0                                          TS009129
999999*       IF TCSVI-TTNCCAU > 0
999999*-------------------------------- DVLDCAU = DATA INIZIO           TS009127
999999*------------------------------------------   VALIDITA'           TS009128
999999*          IF WRK-FLAG-CAU = 0                                    TS009129
999999*---------------------------------------------------------------  TS009130
999999*          MOVE TCSVI-TTNCCAU                 TO NCSVC-TTNCCAU
999999*          PERFORM 1010-LEGGI-NCSVC
999999*             THRU 1010-LEGGI-NCSVC-END
999999*       END-IF                                                    TS009135
999999*---------------------------------------------------------        TS009134
999999*    ELSE                                                         TS009135
999999*--------------------------------------- CAUSALI/98 ------        TS009136
000386     IF WRK-FLAG-CAU = 1
000092        INITIALIZE ZMWPRKSC                                       TS009138
"             PERFORM 1050-LEGGI-WPRKSC                                 TS009139
"                THRU 1050-LEGGI-WPRKSC-END                             TS009140
"             PERFORM 1095-CONTROLLA-AMOVC                              TS009139
"                THRU 1095-CONTROLLA-AMOVC-END                          TS009140
"                 VARYING INDC FROM 1 BY 1                              TS003034
"                  UNTIL INDC > 50 OR                                   TS003035
"                     W-F-EX = 'SI'                                     TS003036
"                       OR L-ERR-ERR  OR W-EXIT                         TS003037
"                        OR WS-TAB-TBAMOVC(INDC) = SPACES
999999*       END-IF                                                    TS009141
000386     END-IF.

       1000-CAU-VALUT-END.
           EXIT.

999999*
999999*--------------------
999999*1001-ELABORA-WNCSVC.
999999*--------------------
999999*    IF NCSVC-TAB (IND5) NOT = SPACES AND
999999*       NCSVC-TAB (IND5) NOT = LOW-VALUE
999999*       IF NCSVC-TTZNAPPC1 (IND5) > SPACES
999999*          MOVE NCSVC-TTZNAPPC1 (IND5)     TO COND-MOD-COORD
999999*          MOVE NCSVC-TTPRES (IND5)        TO COND-CONDIZ
999999*          MOVE NCSVC-TTVALC11 (IND5)      TO COND-VALORE
999999*          PERFORM 0700-CHIAMA-COND
999999*             THRU 0700-CHIAMA-COND-END
999999*          IF COND-RC NOT = ZEROES
999999*             MOVE 2                       TO W-FLAG-ERR
999999*             MOVE 'S051'                  TO W-COD-ERR
999999*             MOVE 'SI'                    TO W-FLAG-EXIT
999999*             PERFORM 9999-GESTIONE-ERRORE
999999*                THRU 9999-GESTIONE-ERRORE-END
999999*          END-IF
999999*       ELSE
999999*          MOVE 'S'                        TO COND-ESITO
999999*       END-IF
999999*       IF COND-ESITO = 'S'
999999*          PERFORM 1002-WNCSVC-OK
999999*             THRU 1002-WNCSVC-OK-END
999999*       END-IF
999999*    END-IF.
999999*1001-ELABORA-WNCSVC-END.
999999*    EXIT.
999999*1002-WNCSVC-OK.
999999*    INITIALIZE DCLTBAMOVC.
999999*    MOVE W-CIST                           TO MOVP-CIST.
999999*    MOVE OPE-NUMOPE                       TO MOVP-NUMOPE
999999*                                             MOVC-NUMOPE.
999999*    MOVE W-DIPOPE                         TO MOVP-DIPOPE
999999*                                             MOVC-DIPOPE.
999999*    MOVE NCSVC-TTNMOV1 (IND5)             TO MOVP-NPRGMOVP
999999*                                             MOVC-NPRGMOVP
999999*                                             W-NPRGMOVP-CERCA.
999999*    MOVE IND-KCS                          TO MOVP-NSUBMOVP
999999*                                             MOVC-NSUBMOVP
999999*                                             W-NSUBMOVP-CERCA.
999999*    MOVE 'SI'                             TO MOVP-NON-TROVATO
999999*    PERFORM 0820-CERCA-AMOVP
999999*       THRU 0820-CERCA-AMOVP-END
999999*            VARYING INDP FROM 1 BY 1
999999*            UNTIL INDP > 35  OR
999999*            MOVP-NON-TROVATO = SPACES.
999999*    IF MOVP-NON-TROVATO = 'SI'
999999*       MOVE NCSVC-TTNMOV2 (IND5)          TO MOVP-NPRGMOVP
999999*                                             MOVC-NPRGMOVP
999999*                                             W-NPRGMOVP-CERCA
999999*       PERFORM 0820-CERCA-AMOVP
999999*          THRU 0820-CERCA-AMOVP-END
999999*               VARYING INDP FROM 1 BY 1
999999*               UNTIL INDP > 35  OR
999999*               MOVP-NON-TROVATO = SPACES
999999*       IF MOVP-NON-TROVATO = 'SI'
999999*          MOVE NCSVC-TTNMOV3 (IND5)       TO MOVP-NPRGMOVP
999999*                                             MOVC-NPRGMOVP
999999*                                             W-NPRGMOVP-CERCA
999999*          PERFORM 0820-CERCA-AMOVP
999999*             THRU 0820-CERCA-AMOVP-END
999999*                  VARYING INDP FROM 1 BY 1
999999*                  UNTIL INDP > 35  OR
999999*                  MOVP-NON-TROVATO = SPACES
999999*          IF MOVP-NON-TROVATO = 'SI'
999999*             IF APROC-PCSMUL = 'M'
999999*                GO TO 1002-WNCSVC-OK-END
999999*             END-IF
999999*             IF L-FASE GREATER 1
999999*                IF M-S(W-STC) NOT = SPACES
999999*                   NEXT SENTENCE
999999*                ELSE
999999*                   MOVE 'SI'          TO W-FLAG-EXIT
999999*                   MOVE 'E'           TO M-S(W-STC)
999999*                   MOVE M-M(W-STC)    TO W-MAP-ERR
999999*                   MOVE W-COORD-STC   TO W-MOD-ERR
999999*                   MOVE 2             TO W-FLAG-ERR
999999*                   MOVE 'S052'        TO W-COD-ERR
999999*                   PERFORM 9999-GESTIONE-ERRORE
999999*                      THRU 9999-GESTIONE-ERRORE-END
999999*                   GO TO 1002-WNCSVC-OK-END
999999*                END-IF
999999*             ELSE
999999*                GO TO 1002-WNCSVC-OK-END
999999*             END-IF
999999*          END-IF
999999*       END-IF
999999*    END-IF.
999999*    SUBTRACT 1 FROM INDP
999999*    IF WS-STATUS-TBAMOVP(INDP) = 'E'
999999*       GO TO 1002-WNCSVC-OK-END
999999*    END-IF.
999999*    MOVE MOVP-CIST                        TO ABSC-CIST
999999*                                             MOVC-CIST.
999999*    MOVE MOVP-CSTC                        TO ABSC-CSTC.
999999*    PERFORM 0630-LEGGI-TABSC
999999*       THRU 0630-LEGGI-TABSC-END.
999999*    PERFORM 1020-NCSVC-TTDIV
999999*       THRU 1020-NCSVC-TTDIV-END.
999999*    IF W-EXIT
999999*       GO TO 1002-WNCSVC-OK-END
999999*    END-IF.
999999*    IF NCSVC-TTPCAU (IND5) = 'ARB'
999999*       PERFORM 1021-NCSVC-TTARB
999999*          THRU 1021-NCSVC-TTARB-END
999999*       IF W-EXIT
999999*          GO TO 1002-WNCSVC-OK-END
999999*       END-IF
999999*    END-IF.
999999*    PERFORM 1022-NCSVC-TTPAE
999999*       THRU 1022-NCSVC-TTPAE-END.
999999*    IF W-EXIT
999999*       GO TO 1002-WNCSVC-OK-END
999999*    END-IF.
999999*    PERFORM 1023-NCSVC-TTNDG
999999*       THRU 1023-NCSVC-TTNDG-END.
999999*    IF MOVC-NNDGSTA = ALL '9'
999999*       MOVE SPACES  TO MOVC-NNDGSTA
999999*    END-IF.
999999*    IF NCSVC-TTPCAU (IND5) = 'GIR'
999999*       PERFORM 1024-NCSVC-TTGIR
999999*          THRU 1024-NCSVC-TTGIR-END
999999*       IF W-EXIT
999999*          GO TO 1002-WNCSVC-OK-END
999999*       END-IF
999999*    END-IF.
999999*    PERFORM 1025-NCSVC-TTCAU
999999*       THRU 1025-NCSVC-TTCAU-END.
999999*1002-WNCSVC-OK-END.
999999*    EXIT.
999999*-------------------------------------------------------------*
999999* LETTURA TABELLA CASI DI SVILUPPO CAUSALI CON CURSORE CUR3   *
999999*
999999*-------------------------------------------------------------*
999999*1010-LEGGI-NCSVC.
999999*    EXEC SQL INCLUDE ZMLOPE03 END-EXEC.
999999*    IF NOT W-SQL-OK
999999*       MOVE 8                        TO W-FLAG-ERR
999999*       MOVE '9999'                   TO W-COD-ERR
999999*       MOVE SPACES                   TO L-NOME-TABELLA
999999*       MOVE W-SQLCODE                TO L-CODICE-SQL
999999*       MOVE 'ZMBSVIL0'               TO L-MODULO
999999*       MOVE '1010-APERTURA-CURSORE3' TO L-SUB-MODULO
999999*       PERFORM 9999-GESTIONE-ERRORE
999999*          THRU 9999-GESTIONE-ERRORE-END
999999*       GO TO 1010-LEGGI-NCSVC-END.
999999*
999999*    MOVE SPACES TO WRK-FINE-WNCSVC.
999999*    MOVE ZEROES TO WRK-IND-LETTI-C.
999999*    PERFORM 1010-SCORRI-TBWNCSVC
999999*       THRU 1010-SCORRI-TBWNCSVC-END
999999*            UNTIL WRK-FINE-WNCSVC = 'SI' OR
999999*                      L-ERR-ERR  OR W-EXIT.
999999*
999999*    EXEC SQL INCLUDE ZMLCLO03 END-EXEC.
999999*    IF NOT W-SQL-OK
999999*       MOVE 8                        TO W-FLAG-ERR
999999*       MOVE '9999'                   TO W-COD-ERR
999999*       MOVE SPACES                   TO L-NOME-TABELLA
999999*       MOVE W-SQLCODE                TO L-CODICE-SQL
999999*       MOVE 'ZMBSVIL0'               TO L-MODULO
999999*       MOVE '1010-CHIUSURA-CURSORE3' TO L-SUB-MODULO
999999*       PERFORM 9999-GESTIONE-ERRORE
999999*          THRU 9999-GESTIONE-ERRORE-END.
999999*
999999*    IF L-ERR-ERR  OR W-EXIT
999999*       GO TO 1010-LEGGI-NCSVC-END.
999999*----------------------------------- SE CASI DI SVILUPPO ASSENTI
999999*    IF WRK-IND-LETTI-C NOT GREATER ZEROES
999999*       IF M-S(W-STC) NOT = SPACES
999999*          NEXT SENTENCE
999999*       ELSE
999999*          MOVE 'SI'                       TO W-FLAG-EXIT
999999*          MOVE 'E'                        TO M-S(W-STC)
999999*          MOVE M-M(W-STC)                 TO W-MAP-ERR
999999*          MOVE W-COORD-STC                TO W-MOD-ERR
999999*          MOVE 2                          TO W-FLAG-ERR
999999*          MOVE 'S053'                     TO W-COD-ERR
999999*          MOVE ' SVILUPPO CAUSALI      '  TO WCM-TSVI-DESCR0
999999*          MOVE NCSVC-TTNCCAU              TO WCM-TSVI-TTNC
999999*          MOVE SPACES                     TO WCM-TSVI-DESCR
999999*          MOVE ' ASSENTE IN ZM.TBTTSVIC ' TO WCM-TSVI-DESCR
999999*          MOVE WCM-ERR-TSVI               TO W-DES-ERR
999999*          PERFORM 9999-GESTIONE-ERRORE
999999*             THRU 9999-GESTIONE-ERRORE-END
999999*       END-IF
999999*    END-IF.
999999*
999999*1010-LEGGI-NCSVC-END.
999999*    EXIT.
999999*----------------------------------------------------------------
999999* EFFETTUA LA FETCH SULLA TABELLA ZM.TBWNCSVC (323)
999999* UTILIZZANDO IL CURSORE CUR1
999999*----------------------------------------------------------------
999999*1010-SCORRI-TBWNCSVC.
999999*    EXEC SQL INCLUDE ZMF32301 END-EXEC.
999999*    IF W-SQL-NON-TROVATO
999999*       MOVE 'SI' TO WRK-FINE-WNCSVC
999999*    ELSE
999999*       IF NOT W-SQL-OK
999999*          MOVE 8                      TO W-FLAG-ERR
999999*          MOVE '9999'                 TO W-COD-ERR
999999*          MOVE 'TBWNCSVC'             TO L-NOME-TABELLA
999999*          MOVE W-SQLCODE              TO L-CODICE-SQL
999999*          MOVE 'ZMBSVIL0'             TO L-MODULO
999999*          MOVE '1010-SCORRI-TBWNCSVC' TO L-SUB-MODULO
999999*          PERFORM 9999-GESTIONE-ERRORE
999999*             THRU 9999-GESTIONE-ERRORE-END
999999*       ELSE
999999*          ADD 1        TO WRK-IND-LETTI-C
999999*          INITIALIZE ZMWNCSVC
999999*          IF NCSVC-WDATSVC-LEN GREATER ZEROES
999999*             MOVE NCSVC-WDATSVC-TEXT(1:NCSVC-WDATSVC-LEN)
999999*                                  TO ZMWNCSVC
999999*          END-IF
999999*          PERFORM 1001-ELABORA-WNCSVC
999999*             THRU 1001-ELABORA-WNCSVC-END
999999*                  VARYING IND5 FROM 1 BY 1
999999*                  UNTIL IND5 > W-MAX-SVC     OR
999999*                  NCSVC-TAB (IND5) NOT > SPACES  OR
999999*                        L-ERR-ERR OR W-EXIT.
999999*1010-SCORRI-TBWNCSVC-END.
999999*    EXIT.
999999*1020-NCSVC-TTDIV.
999999*    IF NCSVC-TTDIV (IND5) = 'ORD'
999999*       MOVE 'ZOR030201'                   TO W-DECOD
999999*       COPY ZMZINDIR.
999999*       MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-CISO
999999*    END-IF.
999999*    IF NCSVC-TTDIV (IND5) (1:2) = 'DV'
999999*       MOVE NCSVC-TTDIV (IND5)            TO W-XXN
999999*       MOVE 'ZDI040101'                   TO W-DECOD
999999*       MOVE W-XXN-N                       TO C
999999*       COPY ZMZINDIR.
999999*       MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-CISO
999999*    END-IF.
999999*    IF MOVC-CISO NOT > SPACES
999999*       IF M-S(W-DIV) NOT = SPACES
999999*          NEXT SENTENCE
999999*       ELSE
999999*          MOVE 'SI'                       TO W-FLAG-EXIT
999999*          MOVE 'E'                        TO M-S(W-DIV)
999999*          MOVE W-COORD-DIV                TO W-MOD-ERR
999999*          MOVE M-M(W-DIV)                 TO W-MAP-ERR
999999*          MOVE 2                          TO W-FLAG-ERR
999999*          MOVE 'S054'                     TO W-COD-ERR
999999*          PERFORM 9999-GESTIONE-ERRORE
999999*             THRU 9999-GESTIONE-ERRORE-END
999999*       END-IF
999999*    END-IF.
999999*1020-NCSVC-TTDIV-END.
999999*    EXIT.
999999*1021-NCSVC-TTARB.
999999*    IF NCSVC-TTARB (IND5) = 'ORD'
999999*       MOVE 'ZOR030301'                   TO W-DECOD
999999*       COPY ZMZINDIR.
999999*       COPY ZMZVALNM.
999999*       MOVE W-COM-NUM                     TO W-CMODUIC
999999*    END-IF.
999999*    IF NCSVC-TTARB (IND5) (1:2) = 'DV'
999999*       MOVE NCSVC-TTARB (IND5)            TO W-XXN
999999*       MOVE 'ZDI040201'                   TO W-DECOD
999999*       MOVE W-XXN-N                       TO C
999999*       COPY ZMZINDIR.
999999*       COPY ZMZVALNM.
999999*       MOVE W-COM-NUM                     TO W-CMODUIC
999999*    END-IF.
999999*    IF W-CMODUIC = 0
999999*       IF M-S(W-STC) NOT = SPACES
999999*          NEXT SENTENCE
999999*       ELSE
999999*          MOVE 'SI'                          TO W-FLAG-EXIT
999999*          MOVE 'E'                           TO M-S(W-STC)
999999*          MOVE M-M(W-STC)                    TO W-MAP-ERR
999999*          MOVE W-COORD-STC                   TO W-MOD-ERR
999999*          MOVE 2                             TO W-FLAG-ERR
999999*          MOVE 'S055'                        TO W-COD-ERR
999999*          PERFORM 9999-GESTIONE-ERRORE
999999*             THRU 9999-GESTIONE-ERRORE-END
999999*       END-IF
999999*    END-IF.
999999*1021-NCSVC-TTARB-END.
999999*    EXIT.
999999*1022-NCSVC-TTPAE.
999999*    IF NCSVC-TTPAE (IND5) = 'ORD'
999999*       MOVE 'ZOR032401'                   TO W-DECOD
999999*       COPY ZMZINDIR.
999999*       MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-CSIGPAE
999999*    END-IF.
999999*    IF NCSVC-TTPAE (IND5) = 'DEB'
999999*       MOVE 'ZRA090201'                   TO W-DECOD
999999*       COPY ZMZINDIR.
999999*       MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-CSIGPAE
999999*    END-IF.
999999*    IF NCSVC-TTPAE (IND5) = 'CRE'
999999*       MOVE 'ZRA090301'                   TO W-DECOD
999999*       COPY ZMZINDIR.
999999*       MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-CSIGPAE
999999*    END-IF.
999999*    IF NCSVC-TTPAE (IND5)(1:1) = 'F'
999999*       MOVE NCSVC-TTPAE (IND5)            TO W-XNN
999999*       MOVE 'ZND060701'                   TO W-DECOD
999999*       MOVE W-XNN-N                       TO C
999999*       COPY ZMZINDIR.
999999*       MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-CSIGPAE
999999*    END-IF.
999999*    IF NCSVC-TTPAE (IND5)(1:2) = 'DV'
999999*       MOVE NCSVC-TTPAE (IND5)            TO W-XNN
999999*       MOVE NCSVC-TTPAE (IND5)            TO W-XXN
999999*       MOVE 'ZDI042901'                   TO W-DECOD
999999*       MOVE W-XNN-N                       TO C
999999*       MOVE W-XXN-N                       TO C
999999*       COPY ZMZINDIR.
999999*       MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-CSIGPAE
999999*    END-IF.
999999*    IF NCSVC-TTPAE (IND5)(1:2) = 'ZD'
999999*       MOVE NCSVC-TTPAE (IND5)            TO W-XNN
999999*       MOVE NCSVC-TTPAE (IND5)            TO W-XXN
999999*       MOVE 'ZDV136001'                   TO W-DECOD
999999*       MOVE W-XNN-N                       TO C
999999*       MOVE W-XXN-N                       TO C
999999*       COPY ZMZINDIR.
999999*       MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-CSIGPAE
999999*    END-IF.
999999*    IF MOVC-CSIGPAE NOT > SPACES
999999*       IF M-S(W-STC) NOT = SPACES
999999*          NEXT SENTENCE
999999*       ELSE
999999*          MOVE 'SI'                          TO W-FLAG-EXIT
999999*          MOVE 'E'                           TO M-S(W-STC)
999999*          MOVE M-M(W-STC)                    TO W-MAP-ERR
999999*          MOVE W-COORD-STC                   TO W-MOD-ERR
999999*          MOVE 2                             TO W-FLAG-ERR
999999*          MOVE 'S056'                        TO W-COD-ERR
999999*          PERFORM 9999-GESTIONE-ERRORE
999999*             THRU 9999-GESTIONE-ERRORE-END
999999*       END-IF
999999*    END-IF.
999999*1022-NCSVC-TTPAE-END.
999999*    EXIT.
999999*1023-NCSVC-TTNDG.
999999*    MOVE SPACES                           TO W-EXPERFORM
999999*    IF NCSVC-TTNDG1 (IND5) = 'ORD'
999999*       MOVE 'ZOR031801'                   TO W-DECOD
999999*       COPY ZMZINDIR.
999999*       MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-NNDGSTA
999999*       MOVE 'SI'                          TO W-EXPERFORM
999999*    END-IF.
999999*    IF NCSVC-TTNDG1 (IND5) (1:1) = 'F'
999999*       MOVE NCSVC-TTNDG1 (IND5)           TO W-XNN
999999*       MOVE 'ZND060101'                   TO W-DECOD
999999*       MOVE W-XNN-N                       TO C
999999*       COPY ZMZINDIR.
999999*       IF MOD(M-I(IND1):M-L(IND1)) > SPACES
999999*          MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVC-NNDGSTA
999999*          MOVE 'SI'                       TO W-EXPERFORM
999999*       END-IF
999999*    END-IF.
999999*    IF W-EXPERFORM = SPACES
999999*       IF NCSVC-TTNDG2 (IND5) = 'ORD'
999999*          MOVE 'ZOR031801'                TO W-DECOD
999999*          COPY ZMZINDIR.
999999*          MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVC-NNDGSTA
999999*          MOVE 'SI'                       TO W-EXPERFORM
999999*       ELSE
999999*          IF NCSVC-TTNDG2 (IND5) (1:1) = 'F'
999999*             MOVE NCSVC-TTNDG2 (IND5)     TO W-XNN
999999*             MOVE 'ZND060101'             TO W-DECOD
999999*             MOVE W-XNN-N                 TO C
999999*             COPY ZMZINDIR.
999999*             IF MOD(M-I(IND1):M-L(IND1)) > SPACES
999999*                MOVE MOD(M-I(IND1):M-L(IND1))
999999*                                          TO MOVC-NNDGSTA
999999*                MOVE 'SI'                 TO W-EXPERFORM
999999*             END-IF
999999*          END-IF
999999*       END-IF
999999*    END-IF.
999999*    IF W-EXPERFORM = SPACES
999999*       IF NCSVC-TTNDG3 (IND5) = 'ORD'
999999*          MOVE 'ZOR031801'                TO W-DECOD
999999*          COPY ZMZINDIR.
999999*          MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVC-NNDGSTA
999999*       ELSE
999999*          IF NCSVC-TTNDG3 (IND5) (1:1) = 'F'
999999*             MOVE NCSVC-TTNDG2 (IND5)
999999*                                          TO W-XNN
999999*             MOVE 'ZND060101'             TO W-DECOD
999999*             MOVE W-XNN-N                 TO C
999999*             COPY ZMZINDIR.
999999*             IF MOD(M-I(IND1):M-L(IND1)) > SPACES
999999*                MOVE MOD(M-I(IND1):M-L(IND1))
999999*                                          TO MOVC-NNDGSTA
999999*             END-IF
999999*          END-IF
999999*       END-IF
999999*    END-IF.
999999*1023-NCSVC-TTNDG-END.
999999*    EXIT.
999999*1024-NCSVC-TTGIR.
999999*    MOVE SPACES                           TO W-EXPERFORM
999999*    IF NCSVC-TTGIR1 (IND5) = 'ORD'
999999*       MOVE 'ZOR033101'                   TO W-DECOD
999999*       COPY ZMZINDIR.
999999*       COPY ZMZVALNM.
999999*       MOVE W-COM-NUM                     TO W-CUICBCA
999999*       MOVE 'SI'                          TO W-EXPERFORM
999999*    END-IF.
999999*    IF NCSVC-TTGIR1 (IND5) (1:1) = 'F'
999999*       MOVE NCSVC-TTGIR1 (IND5)           TO W-XNN
999999*       MOVE 'ZND061401'                   TO W-DECOD
999999*       MOVE W-XNN-N                       TO C
999999*       COPY ZMZINDIR.
999999*       COPY ZMZVALNM.
999999*       IF W-COM-NUM NOT = 0
999999*          MOVE W-COM-NUM                  TO W-CUICBCA
999999*          MOVE 'SI'                       TO W-EXPERFORM
999999*       END-IF
999999*    END-IF.
999999*    IF W-EXPERFORM = SPACES
999999*       IF NCSVC-TTGIR2 (IND5) = 'ORD'
999999*          MOVE 'ZOR033101'                TO W-DECOD
999999*          COPY ZMZINDIR.
999999*          COPY ZMZVALNM.
999999*          MOVE W-COM-NUM                  TO W-CUICBCA
999999*          MOVE 'SI'                       TO W-EXPERFORM
999999*       ELSE
999999*          IF NCSVC-TTGIR2 (IND5) (1:1) = 'F'
999999*             MOVE NCSVC-TTGIR2 (IND5)     TO W-XNN
999999*             MOVE 'ZND061401'             TO W-DECOD
999999*             MOVE W-XNN-N                 TO C
999999*             COPY ZMZINDIR.
999999*             COPY ZMZVALNM.
999999*             IF W-COM-NUM NOT = 0
999999*                MOVE W-COM-NUM            TO W-CUICBCA
999999*                MOVE 'SI'                 TO W-EXPERFORM
999999*             END-IF
999999*          END-IF
999999*       END-IF
999999*    END-IF.
999999*    IF W-EXPERFORM = SPACES
999999*       IF NCSVC-TTGIR3 (IND5) = 'ORD'
999999*          MOVE 'ZOR033101'                TO W-DECOD
999999*          COPY ZMZINDIR.
999999*          COPY ZMZVALNM.
999999*          MOVE W-COM-NUM                  TO W-CUICBCA
999999*       ELSE
999999*          IF NCSVC-TTGIR3 (IND5) (1:1) = 'F'
999999*             MOVE NCSVC-TTGIR3 (IND5)     TO W-XNN
999999*             MOVE 'ZND061401'             TO W-DECOD
999999*             MOVE W-XNN-N                 TO C
999999*             COPY ZMZINDIR.
999999*             COPY ZMZVALNM.
999999*             IF W-COM-NUM NOT = 0
999999*                MOVE W-COM-NUM            TO W-CUICBCA
999999*             ELSE
999999*                IF M-S(W-NDG) NOT = SPACES
999999*                   NEXT SENTENCE
999999*                ELSE
999999*                   MOVE 'SI'          TO W-FLAG-EXIT
999999*                   MOVE 'E'           TO M-S(IND1)
999999*                   MOVE 'S057'        TO W-COD-ERR
999999*                   MOVE M-M(IND1)     TO W-MAP-ERR
999999*                   MOVE W-DEC-COORD   TO W-MOD-ERR
999999*                   PERFORM 9999-GESTIONE-ERRORE
999999*                      THRU 9999-GESTIONE-ERRORE-END
999999*                END-IF
999999*             END-IF
999999*          END-IF
999999*       END-IF
999999*    END-IF.
999999*1024-NCSVC-TTGIR-END.
999999*    EXIT.
999999*1025-NCSVC-TTCAU.
999999*    IF NCSVC-TTCAU (IND5) (3:1) NUMERIC
999999*       MOVE NCSVC-TTCAU (IND5)            TO W-XXN
999999*       MOVE 'ZCA120201'                   TO W-DECOD
999999*       MOVE W-XXN-N                       TO C
999999*       MOVE W-DEC-COORD                   TO W-COORD-CAU
999999*       COPY ZMZINDIR.
999999*       COPY ZMZVALNM.
999999*       MOVE IND1                          TO W-CAU
999999*       MOVE W-COM-NUM                     TO MOVC-CCAUIC
999999*       MOVE 'ZCA120401'                   TO W-DECOD
999999*       MOVE W-XXN-N                       TO C
999999*       COPY ZMZINDIR.
999999*       COPY ZMZVALNM.
999999*       COMPUTE MOVC-ICAU = W-COM-NUM / 10 ** M-D(IND1)
999999*       MOVE W-CIST      TO   DIV-CIST
999999*       MOVE MOVC-CISO   TO   DIV-CISO
999999*       PERFORM 0870-TRATTA-DIVISA
999999*          THRU 0870-TRATTA-DIVISA-END
999999*       MOVE DIV-NDCLDIV  TO WRK-NDCLDIV
999999*       PERFORM 0838-CNTL-DECIMALI
999999*          THRU 0838-CNTL-DECIMALI-END
999999*       IF M-S(IND1) = 'E'
999999*          GO TO 1025-NCSVC-TTCAU-END
999999*       END-IF
999999*       MOVE DIV-NDCLDIV  TO WCM-DECIMALI
999999*       MOVE IND1         TO WCM-IND-DEC
999999*       COPY ZMZDECIM.
999999*
999999*       MOVE 'ZCA120101'                   TO W-DECOD
999999*       MOVE W-XXN-N                       TO C
999999*       COPY ZMZINDIR.
999999*       COPY ZMZVALNM.
999999*       MOVE W-COM-NUM                     TO MOVC-TCODCAU
999999*       MOVE 'ZCA120301'                   TO W-DECOD
999999*       MOVE W-XXN-N                       TO C
999999*       COPY ZMZINDIR.
999999*       COPY ZMZVALNM.
999999*       MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-TMOVCAU
999999*       MOVE 0                             TO MOVC-CDPZGINT
999999*       MOVE SPACES                        TO W-F-EX
999999*       IF MOVC-TCODCAU = 1
999999*          PERFORM 1031-TRATTA-TCAUIC
999999*             THRU 1031-TRATTA-TCAUIC-END
999999*          IF L-ERR-ERR OR W-EXIT
999999*             GO TO 1025-NCSVC-TTCAU-END
999999*          END-IF
999999*       END-IF
999999*       IF MOVC-ICAU = 0
999999*          GO TO 1025-NCSVC-TTCAU-END
999999*       END-IF
999999*       MOVE SPACES                        TO W-F-EX
999999*       PERFORM 1030-INTAB-TTCAU
999999*          THRU 1030-INTAB-TTCAU-END
999999*          VARYING INDC FROM 1 BY 1
999999*          UNTIL INDC > 50 OR
999999*          W-F-EX      = 'SI'
999999*       OR L-ERR-ERR  OR W-EXIT
999999*       IF L-ERR-ERR  OR W-EXIT
999999*          GO TO 1025-NCSVC-TTCAU-END
999999*       END-IF
999999*    END-IF.
999999*    IF NCSVC-TTCAU (IND5) = 'CAI'
999999*       MOVE 'CAI'                         TO W-IE
999999*       MOVE SPACES                        TO W-EXPERFORM
999999*       PERFORM 1033-TTCAU-CAI-CAE
999999*          THRU 1033-TTCAU-CAI-CAE-END
999999*          VARYING IND6 FROM 1 BY 1
999999*          UNTIL IND6 > WCM-INDMAX(12)
999999*          OR W-EXPERFORM = 'SI'
999999*          OR L-ERR-ERR OR W-EXIT
999999*          IF L-ERR-ERR OR W-EXIT
999999*             GO TO 1025-NCSVC-TTCAU-END
999999*          END-IF
999999*    END-IF.
999999*    IF NCSVC-TTCAU (IND5) = 'CAE'
999999*       MOVE 'CAE'                         TO W-IE
999999*       MOVE SPACES                        TO W-EXPERFORM
999999*       PERFORM 1033-TTCAU-CAI-CAE
999999*          THRU 1033-TTCAU-CAI-CAE-END
999999*          VARYING IND6 FROM 1 BY 1
999999*          UNTIL IND6 > WCM-INDMAX(12)
999999*          OR W-EXPERFORM = 'SI'
999999*          OR L-ERR-ERR OR W-EXIT
999999*          IF L-ERR-ERR OR W-EXIT
999999*             GO TO 1025-NCSVC-TTCAU-END
999999*          END-IF
999999*    END-IF.
999999*--------------------------------------------------------------
999999*   TRATTAMENTO CAUSALE FISSA
999999*--------------------------------------------------------------
999999*    IF NCSVC-TTCAU (IND5) = 'CAA'
999999*       MOVE NCSVC-TTINTES (IND5)          TO MOVC-TMOVCAU
999999*       IF NCSVC-TTIMPCAU (IND5) = 'IMPO'
999999*          MOVE 'ZOR030501'                TO W-DECOD
999999*          COPY ZMZINDIR.
999999*          COPY ZMZVALNM.
999999*          COMPUTE MOVC-ICAU = W-COM-NUM / 10 ** M-D(IND1)
999999*       END-IF
999999*       IF NCSVC-TTIMPCAU (IND5) = 'CTVO'
999999*          MOVE 'ZOR030601'                TO W-DECOD
999999*          COPY ZMZINDIR.
999999*          COPY ZMZVALNM.
999999*          COMPUTE MOVC-ICAU = W-COM-NUM / 10 ** M-D(IND1)
999999*       END-IF
999999*       IF NCSVC-TTIMPCAU (IND5) (1:3) = 'IMP' AND
999999*          NCSVC-TTIMPCAU (IND5) (4:1) NUMERIC
999999*          MOVE NCSVC-TTIMPCAU (IND5)      TO W-XXXN
999999*          MOVE 'ZDI040401'                TO W-DECOD
999999*          MOVE W-XXXN-N                   TO C
999999*          COPY ZMZINDIR.
999999*          COPY ZMZVALNM.
999999*          COMPUTE MOVC-ICAU = W-COM-NUM / 10 ** M-D(IND1)
999999*       END-IF
999999*       IF NCSVC-TTIMPCAU (IND5) (1:3) = 'CTV' AND
999999*          NCSVC-TTIMPCAU (IND5) (4:1) NUMERIC
999999*          MOVE NCSVC-TTIMPCAU (IND5)      TO W-XXNN
999999*          MOVE 'ZDI040601'                TO W-DECOD
999999*          MOVE W-XXNN-N                   TO C
999999*          COPY ZMZINDIR.
999999*          COPY ZMZVALNM.
999999*          COMPUTE MOVC-ICAU = W-COM-NUM / 10 ** M-D(IND1)
999999*       END-IF
999999*       IF NCSVC-TTIMPCAU (IND5) (1:2) = 'IE' AND
999999*          NCSVC-TTIMPCAU (IND5) (3:2) NUMERIC
999999*          MOVE NCSVC-TTIMPCAU (IND5)      TO W-XXNN
999999*          MOVE 'ZEC112901'                TO W-DECOD
999999*          MOVE W-XXNN-N                   TO C
999999*          COPY ZMZINDIR.
999999*          COPY ZMZVALNM.
999999*          COMPUTE MOVC-ICAU = W-COM-NUM / 10 ** M-D(IND1)
999999*       END-IF
999999*       IF NCSVC-TTIMPCAU (IND5) (1:2) = 'IR' AND
999999*          NCSVC-TTIMPCAU (IND5) (3:2) NUMERIC
999999*          MOVE NCSVC-TTIMPCAU (IND5)      TO W-XXNN
999999*          MOVE 'ZEC113001'                TO W-DECOD
999999*          MOVE W-XXNN-N                   TO C
999999*          COPY ZMZINDIR.
999999*          COPY ZMZVALNM.
999999*          COMPUTE MOVC-ICAU = W-COM-NUM / 10 ** M-D(IND1)
999999*       END-IF
999999*       IF NCSVC-TTIMPCAU (IND5) (1:2) = 'CE' AND
999999*          NCSVC-TTIMPCAU (IND5) (3:2) NUMERIC
999999*          MOVE NCSVC-TTIMPCAU (IND5)      TO W-XXNN
999999*          MOVE 'ZEC110601'                TO W-DECOD
999999*          MOVE W-XXNN-N                   TO C
999999*          COPY ZMZINDIR.
999999*          COPY ZMZVALNM.
999999*          COMPUTE MOVC-ICAU = W-COM-NUM / 10 ** M-D(IND1)
999999*          MOVE W-DECSIGBASE TO WRK-NDCLDIV
999999*          PERFORM 0838-CNTL-DECIMALI
999999*             THRU 0838-CNTL-DECIMALI-END
999999*          IF M-S(IND1) = 'E'
999999*             GO TO 1025-NCSVC-TTCAU-END
999999*          END-IF
999999*          MOVE W-DECSIGBASE TO WCM-DECIMALI
999999*          MOVE IND1         TO WCM-IND-DEC
999999*          COPY ZMZDECIM.
999999*       END-IF
999999*       IF MOVC-ICAU = 0
999999*          GO TO 1025-NCSVC-TTCAU-END
999999*       END-IF
999999*       EVALUATE NCSVC-TTPCAU (IND5)
999999*         WHEN 'COD'
999999*           IF MOVC-ICAU > 20000000
999999*              MOVE NCSVC-TTCAUS20 (IND5)  TO MOVC-CCAUIC
999999*           ELSE
999999*              MOVE NCSVC-TTCAUI20 (IND5)  TO MOVC-CCAUIC
999999*           END-IF
999999*           MOVE MOVC-CISO      TO LICMB-CISO
999999*           MOVE L-DATA-OGGI    TO LICMB-ANNOMMGG
999999*           PERFORM 3329-TRATTA-CAMBIO
999999*              THRU 3329-TRATTA-CAMBIO-END
999999*           IF L-ERR-ERR
999999*              GO TO 1025-NCSVC-TTCAU-END
999999*           END-IF
999999*           MOVE LICMB-ICABTLF  TO WRK-LICMB-ICABTLF
999999*           MOVE W-CSIGDBASE    TO LICMB-CISO
999999*           MOVE L-DATA-OGGI    TO LICMB-ANNOMMGG
999999*           PERFORM 3329-TRATTA-CAMBIO
999999*              THRU 3329-TRATTA-CAMBIO-END
999999*           IF L-ERR-ERR
999999*              GO TO 1025-NCSVC-TTCAU-END
999999*            END-IF
999999*            COMPUTE WRK-CTV-ICAU =
999999*              ((MOVC-ICAU * WRK-LICMB-ICABTLF) / LICMB-ICABTLF)
999999*           IF WRK-CTV-ICAU > 20000000
999999*              MOVE NCSVC-TTCAUS20 (IND5)  TO MOVC-CCAUIC
999999*           ELSE
999999*              MOVE NCSVC-TTCAUI20 (IND5)  TO MOVC-CCAUIC
999999*           END-IF
999999*           IF MOVC-CCAUIC = 0
999999*              IF M-S(W-STC) NOT = SPACES
999999*                 NEXT SENTENCE
999999*              ELSE
999999*                 MOVE 'SI'                TO W-FLAG-EXIT
999999*                 MOVE 'E'                 TO M-S(W-STC)
999999*                 MOVE M-M(W-STC)          TO W-MAP-ERR
999999*                 MOVE W-COORD-STC         TO W-MOD-ERR
999999*                 MOVE 2                   TO W-FLAG-ERR
999999*                 MOVE 'S058'              TO W-COD-ERR
999999*                 PERFORM 9999-GESTIONE-ERRORE
999999*                    THRU 9999-GESTIONE-ERRORE-END
999999*                 GO TO 1025-NCSVC-TTCAU-END
999999*              END-IF
999999*           END-IF
999999*           MOVE 1                         TO MOVC-TCODCAU
999999*           MOVE 0                         TO MOVC-CDPZGINT
999999*           PERFORM 1031-TRATTA-TCAUIC
999999*              THRU 1031-TRATTA-TCAUIC-END
999999*           IF L-ERR-ERR OR W-EXIT
999999*              GO TO 1025-NCSVC-TTCAU-END
999999*           END-IF
999999*         WHEN 'GIR'
999999*           IF W-CUICBCA = ZEROES
999999*              MOVE 'SI'                TO W-FLAG-EXIT
999999*              MOVE 'E'                 TO M-S(W-STC)
999999*              MOVE M-M(W-STC)          TO W-MAP-ERR
999999*              MOVE W-COORD-STC         TO W-MOD-ERR
999999*              MOVE 2                   TO W-FLAG-ERR
999999*              MOVE 'S113'              TO W-COD-ERR
999999*              PERFORM 9999-GESTIONE-ERRORE
999999*                 THRU 9999-GESTIONE-ERRORE-END
999999*              GO TO 1025-NCSVC-TTCAU-END
999999*           END-IF
999999*           MOVE W-CUICBCA                 TO MOVC-CCAUIC
999999*           MOVE 2                         TO MOVC-TCODCAU
999999*           MOVE 0                         TO MOVC-CDPZGINT
999999*         WHEN 'ARB'
999999*           MOVE W-CMODUIC                 TO MOVC-CCAUIC
999999*           MOVE 3                         TO MOVC-TCODCAU
999999*           MOVE 0                         TO MOVC-CDPZGINT
999999*       END-EVALUATE
999999*       MOVE SPACES                        TO W-F-EX
999999*       PERFORM 1030-INTAB-TTCAU
999999*          THRU 1030-INTAB-TTCAU-END
999999*          VARYING INDC FROM 1 BY 1
999999*          UNTIL INDC > 50 OR
999999*          W-F-EX      = 'SI'
999999*          OR L-ERR-ERR OR W-EXIT.
999999*1025-NCSVC-TTCAU-END.
999999*    EXIT.

999999*
999999*------------------
999999*1030-INTAB-TTCAU.
999999*------------------
999999*    MOVE 'SI'                             TO W-ISRT-MOVC.
999999*    MOVE SPACES                           TO W-EXPERFORM.
999999*    IF ABSC-FRSTCAU = 3 AND
999999*       MOVC-TCODCAU = 1
999999*       MOVE 'SI'                          TO W-F-EX
999999*       MOVE W-CIST                        TO CAUSC-CIST
999999*       MOVE MOVP-CSTC                     TO CAUSC-CSTC
999999*       MOVE MOVC-CCAUIC                   TO CAUSC-CCAUIC
999999*       PERFORM 1041-LEGGI-TCAUSC
999999*          THRU 1041-LEGGI-TCAUSC-END
999999*       GO TO 1030-INTAB-TTCAU-END
999999*    END-IF.
999999*    PERFORM
999999*       VARYING WRK-IND-INTAB FROM 1 BY 1
999999*         UNTIL WRK-IND-INTAB GREATER 35 OR
999999*            (WRK-R-MOVC-NMOVP(WRK-IND-INTAB) = MOVC-NPRGMOVP
999999*         AND WRK-R-MOVC-SUBMOVP(WRK-IND-INTAB) = MOVC-NSUBMOVP)
999999*            IF WRK-R-MOVC-NMOVP(WRK-IND-INTAB) = ZEROES
999999*               MOVE MOVC-NPRGMOVP
999999*                           TO WRK-R-MOVC-NMOVP(WRK-IND-INTAB)
999999*               MOVE MOVC-NSUBMOVP
999999*                           TO WRK-R-MOVC-SUBMOVP(WRK-IND-INTAB)
999999*               MOVE 36 TO WRK-IND-INTAB
999999*            END-IF
999999*    END-PERFORM.
999999*    IF WS-TAB-TBAMOVC(INDC) NOT = SPACES
999999*       IF WS-MOVC-TCODCAU(INDC)  = MOVC-TCODCAU  AND
999999*          WS-MOVC-TMOVCAU(INDC)  = MOVC-TMOVCAU  AND
999999*          WS-MOVC-NPRGMOVP(INDC) = MOVC-NPRGMOVP AND
999999*          WS-MOVC-NSUBMOVP(INDC) = MOVC-NSUBMOVP AND
999999*          WS-MOVC-CISO(INDC)     = MOVC-CISO     AND
999999*          WS-MOVC-CSIGPAE(INDC)  = MOVC-CSIGPAE  AND
999999*          WS-MOVC-CCAUIC(INDC)   = MOVC-CCAUIC
999999*          IF MOVC-TMOVCAU = 'I'
999999*             COMPUTE W-COM-ICAU3    = MOVC-ICAU * -1
999999*          ELSE
999999*             MOVE MOVC-ICAU               TO W-COM-ICAU3
999999*          END-IF
999999*          COMPUTE WS-MOVC-ICAU(INDC) =
999999*                  WS-MOVC-ICAU(INDC) + W-COM-ICAU3
999999*          MOVE 'SI'                       TO W-F-EX
999999*       ELSE
999999*          IF WS-MOVC-NPRGMOVP(INDC) = MOVC-NPRGMOVP AND
999999*             WS-MOVC-NSUBMOVP(INDC) = MOVC-NSUBMOVP
999999*             MOVE ZEROES  TO W-LAST-NPRGRIGA
999999*             PERFORM
999999*              VARYING WRK-IND-INTAB FROM 1 BY 1
999999*                UNTIL WRK-IND-INTAB GREATER 35
999999*                   OR WRK-R-MOVC-NMOVP(WRK-IND-INTAB) = ZEROES
999999*            IF WRK-R-MOVC-NMOVP(WRK-IND-INTAB) = MOVC-NPRGMOVP
999999*           AND WRK-R-MOVC-SUBMOVP(WRK-IND-INTAB) = MOVC-NSUBMOVP
999999*                MOVE WRK-R-MOVC-NPRGRIGA-C(WRK-IND-INTAB)
999999*                                           TO W-LAST-NPRGRIGA
999999*                ADD 1                      TO W-LAST-NPRGRIGA
999999*                MOVE W-LAST-NPRGRIGA
999999*                         TO WRK-R-MOVC-NPRGRIGA-C(WRK-IND-INTAB)
999999*               MOVE 36 TO WRK-IND-INTAB
999999*            END-IF
999999*            END-PERFORM
999999*            MOVE W-LAST-NPRGRIGA           TO MOVC-NPRGRIGA
999999*          END-IF
999999*       END-IF
999999*    ELSE
999999*       IF MOVC-NPRGRIGA = ZEROES
999999*          ADD 1        TO MOVC-NPRGRIGA
999999*          PERFORM
999999*             VARYING WRK-IND-INTAB FROM 1 BY 1
999999*                UNTIL WRK-IND-INTAB GREATER 35
999999*                   OR WRK-R-MOVC-NMOVP(WRK-IND-INTAB) = ZEROES
999999*            IF WRK-R-MOVC-NMOVP(WRK-IND-INTAB) = MOVC-NPRGMOVP
999999*           AND WRK-R-MOVC-SUBMOVP(WRK-IND-INTAB) = MOVC-NSUBMOVP
999999*                MOVE MOVC-NPRGRIGA
999999*                         TO WRK-R-MOVC-NPRGRIGA-C(WRK-IND-INTAB)
999999*             END-IF
999999*          END-PERFORM
999999*       END-IF
999999*       IF MOVC-TMOVCAU = 'I'
999999*          COMPUTE MOVC-ICAU = MOVC-ICAU * -1
999999*       END-IF
999999*       MOVE DCLTBAMOVC                  TO WS-TAB-TBAMOVC(INDC)
999999*       MOVE 'SI'                        TO W-F-EX
999999*    END-IF.
999999*1030-INTAB-TTCAU-END.
999999*    EXIT.

999999*
999999*--------------------
999999*1031-TRATTA-TCAUIC.
999999*--------------------
999999*    MOVE MOVC-CIST             TO CAUIC-CIST.
999999*    MOVE MOVC-CCAUIC           TO CAUIC-CCAUIC.
999999*    PERFORM 1032-LEGGI-TCAUIC
999999*       THRU 1032-LEGGI-TCAUIC-END.
999999*    IF W-SQL-NON-TROVATO
999999*       IF L-FASE GREATER 1
999999*          IF NCSVC-TTCAU (IND5) = 'CAA'
999999*             MOVE 'SI'         TO W-FLAG-EXIT
999999*             MOVE '0'          TO W-MAP-ERR
999999*             MOVE 2            TO W-FLAG-ERR
999999*             MOVE 'S064'       TO W-COD-ERR
999999*             PERFORM 9999-GESTIONE-ERRORE
999999*                THRU 9999-GESTIONE-ERRORE-END
999999*             GO TO 1031-TRATTA-TCAUIC-END
999999*          ELSE
999999*             IF M-S(W-CAU) NOT = SPACES
999999*                NEXT SENTENCE
999999*             ELSE
999999*                MOVE 'SI'         TO W-FLAG-EXIT
999999*                MOVE 'E'                  TO M-S(W-CAU)
999999*                MOVE W-COORD-CAU          TO W-MOD-ERR
999999*                MOVE M-M(W-CAU)           TO W-MAP-ERR
999999*                MOVE 2                    TO W-FLAG-ERR
999999*                MOVE 'S064'               TO W-COD-ERR
999999*                PERFORM 9999-GESTIONE-ERRORE
999999*                   THRU 9999-GESTIONE-ERRORE-END
999999*                GO TO 1031-TRATTA-TCAUIC-END
999999*             END-IF
999999*          END-IF
999999*       ELSE
999999*          MOVE 'SI'      TO W-FLAG-EXIT
999999*          GO TO 1031-TRATTA-TCAUIC-END
999999*       END-IF
999999*    ELSE
999999*       IF NOT W-SQL-OK
999999*          MOVE 8                          TO W-FLAG-ERR
999999*          MOVE '9999'                     TO W-COD-ERR
999999*          MOVE 'TBTCAUIC'                 TO L-NOME-TABELLA
999999*          MOVE W-SQLCODE                  TO L-CODICE-SQL
999999*          MOVE 'ZMBSVIL0'                 TO L-MODULO
999999*          MOVE '1031-TRATTA-TCAUIC'       TO L-SUB-MODULO
999999*          PERFORM 9999-GESTIONE-ERRORE
999999*             THRU 9999-GESTIONE-ERRORE-END
999999*          GO TO 1031-TRATTA-TCAUIC-END
999999*       END-IF
999999*    END-IF.
999999*    IF MOVC-TMOVCAU = 'I' AND
999999*       CAUIC-TCAU   = 2
999999*       IF NCSVC-TTCAU (IND5) = 'CAA'
999999*          MOVE 'SI'             TO W-FLAG-EXIT
999999*          MOVE '0'              TO W-MAP-ERR
999999*          MOVE 2                TO W-FLAG-ERR
999999*          MOVE 'S060'           TO W-COD-ERR
999999*          PERFORM 9999-GESTIONE-ERRORE
999999*             THRU 9999-GESTIONE-ERRORE-END
999999*          GO TO 1031-TRATTA-TCAUIC-END
999999*       ELSE
999999*          IF M-S(W-CAU) NOT = SPACES
999999*             NEXT SENTENCE
999999*          ELSE
999999*             MOVE 'SI'             TO W-FLAG-EXIT
999999*             MOVE 'E'              TO M-S(W-CAU)
999999*             MOVE W-COORD-CAU      TO W-MOD-ERR
999999*             MOVE M-M(W-CAU)       TO W-MAP-ERR
999999*             MOVE 2                TO W-FLAG-ERR
999999*             MOVE 'S060'           TO W-COD-ERR
999999*             PERFORM 9999-GESTIONE-ERRORE
999999*                THRU 9999-GESTIONE-ERRORE-END
999999*             GO TO 1031-TRATTA-TCAUIC-END
999999*          END-IF
999999*       END-IF
999999*    END-IF.
999999*    IF MOVC-TMOVCAU = 'E' AND
999999*       CAUIC-TCAU   = 1
999999*       IF NCSVC-TTCAU (IND5) = 'CAA'
999999*          MOVE 'SI'             TO W-FLAG-EXIT
999999*          MOVE '0'              TO W-MAP-ERR
999999*          MOVE 2                TO W-FLAG-ERR
999999*          MOVE 'S061'           TO W-COD-ERR
999999*          PERFORM 9999-GESTIONE-ERRORE
999999*             THRU 9999-GESTIONE-ERRORE-END
999999*          GO TO 1031-TRATTA-TCAUIC-END
999999*       ELSE
999999*          IF M-S(W-CAU) NOT = SPACES
999999*             NEXT SENTENCE
999999*          ELSE
999999*             MOVE 'SI'                    TO W-FLAG-EXIT
999999*             MOVE 'E'                     TO M-S(W-CAU)
999999*             MOVE W-COORD-CAU             TO W-MOD-ERR
999999*             MOVE M-M(W-CAU)              TO W-MAP-ERR
999999*             MOVE 2                       TO W-FLAG-ERR
999999*             MOVE 'S061'                  TO W-COD-ERR
999999*             PERFORM 9999-GESTIONE-ERRORE
999999*                THRU 9999-GESTIONE-ERRORE-END
999999*             GO TO 1031-TRATTA-TCAUIC-END
999999*          END-IF
999999*       END-IF
999999*    END-IF.
999999*    IF CAUIC-TMVZ = 1
999999*       IF W-CSIGDBASE NOT = MOVC-CISO
999999*          IF NCSVC-TTCAU (IND5) = 'CAA'
999999*             MOVE 'SI'             TO W-FLAG-EXIT
999999*             MOVE '0'              TO W-MAP-ERR
999999*             MOVE 2                TO W-FLAG-ERR
999999*             MOVE 'S062'           TO W-COD-ERR
999999*             MOVE 'SI'             TO W-FLAG-EXIT
999999*             PERFORM 9999-GESTIONE-ERRORE
999999*                THRU 9999-GESTIONE-ERRORE-END
999999*             GO TO 1031-TRATTA-TCAUIC-END
999999*          ELSE
999999*             IF M-S(W-CAU) NOT = SPACES
999999*                NEXT SENTENCE
999999*             ELSE
999999*                MOVE 'SI'                 TO W-FLAG-EXIT
999999*                MOVE 'E'                  TO M-S(W-CAU)
999999*                MOVE W-COORD-CAU          TO W-MOD-ERR
999999*                MOVE M-M(W-CAU)           TO W-MAP-ERR
999999*                MOVE 2                    TO W-FLAG-ERR
999999*                MOVE 'S062'               TO W-COD-ERR
999999*                PERFORM 9999-GESTIONE-ERRORE
999999*                   THRU 9999-GESTIONE-ERRORE-END
999999*                GO TO 1031-TRATTA-TCAUIC-END
999999*             END-IF
999999*          END-IF
999999*       END-IF
999999*    END-IF.
999999*    IF CAUIC-TMVZ = 2
999999*       IF W-CSIGDBASE = MOVC-CISO
999999*          IF NCSVC-TTCAU (IND5) = 'CAA'
999999*             MOVE 'SI'                 TO W-FLAG-EXIT
999999*             MOVE '0'                     TO W-MAP-ERR
999999*             MOVE 2                       TO W-FLAG-ERR
999999*             MOVE 'S063'                  TO W-COD-ERR
999999*             PERFORM 9999-GESTIONE-ERRORE
999999*                THRU 9999-GESTIONE-ERRORE-END
999999*             GO TO 1031-TRATTA-TCAUIC-END
999999*          ELSE
999999*             IF M-S(W-CAU) NOT = SPACES
999999*                NEXT SENTENCE
999999*             ELSE
999999*                MOVE 'SI'                 TO W-FLAG-EXIT
999999*                MOVE 'E'                  TO M-S(W-CAU)
999999*                MOVE W-COORD-CAU          TO W-MOD-ERR
999999*                MOVE M-M(W-CAU)           TO W-MAP-ERR
999999*                MOVE 2                    TO W-FLAG-ERR
999999*                MOVE 'S063'               TO W-COD-ERR
999999*                PERFORM 9999-GESTIONE-ERRORE
999999*                   THRU 9999-GESTIONE-ERRORE-END
999999*                GO TO 1031-TRATTA-TCAUIC-END
999999*             END-IF
999999*          END-IF
999999*       END-IF
999999*    END-IF.
999999*
999999*    PERFORM 1034-VALIDITA-CAUSALE
999999*       THRU 1034-VALIDITA-CAUSALE-END.
999999*
999999*1031-TRATTA-TCAUIC-END.
999999*    EXIT.

      *------------------
       1032-LEGGI-TCAUIC.
      *------------------
           EXEC SQL INCLUDE ZMS20601 END-EXEC.
           MOVE 0                                TO W-TAPPO.
       1032-LEGGI-TCAUIC-END.
           EXIT.

999999*
999999*--------------------
999999*1033-TTCAU-CAI-CAE.
999999*--------------------
999999*    MOVE 'ZCA120301'                      TO W-DECOD.
999999*    MOVE IND6                             TO C.
999999*    COPY ZMZINDIR.
999999*    IF MOD(M-I(IND1):M-L(IND1)) = W-IE(3:1)
999999*       MOVE 0                             TO MOVC-CDPZGINT
999999*       MOVE 'ZCA120401'                   TO W-DECOD
999999*       MOVE IND6                          TO C
999999*       COPY ZMZINDIR.
999999*       COPY ZMZVALNM.
999999*       COMPUTE MOVC-ICAU = W-COM-NUM / 10 ** M-D(IND1)
999999*       MOVE W-CIST      TO   DIV-CIST
999999*       MOVE MOVC-CISO   TO   DIV-CISO
999999*       PERFORM 0870-TRATTA-DIVISA
999999*          THRU 0870-TRATTA-DIVISA-END
999999*       MOVE DIV-NDCLDIV  TO WRK-NDCLDIV
999999*       PERFORM 0838-CNTL-DECIMALI
999999*          THRU 0838-CNTL-DECIMALI-END
999999*       IF M-S(IND1) = 'E'
999999*          GO TO 1033-TTCAU-CAI-CAE-END
999999*       END-IF
999999*       MOVE DIV-NDCLDIV  TO WCM-DECIMALI
999999*       MOVE IND1         TO WCM-IND-DEC
999999*       COPY ZMZDECIM.
999999*
999999*       MOVE 'ZCA120101'                   TO W-DECOD
999999*       MOVE IND6                          TO C
999999*       COPY ZMZINDIR.
999999*       COPY ZMZVALNM.
999999*       MOVE W-COM-NUM                     TO MOVC-TCODCAU
999999*       MOVE 'ZCA120301'                   TO W-DECOD
999999*       MOVE IND6                          TO C
999999*       COPY ZMZINDIR.
999999*       MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-TMOVCAU
999999*       MOVE 'ZCA120201'                   TO W-DECOD
999999*       MOVE IND6                          TO C
999999*       MOVE W-DEC-COORD                   TO W-COORD-CAU
999999*       COPY ZMZINDIR.
999999*       COPY ZMZVALNM.
999999*       MOVE W-COM-NUM                     TO MOVC-CCAUIC
999999*       MOVE IND1                          TO W-CAU
999999*       IF MOVC-CCAUIC = ZEROES
999999*          GO TO 1025-NCSVC-TTCAU-END
999999*          GO TO 1033-TTCAU-CAI-CAE-END
999999*       END-IF
999999*       IF MOVC-TCODCAU = 1
999999*          PERFORM 1031-TRATTA-TCAUIC
999999*             THRU 1031-TRATTA-TCAUIC-END
999999*          IF L-ERR-ERR OR W-EXIT
999999*             GO TO 1025-NCSVC-TTCAU-END
999999*             GO TO 1033-TTCAU-CAI-CAE-END
999999*          END-IF
999999*       END-IF
999999*       IF MOVC-ICAU = 0
999999*          GO TO 1025-NCSVC-TTCAU-END
999999*          GO TO 1033-TTCAU-CAI-CAE-END
999999*       END-IF
999999*       MOVE SPACES                        TO W-F-EX
999999*       PERFORM 1030-INTAB-TTCAU
999999*          THRU 1030-INTAB-TTCAU-END
999999*          VARYING INDC FROM 1 BY 1
999999*          UNTIL INDC > 50 OR
999999*          W-F-EX      = 'SI'
999999*    END-IF.
999999*1033-TTCAU-CAI-CAE-END.
999999*    EXIT.
999999*
999999*----------------------
999999*1034-VALIDITA-CAUSALE.
999999*------------------------------ CONTROLLA VALIDITA' CAUSALI
999999*    IF W-CAU = ZEROES THEN
999999*       MOVE 1                          TO W-CAU
999999*    END-IF.
999999*    IF CAUIC-FVLDCAU = 4
999999*       MOVE 'E'                        TO M-S(W-CAU)
999999*       MOVE M-M(W-CAU)                 TO W-MAP-ERR
999999*       MOVE W-COORD-CAU                TO W-MOD-ERR
999999*       MOVE 2                          TO W-FLAG-ERR
999999*       MOVE 'S147'                     TO W-COD-ERR
999999*       PERFORM 9999-GESTIONE-ERRORE
999999*          THRU 9999-GESTIONE-ERRORE-END
999999*    END-IF.
999999*    IF CAUIC-FVLDCAU = 3
999999*       MOVE 'E'                        TO M-S(W-CAU)
999999*       MOVE M-M(W-CAU)                 TO W-MAP-ERR
999999*       MOVE W-COORD-CAU                TO W-MOD-ERR
999999*       MOVE 2                          TO W-FLAG-ERR
999999*       MOVE 'S134'                     TO W-COD-ERR
999999*       PERFORM 9999-GESTIONE-ERRORE
999999*          THRU 9999-GESTIONE-ERRORE-END
999999*    END-IF.
999999*
999999*1034-VALIDITA-CAUSALE-END.
999999*    EXIT.

      *------------------
       1041-LEGGI-TCAUSC.
      *------------------
           EXEC SQL INCLUDE ZMS23301 END-EXEC.
           IF W-SQL-NON-TROVATO
              IF M-S(W-STC) NOT = SPACES
                 NEXT SENTENCE
              ELSE
                 MOVE 'SI'                TO W-FLAG-EXIT
                 MOVE 'E'                 TO M-S(W-STC)
                 MOVE M-M(W-STC)          TO W-MAP-ERR
                 MOVE W-COORD-STC         TO W-MOD-ERR
                 MOVE 2                   TO W-FLAG-ERR
                 MOVE 'S065'              TO W-COD-ERR
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
                 GO TO 1041-LEGGI-TCAUSC-END
              END-IF
           ELSE
              IF NOT W-SQL-OK
                 MOVE 8                          TO W-FLAG-ERR
                 MOVE '9999'                     TO W-COD-ERR
                 MOVE 'TBTCAUSC'                 TO L-NOME-TABELLA
                 MOVE W-SQLCODE                  TO L-CODICE-SQL
                 MOVE 'ZMBSVIL0'                 TO L-MODULO
                 MOVE '1041-LEGGI-TCAUSC'        TO L-SUB-MODULO
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
       1041-LEGGI-TCAUSC-END.
           EXIT.

000092*-------------------------------------------------------------*   TS010197
"      1050-LEGGI-WPRKSC.                                               TS010198
BPO741*-------------------------------------------------------------*   TS010199
BPO741* VALORIZZA FLAG ABROGAZIONE = ZOP025401                      *   TS010200
BPO741*                                                             *   TS010201
BPO741*-------------------------------------------------------------*   TS010202
BPO741     MOVE 'ZOP025401'                      TO W-DECOD.
BPO741     COPY ZMZINDIR.
BPO741     MOVE MOD(M-I(IND1):M-L(IND1))         TO WRK-FLAG-ABROG.
"     *-------------------------------------------------------------*   TS010199
"     * LEGGE LA TABELLA CHIAVI CASI DI SVILUPPO CAUSALI; PUO' NON  *   TS010200
"     * ESISTERE ALCUN CASO.                                        *   TS010201
"     *-------------------------------------------------------------*   TS010202
"                                                                       TS010216
"          INITIALIZE DCLTBWPRKSC.                                      TS010217
"          MOVE SPACES       TO WRK-FINE-WPRKSC.                        TS010217
"          MOVE ZEROES       TO WRK-IND-LETTI-C.                        TS010218
"          MOVE W-CPCS-MOD   TO PRKSC-CPCS.                             TS010219
"                                                                       TS010203
"          EXEC SQL INCLUDE ZMLOPE11 END-EXEC.                          TS010204
"                                                                       TS010205
"          IF NOT W-SQL-OK                                              TS010206
"             MOVE 8                         TO W-FLAG-ERR              TS010207
"             MOVE '9999'                    TO W-COD-ERR               TS010208
"             MOVE SPACES                    TO L-NOME-TABELLA          TS010209
"             MOVE W-SQLCODE                 TO L-CODICE-SQL            TS010210
"             MOVE 'ZMBSVIL0'                TO L-MODULO                TS010211
"             MOVE '1050-APERTURA-CURSORE11' TO L-SUB-MODULO            TS010212
"             PERFORM 9999-GESTIONE-ERRORE                              TS010213
"                THRU 9999-GESTIONE-ERRORE-END                          TS010214
"             GO TO 1050-LEGGI-WPRKSC-END.                              TS010215
"                                                                       TS010221
"          PERFORM 1051-SCORRI-TBWPRKSC                                 TS010222
"             THRU 1051-SCORRI-TBWPRKSC-END                             TS010223
"                  UNTIL WRK-FINE-WPRKSC = 'SI'                         TS010224
"                   OR L-ERR-ERR  OR W-EXIT.                            TS010225
"                                                                       TS010226
"          EXEC SQL INCLUDE ZMLCLO11 END-EXEC.                          TS010227
"          IF NOT W-SQL-OK                                              TS010228
"             MOVE 8                         TO W-FLAG-ERR              TS010229
"             MOVE '9999'                    TO W-COD-ERR               TS010230
"             MOVE SPACES                    TO L-NOME-TABELLA          TS010231
"             MOVE W-SQLCODE                 TO L-CODICE-SQL            TS010232
"             MOVE 'ZMBSVIL0'                TO L-MODULO                TS010233
"             MOVE '1050-CHIUSURA-CURSORE11' TO L-SUB-MODULO            TS010234
"             PERFORM 9999-GESTIONE-ERRORE                              TS010235
"                THRU 9999-GESTIONE-ERRORE-END.                         TS010236
"                                                                       TS010237
"          IF L-ERR-ERR  OR W-EXIT                                      TS010238
"             GO TO 1050-LEGGI-WPRKSC-END.                              TS010239
"                                                                       TS010240
"      1050-LEGGI-WPRKSC-END.                                           TS010241
00092      EXIT.                                                        TS010242
                                                                        TS010243
000092*---------------------------------------------------------------- TS010244
"      1051-SCORRI-TBWPRKSC.                                            TS010245
"     *---------------------------------------------------------------- TS010246
"     * EFFETTUA LA FETCH SULLA TABELLA ZM.TBWPRKSC (CHIAVI CASI DI     TS010247
"     * SVILUPPO CAUSALI/98 CON CUR11.                                  TS010248
"     *---------------------------------------------------------------- TS010249
"                                                                       TS010250
"          EXEC SQL INCLUDE ZMF27501 END-EXEC.                          TS010251
"                                                                       TS010254
"          IF W-SQL-NON-TROVATO                                         TS010252
"             MOVE 'SI' TO WRK-FINE-WPRKSC                              TS010253
"          ELSE                                                         TS010254
"             IF NOT W-SQL-OK                                           TS010255
"                MOVE 8                      TO W-FLAG-ERR              TS010256
"                MOVE '9999'                 TO W-COD-ERR               TS010257
"                MOVE 'TBWPRKSC'             TO L-NOME-TABELLA          TS010258
"                MOVE W-SQLCODE              TO L-CODICE-SQL            TS010259
"                MOVE 'ZMBSVIL0'             TO L-MODULO                TS010260
"                MOVE '1051-SCORRI-TBWPRKSC' TO L-SUB-MODULO            TS010261
"                PERFORM 9999-GESTIONE-ERRORE                           TS010262
"                   THRU 9999-GESTIONE-ERRORE-END                       TS010263
"             ELSE                                                      TS010264
"                MOVE ALL ' '  TO ZMWPRKSC                              TS010265
BPEL26           IF PRKSC-WTABKSC-LEN GREATER ZEROES
"                   MOVE PRKSC-WTABKSC-TEXT(1:PRKSC-WTABKSC-LEN)        TS010266
"                                        TO ZMWPRKSC                    TS010267
BPEL26           END-IF
"                PERFORM 1052-ELABORA-WPRKSC                            TS010268
"                   THRU 1052-ELABORA-WPRKSC-END                        TS010269
"                    VARYING IND21 FROM 1 BY 1                          TS010270
"                     UNTIL IND21 > WRK-MAX-KSC                         TS010271
"                      OR WPRKSC-TTSGNL(IND21) = SPACES                 TS010272
"                       OR L-ERR-ERR OR W-EXIT.                         TS010273
"      1051-SCORRI-TBWPRKSC-END.                                        TS010274
000092     EXIT.                                                        TS010275
                                                                        TS010276
000092*-------------------------------------------------------------    TS010277
"      1052-ELABORA-WPRKSC.                                             TS010278
"     *-------------------------------------------------------------    TS010279
"     * CON LA CHIAVE DI CASO SVILUPPO LETTA, CERCO SULLA TABELLA       TS010280
"     * TOBSG SE OGNI CAMPO E' OBBLIGATORIO, FACOLTATIVO O ASSENTE.     TS010281
"     * A SECONDA DEL CASO, VALORIZZERO' O MENO LA CHIAVE DI RICERCA    TS010282
"     * PER LA TABELLA CASI SVILUPPO CAUSALI (WPRCSC)                   TS010283
"     *-------------------------------------------------------------    TS010284
"     * CON IND21 --> RICORRENZA CHIAVE SVILUPPO CAUSALE.               TS010285
"     * CON IND22 --> RICORRENZA CASO   SVILUPPO CAUSALE.               TS010286
"     *-------------------------------------------------------------    TS010287
000376*----- PRIMA DELLA DATA VALIDITA' ESCLUDO DALLA
000376*----------- ELABORAZIONE I NUOVI TIPI DI SEGNALAZIONE.
000376     IF WRK-FLAG-CAU-2000 = 0
000376        IF WPRKSC-TTSGNL(IND21)(1:1) = 'W'
000376          GO TO 1052-ELABORA-WPRKSC-END
000376       END-IF
000376     END-IF
000376*----- DOPO LA DATA VALIDITA' ESCLUDO I VECCHI TIPI DI SEGNALAZ
000376     IF WRK-FLAG-CAU-2000 = 1
000376       IF WPRKSC-TTSGNL(IND21) = 'R' OR 'CF' OR 'G'
000376          GO TO 1052-ELABORA-WPRKSC-END
000376       END-IF
000376     END-IF
BPO741*----- ABROGAZIONE CVA / CVS
BPO741* NON ESEGUE SE PERIODO DI ABROGAZIONE CVA / CVS E SE
BPO741* IL TIPO SEGNALAZIONE E' DIVERSO DA 'WR'
BPO741* MENTRE SE IL TIPO SEGNALAZIONE E' UGUALE A 'WR' DEVE
BPO741* FARE LA CAUSALE 7010
BPO741*----
BPO741     IF WRK-FLAG-ABROG = 'T' AND
BPO741        CONFG-DATA-ABROG GREATER ZEROES
BPO741        IF MOVP-DVALNOA > CONFG-DATA-ABROG
BPO741           IF WPRKSC-TTSGNL(IND21) NOT = 'WR'
BPO741              GO TO 1052-ELABORA-WPRKSC-END
BPO741           END-IF
BPO741        END-IF
BPO741     END-IF.
000092*----------------------------------- SE IL CAMPO CONDIZIONE E'    TS010292
"     *----------------------------------- VALORIZZATO, LA VERIFICO.    TS010293
"                                                                       TS010294
"          IF WPRKSC-TTZNAPPC1 (IND21) > SPACES                         TS010295
BAVG90*       MOVE WPRKSC-TTZNAPPC1 (IND21)     TO COND-MOD-COORD
BAVG90*       MOVE WPRKSC-TTPRES (IND21)        TO COND-CONDIZ
BAVG90*       MOVE WPRKSC-TTVALC11 (IND21)      TO COND-VALORE
BAVG90*       PERFORM 0700-CHIAMA-COND
BAVG90*          THRU 0700-CHIAMA-COND-END
BAVG90*       IF COND-RC NOT = ZEROES
BAVG90        MOVE WPRKSC-TTZNAPPC1 (IND21)     TO C-COND-MOD-COORD
BAVG90        MOVE WPRKSC-TTPRES (IND21)        TO C-COND-CONDIZ
BAVG90        MOVE WPRKSC-TTVALC11 (IND21)      TO C-COND-VALORE
BAVG90        PERFORM CONDIZIONI-COPY
BAVG90           THRU CONDIZIONI-COPY-EX
BAVG90        MOVE SPACES                       TO W-TROVATO
BAVG90        IF C-COND-RC NOT = ZEROES
"                MOVE 8                       TO W-FLAG-ERR             TS010302
"                MOVE  9999                   TO W-COD-ERR              TS010303
"                MOVE 'SI'                    TO W-FLAG-EXIT            TS010304
"                PERFORM 9999-GESTIONE-ERRORE                           TS010305
"                   THRU 9999-GESTIONE-ERRORE-END                       TS010306
"             END-IF                                                    TS010307
"          ELSE                                                         TS010308
BAVG90*       MOVE 'S'                        TO COND-ESITO             TS010309
BAVG90        MOVE 'S'                        TO C-COND-ESITO           TS010309
"          END-IF                                                       TS010310
BAVG90*    IF COND-ESITO = 'S'                                          TS010311
BAVG90     IF C-COND-ESITO = 'S'                                        TS010311
"     *--------------------------------------   VALORIZZO CHIAVE        TS010312
"     *--------------------------------------   PER ACCEDERE A PRCSC    TS010313
"             MOVE SPACES      TO WRK-NON-DIGITATO                      TS010311
"             PERFORM 1053-VALORIZZA-CHIAVE-SCS                         TS010314
000142*          THRU 1053-VALORIZZA-CHIAVE-SCS                         TS010315
000142           THRU 1053-VALORIZZA-CHIAVE-SCS-END                     TS010315
"     *--------------------------------------   CERCO SU PRCSC TUTTI    TS010316
"     *--------------------------------------   I CASI.                 TS010317
"             IF NOT L-ERR-ERR                                          TS010318
"                AND NOT W-EXIT                                         TS010319
"                 AND WRK-NON-DIGITATO NOT = 'SI'                       TS010319
"                   PERFORM 1070-CERCA-WPRCSC                           TS010320
"                      THRU 1070-CERCA-WPRCSC-END                       TS010321
"             END-IF                                                    TS010326
"          END-IF.                                                      TS010328
"      1052-ELABORA-WPRKSC-END.                                         TS010329
000092     EXIT.                                                        TS010330
                                                                        TS010331
000092*------------------------------------------------------------     TS010332
"      1053-VALORIZZA-CHIAVE-SCS.                                       TS010333
"     *------------------------------------------------------------     TS010334
"     *CON LA CHIAVE DEL CASO SVILUPPO CAUSALI, IMPOSTO IL CASO         TS010335
"     *CHE ANDRO' POI A CERCARE NELLA TABELLA WPRCSC.                   TS010336
"     *------------------------------------------------------------     TS010337
"                                                                       TS010338
"     *--------------------------   INIZIALIZZA AREA APPOGGIO           TS010339
"     *--------------------------     RICERCA CASO SVILUPPO CAUSALE     TS010339
"          INITIALIZE WRK-WPRCSC.                                       TS010340
"                                                                       TS010338
"          INITIALIZE DCLTBWPRCSC.                                      TS010340
"     *-------------------------------   TIPO SPECIFCICA PROCESSO       TS010339
"                                                                       TS010340
"          IF WPRKSC-TTSPECPCS(IND21) = 'N'                             TS010340
"             MOVE ZEROES                    TO WRK-CSC-CPCS            TS010341
"                                               PRCSC-CPCS              TS010342
"          END-IF                                                       TS010343
"          IF WPRKSC-TTSPECPCS(IND21) = 'S'                             TS010344
"             MOVE 'ZAA170601'               TO W-DECOD                 TS010345
"             COPY ZMZINDIR.                                            TS010346
"             MOVE MOD(M-I(IND1):M-L(IND1))  TO WRK-CSC-CPCS            TS010347
"                                               PRCSC-CPCS              TS010348
"          END-IF                                                       TS010349
"          IF WPRKSC-TTSPECPCS(IND21) = 'F'                             TS010350
"             MOVE WPRKSC-TTCPCSF(IND21)     TO WRK-CSC-CPCS            TS010351
"                                               PRCSC-CPCS              TS010352
"          END-IF                                                       TS010353
"     *------------------------------------------- TIPO SEGNALAZIONE.   TS010354
"          MOVE WPRKSC-TTSGNL(IND21)        TO TOBSG-TTSGNL             TS010355
"                                              PRCSC-TTSGNL             TS010356
"     *-------------------------------                                  TS010357
"          PERFORM 1054-LEGGI-TOBSG                                     TS010358
"             THRU 1054-LEGGI-TOBSG-END.                                TS010359
"     *---------------------------------------------------------        TS010360
"     *----------------    PER OGNI CAMPO DELLA CHIAVE DEVO VE-         TS010361
"     *----------------    RIFICARNE PRIMA L'OBBLIGATORIETA' E          TS010362
"     *----------------    VALORIZZARE POI L'AREA DA CONFRONTARE        TS010363
"     *----------------    DURANTE LA LETTURA DELLA TABELLA.            TS010364
"     *---------------------------------------------------------        TS010365
"     *------------------------------   FLAG INTROITO/ESITO             TS010366
"          PERFORM 1055-TTSPEIE                                         TS010367
"             THRU 1055-TTSPEIE-END.                                    TS010368
"     *------------------------------   TIPO CONTO 1                    TS010369
"          PERFORM 1056-CMPCNT1                                         TS010370
"             THRU 1056-CMPCNT1-END.                                    TS010371
"     *------------------------------   TIPO CONTO 2                    TS010372
"          PERFORM 1057-CMPCNT2                                         TS010373
"             THRU 1057-CMPCNT2-END.                                    TS010374
"          IF WRK-STCB NOT = ZEROES                                     TS010375
"             PERFORM 1058-TTCNT2                                       TS010376
"                THRU 1058-TTCNT2-END                                   TS010377
"                MOVE WRK-KSC-TTCNT2  TO WRK-CSC-TTCNT2                 TS010615
"          END-IF.                                                      TS010378
"     *------------------------------   CAMPO PAESE                     TS010379
"          PERFORM 1059-CMPPAE                                          TS010380
"             THRU 1059-CMPPAE-END.                                     TS010381
"     *------------------------------   CAMPO DIVISA 1                  TS010382
"          PERFORM 1061-CMPDIV1                                         TS010383
"             THRU 1061-CMPDIV1-END.                                    TS010384
"     *-------------------------------- SE IL  SOTTOCONTO  E LA  DIVISA TS010385
"     *-------------------------------- NON  SONO VALORIZZATI  SI  DEVE TS010385
"     *-------------------------------- PASSARE ALLA  CHIAVE SUCCESSIVA TS010385
"     *-------------------------------- IN QUANTO SI TRATTA DI UNA RIGA TS010385
"     *-------------------------------- IN MAPPA NON VALORIZZATA.       TS010385
"          IF WRK-STCA = ZEROES                                         TS010392
000142*     AND WRK-DIVA = ZEROES                                       TS010392
000142      AND WRK-DIVA = SPACES                                       TS010392
000142       AND APROC-PCSMUL = 'M'                                     TS010499
"                MOVE 'SI'       TO WRK-NON-DIGITATO                    TS010392
"                GO TO 1053-VALORIZZA-CHIAVE-SCS-END                    TS010392
"          END-IF                                                       TS010392
"     *------------------------------   PAESE DESTINAZIONE              TS010385
"          PERFORM 1060-TTRESPAE                                        TS010386
"             THRU 1060-TTRESPAE-END.                                   TS010387
"     *------------------------------   TIPO CONTO ORDINE               TS010391
"          IF WRK-STCA NOT = ZEROES                                     TS010392
000377        MOVE ZEROES      TO WRK-CAU-2000-CTIPSTC
000377        MOVE ZEROES      TO WRK-CAU-2000-FRSDSTC
000377        MOVE ZEROES      TO WRK-CAU-2000-FRSTNDG
000377        MOVE ZEROES      TO WRK-CAU-2000-FTPGEST
000092        PERFORM 1062-TTCNT1                                       TS010392
"                THRU 1062-TTCNT1-END                                   TS010393
"          END-IF.                                                      TS010392
"     *------------------------------   DIVISA 2                        TS010394
"          PERFORM 1063-CMPDIV2                                         TS010395
"             THRU 1063-CMPDIV2-END.                                    TS010396
"     *------------------------------   TIPOLOGIA DIVISA B              TS010397
"          IF WRK-DIVA NOT = SPACES                                     TS010398
"             AND WRK-DIVB NOT = SPACES                                 TS010399
"             PERFORM 1064-TTLITVALB                                    TS010400
"                THRU 1064-TTLITVALB-END                                TS010401
"          END-IF.                                                      TS010402
"     *------------------------------     RIFERIMENTI FIGURA            TS010403
000377     MOVE ZEROES    TO WRK-CAU-2000-CODABI
000377     MOVE SPACES    TO WRK-CAU-2000-SWFNDG
000377     MOVE SPACES    TO WRK-CAU-2000-NDG1
000092     PERFORM 1065-CMPFIG                                          TS010404
"             THRU 1065-CMPFIG-END.                                     TS010405
"     *------------------------------                                   TS010406
000377     IF WRK-FLAG-CAU-2000 = 1
000377        IF WPRKSC-TTSGNL(IND21) = 'WR' OR 'WG'
000377           PERFORM 1083-RISCRIVI-TTCNT1
000377              THRU 1083-RISCRIVI-TTCNT1-END
000377        END-IF
000377        PERFORM 1082-TTRNDG
000377           THRU 1082-TTRNDG-END
000377     END-IF.
000092     PERFORM 1066-CMPRIF1                                         TS010407
"             THRU 1066-CMPRIF1-END.                                    TS010408
"          MOVE WRK-KSC-TTRC1    TO WRK-CSC-TTRC1.                      TS011227
"     *------------------------------                                   TS010409
"          PERFORM 1067-CMPRIF2                                         TS010410
"             THRU 1067-CMPRIF2-END.                                    TS010411
"     *------------------------------                                   TS010412
"      1053-VALORIZZA-CHIAVE-SCS-END.                                   TS010413
000092     EXIT.                                                        TS010414
                                                                        TS010415
000092*------------------------------                                   TS010416
"      1054-LEGGI-TOBSG.                                                TS010417
"     *------------------------------                                   TS010418
"                                                                       TS010419
"          EXEC SQL INCLUDE ZMS27601 END-EXEC.                          TS010420
"                                                                       TS010421
"          IF NOT W-SQL-OK                                              TS010422
"             MOVE 8                          TO W-FLAG-ERR             TS010423
"             MOVE '9999'                     TO W-COD-ERR              TS010424
"             MOVE 'TBTTOBSG'                 TO L-NOME-TABELLA         TS010425
"             MOVE W-SQLCODE                  TO L-CODICE-SQL           TS010426
"             MOVE 'ZMBSVIL0'                 TO L-MODULO               TS010427
"             MOVE '1054-LEGGI-TOBSG '        TO L-SUB-MODULO           TS010428
"             PERFORM 9999-GESTIONE-ERRORE                              TS010429
"                THRU 9999-GESTIONE-ERRORE-END                          TS010430
"          END-IF.                                                      TS010431
"                                                                       TS010432
"      1054-LEGGI-TOBSG-END.                                            TS010433
000092     EXIT.                                                        TS010434
                                                                        TS010435
000092*------------------------------                                   TS010436
"      1055-TTSPEIE.                                                    TS010437
"     *------------------------------                                   TS010438
"          EVALUATE TOBSG-CMPIE                                         TS010439
"     *----------------------------- CAMPO INTROITO/ESITO -------       TS010440
"             WHEN 'O'                                                  TS010441
"                 IF WPRKSC-TTSPEIE(IND21) = 'S'                        TS010442
"                    MOVE 'ZOP020101'     TO W-DECOD                    TS010443
"                    COPY ZMZINDIR.                                     TS010444
"                    MOVE MOD(M-I(IND1):M-L(IND1))                      TS010445
"                                         TO WRK-CSC-TTINTES            TS010446
"                 END-IF                                                TS010447
"                 IF WPRKSC-TTSPEIE(IND21) = 'N'                        TS010448
"                    MOVE SPACES           TO WRK-CSC-TTINTES           TS010449
"                 END-IF                                                TS010450
"                 IF WPRKSC-TTSPEIE(IND21) = SPACES                     TS010451
"                   MOVE 'E'                        TO M-S(W-STC)       TS010452
"                   MOVE 2                          TO W-FLAG-ERR       TS010453
"                   MOVE 'S140'                     TO W-COD-ERR        TS010454
"                   PERFORM 9999-GESTIONE-ERRORE                        TS010455
"                      THRU 9999-GESTIONE-ERRORE-END                    TS010456
"                 END-IF                                                TS010457
"             WHEN 'F'                                                  TS010458
"                 IF WPRKSC-TTSPEIE(IND21) = 'S'                        TS010459
"                    MOVE 'ZOP020101'     TO W-DECOD                    TS010460
"                    COPY ZMZINDIR.                                     TS010461
"                    MOVE MOD(M-I(IND1):M-L(IND1))  TO WRK-CSC-TTINTES  TS010462
"                 END-IF                                                TS010463
"                 IF WPRKSC-TTSPEIE(IND21) = 'N'                        TS010464
"                    MOVE SPACES           TO WRK-CSC-TTINTES           TS010465
"                 END-IF                                                TS010466
"                 IF WPRKSC-TTSPEIE(IND21) = SPACES                     TS010467
"                    MOVE SPACES           TO WRK-CSC-TTINTES           TS010468
"                 END-IF                                                TS010469
"             WHEN 'A'                                                  TS010470
"                 MOVE SPACES           TO WRK-CSC-TTINTES              TS010471
"          END-EVALUATE.                                                TS010472
"                                                                       TS010473
"      1055-TTSPEIE-END.                                                TS010474
000092     EXIT.                                                        TS010475
                                                                        TS010476
000092*-------------------------------                                  TS010477
"      1056-CMPCNT1.                                                    TS010478
"     *-------------------------------                                  TS010479
"          EVALUATE TOBSG-CMPCNT1                                       TS010480
"     *-------------------------------------  SOTTOCONTO 1              TS010481
"             WHEN 'O'                                                  TS010482
"                 IF WPRKSC-TTSTCA (IND21) (1:1) = 'D'                  TS010483
"                    MOVE WPRKSC-TTSTCA(IND21)  TO W-XN                 TS010484
"                    MOVE 'ZSC050501'           TO W-DECOD              TS010485
"                    MOVE W-XN-N                TO C                    TS010486
"                    COPY ZMZINDIR.                                     TS010487
"                    COPY ZMZVALNM.                                     TS010488
"                    COMPUTE WRK-STCA = W-COM-NUM / (10 ** M-D(IND1))   TS010489
"                 END-IF                                                TS010490
"                 IF WPRKSC-TTSTCA (IND21) (1:1) = 'A'                  TS010491
"                    MOVE WPRKSC-TTSTCA(IND21)  TO W-XN                 TS010492
"                    MOVE 'ZSC050801'           TO W-DECOD              TS010493
"                    MOVE W-XN-N                TO C                    TS010494
"                    COPY ZMZINDIR.                                     TS010495
"                    COPY ZMZVALNM.                                     TS010496
"                    COMPUTE WRK-STCA = W-COM-NUM / (10 ** M-D(IND1))   TS010497
"                 END-IF                                                TS010498
"     *--------------------------  PER I PROCESSI MULTIPLI IL CAMPO     TS010499
"     *--------------------------------  NON E' VALORIZZATO SE NON E'   TS010499
"     *---------------------------------- STATO DIGITATO IN MAPPA.      TS010499
"                 IF WPRKSC-TTSTCA(IND21)  = SPACES                     TS010499
"                   AND APROC-PCSMUL NOT = 'M'                          TS010499
"     *------------------------------------  ERRORE                     TS010499
"                      MOVE 'E'                        TO M-S(W-STC)    TS010500
"                      MOVE 2                          TO W-FLAG-ERR    TS010501
"                      MOVE 'S136'                     TO W-COD-ERR     TS010502
"                      PERFORM 9999-GESTIONE-ERRORE                     TS010503
"                         THRU 9999-GESTIONE-ERRORE-END                 TS010504
"                 END-IF                                                TS010505
"             WHEN 'F'                                                  TS010506
"                 IF WPRKSC-TTSTCA(IND21)(1:1) = 'D'                    TS010507
"                    MOVE WPRKSC-TTSTCA(IND21)  TO W-XN                 TS010508
"                    MOVE 'ZSC050501'           TO W-DECOD              TS010509
"                    MOVE W-XN-N                TO C                    TS010510
"                    COPY ZMZINDIR.                                     TS010511
"                    COPY ZMZVALNM.                                     TS010512
"                    COMPUTE WRK-STCA = W-COM-NUM / (10 ** M-D(IND1))   TS010513
"                 END-IF                                                TS010514
"                 IF WPRKSC-TTSTCA(IND21)(1:1) = 'A'                    TS010515
"                    MOVE WPRKSC-TTSTCA(IND21)  TO W-XN                 TS010516
"                    MOVE 'ZSC050801'           TO W-DECOD              TS010517
"                    MOVE W-XN-N                TO C                    TS010518
"                    COPY ZMZINDIR.                                     TS010519
"                    COPY ZMZVALNM.                                     TS010520
"                    COMPUTE WRK-STCA = W-COM-NUM / (10 ** M-D(IND1))   TS010521
"                 END-IF                                                TS010522
"                 IF WPRKSC-TTSTCA(IND21)  = SPACES                     TS010523
"                    MOVE ZEROES                    TO WRK-STCA         TS010524
"                 END-IF                                                TS010525
"             WHEN 'A'                                                  TS010526
"                 MOVE ZEROES                    TO WRK-STCA            TS010527
"          END-EVALUATE.                                                TS010528
"                                                                       TS010529
"      1056-CMPCNT1-END.                                                TS010530
000092     EXIT.                                                        TS010531
                                                                        TS010532
000092*-------------------------------                                  TS010533
"      1057-CMPCNT2.                                                    TS010534
"     *-------------------------------------  SOTTOCONTO 2              TS010535
"          IF TOBSG-CMPCNT2 = ( 'O' OR 'F' )                            TS010536
"     *-------------------------------                                  TS010537
"             IF WPRKSC-TTSTCB (IND21) (1:1) = 'D'                      TS010539
"                MOVE WPRKSC-TTSTCB (IND21)  TO W-XN                    TS010540
"                MOVE 'ZSC050501'            TO W-DECOD                 TS010541
"                MOVE W-XN-N                 TO C                       TS010542
"                COPY ZMZINDIR.                                         TS010543
"                COPY ZMZVALNM.                                         TS010544
"                COMPUTE WRK-STCB = W-COM-NUM / ( 10 ** M-D(IND1))      TS010545
"             END-IF                                                    TS010546
"             IF WPRKSC-TTSTCB (IND21) (1:1) = 'A'                      TS010547
"                MOVE WPRKSC-TTSTCB (IND21)  TO W-XN                    TS010548
"                MOVE 'ZSC050801'            TO W-DECOD                 TS010549
"                MOVE W-XN-N                 TO C                       TS010550
"                COPY ZMZINDIR.                                         TS010551
"                COPY ZMZVALNM.                                         TS010552
"                COMPUTE WRK-STCB = W-COM-NUM / ( 10 ** M-D(IND1))      TS010553
"             END-IF                                                    TS010554
"             IF WPRKSC-TTSTCB (IND21) (1:1) = 'R'                      TS010547
"                MOVE WPRKSC-TTSTCB (IND21)  TO W-XN                    TS010548
"                MOVE 'ZRA093801'            TO W-DECOD                 TS010549
"                MOVE W-XN-N                 TO C                       TS010550
"                COPY ZMZINDIR.                                         TS010551
"                COPY ZMZVALNM.                                         TS010552
"                COMPUTE WRK-STCB = W-COM-NUM / ( 10 ** M-D(IND1))      TS010553
"             END-IF                                                    TS010554
"             IF WPRKSC-TTSTCB (IND21)  = SPACES                        TS010555
"     *--------------------------------- NEL CASO IN CUI IL PROCESSO    TS010499
"     *--------------------------------- SIA MULTIPLO, IL CAMPO DEL     TS010499
"     *--------------------------------- MODELLO PUO' ESSERE NON        TS010499
"     *--------------------------------- PRESENTE SE RIFERITO AD UNA    TS010499
"     *--------------------------------- DELLE RICORRENZE NON DGTATE.   TS010499
"                IF TOBSG-CMPCNT2 = 'O'                                 TS010555
"                  AND APROC-PCSMUL NOT = 'M'                           TS010555
"                      MOVE 'E'                        TO M-S(W-STC)    TS010556
"                      MOVE 2                          TO W-FLAG-ERR    TS010557
"                      MOVE 'S138'                     TO W-COD-ERR     TS010558
"                      PERFORM 9999-GESTIONE-ERRORE                     TS010559
"                        THRU 9999-GESTIONE-ERRORE-END                  TS010560
"                END-IF                                                 TS010561
"                IF TOBSG-CMPCNT2 = 'F'                                 TS010555
"                    MOVE ZEROES                    TO WRK-STCB         TS010580
"                END-IF                                                 TS010581
"             END-IF                                                    TS010581
000142        MOVE 'ZRA093901'            TO W-DECOD                    TS010549
000164*       MOVE W-XN-N                 TO C                          TS010550
000142        COPY ZMZINDIR.                                            TS010551
000142        COPY ZMZVALNM.                                            TS010552
000142        COMPUTE WRK-CODABI = W-COM-NUM / ( 10 ** M-D(IND1))       TS010553
000377        COMPUTE WRK-CAU-2000-CODABI  =
000377                                W-COM-NUM / ( 10 ** M-D(IND1))
000092     END-IF                                                       TS010581
"     *----------------------------------------- SE ASSENTE ----        TS010585
"          IF TOBSG-CMPCNT2 = 'A'                                       TS010582
"                 MOVE ZEROES                    TO WRK-STCB            TS010583
"          END-IF.                                                      TS010584
"                                                                       TS010586
"      1057-CMPCNT2-END.                                                TS010587
000092     EXIT.                                                        TS010588
                                                                        TS010589
000092*----------------------------------                               TS010590
"      1058-TTCNT2.                                                     TS010591
"     *----------------------------------                               TS010592
"                                                                       TS010593
"          MOVE W-CIST       TO ABSC-CIST                               TS010594
"          MOVE WRK-STCB     TO ABSC-CSTC.                              TS010595
"     *----------------------------------                               TS010596
"          PERFORM 0630-LEGGI-TABSC                                     TS010597
"             THRU 0630-LEGGI-TABSC-END                                 TS010598
000142*    IF W-SQL-NON-TROVATO                                         TS010599
"     *       MOVE 0                        TO W-MAP-ERR                TS010600
"     *       MOVE SPACES                   TO W-MOD-ERR                TS010601
"     *       MOVE 2                        TO W-FLAG-ERR               TS010602
"     *       MOVE 'S137'                   TO W-COD-ERR                TS010603
"     *       MOVE ABSC-CSTC                TO WCM-ABSC-CSTC            TS010604
"     *       MOVE SPACES                   TO WCM-ABSC-DESCR           TS010605
"     *       MOVE ' ASSENTE IN ZM.TBTABSC' TO WCM-ABSC-DESCR           TS010606
"     *       MOVE WCM-ERR-ABSC             TO W-DES-ERR                TS010607
"     *       PERFORM 9999-GESTIONE-ERRORE                              TS010608
"     *          THRU 9999-GESTIONE-ERRORE-END                          TS010609
"     *       GO TO 1058-TTCNT2-END                                     TS010610
000142*    END-IF                                                       TS010611
000092*----------------------------------                               TS010612
"          IF ABSC-FRSTNDG = 1                                          TS010613
"             IF ABSC-FRSDSTC = 1                                       TS010614
"                MOVE 'CLRES'     TO WRK-KSC-TTCNT2                     TS010615
"             ELSE                                                      TS010616
"                IF ABSC-FRSDSTC = 2                                    TS010617
"                   MOVE 'CLNRE'     TO WRK-KSC-TTCNT2                  TS010618
"                END-IF                                                 TS010619
"             END-IF                                                    TS010620
"          END-IF                                                       TS010621
"     *----------------------------------                               TS010622
"          IF ABSC-FRSTNDG = 2                                          TS010623
"             IF ABSC-FRSDSTC = 1                                       TS010624
"                MOVE 'BCRES'     TO WRK-KSC-TTCNT2                     TS010625
"             ELSE                                                      TS010626
"                IF ABSC-FRSDSTC = 2                                    TS010627
"                   MOVE 'BCNRE'     TO WRK-KSC-TTCNT2                  TS010628
"                END-IF                                                 TS010629
"             END-IF                                                    TS010630
"          END-IF                                                       TS010631
"     *----------------------------------                               TS010632
"          IF ABSC-FRSTNDG = 0 OR 3                                     TS010633
"             MOVE 'CLRES'     TO WRK-KSC-TTCNT2                        TS010634
"          END-IF.                                                      TS010635
"     *----------------------------------                               TS010636
"      1058-TTCNT2-END.                                                 TS010637
000092     EXIT.                                                        TS010638
                                                                        TS010639
000092*----------------------------------                               TS010640
"      1059-CMPPAE.                                                     TS010641
"     *----------------------------------                               TS010642
"          IF TOBSG-CMPPAE = ( 'O' OR 'F')                              TS010645
"     *----------------------------------                               TS010646
"             IF WPRKSC-TTPACRE(IND21) = SPACES                         TS010687
"                IF TOBSG-CMPPAE = 'O'                                  TS010645
"                   MOVE 'SI'                TO W-FLAG-EXIT             TS010688
"                   MOVE 'E'                 TO M-S(IND1)               TS010689
"                   MOVE M-M(IND1)           TO W-MAP-ERR               TS010690
"                   MOVE W-DEC-COORD         TO W-MOD-ERR               TS010691
"                   MOVE 2                   TO W-FLAG-ERR              TS010692
"                   MOVE 'S139'              TO W-COD-ERR               TS010693
"                   PERFORM 9999-GESTIONE-ERRORE                        TS010694
"                      THRU 9999-GESTIONE-ERRORE-END                    TS010695
"                   GO TO 1059-CMPPAE-END                               TS010696
"                 ELSE                                                  TS010697
"                   MOVE SPACE   TO WRK-PAE                             TS010705
"                 END-IF                                                TS010697
"             END-IF                                                    TS010697
"     *---                                                              TS010661
000434        IF WPRKSC-TTPACRE (IND21) NOT = SPACES
"                IF WPRKSC-TTPACRE (IND21) = 'ORD'                      TS010647
"                   MOVE 'ZOR032401'   TO W-DECOD                       TS010648
"                END-IF                                                 TS010649
"                IF WPRKSC-TTPACRE (IND21) = 'DEB'                      TS010650
"                   MOVE 'ZRA090201'   TO W-DECOD                       TS010651
"                END-IF                                                 TS010652
"                IF WPRKSC-TTPACRE (IND21) = 'CRE'                      TS010653
"                   MOVE 'ZRA090301'   TO W-DECOD                       TS010654
"                END-IF                                                 TS010655
"                IF WPRKSC-TTPACRE (IND21) = 'DES'                      TS010653
"                   MOVE 'ZRA091301'   TO W-DECOD                       TS010654
"                END-IF                                                 TS010655
"                IF WPRKSC-TTPACRE (IND21) (1:1) = 'F'                  TS010656
"                   MOVE  WPRKSC-TTPACRE(IND21)  TO W-XNN               TS010657
"                   MOVE 'ZND060701'      TO W-DECOD                    TS010658
"                   MOVE  W-XNN-N         TO N-M-2                      TS010659
"                END-IF                                                 TS010660
"     *---                                                              TS010661
"                COPY ZMZINDIR.                                         TS010662
"                MOVE MOD(M-I(IND1):M-L(IND1)) TO WRK-CSIGPAE           TS010663
"                IF MOD(M-I(IND1):M-L(IND1)) = 'IT'                     TS010663
"                   MOVE 'S'     TO WRK-PAE                             TS010664
"                ELSE                                                   TS010665
"                   MOVE 'N'     TO WRK-PAE                             TS010666
"                END-IF                                                 TS010667
000434        END-IF
"          END-IF.                                                      TS010706
"     *---                                                              TS010668
"          IF TOBSG-CMPPAE = 'A'                                        TS010704
"             MOVE SPACE   TO WRK-PAE                                   TS010705
"          END-IF.                                                      TS010706
"                                                                       TS010707
"                                                                       TS010707
"      1059-CMPPAE-END.                                                 TS010708
000092     EXIT.                                                        TS010709
"                                                                       TS010710
000092*--------------                                                   TS010711
"      1060-TTRESPAE.                                                   TS010712
"     *-------------- .                                                 TS010713
"          IF WRK-PAE NOT = SPACES                                      TS010714
"             IF WRK-PAE = 'N'                                          TS010715
"                MOVE 'NRES'    TO  WRK-CSC-TTRESPAE                    TS010716
"             END-IF                                                    TS010717
"             IF WRK-PAE = 'S'                                          TS010718
"                MOVE 'RES'     TO  WRK-CSC-TTRESPAE                    TS010719
"             END-IF                                                    TS010720
"          ELSE                                                         TS010721
"             MOVE SPACE        TO  WRK-CSC-TTRESPAE                    TS010722
"          END-IF.                                                      TS010723
"                                                                       TS010724
"      1060-TTRESPAE-END.                                               TS010725
000092     EXIT.                                                        TS010726
                                                                        TS010727
000092*--------------                                                   TS010728
"      1061-CMPDIV1.                                                    TS010729
"     *-----------------------------                                    TS010730
"     * DAL CMPDIV1 VALORIZZO TTVALA                                    TS010731
"     *-----------------------------                                    TS010732
"          IF TOBSG-CMPDIV1 = 'O' OR 'F'                                TS010733
"     *----------------------------------  SE OBBLIGATORIO              TS010734
"     *----------------------------------  O  FACOLTATIVO               TS010735
"              IF WPRKSC-TTDIVA(IND21) = 'ORD'                          TS010736
"     *------------------------------------------- ZOR036401            TS010737
"     *------------------------------------------- DIVISA IN/OUT        TS010738
"                 MOVE 'ZOR036401'        TO W-DECOD                    TS010739
"                 COPY ZMZINDIR.                                        TS010740
"                 COPY ZMZVALNM.                                        TS010741
"     *--------------------------  PER I PROCESSI MULTIPLI IL CAMPO     TS010499
"     *--------------------------------  NON E' VALORIZZATO SE NON E'   TS010499
"     *---------------------------------- STATO DIGITATO IN MAPPA.      TS010499
"                 IF W-COM-NUM   = 0                                    TS010742
"                   AND APROC-PCSMUL NOT = 'M'                          TS010742
"                    MOVE 'E'                        TO M-S(IND1)       TS010743
"                    MOVE W-COORD-DIV                TO W-MOD-ERR       TS010744
"                    MOVE M-M(IND1)                  TO W-MAP-ERR       TS010745
"                    MOVE 2                          TO W-FLAG-ERR      TS010746
"                    MOVE 'S120'                     TO W-COD-ERR       TS010747
"                    PERFORM 9999-GESTIONE-ERRORE                       TS010748
"                       THRU 9999-GESTIONE-ERRORE-END                   TS010749
"                 ELSE                                                  TS010750
"                    COMPUTE WRK-TIPOA =                                TS010751
"                            W-COM-NUM / ( 10 ** M-D(IND1))             TS010752
"     *------------------------------------------- ZOR030201            TS010753
"     *------------------------------------------- DIVISA ORDINE        TS010754
"                    MOVE 'ZOR030201'        TO W-DECOD                 TS010755
"                    COPY ZMZINDIR.                                     TS010756
"                    MOVE MOD(M-I(IND1):M-L(IND1)) TO WRK-DIVA          TS010757
"                 END-IF                                                TS010758
"              END-IF                                                   TS010759
"     *--------                                                         TS010760
"              IF WPRKSC-TTDIVA(IND21)(1:2) = 'DV'                      TS010761
"     *------------------------------------------- ZDI043301/8          TS010762
"     *------------------------------------------- DIVISA IN/OUT        TS010763
"                 MOVE WPRKSC-TTDIVA(IND21)  TO W-XXN                   TS010764
"                 MOVE 'ZDI043301'           TO W-DECOD                 TS010765
"                 MOVE W-XXN-N               TO C                       TS010766
000142                                          WRK-DIVISA-A            TS010766
000092            COPY ZMZINDIR.                                        TS010767
"                 COPY ZMZVALNM.                                        TS010768
"     *--------------------------  PER I PROCESSI MULTIPLI IL CAMPO     TS010499
"     *--------------------------------  NON E' VALORIZZATO SE NON E'   TS010499
"     *---------------------------------- STATO DIGITATO IN MAPPA.      TS010499
"                 IF W-COM-NUM   = 0                                    TS010769
"                  AND APROC-PCSMUL NOT = 'M'                           TS010769
"                    MOVE 'E'                        TO M-S(IND1)       TS010770
"                    MOVE W-DEC-COORD                TO W-MOD-ERR       TS010771
"                    MOVE M-M(IND1)                  TO W-MAP-ERR       TS010772
"                    MOVE 2                          TO W-FLAG-ERR      TS010773
"                    MOVE 'S121'                     TO W-COD-ERR       TS010774
"                    PERFORM 9999-GESTIONE-ERRORE                       TS010775
"                       THRU 9999-GESTIONE-ERRORE-END                   TS010776
"                 ELSE                                                  TS010777
"                    COMPUTE WRK-TIPOA =                                TS010778
"                              W-COM-NUM / ( 10 ** M-D(IND1))           TS010779
"     *------------------------------------------- ZOR030201            TS010780
"     *------------------------------------------- DIVISA FIGURA        TS010781
"                    MOVE 'ZDI040101'        TO W-DECOD                 TS010782
"                    MOVE W-XXN-N            TO C                       TS010783
"                    COPY ZMZINDIR.                                     TS010784
"                    MOVE MOD(M-I(IND1):M-L(IND1)) TO WRK-DIVA          TS010785
"                 END-IF                                                TS010786
"              END-IF                                                   TS010787
"     *-----                                                            TS010788
"              IF WPRKSC-TTDIVA(IND21) = SPACES                         TS010789
"     *--------------------------  PER I PROCESSI MULTIPLI IL CAMPO     TS010499
"     *--------------------------------  NON E' VALORIZZATO SE NON E'   TS010499
"     *---------------------------------- STATO DIGITATO IN MAPPA.      TS010499
"                 IF TOBSG-CMPDIV1 = 'O'                                TS010790
"                   AND APROC-PCSMUL NOT = 'M'                          TS010790
"                    MOVE 'E'                        TO M-S(IND1)       TS010791
"                    MOVE W-COORD-DIV                TO W-MOD-ERR       TS010792
"                    MOVE M-M(IND1)                  TO W-MAP-ERR       TS010793
"                    MOVE 2                          TO W-FLAG-ERR      TS010794
"                    MOVE 'S122'                     TO W-COD-ERR       TS010795
"                    PERFORM 9999-GESTIONE-ERRORE                       TS010796
"                       THRU 9999-GESTIONE-ERRORE-END                   TS010797
"                 ELSE                                                  TS010798
"                    MOVE SPACES     TO WRK-CSC-TTLITVALA               TS010799
"                    MOVE ZEROES     TO WRK-TIPOA                       TS010800
"                 END-IF                                                TS010801
"              END-IF                                                   TS010802
"          END-IF.                                                      TS010803
"     *--------------------------------------------------               TS010804
"                                                                       TS010805
"          IF TOBSG-CMPDIV1 = 'A'                                       TS010806
"     *----------------------------------  SE ASSENTE                   TS010807
"              MOVE SPACES         TO WRK-CSC-TTLITVALA                 TS010808
"              MOVE ZEROES         TO WRK-TIPOA                         TS010809
"     *-----                                                            TS010810
"          END-IF.                                                      TS010811
"     *-------------------------------------                            TS010812
"          IF WRK-TIPOA GREATER ZEROES                                  TS010813
"             IF WRK-TIPOA < 4                                          TS010814
"                MOVE 'ITL'            TO WRK-CSC-TTLITVALA             TS010815
"             END-IF                                                    TS010816
"             IF WRK-TIPOA > 3                                          TS010817
"                MOVE 'VAL'            TO WRK-CSC-TTLITVALA             TS010818
"             END-IF                                                    TS010819
"          ELSE                                                         TS011040
"             MOVE SPACE               TO WRK-DIVA                      TS011040
"          END-IF.                                                      TS010820
"     *--------------                                                   TS010821
"      1061-CMPDIV1-END.                                                TS010822
000092     EXIT.                                                        TS010823
                                                                        TS010824
000092*--------------                                                   TS010825
"      1062-TTCNT1.                                                     TS010826
"     *--------------------------------------------------               TS010827
"     * DAL TIPO SOTTOCONTO E TIPO SEGNALAZIONE VALORIZZO               TS010828
"     * IL CAMPO TTCNT1 (TIPO CONTO ORDINE).                            TS010829
"     *--------------------------------------------------               TS010830
"          MOVE W-CIST           TO ABSC-CIST.                          TS010831
"          MOVE WRK-STCA         TO ABSC-CSTC.                          TS010832
"          PERFORM 0630-LEGGI-TABSC                                     TS010833
"             THRU 0630-LEGGI-TABSC-END                                 TS010834
000142*    IF W-SQL-NON-TROVATO                                         TS010835
"     *       MOVE 0                        TO W-MAP-ERR                TS010836
"     *       MOVE SPACES                   TO W-MOD-ERR                TS010837
"     *       MOVE 2                        TO W-FLAG-ERR               TS010838
"     *       MOVE 'S123'                   TO W-COD-ERR                TS010839
"     *       MOVE ABSC-CSTC                TO WCM-ABSC-CSTC            TS010840
"     *       MOVE SPACES                   TO WCM-ABSC-DESCR           TS010841
"     *       MOVE ' ASSENTE IN ZM.TBTABSC' TO WCM-ABSC-DESCR           TS010842
"     *       MOVE WCM-ERR-ABSC             TO W-DES-ERR                TS010843
"     *       PERFORM 9999-GESTIONE-ERRORE                              TS010844
"     *          THRU 9999-GESTIONE-ERRORE-END                          TS010845
"     *       GO TO 1062-TTCNT1-END                                     TS010846
000142*    END-IF                                                       TS010847
000092*------------------------------------------- BANCONOTE            TS010848
"          IF WPRKSC-TTSGNL(IND21)  = 'BB'                              TS010849
"             PERFORM 1062-BANCONOTE                                    TS010850
"                THRU 1062-BANCONOTE-END                                TS010851
"          ELSE                                                         TS010852
"     *------------------------------------------- MEZZI PAGAMENTO      TS010853
"             IF WPRKSC-TTSGNL(IND21)  = 'MP'                           TS010854
"                PERFORM 1062-MEZZIPAGAMENTO                            TS010855
"                   THRU 1062-MEZZIPAGAMENTO-END                        TS010856
"             ELSE                                                      TS010857
"     *------------------------------------------- ALTRI                TS010858
"                PERFORM 1062-ALTRE-SGN                                 TS010859
"                   THRU 1062-ALTRE-SGN-END                             TS010860
"             END-IF                                                    TS010861
"          END-IF.                                                      TS010862
"                                                                       TS010863
"      1062-TTCNT1-END.                                                 TS010864
000092     EXIT.                                                        TS010865
                                                                        TS010866
000062*---------------                                                  TS010867
"      1062-BANCONOTE.                                                  TS010868
"     *-------------------------------------------------                TS010869
"     *  VALORIZZO IL TIPO CONTO SE SEGNALATE BANCONOTE.                TS010870
"     *-------------------------------------------------                TS010871
"                                                                       TS010872
"          IF WRK-DIVA GREATER SPACES                                   TS010873
"             AND WRK-STCA NOT = ZEROES                                 TS010874
"     *-------------------------------------------DIVISA OUT            TS010875
"             IF ABSC-CTIPSTC = ( 341 OR 345 )                          TS010876
"              AND WRK-TIPOA > 3                                        TS010877
"                  MOVE 'BE'      TO WRK-CSC-TTCNT1                     TS010878
"             END-IF                                                    TS010879
"     *-------------------------------------------DIVISA IN             TS010880
000142*       IF ABSC-CTIPSTC = ( 341 OR 345 OR 310 )                   TS010881
000142        IF ABSC-CTIPSTC = ( 341 OR 345 OR 325 )                   TS010881
000092         AND WRK-TIPOA < 4                                        TS010882
"                  MOVE 'BI'      TO WRK-CSC-TTCNT1                     TS010883
"             END-IF                                                    TS010884
"          ELSE                                                         TS010885
"             MOVE 'E'                        TO M-S(IND1)              TS010886
"             MOVE W-DEC-COORD                TO W-MOD-ERR              TS010887
"             MOVE M-M(IND1)                  TO W-MAP-ERR              TS010888
"             MOVE 2                          TO W-FLAG-ERR             TS010889
"             MOVE 'S124'                     TO W-COD-ERR              TS010890
"             PERFORM 9999-GESTIONE-ERRORE                              TS010891
"                THRU 9999-GESTIONE-ERRORE-END                          TS010892
"          END-IF.                                                      TS010893
"                                                                       TS010894
"      1062-BANCONOTE-END.                                              TS010895
000092     EXIT.                                                        TS010896
                                                                        TS010897
000092*--------------------                                             TS010898
"      1062-MEZZIPAGAMENTO.                                             TS010899
"     *----------------------------------------------------------       TS010900
"     *  VALORIZZO IL TIPO CONTO SE SEGNALATI MEZZI DI PAGAMENTO.       TS010901
"     *----------------------------------------------------------       TS010902
"          IF APROC-PCSMUL = 'M'                                        TS010903
"             MOVE SPACES     TO WRK-CSC-TTLITVALA                      TS010886
"             IF WRK-DIVA = SPACES                                      TS010903
"                MOVE 'E'                        TO M-S(IND1)           TS010886
"                MOVE W-DEC-COORD                TO W-MOD-ERR           TS010887
000142*          MOVE M-M(IND1)                  TO W-MAP-ERR           TS010888
000142           MOVE 0                          TO W-MAP-ERR           TS010888
"                MOVE 2                          TO W-FLAG-ERR          TS010889
"                MOVE 'S146'                     TO W-COD-ERR           TS010890
"                PERFORM 9999-GESTIONE-ERRORE                           TS010891
"                   THRU 9999-GESTIONE-ERRORE-END                       TS010892
"                GO TO 1062-MEZZIPAGAMENTO-END                          TS010891
"             END-IF                                                    TS010912
"          END-IF.                                                      TS010912
"                                                                       TS010893
000142*    IF ABSC-CTIPSTC = ( 342 OR 344 )                             TS010903
000142     IF ABSC-CTIPSTC = ( 342 OR 344 OR 500)                       TS010903
"     *---------------------------------------- ASSEGNI                 TS010904
"             IF ABSC-FRSDSTC = 1                                       TS010905
"     *------------------------------------------- RESIDENTI            TS010906
"                MOVE 'AR'      TO WRK-CSC-TTCNT1                       TS010907
"             END-IF                                                    TS010908
"     *------------------------------------------- NON RESIDENTI        TS010909
"             IF ABSC-FRSDSTC = 2                                       TS010910
"                MOVE 'AN'      TO WRK-CSC-TTCNT1                       TS010911
"             END-IF                                                    TS010912
"          END-IF.                                                      TS010913
"                                                                       TS010915
"      1062-MEZZIPAGAMENTO-END.                                         TS010916
000092     EXIT.                                                        TS010917
"                                                                       TS010918
000092*--------------                                                   TS010919
"      1062-ALTRE-SGN.                                                  TS010920
"     *----------------------------------------------------------       TS010921
000377*  IL CAMPO CONTO ORDI/BEN  PER I NUOVI REGOLAMENTI E GIRI
000377*  VIENE DETERMINATO  CONSIDERANDO LA FIGURA ORD/BEN.
000377*  QUI SI PRENDONO I CAPI NECESSARI NELLA FASE SUCCESSIVA.
"     *----------------------------------------------------------       TS010923
"     *  VALORIZZO IL TIPO CONTO SE ALTRI TIPI DI SEGNALAZIONI.         TS010922
"     *----------------------------------------------------------       TS010923
"          IF ABSC-FRSTNDG = 1                                          TS010924
"     *------------------------------------------- CLIENTI              TS010925
"             IF ABSC-FRSDSTC = 1                                       TS010926
"                MOVE 'CLRES'    TO WRK-CSC-TTCNT1                      TS010927
"             END-IF                                                    TS010928
"             IF ABSC-FRSDSTC = 2                                       TS010929
"                MOVE 'CLNRE'    TO WRK-CSC-TTCNT1                      TS010930
"             END-IF                                                    TS010931
"          END-IF.                                                      TS010932
"                                                                       TS010933
"          IF ABSC-FRSTNDG = 2                                          TS010934
"     *------------------------------------------- BANCHE               TS010935
"             IF ABSC-FRSDSTC = 1                                       TS010936
"                MOVE 'BCRES'    TO WRK-CSC-TTCNT1                      TS010937
"             END-IF                                                    TS010938
"             IF ABSC-FRSDSTC = 2                                       TS010939
"                MOVE 'BCNRE'    TO WRK-CSC-TTCNT1                      TS010940
"             END-IF                                                    TS010941
"          END-IF.                                                      TS010942
"                                                                       TS010943
"          IF ABSC-FRSTNDG = 0 OR 3                                     TS010944
"             MOVE 'CLRES'    TO WRK-CSC-TTCNT1                         TS010945
"          END-IF.                                                      TS010946
000377     MOVE ABSC-CTIPSTC       TO WRK-CAU-2000-CTIPSTC
000377     MOVE ABSC-FRSDSTC       TO WRK-CAU-2000-FRSDSTC
000377     MOVE ABSC-FRSTNDG       TO WRK-CAU-2000-FRSTNDG
000377     MOVE ABSC-FTPGEST       TO WRK-CAU-2000-FTPGEST.
000092                                                                  TS010947
"      1062-ALTRE-SGN-END.                                              TS010948
000092     EXIT.                                                        TS010949
                                                                        TS010950
000092*--------------                                                   TS010951
"      1063-CMPDIV2.                                                    TS010952
"     *--------------------------------------------------------         TS010953
"     *  VALORIZZO LA TIPOLOGIA DIVISA B (TTLITVALB) IN BASE AL         TS010954
"     *  VALORE DEL CAMPO CHIAVE CMPDIV2.                               TS010955
"     *--------------------------------------------------------         TS010956
"          IF TOBSG-CMPDIV2 = ( 'O' OR 'F')                             TS010957
"     *------------------------------------------ SE OBBLIGATORIO       TS010958
"     *------------------------------------------ O  FACOLTATIVO        TS010959
"     *------------------------------------------- SE ORDINANTE         TS010960
"              IF WPRKSC-TTDIVB(IND21) = 'ORD'                          TS010961
"                 MOVE 'ZOR036401'          TO W-DECOD                  TS010962
"     *---------------------------------------------- TIPO DIVISA       TS010963
"                 COPY ZMZINDIR.                                        TS010964
"                 COPY ZMZVALNM.                                        TS010965
"                 IF W-COM-NUM  = ZEROES                                TS010966
000142               IF APROC-PCSMUL NOT = 'M'                          TS010903
000092                  MOVE 'E'                          TO M-S(IND1)  TS010967
"                       MOVE W-COORD-DIV                  TO W-MOD-ERR  TS010968
"                       MOVE M-M(IND1)                    TO W-MAP-ERR  TS010969
"                       MOVE 2                            TO W-FLAG-ERR TS010970
"                       MOVE 'S125'                       TO W-COD-ERR  TS010971
"                       PERFORM 9999-GESTIONE-ERRORE                    TS010972
"                          THRU 9999-GESTIONE-ERRORE-END                TS010973
000142               END-IF                                             TS010974
000092            ELSE                                                  TS010974
"                    MOVE W-COM-NUM                 TO WRK-TIPOB        TS010975
"                    MOVE 'ZOR030201'               TO W-DECOD          TS010976
"     *--------------------------------------------- DIVISA ORDINE      TS010977
"                    COPY ZMZINDIR.                                     TS010978
"                    MOVE MOD(M-I(IND1):M-L(IND1))  TO WRK-DIVB         TS010979
"                 END-IF                                                TS010980
"              END-IF                                                   TS010981
"                                                                       TS010982
"     *---------------------------------------------- SE FIGURA         TS010983
"              IF WPRKSC-TTDIVB(IND21)(1:2) = 'DV'                      TS010984
"                 MOVE WPRKSC-TTDIVB(IND21)   TO W-XXN                  TS010985
"                 MOVE 'ZDI043301'            TO W-DECOD                TS010986
"                 MOVE W-XXN-N                TO C                      TS010987
"     *----------------------------------------------- TIPO DIVISA      TS010988
"                 COPY ZMZINDIR.                                        TS010989
"                 COPY ZMZVALNM.                                        TS010990
"                 IF W-COM-NUM  = ZEROES                                TS010991
000142               IF APROC-PCSMUL NOT = 'M'                          TS010903
000092                  MOVE 'E'                   TO M-S(IND1)         TS010992
"                       MOVE W-COORD-DIV           TO W-MOD-ERR         TS010993
"                       MOVE M-M(IND1)             TO W-MAP-ERR         TS010994
"                       MOVE 2                     TO W-FLAG-ERR        TS010995
"                       MOVE 'S126'                TO W-COD-ERR         TS010996
"                       PERFORM 9999-GESTIONE-ERRORE                    TS010997
"                          THRU 9999-GESTIONE-ERRORE-END                TS010998
000142               END-IF                                             TS010999
000092            ELSE                                                  TS010999
"                    MOVE W-COM-NUM                 TO WRK-TIPOB        TS011000
"                    MOVE 'ZDI040101'               TO W-DECOD          TS011001
"                    MOVE W-XXN-N                   TO C                TS011002
"     *--------------------------------------------- DIVISA FIGURA      TS011003
"                    COPY ZMZINDIR.                                     TS011004
"                    MOVE MOD(M-I(IND1):M-L(IND1))  TO WRK-DIVB         TS011005
"                 END-IF                                                TS011006
"              END-IF                                                   TS011007
"     *-------------------------------------SE NON VALORIZZATO          TS011008
"              IF WPRKSC-TTDIVB(IND21)  = SPACE                         TS011009
"     *--------------------------------SE OBBLIGATORIO : ERRORE         TS011010
"                 IF TOBSG-CMPDIV2 = 'O'                                TS011011
000142               IF APROC-PCSMUL NOT = 'M'                          TS010903
000092                  MOVE 'E'                   TO M-S(IND1)         TS011012
"                       MOVE W-COORD-DIV           TO W-MOD-ERR         TS011013
"                       MOVE M-M(IND1)             TO W-MAP-ERR         TS011014
"                       MOVE 2                     TO W-FLAG-ERR        TS011015
"                       MOVE 'S127'                TO W-COD-ERR         TS011016
"                       PERFORM 9999-GESTIONE-ERRORE                    TS011017
"                          THRU 9999-GESTIONE-ERRORE-END                TS011018
000142               END-IF                                             TS011019
000092            ELSE                                                  TS011019
"                    MOVE SPACES      TO WRK-CSC-TTLITVALB              TS011020
"                    MOVE ZEROES      TO WRK-TIPOB                      TS011021
"                 END-IF                                                TS011022
"              END-IF                                                   TS011023
"          END-IF.                                                      TS011024
"                                                                       TS011025
"     *------------------------------------- SE ASSENTE                 TS011026
"          IF TOBSG-CMPDIV2 = 'A'                                       TS011027
"     *------------------------------------------------                 TS011026
"              MOVE SPACES      TO WRK-CSC-TTLITVALB                    TS011028
"              MOVE ZEROES      TO WRK-TIPOB                            TS011029
"     *------------------                                               TS011030
"          END-IF.                                                      TS011031
"     *------------------                                               TS011032
"          IF WRK-TIPOB GREATER ZEROES                                  TS011033
"             IF WRK-TIPOB < 4                                          TS011034
"                MOVE 'ITL'            TO WRK-CSC-TTLITVALB             TS011035
"             END-IF                                                    TS011036
"             IF WRK-TIPOB > 3                                          TS011037
"                MOVE 'VAL'            TO WRK-CSC-TTLITVALB             TS011038
"             END-IF                                                    TS011039
"          ELSE                                                         TS011040
"             MOVE SPACE               TO WRK-DIVB                      TS011040
"          END-IF.                                                      TS011040
"                                                                       TS011041
"      1063-CMPDIV2-END.                                                TS011042
000092     EXIT.                                                        TS011043
                                                                        TS011044
000092*--------------                                                   TS011045
"      1064-TTLITVALB.                                                  TS011046
"     *---------------------------------------------------------        TS011047
"     * VALORIZZO I CAMPI DIVISA IN CASO DI NEGOZIONAZIONE              TS011048
"     *---------------------------------------------------------        TS011049
"          IF WRK-TIPOB < 4                                             TS011050
"             MOVE 'ITL'   TO WRK-CSC-TTLITVALB                         TS011051
"          END-IF.                                                      TS011052
"                                                                       TS011053
"          IF WRK-TIPOB > 3                                             TS011054
"             IF WRK-CSC-TTLITVALA = 'ITL'                              TS011055
"                MOVE 'VAL'   TO WRK-CSC-TTLITVALB                      TS011056
"             ELSE                                                      TS011057
"                IF WRK-DIVA = WRK-DIVB                                 TS011058
"                   MOVE 'VAS'   TO WRK-CSC-TTLITVALB                   TS011059
"                ELSE                                                   TS011060
"                   IF WRK-DIVA NOT = WRK-DIVB                          TS011061
"                      MOVE 'VAD'   TO WRK-CSC-TTLITVALB                TS011062
"                END-IF                                                 TS011063
"             END-IF                                                    TS011064
"          END-IF.                                                      TS011065
"      1064-TTLITVALB-END.                                              TS011066
000092     EXIT.                                                        TS011067
                                                                        TS011068
000092*--------------                                                   TS011069
"      1065-CMPFIG.                                                     TS011070
"     *---------------------------------------------------------        TS011071
"     * VALORIZZO I RIFERIMENTI DELLA FIGURA (TTFIG) IN BASE AI         TS011072
"     * VALORI DEI CAMPI TTNDG1/2/3.                                    TS011073
"     *---------------------------------------------------------        TS011074
"          IF TOBSG-CMPFIG = ( 'O' OR 'F')                              TS011075
"     *------------------------------------------ SE OBBLIGATORIO       TS011076
"     *---------------------------------------------- O FACOLTATIVO     TS011077
"             MOVE 'ZOR031801'            TO W-DECOD                    TS011078
"             COPY ZMZINDIR.                                            TS011079
"             MOVE MOD(M-I(IND1):M-L(IND1)) TO WRK-ORDINANTE            TS011080
000164        MOVE SPACES     TO WRK-CNTR-CAMPO123                      TS011100
000164*---------------------------------------------------------------  TS011081
000164        IF WPRKSC-TTNDG1(IND21)  = SPACES                         TS011082
000164           MOVE 'SI'       TO WRK-CNTR-CAMPO123                   TS011100
000164        END-IF                                                    TS011100
"     *---------------------------------------------- CONTROLLO TNDG1   TS011081
000092        IF WPRKSC-TTNDG1(IND21)  = 'ORD'                          TS011082
000164*        AND WRK-ORDINANTE NOT   = SPACES                         TS011083
000164          IF WRK-ORDINANTE NOT   = SPACES                         TS011083
000092             PERFORM 0616-NDG-ORDINANTE                           TS011084
"                    THRU 0616-NDG-ORDINANTE-END                        TS011085
"                  MOVE WRK-TTFIG      TO WRK-CSC-TTFIG                 TS011086
000164          ELSE                                                    TS011087
000164             MOVE 'SI'           TO WRK-CNTR-CAMPO123             TS011086
000164          END-IF                                                  TS011087
000092        END-IF                                                    TS011087
"             IF WPRKSC-TTNDG1(IND21)(1:1) = 'F'                        TS011088
"                MOVE WPRKSC-TTNDG1(IND21)   TO W-XNN                   TS011089
"                MOVE 'ZND060101'            TO W-DECOD                 TS011090
"                MOVE W-XNN-N                TO C                       TS011091
"                COPY ZMZINDIR.                                         TS011092
"                IF MOD(M-I(IND1):M-L(IND1)) GREATER SPACES             TS011093
"                   PERFORM 0617-NDG-FIGURE                             TS011094
"                      THRU 0617-NDG-FIGURE-END                         TS011095
"     *---------------------------------------------- RIFERIMENTO       TS011096
"     *--------------------------------------------------- FIGURA       TS011097
"                   MOVE WRK-TTFIG       TO WRK-CSC-TTFIG               TS011098
"                ELSE                                                   TS011099
"                   MOVE 'SI'       TO WRK-CNTR-CAMPO123                TS011100
"                END-IF                                                 TS011101
"             END-IF                                                    TS011102
000377*-----------------------------------------------------------------
000377* CON LA NUOVA DISCIPLINA DELLA CAUSALI, LA FIG2 E FIG3 VENGONO
000377* UTILIZZATE SOLO PER I GIRI AL FINE DI INDIVIDUARE LA FIGURA DEL
000377* CASO CHE SI CERCA. PER LE ALTRE SEGNALAZIONI, VALE SOLO  LA
000377* PRIMA FIGURA.
000377*---------------------------------------------- CONTROLLO TNDG2
000377        MOVE SPACES   TO WRK-CAU-2000-NDG1
000377        IF WRK-FLAG-CAU-2000 = 1
000377           IF WPRKSC-TTSGNL(IND21) NOT = 'WG'
000377             GO TO 1065-CONTROLLA-TTFIG
000377           ELSE
000377             MOVE 'NO'     TO WRK-CAU-2000-NDG1
000377             MOVE 'SI'     TO WRK-CNTR-CAMPO123
000377           END-IF
000377        END-IF

"             IF WRK-CNTR-CAMPO123 = 'SI'                               TS011104
000164*          MOVE SPACES     TO WRK-CNTR-CAMPO123                   TS011105
"                IF WPRKSC-TTNDG2(IND21)  = 'ORD'                       TS011106
"                   AND WRK-ORDINANTE NOT = SPACES                      TS011107
"                       PERFORM 0616-NDG-ORDINANTE                      TS011108
"                          THRU 0616-NDG-ORDINANTE-END                  TS011109
"                       MOVE WRK-TTFIG      TO WRK-CSC-TTFIG            TS011110
000164                 MOVE SPACES     TO WRK-CNTR-CAMPO123             TS011105
"                ELSE                                                   TS011111
"                   IF WPRKSC-TTNDG2(IND21)(1:1) = 'F'                  TS011112
"                      MOVE WPRKSC-TTNDG2(IND21) TO W-XNN               TS011113
"                      MOVE 'ZND060101'          TO W-DECOD             TS011114
"                      MOVE W-XNN-N              TO C                   TS011115
"                      COPY ZMZINDIR.                                   TS011116
"                      IF MOD(M-I(IND1):M-L(IND1)) GREATER SPACES       TS011117
"                         PERFORM 0617-NDG-FIGURE                       TS011118
"                            THRU 0617-NDG-FIGURE-END                   TS011119
"                         MOVE WRK-TTFIG   TO WRK-CSC-TTFIG             TS011120
000164                    MOVE SPACES     TO WRK-CNTR-CAMPO123          TS011105
"                      ELSE                                             TS011121
"                         MOVE 'SI'       TO WRK-CNTR-CAMPO123          TS011122
"                      END-IF                                           TS011123
"                   END-IF                                              TS011124
"                END-IF                                                 TS011125
"             END-IF                                                    TS011126
"     *---------------------------------------------  CONTROLLO TNDG3   TS011127
"             IF WRK-CNTR-CAMPO123 = 'SI'                               TS011128
000164*          MOVE SPACES     TO WRK-CNTR-CAMPO123                   TS011129
"                IF WPRKSC-TTNDG3(IND21)  = 'ORD'                       TS011130
"                AND WRK-ORDINANTE NOT = SPACES                         TS011131
"                     PERFORM 0616-NDG-ORDINANTE                        TS011132
"                        THRU 0616-NDG-ORDINANTE-END                    TS011133
"                     MOVE WRK-TTFIG      TO WRK-CSC-TTFIG              TS011134
000164                MOVE SPACES     TO WRK-CNTR-CAMPO123              TS011129
"                ELSE                                                   TS011135
"                     IF WPRKSC-TTNDG3(IND21)(1:1) = 'F'                TS011136
"                         MOVE WPRKSC-TTNDG3(IND21) TO W-XNN            TS011137
"                         MOVE 'ZND060101'          TO W-DECOD          TS011138
"                         MOVE W-XNN-N              TO C                TS011139
"                         COPY ZMZINDIR.                                TS011140
"                         IF MOD(M-I(IND1):M-L(IND1)) GREATER SPACES    TS011141
"                            PERFORM 0617-NDG-FIGURE                    TS011142
"                               THRU 0617-NDG-FIGURE-END                TS011143
"                            MOVE WRK-TTFIG   TO WRK-CSC-TTFIG          TS011144
000164                       MOVE SPACES     TO WRK-CNTR-CAMPO123       TS011129
000164                    END-IF                                        TS011145
000164                END-IF                                            TS011145
000164****                ELSE                                          TS011145
"     *---------------------------------------- SE OBBLIGATORIO         TS011146
"     *-------------------------------------------------  ERRORE        TS011147
000164                IF WRK-CNTR-CAMPO123 = 'SI'                       TS011129
"                        IF TOBSG-CMPFIG = 'O'                          TS011148
"                           MOVE 'E'              TO M-S(IND1)          TS011149
"                           MOVE W-COORD-DIV      TO W-MOD-ERR          TS011150
"                           MOVE M-M(IND1)        TO W-MAP-ERR          TS011151
"                           MOVE 2                TO W-FLAG-ERR         TS011152
"                           MOVE 'S128'           TO W-COD-ERR          TS011153
"                           PERFORM 9999-GESTIONE-ERRORE                TS011154
"                              THRU 9999-GESTIONE-ERRORE-END            TS011155
"                        ELSE                                           TS011156
"                           MOVE 'CLRES'     TO WRK-CSC-TTFIG           TS011157
"                        END-IF                                         TS011158
"                     END-IF                                            TS011159
"                END-IF                                                 TS011161
"             END-IF                                                    TS011162
"          END-IF.                                                      TS011163
"                                                                       TS011164
000377*-------------- CONTROLLO DI OBBLIGATORIETA' PER NEW CAUSALI
000377 1065-CONTROLLA-TTFIG.
000377     IF WRK-CNTR-CAMPO123 = 'SI'
000377        IF TOBSG-CMPFIG = 'O'
000377           MOVE 'E'              TO M-S(IND1)
000377           MOVE W-COORD-DIV      TO W-MOD-ERR
000377           MOVE M-M(IND1)        TO W-MAP-ERR
000377           MOVE 2                TO W-FLAG-ERR
000377           MOVE 'S128'           TO W-COD-ERR
000377           PERFORM 9999-GESTIONE-ERRORE
000377              THRU 9999-GESTIONE-ERRORE-END
000377        END-IF
000377     END-IF
000092*----------------------------------------------- SE ASSENTE       TS011165
"          IF TOBSG-CMPFIG = 'A'                                        TS011166
"     *----------------------------------------------------------       TS011167
"              MOVE SPACES      TO WRK-CSC-TTFIG                        TS011168
"          END-IF.                                                      TS011169
"      1065-CMPFIG-END.                                                 TS011170
000092     EXIT.                                                        TS011171
                                                                        TS011172
000092*--------------                                                   TS011173
"      1066-CMPRIF1.                                                    TS011174
"     *-------------------------------------------------------          TS011175
"     * VALORIZZO IL DISCRIMINANTE CONTO 1(TTRC1) IN BASE AL            TS011176
"     * VALORE DEL CAMPO CHIAVE TTRIF1.                                 TS011177
"     *-------------------------------------------------------          TS011178
"     *---------------------- SE OBBLIGATORIO O FACOLTATIVO             TS011180
"          IF TOBSG-CMPRIF1 = ( 'O' OR 'F')                             TS011179
"     *---------------------------------------- TIPO CONTO DARE         TS011183
"              IF WPRKSC-TTRIF1(IND21)(1:1) = 'D'                       TS011182
"     *--------------------------------------------------------         TS011183
"                 MOVE WPRKSC-TTRIF1(IND21)   TO W-XN                   TS011184
000377            MOVE 'ZSC050501'            TO W-DECOD
000377            MOVE W-XN-N                 TO C
000377            COPY ZMZINDIR.
000377            COPY ZMZVALNM.
000377            COMPUTE ABSC-CSTC =  W-COM-NUM / ( 10 ** M-D(IND1))
000092            MOVE 'ZSC050701'            TO W-DECOD                TS011185
"                 MOVE W-XN-N                 TO C                      TS011186
"                 COPY ZMZINDIR.                                        TS011187
"                 COPY ZMZVALNM.                                        TS011188
"                 COMPUTE WRK-CTIPSTC =                                 TS011189
"                               W-COM-NUM / ( 10 ** M-D(IND1))          TS011190
"              END-IF                                                   TS011191
"     *------------------------------------ TIPO CONTO AVERE            TS011193
"              IF WPRKSC-TTRIF1(IND21)(1:1) = 'A'                       TS011192
"     *-------------------------------------------------------          TS011193
"                 MOVE WPRKSC-TTRIF1(IND21)    TO W-XN                  TS011194
000377            MOVE 'ZSC050801'             TO W-DECOD
000377            MOVE W-XN-N                 TO C
000377            COPY ZMZINDIR.
000377            COPY ZMZVALNM.
000377            COMPUTE ABSC-CSTC =  W-COM-NUM / ( 10 ** M-D(IND1))
000092            MOVE 'ZSC051001'             TO W-DECOD               TS011195
"                 MOVE W-XN-N                  TO C                     TS011196
"                 COPY ZMZINDIR.                                        TS011197
"                 COPY ZMZVALNM.                                        TS011198
"                 COMPUTE WRK-CTIPSTC =                                 TS011199
"                               W-COM-NUM / ( 10 ** M-D(IND1))          TS011200
"              END-IF                                                   TS011191
"     *------------------------------------- TIPO CONTO CONTROPARTE     TS011201
"              IF WPRKSC-TTRIF1(IND21)(1:1) = 'R'                       TS011192
"     *------------------------------------------------------------     TS011193
"                 MOVE 'ZRA093801'             TO W-DECOD               TS011195
"                 COPY ZMZINDIR.                                        TS011197
"                 COPY ZMZVALNM.                                        TS011198
000142            IF W-COM-NUM = ZEROES
000142             AND L-FASE GREATER 1                                 TS011471
000142                 MOVE 0                        TO W-MAP-ERR
000142                 MOVE SPACES                   TO W-MOD-ERR
000142                 MOVE 2                        TO W-FLAG-ERR
000142                 MOVE 'S160'                   TO W-COD-ERR
000142                 PERFORM 9999-GESTIONE-ERRORE
000142                    THRU 9999-GESTIONE-ERRORE-END
000142                 GO TO 1066-CMPRIF1-END
000142            END-IF
000092            COMPUTE ABSC-CSTC =  W-COM-NUM / ( 10 ** M-D(IND1))   TS011199
"                 PERFORM 0630-LEGGI-TABSC
"                    THRU 0630-LEGGI-TABSC-END
000142*           IF W-SQL-NON-TROVATO
"     *            AND L-FASE GREATER 1                                 TS011471
"     *                MOVE 0                        TO W-MAP-ERR
"     *                MOVE SPACES                   TO W-MOD-ERR
"     *                MOVE 2                        TO W-FLAG-ERR
"     *                MOVE 'S154'                   TO W-COD-ERR
"     *                MOVE ABSC-CSTC                TO WCM-ABSC-CSTC
"     *                MOVE SPACES                   TO WCM-ABSC-DESCR
"     *                MOVE ' ASSENTE IN ZM.TBTABSC' TO WCM-ABSC-DESCR
"     *                MOVE WCM-ERR-ABSC             TO W-DES-ERR
"     *                PERFORM 9999-GESTIONE-ERRORE
"     *                   THRU 9999-GESTIONE-ERRORE-END
"     *                GO TO 1066-CMPRIF1-END
000142*           END-IF
000092            MOVE ABSC-CTIPSTC        TO WRK-CTIPSTC               TS011199

"              END-IF                                                   TS011192
"     *--------------------------------------------------------         TS011201
"              IF WPRKSC-TTRIF1(IND21) = SPACES                         TS011202
"     *------------------------------------- SE NON VALORIZZATO         TS011203
"                 IF TOBSG-CMPRIF1 = 'O'                                TS011204
"     *------------------------------------- SE OBBLIGATORIO            TS011205
"     *-----------------------------------------ERRORE                  TS011206
"                    MOVE 'E'                        TO M-S(IND1)       TS011207
"                    MOVE W-COORD-DIV                TO W-MOD-ERR       TS011208
"                    MOVE M-M(IND1)                  TO W-MAP-ERR       TS011209
"                    MOVE 2                          TO W-FLAG-ERR      TS011210
"                    MOVE 'S129'                     TO W-COD-ERR       TS011211
"                    PERFORM 9999-GESTIONE-ERRORE                       TS011212
"                       THRU 9999-GESTIONE-ERRORE-END                   TS011213
"                    GO TO 1066-CMPRIF1-END
"                 ELSE                                                  TS011214
"                    MOVE ZEROES            TO WRK-CTIPSTC              TS011215
"                 END-IF                                                TS011216
"              END-IF                                                   TS011217
000142         MOVE 'ZRA093901'            TO W-DECOD                   TS010549
000164*        MOVE W-XN-N                 TO C                         TS010550
000142         COPY ZMZINDIR.                                           TS010551
000142         COPY ZMZVALNM.                                           TS010552
000142         COMPUTE WRK-CODABI = W-COM-NUM / ( 10 ** M-D(IND1))      TS010553
"          END-IF.                                                      TS011218
"     *-------------------------------------- SE OBBLIGATORIO           TS011219
"          IF TOBSG-CMPRIF1 = 'A'                                       TS011220
"              MOVE ZEROES            TO WRK-CTIPSTC                    TS011221
"                                                                       TS011222
"          END-IF.                                                      TS011223
"     *--                                                               TS011224
000377     IF WRK-FLAG-CAU-2000 = 0
000092        IF WRK-CTIPSTC = ( 101 OR 116 )                           TS011225
"     *----------------------------'SG' ->  C/RECIPROCO STANZA          TS011226
"                MOVE 'SG'              TO WRK-KSC-TTRC1                TS011227
"             ELSE                                                      TS011228
"                IF WRK-CTIPSTC = ( 112 OR 103 )                        TS011229
"     *-----------------------------'IB' -> C/ESTERO SEGNALANTE         TS011230
"                   MOVE 'IB'              TO WRK-KSC-TTRC1             TS011231
"                ELSE                                                   TS011232
"                   IF WRK-CTIPSTC = ( 102 OR 111 )                     TS011229
"     *-----------------------------'CL' -> C/LORO C/O SEGNALANTE       TS011230
"                      MOVE 'CL'              TO WRK-KSC-TTRC1          TS011231
"                   ELSE                                                TS011232
"                      MOVE SPACES            TO WRK-KSC-TTRC1          TS011233
"                   END-IF                                              TS011234
"                END-IF                                                 TS011234
000377        END-IF
000092     END-IF.                                                      TS011235
"                                                                       TS011236
000377     IF WRK-FLAG-CAU-2000 = 1
000377        IF WRK-CTIPSTC  NOT = ZERO
000377           PERFORM 0630-LEGGI-TABSC
000377              THRU 0630-LEGGI-TABSC-END
000377           IF ABSC-CTIPSTC = ( 101 OR 116 )
BPO105              IF ABSC-FRSDSTC = 1
BPO105*--------------- NEL CASO DI C/NOSTRI PRESSO BANCHE RESIDENTI LA
BPO105*--------------- DISCRIMINANTE DEL CONTO DEVE ESSERE IB E NON SG
BPO105                 MOVE 'IB'           TO WRK-KSC-TTRC1
BPO105              ELSE
000377*----------------------------'SG' ->  C/ESTERO SEGNALANTE
000377                 MOVE 'SG'              TO WRK-KSC-TTRC1
BPO105              END-IF
000377           ELSE
000377*             IF ABSC-FTPGEST = 1
ERD377              IF ABSC-FTPGEST = 1 OR 6
000377*-------------------------------------TARGET O NON TARGET
000377                 IF ABSC-CTIPSTC = 112 OR 103
000377                    IF WRK-CAU-2000-CODABI = 1000
000377                       MOVE 'TG'              TO WRK-KSC-TTRC1
000377                    ELSE
000377                       MOVE 'IB'              TO WRK-KSC-TTRC1
000377                    END-IF
000377                 ELSE
000377*-------------------------------------- EBA O NON EBA
000377                    IF ABSC-FRSTNDG = 2
000377                       IF ABSC-CTIPSTC NOT = 101 AND 116
000377                          IF WRK-CAU-2000-SWFNDG NOT = 'EBAX'
000377                             MOVE 'CL'      TO WRK-KSC-TTRC1
000377                          ELSE
000377                             MOVE 'EB'       TO WRK-KSC-TTRC1
000377                          END-IF
000377                       END-IF
000377                    END-IF
000377                 END-IF
000377              END-IF
000377           END-IF
000377        ELSE
000377           MOVE SPACES TO WRK-KSC-TTRC1
000377        END-IF
000377     END-IF.

000092 1066-CMPRIF1-END.                                                TS011237
000092     EXIT.                                                        TS011238
                                                                        TS011239
000092*--------------                                                   TS011240
"      1067-CMPRIF2.                                                    TS011241
"     *-------------------------------------------------------          TS011242
"     * VALORIZZO IL DISCRIMINANTE CONTO 2(TTRC1) IN BASE AL            TS011243
"     * VALORE DEL CAMPO CHIAVE TTRIF2.                                 TS011244
"     *-------------------------------------------------------          TS011245
"          IF TOBSG-CMPRIF2 = ( 'O' OR 'F')                             TS011246
"     *-------------------------------------- SE OBBLIGATORIO           TS011247
"     *------------------------------------------ O FACOLTATIVO         TS011248
"                                                                       TS011249
"              IF WPRKSC-TTRIF2(IND21) = 'N'                            TS011250
"                 MOVE SPACE      TO  WRK-CSC-TTRC2                     TS011251
"              END-IF                                                   TS011252
"                                                                       TS011253
"              IF WPRKSC-TTRIF2(IND21) = 'S'                            TS011254
"                 MOVE 'ZVR161301'   TO W-DECOD                         TS011256
"                 COPY ZMZINDIR.                                        TS011257
"     *------------------------------------------ CAMBIA VALUTE         TS011255
"                 IF MOD(M-I(IND1):M-L(IND1)) = 'C'                     TS011258
"                    MOVE 'CV'               TO WRK-CSC-TTRC2           TS011259
"                 END-IF                                                TS011260
"     *------------------------------------------ BANCA                 TS011255
"                 IF MOD(M-I(IND1):M-L(IND1)) = 'B'                     TS011258
"                    MOVE 'B'                TO WRK-CSC-TTRC2           TS011259
"                 END-IF                                                TS011260
"              END-IF                                                   TS011261
000142*--------------------------------------- SEQUENZA DIVISE:         TS011255
000142*--------------------------------------- AMMESSA SOLO SE          TS011255
000142*--------------------------------------- CPCS MULTIPLO E          TS011255
000142*--------------------------------------- DIVA = DV1/8.            TS011255
000142         IF WPRKSC-TTRIF2(IND21) = 'Q'                            TS011254
000142            IF APROC-PCSMUL = 'M'                                 TS011256
000142              AND WPRKSC-TTDIVA(IND21)  NOT = 'ORD'               TS011256
000142                  MOVE WRK-DIVISA-A           TO WRK-CSC-TTRC2    TS011256
000142            ELSE                                                  TS011257
000164               MOVE SPACES                TO W-MOD-ERR            TS011271
000164               MOVE '0'                   TO W-MAP-ERR            TS011271
000164               MOVE 'SI'                  TO W-FLAG-EXIT          TS011271
000142               MOVE 2                     TO W-FLAG-ERR           TS011271
000142               MOVE 'S159'                TO W-COD-ERR            TS011272
000142               PERFORM 9999-GESTIONE-ERRORE                       TS011273
000142                  THRU 9999-GESTIONE-ERRORE-END                   TS011274
000142            END-IF                                                TS011257
000142         END-IF                                                   TS011257
000142*---------------------------- PROCESSI COMPLESSI:                 TS011255
000142*---------------------------- CHIAVE SUPPLETIVA PER INDIVIDUARE UNTS011255
000142*---------------------------- SOLO CASO PER I PCS CHE MOVIMENTANO TS011255
000142*---------------------------- UNO STESSO CONTO IN PIU' VOLTE.     TS011255
000142*---------------------------- (BONIFICO CON ESTINZIONE C/ANTICIPO)TS011255
000142         IF WPRKSC-TTRIF2(IND21) NUMERIC                          TS011254
000142            MOVE WPRKSC-TTRIF2(IND21)          TO WRK-CSC-TTRC2   TS011256
000142         END-IF                                                   TS011257
"     *--------------------------------------------------------         TS011262
"              IF WPRKSC-TTRIF2(IND21) = SPACES                         TS011263
"     *------------------------------------- SE NON VALORIZZATO         TS011264
"                 IF TOBSG-CMPRIF2 = 'O'                                TS011265
"     *------------------------------------- SE OBBLIGATORIO            TS011266
"     *--------------------------------------------------ERRORE         TS011267
"                    MOVE 'E'                        TO M-S(IND1)       TS011268
"                    MOVE W-COORD-DIV                TO W-MOD-ERR       TS011269
"                    MOVE M-M(IND1)                  TO W-MAP-ERR       TS011270
"                    MOVE 2                          TO W-FLAG-ERR      TS011271
"                    MOVE 'S130'                     TO W-COD-ERR       TS011272
"                    PERFORM 9999-GESTIONE-ERRORE                       TS011273
"                       THRU 9999-GESTIONE-ERRORE-END                   TS011274
"                 ELSE                                                  TS011275
"                    MOVE SPACES            TO WRK-CSC-TTRC2            TS011276
"                 END-IF                                                TS011277
"              END-IF                                                   TS011278
"          END-IF                                                       TS011279
"     *-------------------------------------- SE OBBLIGATORIO           TS011280
"          IF TOBSG-CMPRIF2 = 'A'                                       TS011281
"              MOVE ZEROES            TO WRK-CTIPSTC                    TS011282
"          END-IF.                                                      TS011283
"     *--                                                               TS011284
"                                                                       TS011285
"      1067-CMPRIF2-END.                                                TS011286
000092     EXIT.                                                        TS011287
                                                                        TS011288
000092*-------------------------------------------------------          TS011289
"      1070-CERCA-WPRCSC.                                               TS011290
"     *-------------------------------------------------------          TS011291
"     * LEGGO LA TABELLA DELLE CAUSALI (WPRCSC) E CONSIDERO LE          TS011292
"     * RICORRENZE CHE HANNO I CAMPI UGUALI A QUELLI IMPOSTATI          TS011293
"     * CON LA TABELLA CHIAVI CASI DI SVILUPPO (WPRKSC).                TS011294
"     ***   POSSONO NON ESSERCI CASI DI SVILUPPO CAUSALI  ***           TS011295
"     *-------------------------------------------------------          TS011296
"                                                                       TS011297
"          EXEC SQL INCLUDE ZMLOPE12 END-EXEC.                          TS011298
"                                                                       TS011299
"          IF NOT W-SQL-OK                                              TS011300
"             MOVE 8                         TO W-FLAG-ERR              TS011301
"             MOVE '9999'                    TO W-COD-ERR               TS011302
"             MOVE SPACES                    TO L-NOME-TABELLA          TS011303
"             MOVE W-SQLCODE                 TO L-CODICE-SQL            TS011304
"             MOVE 'ZMBSVIL0'                TO L-MODULO                TS011305
"             MOVE '1070-APERTURA-CURSORE12' TO L-SUB-MODULO            TS011306
"             PERFORM 9999-GESTIONE-ERRORE                              TS011307
"                THRU 9999-GESTIONE-ERRORE-END                          TS011308
"             GO TO 1070-CERCA-WPRCSC-END                               TS011309
"          END-IF.                                                      TS011310
"                                                                       TS011311
"          MOVE SPACES TO WRK-FINE-WPRCSC.                              TS011312
"                                                                       TS011311
"          PERFORM 1071-SCORRI-TBWPRCSC                                 TS011313
"             THRU 1071-SCORRI-TBWPRCSC-END                             TS011314
"                  UNTIL WRK-FINE-WPRCSC = 'SI'                         TS011315
"                    OR L-ERR-ERR OR W-EXIT.                            TS011316
"                                                                       TS011317
"          EXEC SQL INCLUDE ZMLCLO12 END-EXEC.                          TS011318
"                                                                       TS011329
"          IF NOT W-SQL-OK                                              TS011319
"             MOVE 8                         TO W-FLAG-ERR              TS011320
"             MOVE '9999'                    TO W-COD-ERR               TS011321
"             MOVE SPACES                    TO L-NOME-TABELLA          TS011322
"             MOVE W-SQLCODE                 TO L-CODICE-SQL            TS011323
"             MOVE 'ZMBSVIL0'                TO L-MODULO                TS011324
"             MOVE '1070-CHIUSURA-CURSORE12' TO L-SUB-MODULO            TS011325
"             PERFORM 9999-GESTIONE-ERRORE                              TS011326
"                THRU 9999-GESTIONE-ERRORE-END                          TS011327
"          END-IF.                                                      TS011328
"                                                                       TS011329
"          IF L-ERR-ERR  OR W-EXIT                                      TS011330
"             GO TO 1070-CERCA-WPRCSC-END                               TS011331
"          END-IF.                                                      TS011332
"                                                                       TS011333
"      1070-CERCA-WPRCSC-END.                                           TS011334
000092     EXIT.                                                        TS011335
                                                                        TS011336
000092*-------------------------------------------------------          TS011337
"      1071-SCORRI-TBWPRCSC.                                            TS011338
"     *-------------------------------------------------------          TS011339
"     * EFFETTUA LA FETCH SULLA TBWPRCSC (CASI SVILUPPO CAUSALI)        TS011340
"     * CON CURSORE 12.                                                 TS011341
"     * CON IND21 --> RICORRENZA CHIAVE SVILUPPO CAUSALE.               TS011342
"     * CON IND22 --> RICORRENZA CASO   SVILUPPO CAUSALE.               TS011343
"     *---------------------------------------------------------------- TS011344
"                                                                       TS011345
"          EXEC SQL INCLUDE ZMF27401 END-EXEC.                          TS011346
"                                                                       TS011347
"          IF W-SQL-NON-TROVATO                                         TS011348
"             MOVE 'SI' TO WRK-FINE-WPRCSC                              TS011349
"          ELSE                                                         TS011350
"             IF NOT W-SQL-OK                                           TS011351
"                MOVE 8                      TO W-FLAG-ERR              TS011352
"                MOVE '9999'                 TO W-COD-ERR               TS011353
"                MOVE 'TBWPRCSC'             TO L-NOME-TABELLA          TS011354
"                MOVE W-SQLCODE              TO L-CODICE-SQL            TS011355
"                MOVE 'ZMBSVIL0'             TO L-MODULO                TS011356
"                MOVE '1057-SCORRI-TBWPRCSC' TO L-SUB-MODULO            TS011357
"                PERFORM 9999-GESTIONE-ERRORE                           TS011358
"                   THRU 9999-GESTIONE-ERRORE-END                       TS011359
"             ELSE                                                      TS011360
"                MOVE ALL ' '    TO ZMWPRCSC                            TS011361
"                MOVE PRCSC-WTABCSC-TEXT  TO ZMWPRCSC                   TS011362
"     *--------                                                         TS011388
"                PERFORM 1072-VERIFICA-SVILUPPO                         TS011363
"                   THRU 1072-VERIFICA-SVILUPPO-END                     TS011364
"                       VARYING IND22 FROM 1 BY 1                       TS011365
"                          UNTIL IND22 > WRK-MAX-CSC                    TS011366
"                           OR WPRCSC-TTCAU(IND22) = SPACES             TS011412
"             END-IF                                                    TS011376
"          END-IF.                                                      TS011377
"                                                                       TS011378
"          INITIALIZE PRCSC-WTABCSC.                                    TS011348
"                                                                       TS011378
000142*    IF WPRCSC-TTCAU(IND22) = SPACES                              TS011348
000142*       MOVE 'SI' TO WRK-FINE-WPRCSC                              TS011349
000142*    END-IF.                                                      TS011350
"                                                                       TS011378
"      1071-SCORRI-TBWPRCSC-END.                                        TS011379
000092     EXIT.                                                        TS011380
                                                                        TS011381
000092*-------------------------------------------------------          TS011382
"      1072-VERIFICA-SVILUPPO.                                          TS011383
"     *-------------------------------------------------------          TS011384
"     * PER OGNI CASO DI SVILUPPO LETTO, SI CONTROLLA SE LA             TS011385
"     * LE DISCRIMINANTI SONO UGUALI A QUELLE DELLA CHIAVE.             TS011386
"     *-------------------------------------------------------          TS011387
"                                                                       TS011388
"          IF WRK-CSC-TTINTES   =   WPRCSC-TTINTES   (IND22)            TS011389
"            AND WRK-CSC-TTCNT1  =   WPRCSC-TTCNT1    (IND22)           TS011390
"             AND WRK-CSC-TTCNT2   =  WPRCSC-TTCNT2    (IND22)          TS011391
"              AND WRK-CSC-TTRESPAE =  WPRCSC-TTRESPAE  (IND22)         TS011392
"               AND WRK-CSC-TTRC1     = WPRCSC-TTRC1     (IND22)        TS011393
"                AND WRK-CSC-TTRC2     = WPRCSC-TTRC2      (IND22)      TS011394
"                 AND WRK-CSC-TTLITVALA = WPRCSC-TTLITVALA  (IND22)     TS011395
"                  AND WRK-CSC-TTLITVALB = WPRCSC-TTLITVALB  (IND22)    TS011396
"                   AND WRK-CSC-TTFIG     = WPRCSC-TTFIG       (IND22)  TS011397
"                   PERFORM 1073-ELABORA-WPRCSC                         TS011369
"                      THRU 1073-ELABORA-WPRCSC-END                     TS011370
"          END-IF.                                                      TS011401
"                                                                       TS011402
"      1072-VERIFICA-SVILUPPO-END.                                      TS011403
"          EXIT.                                                        TS011404
                                                                        TS011405
000092*-------------------------------------------------------          TS011406
"      1073-ELABORA-WPRCSC.                                             TS011407
"     *-------------------------------------------------------          TS011408
"     * SE IL CASO SVILUPPO E' QUELLO GIUSTO ---> ELABORAZIONE          TS011409
"     *-------------------------------------------------------          TS011410
"                                                                       TS011411
"     *----------------------------------- SE IL CAMPO CONDIZIONE E'    TS011415
"     *----------------------------------- VALORIZZATO, LA VERIFICO.    TS011416
"                                                                       TS011417
"          IF WPRCSC-TTZNAPPC1 (IND22) > SPACES                         TS011418
BAVG90*       MOVE WPRCSC-TTZNAPPC1 (IND22)   TO COND-MOD-COORD
BAVG90*       MOVE WPRCSC-TTPRES (IND22)      TO COND-CONDIZ
BAVG90*       MOVE WPRCSC-TTVALC11 (IND22)    TO COND-VALORE
BAVG90*       PERFORM 0700-CHIAMA-COND
BAVG90*          THRU 0700-CHIAMA-COND-END
BAVG90*       IF COND-RC NOT = ZEROES
BAVG90        MOVE WPRCSC-TTZNAPPC1 (IND22)   TO C-COND-MOD-COORD
BAVG90        MOVE WPRCSC-TTPRES (IND22)      TO C-COND-CONDIZ
BAVG90        MOVE WPRCSC-TTVALC11 (IND22)    TO C-COND-VALORE
BAVG90        PERFORM CONDIZIONI-COPY
BAVG90           THRU CONDIZIONI-COPY-EX
BAVG90        MOVE SPACES                    TO W-TROVATO
BAVG90        IF C-COND-RC NOT = ZEROES
"                MOVE 8                      TO W-FLAG-ERR              TS011425
"                MOVE '9999'                 TO W-COD-ERR               TS011426
"                MOVE 'TBWPRCSC'             TO L-NOME-TABELLA          TS011427
"                MOVE W-SQLCODE              TO L-CODICE-SQL            TS011428
"                MOVE 'ZMBSVIL0'             TO L-MODULO                TS011429
"                MOVE '1057-SCORRI-TBWPRCSC' TO L-SUB-MODULO            TS011430
"                PERFORM 9999-GESTIONE-ERRORE                           TS011431
"                   THRU 9999-GESTIONE-ERRORE-END                       TS011432
"             END-IF                                                    TS011433
"          ELSE                                                         TS011434
BAVG90*       MOVE 'S'                   TO COND-ESITO                  TS011435
BAVG90        MOVE 'S'                   TO C-COND-ESITO                TS011435
"          END-IF                                                       TS011436
"                                                                       TS011437
BAVG90*000142     IF COND-ESITO NOT = 'S'                               TS011438
BAVG90     IF C-COND-ESITO NOT = 'S'                                    TS011438
000142        GO TO 1073-ELABORA-WPRCSC-END                             TS011439
000142     END-IF.                                                      TS011440
000142                                                                  TS011441
BAVG90*000092     IF COND-ESITO = 'S'                                   TS011438
BAVG90     IF C-COND-ESITO = 'S'                                        TS011438
"     *------------------------------------ CERCO IL MOVIMENTO          TS011439
"     *----------------------------------------------- CON TTNMOV1      TS011440
"             MOVE W-CIST                TO MOVP-CIST                   TS011441
"             MOVE OPE-NUMOPE            TO MOVP-NUMOPE                 TS011442
"                                           MOVC-NUMOPE                 TS011443
"             MOVE W-DIPOPE              TO MOVP-DIPOPE                 TS011444
"                                           MOVC-DIPOPE                 TS011445
"             MOVE WPRCSC-TTNMOV1(IND22) TO MOVP-NPRGMOVP               TS011446
"                                           MOVC-NPRGMOVP               TS011447
"                                           W-NPRGMOVP-CERCA            TS011448
"             MOVE IND-KCS                TO MOVP-NSUBMOVP              TS011449
"                                            MOVC-NSUBMOVP              TS011450
"                                            W-NSUBMOVP-CERCA           TS011451
"             MOVE 'SI'                   TO MOVP-NON-TROVATO           TS011452
"             PERFORM 0820-CERCA-AMOVP                                  TS011453
"                THRU 0820-CERCA-AMOVP-END                              TS011454
"                 VARYING INDP FROM 1 BY 1                              TS011455
"                  UNTIL INDP > 35  OR                                  TS011456
"                   MOVP-NON-TROVATO = SPACES                           TS011457
"             IF MOVP-NON-TROVATO = 'SI'                                TS011458
"     *------------------------------------ CERCO IL MOVIMENTO          TS011459
"     *----------------------------------------------- CON TTNMOV2      TS011460
"                MOVE WPRCSC-TTNMOV2 (IND22)    TO MOVP-NPRGMOVP        TS011461
"                                                  MOVC-NPRGMOVP        TS011462
"                                                  W-NPRGMOVP-CERCA     TS011463
"                PERFORM 0820-CERCA-AMOVP                               TS011464
"                   THRU 0820-CERCA-AMOVP-END                           TS011465
"                    VARYING INDP FROM 1 BY 1                           TS011466
"                     UNTIL INDP > 35  OR                               TS011467
"                      MOVP-NON-TROVATO = SPACES                        TS011468
"                IF MOVP-NON-TROVATO = 'SI'                             TS011469
000142*             IF APROC-PCSMUL = 'M'                               TS011470
000142*                AND L-FASE GREATER 1                             TS011471
000142              IF L-FASE NOT GREATER 1                             TS011470
000092                    GO TO 1073-ELABORA-WPRCSC-END                 TS011472
"                   ELSE                                                TS011473
"                      MOVE 'SI'          TO W-FLAG-EXIT                TS011474
"                      MOVE 'E'           TO M-S(W-STC)                 TS011475
"                      MOVE M-M(W-STC)    TO W-MAP-ERR                  TS011476
"                      MOVE W-COORD-STC   TO W-MOD-ERR                  TS011477
"                      MOVE 2             TO W-FLAG-ERR                 TS011478
000142*                MOVE 'S052'        TO W-COD-ERR                  TS011479
000142                 MOVE 'S158'        TO W-COD-ERR                  TS011479
"                      PERFORM 9999-GESTIONE-ERRORE                     TS011480
"                         THRU 9999-GESTIONE-ERRORE-END                 TS011481
"                      GO TO 1073-ELABORA-WPRCSC-END                    TS011482
"                   END-IF                                              TS011484
"                END-IF                                                 TS011485
"             END-IF                                                    TS011486
"          END-IF.                                                      TS011487
"     *-----------                                                      TS011488
"          SUBTRACT 1 FROM INDP                                         TS011489
"          IF WS-STATUS-TBAMOVP(INDP) = 'E'                             TS011490
"             GO TO 1073-ELABORA-WPRCSC-END                             TS011491
"          END-IF.                                                      TS011492
"     *-------------                                                    TS011493
"          MOVE MOVP-CIST                        TO ABSC-CIST           TS011494
"                                                   MOVC-CIST           TS011495
"          MOVE MOVP-CSTC                        TO ABSC-CSTC           TS011496
"          PERFORM 0630-LEGGI-TABSC                                     TS011497
"             THRU 0630-LEGGI-TABSC-END.                                TS011498
"     *---------------------------------                                TS011499
"          PERFORM 1074-WPRCSC-TTDIVCAU                                 TS011500
"             THRU 1074-WPRCSC-TTDIVCAU-END.                            TS011501
"          IF W-EXIT                                                    TS011502
"             GO TO 1073-ELABORA-WPRCSC-END                             TS011503
"          END-IF.                                                      TS011504
"     *---------------------------------                                TS011505
"          IF WPRCSC-TTTPCAU (IND22) = 'ARB'                            TS011506
"             PERFORM 1075-WPRCSC-TTARB                                 TS011507
"                THRU 1075-WPRCSC-TTARB-END                             TS011508
"             IF W-EXIT                                                 TS011509
"                GO TO 1073-ELABORA-WPRCSC-END                          TS011510
"             END-IF                                                    TS011511
"          END-IF.                                                      TS011512
"     *---------------------------------                                TS011513
000142     MOVE WRK-CSIGPAE               TO MOVC-CSIGPAE               TS011514
000142*---------------------------------                                TS011515
"          PERFORM 1076-WPRCSC-TTPAECAU                                 TS011516
"             THRU 1076-WPRCSC-TTPAECAU-END.                            TS011517
"          IF W-EXIT                                                    TS011518
"             GO TO 1073-ELABORA-WPRCSC-END                             TS011519
"          END-IF.                                                      TS011520
"     *---------------------------------                                TS011521
"          PERFORM 1077-WPRCSC-TTNDG                                    TS011522
"             THRU 1077-WPRCSC-TTNDG-END.                               TS011523
"          IF MOVC-NNDGSTA = ALL '9'                                    TS011524
"             MOVE SPACES  TO MOVC-NNDGSTA                              TS011525
"          END-IF.                                                      TS011526
"     *---------------------------------                                TS011527
"          PERFORM 1078-WPRCSC-TTGIR                                    TS011528
"             THRU 1078-WPRCSC-TTGIR-END                                TS011529
"          IF W-EXIT                                                    TS011530
"             GO TO 1073-ELABORA-WPRCSC-END                             TS011531
000142     END-IF                                                       TS011532
000164     MOVE WRK-CABIBCA         TO MOVC-CODABI                      TS011514
000142*---------------------------------                                TS011533
"          PERFORM 1079-WPRCSC-TTRIFVM                                  TS011534
"             THRU 1079-WPRCSC-TTRIFVM-END.                             TS011535
"                                                                       TS011536
"     *---------------------LA REGISTRAZIONE DI AMOVC DIPENDE IN        TS011537
"     *---------------------ALCUNI CASI DAL TIPO CAUSALE (TTCAU)        TS011538
"                                                                       TS011539
"     *---------------------- SE = CA1/8                                TS011540
"     *----------------------- CAUSALE 1/8                              TS011541
"     *-------------------------- VENGONO ANALIZZATE LE RICORRENZE      TS011542
"     *------------------------------ RELATIVE AL NUMERO DELLA CAUSALE. TS011543
"          IF WPRCSC-TTCAU(IND22)(1:2) = 'CA'                           TS011544
"             IF WPRCSC-TTCAU(IND22)(3:1) NUMERIC                       TS011555
000213           MOVE MOVC-SETTEMITVM      TO WRK-SETTEMITVM
000213           MOVE MOVC-CSIGPAEMIT      TO WRK-CSIGPAEMIT
000213           MOVE MOVC-SETTCLRES       TO WRK-SETTCLRES
"                MOVE WPRCSC-TTCAU(IND22)  TO W-XXN                     TS011545
"                MOVE W-XXN-N              TO WRK-C                     TS011546
"                PERFORM 1080-WPRCSC-TTCAU-98                           TS011547
"                   THRU 1080-WPRCSC-TTCAU-98-END                       TS011548
"             END-IF                                                    TS011549
"          END-IF.                                                      TS011549
"     *---------------------- SE = CAI                                  TS011550
"     *------------------------ CAUSALE INTROITO                        TS011551
"     *------------------------------ VENGONO ANALIZZATE TUTTE LE       TS011552
"     *------------------------------ RICORRENZE E REGISTRATE SOLO      TS011553
"     *------------------------------ QUELLE DI INTROITO.               TS011554
"          IF WPRCSC-TTCAU(IND22) = 'CAI'                               TS011555
000213        MOVE MOVC-SETTEMITVM      TO WRK-SETTEMITVM
000213        MOVE MOVC-CSIGPAEMIT      TO WRK-CSIGPAEMIT
000213        MOVE MOVC-SETTCLRES       TO WRK-SETTCLRES
"               PERFORM 1080-WPRCSC-TTCAU-98                            TS011556
"                  THRU 1080-WPRCSC-TTCAU-98-END                        TS011557
"                     VARYING WRK-C FROM 1 BY 1                         TS011558
"                        UNTIL WRK-C > WCM-INDMAX(12)                   TS011571
"                          OR L-ERR-ERR OR W-EXIT                       TS011560
"          END-IF.                                                      TS011561
"     *---------------------- SE = CAE                                  TS011562
"     *----------------------- CAUSALE ESITO                            TS011563
"     *------------------------------ VENGONO ANALIZZATE TUTTE LE       TS011564
"     *------------------------------ RICORRENZE E REGISTRATE SOLO      TS011565
"     *------------------------------ QUELLE DI ESITO.                  TS011566
"          IF WPRCSC-TTCAU(IND22) = 'CAE'                               TS011567
000213        MOVE MOVC-SETTEMITVM      TO WRK-SETTEMITVM
000213        MOVE MOVC-CSIGPAEMIT      TO WRK-CSIGPAEMIT
000213        MOVE MOVC-SETTCLRES       TO WRK-SETTCLRES
"             PERFORM 1080-WPRCSC-TTCAU-98                              TS011568
"                THRU 1080-WPRCSC-TTCAU-98-END                          TS011569
"                     VARYING WRK-C FROM 1 BY 1                         TS011570
"                        UNTIL WRK-C > WCM-INDMAX(12)                   TS011571
"                          OR L-ERR-ERR OR W-EXIT                       TS011572
"          END-IF.                                                      TS011573
"     *-------------- SE = CAA                                          TS011574
"     *------------------ FISSA SPECIFICATA                             TS011575
"     *-------------------- TUTTI I VALORI DI AMOVC SONO SPECIFICATI.   TS011576
"          IF WPRCSC-TTCAU(IND22) = 'CAA'                               TS011577
000377        MOVE MOVC-CSIGPAE         TO MOVC-CSIGPAEMIT
000092        MOVE WPRCSC-TTIMPCAU(IND22) TO WRK-TTIMPCAU               TS011578
"             PERFORM 1081-WPRCSC-TTCAU-CAA                             TS011579
"                THRU 1081-WPRCSC-TTCAU-CAA-END                         TS011580
"          END-IF.                                                      TS011581
"                                                                       TS011582
"      1073-ELABORA-WPRCSC-END.                                         TS011583
000092     EXIT.                                                        TS011584
                                                                        TS011585
000092*-----------------                                                TS011586
"      1074-WPRCSC-TTDIVCAU.                                            TS011587
"     *-----------------                                                TS011588
"                                                                       TS011589
"          IF WPRCSC-TTDIVCAU (IND22) = 'ORD'                           TS011590
"             MOVE 'ZOR030201'                TO W-DECOD                TS011591
"             COPY ZMZINDIR.                                            TS011592
"             MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVC-CISO              TS011593
"             MOVE IND1                       TO W-DIV                  TS011594
"             MOVE 'ZOR036401'                TO W-DECOD                TS011595
"             COPY ZMZINDIR.                                            TS011596
"             COPY ZMZVALNM.                                            TS011597
"             COMPUTE WRK-INOUT = W-COM-NUM / (10 ** M-D(IND1))         TS011598
"          END-IF.                                                      TS011599
"     *-----------------                                                TS011600
"          IF WPRCSC-TTDIVCAU (IND22) (1:2) = 'DV'                      TS011601
"             IF WPRCSC-TTDIVCAU (IND22) (3:1) NUMERIC                  TS011601
"                MOVE WPRCSC-TTDIVCAU (IND22)    TO W-XXN               TS011602
"                MOVE 'ZDI040101'                TO W-DECOD             TS011603
"                MOVE W-XXN-N                    TO C                   TS011604
"                COPY ZMZINDIR.                                         TS011605
"                MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVC-CISO           TS011606
"                MOVE IND1                       TO W-DIV               TS011607
"                MOVE 'ZDI043301'                TO W-DECOD             TS011608
"                MOVE W-XXN-N                    TO C                   TS011609
"                COPY ZMZINDIR.                                         TS011610
"                COPY ZMZVALNM.                                         TS011611
"                COMPUTE WRK-INOUT = W-COM-NUM / (10 ** M-D(IND1))      TS011612
"             END-IF                                                    TS011613
"             IF WPRCSC-TTDIVCAU (IND22) (3:1) = 'M'                    TS011601
"                MOVE WRK-DIVA                   TO MOVC-CISO           TS011606
"                MOVE WRK-TIPOA                  TO WRK-INOUT           TS011612
"             END-IF                                                    TS011613
"          END-IF.                                                      TS011613
"     *-----------                                                      TS011614
"          IF MOVC-CISO NOT > SPACES                                    TS011615
"             MOVE 'SI'                    TO W-FLAG-EXIT               TS011616
"             MOVE 'E'                     TO M-S(W-DIV)                TS011617
"             MOVE W-COORD-DIV             TO W-MOD-ERR                 TS011618
"             MOVE M-M(W-DIV)              TO W-MAP-ERR                 TS011619
"             MOVE 2                       TO W-FLAG-ERR                TS011620
"             MOVE 'S054'                  TO W-COD-ERR                 TS011621
"             PERFORM 9999-GESTIONE-ERRORE                              TS011622
"                THRU 9999-GESTIONE-ERRORE-END                          TS011623
"          END-IF.                                                      TS011624
"      1074-WPRCSC-TTDIVCAU-END.                                        TS011625
000092     EXIT.                                                        TS011626
                                                                        TS011627
000092*------------------                                               TS011628
"      1075-WPRCSC-TTARB.                                               TS011629
"     *-------------------                                              TS011630
"          IF WPRCSC-TTARB (IND22) = 'ORD'                              TS011631
"             MOVE 'ZOR030301'                   TO W-DECOD             TS011632
"             COPY ZMZINDIR.                                            TS011633
"             COPY ZMZVALNM.                                            TS011634
"             MOVE W-COM-NUM                     TO W-CMODUIC           TS011635
"          END-IF.                                                      TS011636
"          IF WPRCSC-TTARB (IND22) (1:2) = 'DV'                         TS011637
"             MOVE WPRCSC-TTARB (IND5)            TO W-XXN              TS011638
"             MOVE 'ZDI040201'                    TO W-DECOD            TS011639
"             MOVE W-XXN-N                        TO C                  TS011640
"             COPY ZMZINDIR.                                            TS011641
"             COPY ZMZVALNM.                                            TS011642
"             MOVE W-COM-NUM                      TO W-CMODUIC          TS011643
"          END-IF.                                                      TS011644
"          IF W-CMODUIC = 0                                             TS011645
"             IF M-S(W-STC) NOT = SPACES                                TS011646
"                NEXT SENTENCE                                          TS011647
"             ELSE                                                      TS011648
"                MOVE 'SI'                          TO W-FLAG-EXIT      TS011649
"                MOVE 'E'                           TO M-S(IND1)        TS011650
"                MOVE M-M(IND1)                     TO W-MAP-ERR        TS011651
"                MOVE W-DEC-COORD                   TO W-MOD-ERR        TS011652
"                MOVE 2                             TO W-FLAG-ERR       TS011653
"                MOVE 'S055'                        TO W-COD-ERR        TS011654
"                PERFORM 9999-GESTIONE-ERRORE                           TS011655
"                   THRU 9999-GESTIONE-ERRORE-END                       TS011656
"             END-IF                                                    TS011657
"          END-IF.                                                      TS011658
"      1075-WPRCSC-TTARB-END.                                           TS011659
000092     EXIT.                                                        TS011660
                                                                        TS011661
000092*------------------                                               TS011662
"      1076-WPRCSC-TTPAECAU.                                            TS011663
"     *------------------                                               TS011664
"          IF WPRCSC-TTPAECAU (IND22) = 'ORD'                           TS011665
"             MOVE 'ZOR032401'                   TO W-DECOD             TS011666
"             COPY ZMZINDIR.                                            TS011667
"             MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-CSIGPAE        TS011668
"          END-IF.                                                      TS011669
"          IF WPRCSC-TTPAECAU (IND22) = 'DEB'                           TS011670
"             MOVE 'ZRA090201'                   TO W-DECOD             TS011671
"             COPY ZMZINDIR.                                            TS011672
"             MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-CSIGPAE        TS011673
"          END-IF.                                                      TS011674
"          IF WPRCSC-TTPAECAU (IND22) = 'CRE'                           TS011675
"             MOVE 'ZRA090301'                   TO W-DECOD             TS011676
"             COPY ZMZINDIR.                                            TS011677
"             MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-CSIGPAE        TS011678
"          END-IF.                                                      TS011679
"          IF WPRCSC-TTPAECAU (IND22)(1:1) = 'F'                        TS011680
"             MOVE WPRCSC-TTPAECAU (IND22)       TO W-XNN               TS011681
"             MOVE 'ZND060701'                   TO W-DECOD             TS011682
"             MOVE W-XNN-N                       TO C                   TS011683
"             COPY ZMZINDIR.                                            TS011684
"             MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-CSIGPAE        TS011685
"          END-IF.                                                      TS011686
"          IF WPRCSC-TTPAECAU (IND22)(1:2) = 'DV'                       TS011687
"             IF WPRCSC-TTPAECAU (IND22)(3:1) NUMERIC                   TS011687
000164*          MOVE WPRCSC-TTPAECAU (IND22)       TO W-XNN            TS011688
000164           MOVE WPRCSC-TTPAECAU (IND22)       TO W-XXN            TS011688
"                MOVE 'ZDI042901'                   TO W-DECOD          TS011689
"                MOVE W-XXN-N                       TO C                TS011690
"                COPY ZMZINDIR.                                         TS011691
"                MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-CSIGPAE     TS011692
"             ELSE                                                      TS011693
"                IF WPRCSC-TTPAECAU (IND22)(3:1) = 'M'                  TS011687
000164*             MOVE WPRKSC-TTDIVA (IND21)         TO W-XNN         TS011688
000164              MOVE WPRKSC-TTDIVA (IND21)         TO W-XXN         TS011688
"                   MOVE 'ZDI042901'                   TO W-DECOD       TS011689
"                   MOVE W-XXN-N                       TO C             TS011690
"                   COPY ZMZINDIR.                                      TS011691
"                   MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-CSIGPAE  TS011692
"                END-IF                                                 TS011693
"             END-IF                                                    TS011693
"          END-IF.                                                      TS011693
"     *--------                                                         TS011693
"          IF WPRCSC-TTPAECAU (IND22)(1:2) = 'ZD'                       TS011694
"             IF WPRCSC-TTPAECAU (IND22)(3:1) NUMERIC                   TS011694
"                MOVE WPRCSC-TTPAECAU (IND22)        TO W-XXN           TS011695
"                MOVE 'ZDV136001'                   TO W-DECOD          TS011696
"                MOVE W-XXN-N                       TO C                TS011697
"                COPY ZMZINDIR.                                         TS011698
"                MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-CSIGPAE     TS011699
"             ELSE                                                      TS011700
"                IF WPRCSC-TTPAECAU (IND22)(3:1) = 'M'                  TS011694
"                   MOVE WPRKSC-TTDIVA (IND21)         TO W-XXN         TS011695
"                   MOVE 'ZDV136001'                   TO W-DECOD       TS011696
"                   MOVE W-XXN-N                       TO C             TS011697
"                   COPY ZMZINDIR.                                      TS011698
"                   MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-CSIGPAE  TS011699
"                END-IF                                                 TS011700
"             END-IF                                                    TS011700
"          END-IF.                                                      TS011700
"     *--------                                                         TS011693
           IF MOVC-CSIGPAE NOT > SPACES
"             MOVE 'SI'                          TO W-FLAG-EXIT         TS011702
"             MOVE 'E'                           TO M-S(IND1)           TS011703
"             MOVE M-M(IND1)                     TO W-MAP-ERR           TS011704
"             MOVE W-DEC-COORD                   TO W-MOD-ERR           TS011705
"             MOVE 2                             TO W-FLAG-ERR          TS011706
"             MOVE 'S056'                        TO W-COD-ERR           TS011707
"             PERFORM 9999-GESTIONE-ERRORE                              TS011708
"                THRU 9999-GESTIONE-ERRORE-END                          TS011709
"          END-IF.                                                      TS011710
"      1076-WPRCSC-TTPAECAU-END.                                        TS011711
000092     EXIT.                                                        TS011712
                                                                        TS011713
000092*-+-+-+-+-+-+-+-+-+                                               TS011714
"      1077-WPRCSC-TTNDG.                                               TS011715
"     *-+-+-+-+-+-+-+-+-+                                               TS011716
"          MOVE SPACES                       TO W-EXPERFORM             TS011717
"     *-+-+-+-+-+-+-+-+-+                                               TS011718
"          IF WPRCSC-TTNDG1 (IND22) = 'ORD'                             TS011719
"             MOVE 'ZOR031801'               TO W-DECOD                 TS011720
"             COPY ZMZINDIR.                                            TS011721
"             MOVE MOD(M-I(IND1):M-L(IND1))  TO MOVC-NNDGSTA            TS011722
"             MOVE 'ZOR036601'               TO W-DECOD                 TS011723
"             COPY ZMZINDIR.                                            TS011724
000142*------------------------------- USO WRK-SETTORE COME COMODO      TS011736
000142*------------------------------- AVENDO I CAMPI PIC DIVERSA       TS011736
000142        COPY ZMZVALNM.                                            TS011736
000142        COMPUTE WRK-SETTORE = W-COM-NUM / 10 ** (M-D(IND1))       TS011736
000142*       MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVC-SETTCLRES         TS011737
000142        IF WRK-SETTORE =  0                                       TS011737
000142           MOVE SPACES                     TO MOVC-SETTCLRES      TS011737
000142        ELSE                                                      TS011737
000142           MOVE WRK-SETTORE                TO MOVC-SETTCLRES      TS011737
000142        END-IF                                                    TS011737
"             MOVE 'SI'                       TO W-EXPERFORM            TS011726
"          END-IF.                                                      TS011727
"          IF WPRCSC-TTNDG1 (IND22) (1:1) = 'F'                         TS011728
"             MOVE WPRCSC-TTNDG1 (IND22)         TO W-XNN               TS011729
"             MOVE 'ZND060101'                   TO W-DECOD             TS011730
"             MOVE W-XNN-N                       TO C                   TS011731
"             COPY ZMZINDIR.                                            TS011732
"             IF MOD(M-I(IND1):M-L(IND1)) > SPACES                      TS011733
"                MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVC-NNDGSTA        TS011734
"                MOVE 'ZND064401'                   TO W-DECOD          TS011735
000164           MOVE W-XNN-N                       TO C                TS011731
000092           COPY ZMZINDIR.                                         TS011736
000142*------------------------------- USO WRK-SETTORE COME COMODO      TS011736
000142*------------------------------- AVENDO I CAMPI PIC DIVERSA       TS011736
000142           COPY ZMZVALNM.                                         TS011736
000142           COMPUTE WRK-SETTORE = W-COM-NUM / 10 ** (M-D(IND1))    TS011736
000142*          MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVC-SETTCLRES      TS011737
000142           IF WRK-SETTORE =  0                                    TS011737
000142              MOVE SPACES                  TO MOVC-SETTCLRES      TS011737
000142           ELSE                                                   TS011737
000142              MOVE WRK-SETTORE             TO MOVC-SETTCLRES      TS011737
000142           END-IF                                                 TS011737
000092           MOVE 'SI'                       TO W-EXPERFORM         TS011738
"             END-IF                                                    TS011739
"          END-IF.                                                      TS011740
"     *---------------------------------- TIPO NDG2 ----                TS011741
"          IF W-EXPERFORM = SPACES                                      TS011742
"             IF WPRCSC-TTNDG2 (IND22) = 'ORD'                          TS011743
"                MOVE 'ZOR031801'                TO W-DECOD             TS011744
"                COPY ZMZINDIR.                                         TS011745
"                MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVC-NNDGSTA        TS011746
"                MOVE 'ZOR036601'                TO W-DECOD             TS011747
"                COPY ZMZINDIR.                                         TS011748
000142           COPY ZMZVALNM.                                         TS011736
000142           COMPUTE WRK-SETTORE = W-COM-NUM / 10 ** (M-D(IND1))    TS011736
000142*          MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVC-SETTCLRES      TS011737
000142           IF WRK-SETTORE =  0                                    TS011737
000142              MOVE SPACE                   TO MOVC-SETTCLRES      TS011737
000142           ELSE                                                   TS011737
000142              MOVE WRK-SETTORE             TO MOVC-SETTCLRES      TS011737
000142           END-IF                                                 TS011737
000092           MOVE 'SI'                       TO W-EXPERFORM         TS011750
"             ELSE                                                      TS011751
"                IF WPRCSC-TTNDG2 (IND22) (1:1) = 'F'                   TS011752
"                   MOVE WPRCSC-TTNDG2 (IND22)   TO W-XNN               TS011753
"                   MOVE 'ZND060101'             TO W-DECOD             TS011754
"                   MOVE W-XNN-N                 TO C                   TS011755
"                   COPY ZMZINDIR.                                      TS011756
"                   IF MOD(M-I(IND1):M-L(IND1)) > SPACES                TS011757
"                      MOVE MOD(M-I(IND1):M-L(IND1))                    TS011758
"                                                TO MOVC-NNDGSTA        TS011759
"                      MOVE 'ZND064401'             TO W-DECOD          TS011760
000164                 MOVE W-XNN-N                 TO C                TS011731
"                      COPY ZMZINDIR.                                   TS011761
000142                 COPY ZMZVALNM.                                   TS011736
000142                 COMPUTE WRK-SETTORE                              TS011736
000142                             = W-COM-NUM / 10 ** (M-D(IND1))      TS011736
000142                 IF WRK-SETTORE  = 0                              TS011737
000142                    MOVE SPACES        TO MOVC-SETTCLRES          TS011737
000142                 ELSE                                             TS011737
000142                    MOVE WRK-SETTORE   TO MOVC-SETTCLRES          TS011737
000142                 END-IF                                           TS011737
000142*                MOVE MOD(M-I(IND1):M-L(IND1))                    TS011762
000142*                                          TO MOVC-SETTCLRES      TS011763
000092                 MOVE 'SI'                 TO W-EXPERFORM         TS011764
"                   END-IF                                              TS011765
"                END-IF                                                 TS011766
"             END-IF                                                    TS011767
"          END-IF.                                                      TS011768
"                                                                       TS011769
"      1077-WPRCSC-TTNDG-END.                                           TS011770
000092     EXIT.                                                        TS011771
                                                                        TS011772
000092*-----------------                                                TS011773
"      1078-WPRCSC-TTGIR.                                               TS011774
"     *-----------------                                                TS011775
"                                                                       TS011776
"          MOVE SPACES                           TO W-EXPERFORM         TS011777
"     *------------------------------------------ TTGIR1                TS011778
"          IF WPRCSC-TTGIR1 (IND22) = 'ORD'                             TS011779
"             MOVE 'ZOR033101'                   TO W-DECOD             TS011780
"             COPY ZMZINDIR.                                            TS011781
"             COPY ZMZVALNM.                                            TS011782
"             COMPUTE WRK-CABIBCA = W-COM-NUM / (10 ** M-D(IND1))       TS011783
"             MOVE 'SI'                          TO W-EXPERFORM         TS011784
"          END-IF.                                                      TS011785
"          IF WPRCSC-TTGIR1 (IND22) (1:1) = 'F'                         TS011786
"             MOVE WPRCSC-TTGIR1 (IND22)         TO W-XNN               TS011787
"             MOVE 'ZND061401'                   TO W-DECOD             TS011788
"             MOVE W-XNN-N                       TO C                   TS011789
"             COPY ZMZINDIR.                                            TS011790
"             COPY ZMZVALNM.                                            TS011791
"             IF W-COM-NUM NOT = 0                                      TS011792
"                COMPUTE WRK-CABIBCA = W-COM-NUM / (10 ** M-D(IND1))    TS011793
"                MOVE 'SI'                       TO W-EXPERFORM         TS011794
"             END-IF                                                    TS011795
"          END-IF.                                                      TS011796
"     *------------------------------------------ TTGIR2                TS011797
"          IF W-EXPERFORM = SPACES                                      TS011798
"             IF WPRCSC-TTGIR2 (IND22) = 'ORD'                          TS011799
"                MOVE 'ZOR033101'                TO W-DECOD             TS011800
"                COPY ZMZINDIR.                                         TS011801
"                COPY ZMZVALNM.                                         TS011802
"                COMPUTE WRK-CABIBCA = W-COM-NUM / (10 ** M-D(IND1))    TS011803
"                MOVE 'SI'                       TO W-EXPERFORM         TS011804
"             ELSE                                                      TS011805
"                IF WPRCSC-TTGIR2 (IND22) (1:1) = 'F'                   TS011806
"                   MOVE WPRCSC-TTGIR2 (IND22)   TO W-XNN               TS011807
"                   MOVE 'ZND061401'             TO W-DECOD             TS011808
"                   MOVE W-XNN-N                 TO C                   TS011809
"                   COPY ZMZINDIR.                                      TS011810
"                   COPY ZMZVALNM.                                      TS011811
"                   IF W-COM-NUM NOT = 0                                TS011812
"                      COMPUTE WRK-CABIBCA =                            TS011813
"                                 W-COM-NUM / (10 ** M-D(IND1))         TS011814
"                      MOVE 'SI'                 TO W-EXPERFORM         TS011815
"                   END-IF                                              TS011816
"                END-IF                                                 TS011817
"             END-IF                                                    TS011818
"          END-IF.                                                      TS011819
"     *------------------------------------------ ERRORE                TS011820
"          IF W-EXPERFORM = SPACES                                      TS011821
"            AND WPRCSC-TTTPCAU(IND22) = 'GIR'                          TS011822
"                MOVE 'SI'          TO W-FLAG-EXIT                      TS011823
"                MOVE 'E'           TO M-S(IND1)                        TS011824
"                MOVE 'S057'        TO W-COD-ERR                        TS011825
"                MOVE M-M(IND1)     TO W-MAP-ERR                        TS011826
"                MOVE W-DEC-COORD   TO W-MOD-ERR                        TS011827
"                PERFORM 9999-GESTIONE-ERRORE                           TS011828
"                   THRU 9999-GESTIONE-ERRORE-END                       TS011829
"          END-IF.                                                      TS011830
"      1078-WPRCSC-TTGIR-END.                                           TS011831
000092     EXIT.                                                        TS011832
                                                                        TS011833
000092*-------------------                                              TS011834
"      1079-WPRCSC-TTRIFVM.                                             TS011835
"     *-------------------                                              TS011836
"                                                                       TS011837
"          IF WPRCSC-TTRIFVM (IND22) = 'ORD'                            TS011838
"             MOVE 'ZOR036601'        TO W-DECOD                        TS011839
"             COPY ZMZINDIR.                                            TS011840
"             MOVE MOD(M-I(IND1):M-L(IND1))   TO   MOVC-SETTEMITVM      TS011841
"             MOVE 'ZOR032401'        TO W-DECOD                        TS011842
"             COPY ZMZINDIR.                                            TS011843
"             MOVE MOD(M-I(IND1):M-L(IND1))   TO   MOVC-CSIGPAEMIT      TS011844
"          END-IF.                                                      TS011845
"     *------------                                                     TS011846
"          IF WPRCSC-TTRIFVM (IND22)(1:1) = 'F'                         TS011847
"             MOVE WPRCSC-TTRIFVM(IND22)    TO W-XNN                    TS011848
"             MOVE 'ZND061401'              TO W-DECOD                  TS011849
"             MOVE W-XNN-N                  TO N-M-2                    TS011850
"             COPY ZMZINDIR.                                            TS011851
"             IF MOD(M-I(IND1):M-L(IND1)) NOT = SPACES                  TS011852
"                MOVE 'ZND064401'        TO W-DECOD                     TS011853
"                MOVE W-XNN-N            TO N-M-2                       TS011854
"                COPY ZMZINDIR.                                         TS011855
"                MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVC-SETTEMITVM     TS011856
"                MOVE 'ZND060701'        TO W-DECOD                     TS011857
"                MOVE W-XNN-N            TO N-M-2                       TS011858
"                COPY ZMZINDIR.                                         TS011859
"                MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVC-CSIGPAEMIT     TS011860
"             ELSE                                                      TS011861
"                MOVE SPACES                     TO MOVC-CSIGPAEMIT     TS011863
"                                                   MOVC-SETTEMITVM     TS011862
"             END-IF                                                    TS011864
"          END-IF.                                                      TS011865
"     *------------                                                     TS011866
"          IF WPRCSC-TTRIFVM (IND22)  = 'DVR'                           TS011867
"             MOVE 'ZVR161701'        TO W-DECOD                        TS011868
"             COPY ZMZINDIR.                                            TS011869
"             IF MOD(M-I(IND1):M-L(IND1)) NOT = SPACES                  TS011870
"                MOVE MOD(M-I(IND1):M-L(IND1))  TO MOVC-SETTEMITVM      TS011871
"             END-IF                                                    TS011872
"             MOVE 'ZVR161801'        TO W-DECOD                        TS011873
"             COPY ZMZINDIR.                                            TS011874
"             IF MOD(M-I(IND1):M-L(IND1)) NOT = SPACES                  TS011875
"                MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVC-CSIGPAEMIT     TS011876
"             END-IF
"          END-IF.                                                      TS011877
000389     IF WPRCSC-TTRIFVM (IND22)  = SPACES
000389        MOVE 'ZCA120901'                   TO W-DECOD
000389        COPY ZMZINDIR.
000389        MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-SETTEMITVM
000389        MOVE 'ZCA121001'                   TO W-DECOD
000389        COPY ZMZINDIR.
000389        MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-CSIGPAEMIT
000389     END-IF.
000092 1079-WPRCSC-TTRIFVM-END.                                         TS011878
000092     EXIT.                                                        TS011879
                                                                        TS011880
000092*----------------------                                           TS011881
"      1080-WPRCSC-TTCAU-98.                                            TS011882
"     *----------------------                                           TS011883
"     *------------------------------------------------------ CODCAU    TS011884
"          MOVE 'ZCA120201'                   TO W-DECOD                TS011885
"          MOVE WRK-C                         TO C                      TS011886
"          COPY ZMZINDIR.                                               TS011887
"          COPY ZMZVALNM.                                               TS011887
"          IF W-COM-NUM NOT GREATER ZEROES                              TS011890
"                GO TO 1080-WPRCSC-TTCAU-98-END                         TS011891
"          END-IF.                                                      TS011893
"                                                                       TS011888
"     *------------------------------------------------------ TMOVCAU   TS011884
"          MOVE 'ZCA120301'                   TO W-DECOD                TS011885
"          MOVE WRK-C                         TO C                      TS011886
"          COPY ZMZINDIR.                                               TS011887
"                                                                       TS011888
"          IF WPRCSC-TTCAU(IND22) = 'CAE'                               TS011889
"             IF MOD(M-I(IND1):M-L(IND1)) NOT = 'E'                     TS011890
"                GO TO 1080-WPRCSC-TTCAU-98-END                         TS011891
"             END-IF                                                    TS011892
"          END-IF.                                                      TS011893
"                                                                       TS011894
"          IF WPRCSC-TTCAU(IND22) = 'CAI'                               TS011895
"             IF MOD(M-I(IND1):M-L(IND1)) NOT = 'I'                     TS011896
"                GO TO 1080-WPRCSC-TTCAU-98-END                         TS011897
"             END-IF                                                    TS011898
"          END-IF.                                                      TS011899
"                                                                       TS011900
"          MOVE W-CIST                TO MOVC-CIST                      TS011441
"          MOVE OPE-NUMOPE            TO MOVC-NUMOPE                    TS011442
"          MOVE OPE-DIPOPE            TO MOVC-DIPOPE                    TS011444
"          MOVE MOVP-NPRGMOVP         TO MOVC-NPRGMOVP                  TS011446
"          MOVE MOVP-NSUBMOVP         TO MOVC-NSUBMOVP                  TS011449
"                                                                       TS011900
"     *------------------------------------------------------ TMOVCAU   TS011884
"          MOVE 'ZCA120301'                   TO W-DECOD                TS011885
"          MOVE WRK-C                         TO C                      TS011886
"          COPY ZMZINDIR.                                               TS011887
"          IF MOD(M-I(IND1):M-L(IND1))  NOT = SPACES                    TS011901
"             MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-TMOVCAU        TS011902
"           ELSE                                                        TS011903
"             MOVE WPRCSC-TTINTESC(IND22)        TO MOVC-TMOVCAU        TS011904
"           END-IF                                                      TS011905
"     *-------------------------------------------------- CCAIUC        TS011906
"          MOVE 'ZCA120201'                  TO W-DECOD                 TS011907
"          MOVE WRK-C                        TO C                       TS011908
"          MOVE W-DEC-COORD                  TO W-COORD-CAU             TS011909
"          COPY ZMZINDIR.                                               TS011910
"          COPY ZMZVALNM.                                               TS011911
"          MOVE IND1                          TO W-CAU                  TS011912
"          MOVE W-COM-NUM                     TO MOVC-CCAUIC            TS011913
APV234*------------------------------------------------------*          TS011914
APV234     MOVE 'ZAA170601'                   TO W-DECOD
APV234     COPY ZMZINDIR.
APV234     COPY ZMZVALNM.
APV234     IF  W-COM-NUM NOT = 7160
APV234         AND W-COM-NUM NOT = 7161
APV234         IF MOVC-CCAUIC NOT LESS 3000 AND MOVC-CCAUIC LESS 4000
APV234            MOVE 'SI'                TO W-FLAG-EXIT
APV234            MOVE 'E'                 TO M-S(IND1)
APV234            MOVE M-M(IND1)           TO W-MAP-ERR
APV234            MOVE W-DEC-COORD         TO W-MOD-ERR
APV234            MOVE 2                   TO W-FLAG-ERR
APV234            MOVE 'S221'              TO W-COD-ERR
APV234            PERFORM 9999-GESTIONE-ERRORE
APV234               THRU 9999-GESTIONE-ERRORE-END
APV234            GO TO 1080-WPRCSC-TTCAU-98-END
APV234          END-IF
APV234     END-IF.
APV234*------------------------------------------------------*          TS011914
"     *------------------------------------------------------ ICAU      TS011914
"          MOVE 'ZCA120401'                   TO W-DECOD                TS011915
"          MOVE WRK-C                         TO C                      TS011916
"          COPY ZMZINDIR.                                               TS011917
"          COPY ZMZVALNM.                                               TS011918
"          COMPUTE MOVC-ICAU = W-COM-NUM / 10 ** M-D(IND1)              TS011919
"     *------------------------------------------------------ TCODCAU   TS011920
"          MOVE 'ZCA120101'                   TO W-DECOD                TS011921
"          MOVE WRK-C                         TO C                      TS011922
"          COPY ZMZINDIR.                                               TS011923
"          COPY ZMZVALNM.                                               TS011924
"          MOVE W-COM-NUM                     TO MOVC-TCODCAU           TS011925
"     *--------------------------------------------------- CDPZGINT     TS011926
"          MOVE 0         TO MOVC-CDPZGINT                              TS011927
"     *--------------------------------------------------------         TS011928
"     *------------------------- I SEGUENTI CAMPI SCRITTI DAL           TS011929
"     *------------------------------ MODELLO SOLO SE ASSENTI           TS011930
"     *------------------------------------------------ SETTEMITVM      TS011931
000213*    IF MOVC-SETTEMITVM   = SPACES                                TS011932
000389*    IF WRK-SETTEMITVM   = SPACES
"             MOVE 'ZCA120901'                   TO W-DECOD             TS011933
"             MOVE WRK-C                         TO C                   TS011934
"             COPY ZMZINDIR.                                            TS011935
"             MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-SETTEMITVM     TS011936
000389*    ELSE
000389*       MOVE WRK-SETTEMITVM   TO MOVC-SETTEMITVM
000389*    END-IF.                                                      TS011937
"     *------------------------------------------------ CSIGPAEMIT      TS011938
000213*    IF MOVC-CSIGPAEMIT   = SPACES                                TS011939
000389*    IF WRK-CSIGPAEMIT   = SPACES
"             MOVE 'ZCA121001'                   TO W-DECOD             TS011940
"             MOVE WRK-C                         TO C                   TS011941
"             COPY ZMZINDIR.                                            TS011942
"             MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-CSIGPAEMIT     TS011943
000389*    ELSE
000389*       MOVE WRK-CSIGPAEMIT                TO MOVC-CSIGPAEMIT
000389*    END-IF.                                                      TS011944

000389* MOVC-CSIGPAEMIT E" IL PAESE DELLA ZONA ZCA1210 DELLA RICORRENZA
000389* CHE SI STA ELABORANDO
000389* WRK-CSIGPAEMIT  E" IL PAESE DELLA ZONA ZCA121001 1^ RICORRENZA
000389     IF MOVC-CSIGPAEMIT = SPACES
000389        IF WRK-CSIGPAEMIT NOT = SPACES
000389           MOVE WRK-CSIGPAEMIT TO MOVC-CSIGPAEMIT
000389        ELSE
000389           MOVE 'ZRA091301'        TO W-DECOD
000389           COPY ZMZINDIR.
000389           IF MOD(M-I(IND1):M-L(IND1)) NOT = SPACES
000389              MOVE MOD(M-I(IND1):M-L(IND1))  TO MOVC-CSIGPAEMIT
000389           ELSE
000389              MOVE MOVC-CSIGPAE              TO MOVC-CSIGPAEMIT
000389           END-IF
000389        END-IF
000389     END-IF
000389     IF  MOVC-SETTEMITVM = SPACES
000389     AND WRK-SETTEMITVM NOT = SPACES
000389         MOVE WRK-SETTEMITVM TO MOVC-SETTEMITVM
000389     END-IF
000092*------------------------------------------------ SETTECLRES      TS011945
000213*    IF MOVC-SETTCLRES  = SPACES                                  TS011946
000213     IF WRK-SETTCLRES  = SPACES
"             MOVE 'ZCA120801'                   TO W-DECOD             TS011947
"             MOVE WRK-C                         TO C                   TS011948
"             COPY ZMZINDIR.                                            TS011949
"             MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-SETTCLRES      TS011950
000213     ELSE
000213        MOVE WRK-SETTCLRES                 TO MOVC-SETTCLRES
"          END-IF.                                                      TS011951
"     *------------------------------------------------ CODABI          TS011952
"          IF WRK-CABIBCA  = ZEROES                                     TS011953
"             MOVE 'ZCA121101'                   TO W-DECOD             TS011954
"             MOVE WRK-C                         TO C                   TS011955
"             COPY ZMZINDIR.                                            TS011956
"             COPY ZMZVALNM.                                            TS011957
"             COMPUTE MOVC-CODABI  = (W-COM-NUM / 10 ** M-D(IND1))      TS011958
"          ELSE                                                         TS011959
"             MOVE WRK-CABIBCA   TO MOVC-CODABI                         TS011953
"          END-IF.                                                      TS011959
"     *------------------------------------------------ ICAUORI         TS011960
BPEL57*    IF MOVC-ICAUORI  = ZEROES
BPEL57*       MOVE 'ZCA121201'                   TO W-DECOD
BPEL57*       MOVE WRK-C                         TO C
BPEL57*       COPY ZMZINDIR.
BPEL57*       COPY ZMZVALNM.
BPEL57*       COMPUTE MOVC-ICAUORI = (W-COM-NUM / 10 ** M-D(IND1))
BPEL57*    END-IF.
"     *------------------------------------------------ VMATRICE        TS011968
"          MOVE 'ZCA121301'                   TO W-DECOD                TS011885
"          MOVE WRK-C                         TO C                      TS011886
"          COPY ZMZINDIR.                                               TS011887
"          IF MOD(M-I(IND1):M-L(IND1))  NOT = SPACES                    TS011901
"             MOVE MOD(M-I(IND1):M-L(IND1))      TO MOVC-VMATRICE       TS011902
"           ELSE                                                        TS011903
"             MOVE WPRCSC-VMATRICE(IND22)        TO MOVC-VMATRICE       TS011904
"           END-IF                                                      TS011905
"     *---------------------------------------------------------        TS011975
"          MOVE SPACES                        TO W-F-EX                 TS011976
"          IF MOVC-TCODCAU = 1                                          TS011977
"             PERFORM 1085-TRATTA-TCAUIC-98                             TS011978
"                THRU 1085-TRATTA-TCAUIC-98-END                         TS011979
"             IF L-ERR-ERR OR W-EXIT                                    TS011980
"                GO TO 1080-WPRCSC-TTCAU-98-END                         TS011981
"             END-IF                                                    TS011982
"          END-IF                                                       TS011983
"          IF MOVC-ICAU = 0                                             TS011984
"             GO TO 1080-WPRCSC-TTCAU-98-END                            TS011985
"          END-IF                                                       TS011986
"     *----------------------------- VIENE INTABELLATO IL MOVIMENTO     TS011987
"          MOVE SPACES                        TO W-F-EX                 TS011988
000142     MOVE ZEROES                        TO MOVC-NPRGRIGA          TS003031
"          PERFORM 1090-INTAB-TTCAU-98                                  TS011989
"             THRU 1090-INTAB-TTCAU-98-END                              TS011990
"              VARYING INDC FROM 1 BY 1                                 TS011991
"               UNTIL INDC > 50                                         TS011992
"                 OR L-ERR-ERR  OR W-EXIT                               TS011994
"          IF L-ERR-ERR  OR W-EXIT                                      TS011995
"             GO TO 1080-WPRCSC-TTCAU-98-END                            TS011996
"          END-IF.                                                      TS011997
"                                                                       TS011998
"      1080-WPRCSC-TTCAU-98-END.                                        TS011999
000092     EXIT.                                                        TS012000
                                                                        TS012001
000092*--------------------------                                       TS012002
"      1081-WPRCSC-TTCAU-CAA.                                           TS012003
"     *---------------------------------------------------------------  TS012004
"     * IN QUESTO CASO LE INFORMAZIONI DELLA CAUSALE SONO SPECIFICATE   TS012005
"     * IND1   ----> ICAU                                               TS012006
"     * IND2   ----> ICAUORI                                            TS012007
"     *---------------------------------------------------------------  TS012008
"     *---------------------------------------------- IMP1/8 ----       TS012022
"          IF WRK-TTIMPCAU(1:3) = 'IMP'                                 TS012023
"             IF WRK-TTIMPCAU(4:1) NUMERIC                              TS012024
"                MOVE WRK-TTIMPCAU        TO W-XXXN                     TS012025
"                MOVE 'ZDI040401'         TO W-DECOD                    TS012026
"                MOVE W-XXXN-N            TO C                          TS012027
"             END-IF                                                    TS012029
"     *---------------------------------------------- IMPO  -----       TS012009
"             IF WRK-TTIMPCAU(4:1)= 'O'                                 TS012010
"                MOVE 'ZOP023601'          TO W-DECOD                   TS012011
"                COPY ZMZINDIR.                                         TS012012
"                MOVE IND1                 TO IND2                      TS012013
"                MOVE 'ZOR030501'          TO W-DECOD                   TS012014
"             END-IF                                                    TS012016
"     *---------------------------------------------- IMPM  -----       TS012009
"             IF WRK-TTIMPCAU(4:1) = 'M'                                TS012024
"                IF WPRKSC-TTDIVA(IND21) = 'ORD'                        TS012024
"                   MOVE 'ZOR030501'        TO W-DECOD                  TS012025
"                END-IF                                                 TS012029
"                IF WPRKSC-TTDIVA(IND21)(1:2) = 'DV'                    TS012024
"                   MOVE WPRKSC-TTDIVA(IND21) TO W-XXN                  TS012025
"                   MOVE 'ZDI040401'          TO W-DECOD                TS012026
"                   MOVE W-XXN-N              TO C                      TS012027
"                END-IF                                                 TS012029
"             END-IF                                                    TS012029
"          END-IF.                                                      TS012029
"     *---------------------------------------------- CTV1/8 ----       TS012030
"          IF WRK-TTIMPCAU(1:3) = 'CTV'                                 TS012031
"             IF WRK-TTIMPCAU(4:1) NUMERIC                              TS012032
"                MOVE WRK-TTIMPCAU        TO W-XXXN                     TS012033
"                MOVE 'ZDI040601'         TO W-DECOD                    TS012034
"                MOVE W-XXXN-N            TO C                          TS012035
"             END-IF                                                    TS012021
"     *---------------------------------------------- CTVO  -----       TS012017
"             IF WRK-TTIMPCAU(4:1) = 'O'                                TS012018
"                MOVE 'ZOR030601'          TO W-DECOD                   TS012019
"             END-IF                                                    TS012021
"     *---------------------------------------------- CTVM  -----       TS012017
"             IF WRK-TTIMPCAU(4:1) = 'M'                                TS012018
"                MOVE WPRKSC-TTDIVA(IND21)     TO W-XXN-N               TS012019
"                MOVE 'ZDI040601'              TO W-DECOD               TS012019
"                MOVE W-XXN-N                  TO C                     TS012019
"             END-IF                                                    TS012021
"          END-IF.                                                      TS012037
"     *---------------------------------------------- IE01/10 --        TS012038
"          IF WRK-TTIMPCAU(1:2) = 'IE'                                  TS012039
"             IF WRK-TTIMPCAU(3:2) NUMERIC                              TS012040
"                MOVE WRK-TTIMPCAU        TO W-XXNN                     TS012041
"                MOVE 'ZEC112901'         TO W-DECOD                    TS012042
"                MOVE W-XXNN-N            TO C                          TS012043
"             END-IF                                                    TS012045
"          END-IF.                                                      TS012045
"     *---------------------------------------------- IR01/10 --        TS012046
"          IF WRK-TTIMPCAU(1:2) = 'IR'                                  TS012047
"             IF WRK-TTIMPCAU(3:2) NUMERIC                              TS012048
"                MOVE WRK-TTIMPCAU        TO W-XXNN                     TS012049
"                MOVE 'ZEC113001'         TO W-DECOD                    TS012050
"                MOVE W-XXNN-N            TO C                          TS012051
"             END-IF                                                    TS012045
"          END-IF.                                                      TS012053
"     *---------------------------------------------- CE01/10 --        TS012054
"          IF WRK-TTIMPCAU(1:2) = 'CE'                                  TS012055
"             IF WRK-TTIMPCAU(3:2) NUMERIC                              TS012056
"                MOVE WRK-TTIMPCAU        TO W-XXNN                     TS012057
"                MOVE 'ZEC113001'         TO W-DECOD                    TS012058
"                MOVE W-XXNN-N            TO C                          TS012059
"             END-IF                                                    TS012061
"          END-IF.                                                      TS012061
"                                                                       TS012062
"          COPY ZMZINDIR.                                               TS012063
"          COPY ZMZVALNM.                                               TS012063
"          COMPUTE MOVC-ICAU = W-COM-NUM / 10 ** M-D(IND1)              TS012064
CAR355*    MOVE MOD(M-I(IND2):M-L(IND2))    TO  MOVC-ICAUORI.
CAR355     MOVE ZERO                        TO  MOVC-ICAUORI.
"          MOVE WPRCSC-TTINTESC(IND22)      TO  MOVC-TMOVCAU.           TS012066
"          IF MOVC-TMOVCAU = 'I'                                        TS012067
"             COMPUTE MOVC-ICAUORI  = MOVC-ICAUORI * -1                 TS012068
"          END-IF                                                       TS012069
"                                                                       TS012070
"     *------------------  IL RECORD DI AMOVC VIENE RIEMPITO            TS012071
"     *---------------------- DIVERSAMENTE IN FUNZIONE DEL VALORE       TS012072
"     *------------------------- DEL TIPO CAUSALE MOVIMENTO (TTTPCAU)   TS012073
"                                                                       TS012074
"     *------------------- SE CODICE CAUSALE  -- TTTPCAU -->  'COD'     TS012075
"          IF WPRCSC-TTTPCAU(IND22)  = 'COD'                            TS012076
"     *----------------------------------------------------------       TS012077
"             MOVE WPRCSC-CCAUFISSA(IND22)    TO MOVC-CCAUIC            TS012078
"             IF MOVC-CCAUIC = ZEROES                                   TS012079
"                MOVE 'SI'                TO W-FLAG-EXIT                TS012080
"                MOVE 'E'                 TO M-S(W-CAU)                 TS012081
"                MOVE M-M(W-CAU)          TO W-MAP-ERR                  TS012082
"                MOVE W-COORD-CAU         TO W-MOD-ERR                  TS012083
"                MOVE 2                   TO W-FLAG-ERR                 TS012084
"                MOVE 'S058'              TO W-COD-ERR                  TS012085
"                PERFORM 9999-GESTIONE-ERRORE                           TS012086
"                   THRU 9999-GESTIONE-ERRORE-END                       TS012087
"                GO TO 1081-WPRCSC-TTCAU-CAA-END                        TS012088
"             END-IF                                                    TS012089
"             MOVE 1                         TO MOVC-TCODCAU            TS012090
"             MOVE WPRCSC-TTINTESC(IND22)    TO MOVC-TMOVCAU            TS012091
"             MOVE WPRCSC-VMATRICE(IND22)    TO MOVC-VMATRICE           TS012092
"             MOVE SPACES                        TO W-F-EX              TS012093
"             IF MOVC-TCODCAU = 1                                       TS012094
"                PERFORM 1085-TRATTA-TCAUIC-98                          TS012095
"                   THRU 1085-TRATTA-TCAUIC-98-END                      TS012096
"                IF L-ERR-ERR OR W-EXIT                                 TS012097
"                   GO TO 1081-WPRCSC-TTCAU-CAA-END                     TS012098
"                END-IF                                                 TS012099
"             END-IF                                                    TS012100
"          END-IF                                                       TS012101
"     *------------------- SE BANCA DI GIRO  -- TTTPCAU -->  'GIR'      TS012102
"          IF WPRCSC-TTTPCAU(IND22)  = 'GIR'                            TS012103
"     *----------------------------------------------------------       TS012104
"             IF WRK-CABIBCA = ZEROES                                   TS012105
"                MOVE 'SI'                TO W-FLAG-EXIT                TS012080
"                MOVE 2                   TO W-FLAG-ERR                 TS012084
"                MOVE 'S152'              TO W-COD-ERR                  TS012085
000164           MOVE '0'                 TO W-MAP-ERR                  TS012085
"                PERFORM 9999-GESTIONE-ERRORE                           TS012086
"                   THRU 9999-GESTIONE-ERRORE-END                       TS012087
"                GO TO 1081-WPRCSC-TTCAU-CAA-END                        TS012088
"             END-IF                                                    TS012089
"             MOVE WRK-CABIBCA               TO MOVC-CCAUIC             TS012105
"                                               MOVC-CODABI             TS012108
"             MOVE WPRCSC-VMATRICE(IND22)    TO MOVC-VMATRICE           TS012106
"             MOVE 2                         TO MOVC-TCODCAU            TS012107
"             MOVE ZEROES                    TO MOVC-ICAUORI            TS012109
"             MOVE ZEROES                    TO MOVC-CDPZGINT           TS012110
"          END-IF                                                       TS012111
"                                                                       TS012112
APV115*------------------- SE BANCA DI GIRO  -- TTTPCAU -->  'RAB'
APV115     IF WPRCSC-TTTPCAU(IND22)  = 'RAB'
APV115*----------------------------------------------------------
APV115        IF WRK-CABIBCA = ZEROES
APV115           MOVE 'SI'                TO W-FLAG-EXIT
APV115           MOVE 2                   TO W-FLAG-ERR
APV115           MOVE 'S152'              TO W-COD-ERR
APV115           MOVE '0'                 TO W-MAP-ERR
APV115           PERFORM 9999-GESTIONE-ERRORE
APV115              THRU 9999-GESTIONE-ERRORE-END
APV115           GO TO 1081-WPRCSC-TTCAU-CAA-END
APV115        END-IF
APV115        MOVE WRK-CABIBCA               TO MOVC-CCAUIC
APV115                                          MOVC-CODABI
APV115        MOVE WPRCSC-VMATRICE(IND22)    TO MOVC-VMATRICE
APV115        MOVE 4                         TO MOVC-TCODCAU
APV115        MOVE ZEROES                    TO MOVC-ICAUORI
APV115        MOVE ZEROES                    TO MOVC-CDPZGINT
APV115     END-IF
"     *------------------ SE DIVISA ARBITRAG -- TTTPCAU -->  'ARB'      TS012113
"          IF WPRCSC-TTTPCAU(IND22)  = 'ARB'                            TS012114
"     *----------------------------------------------------------       TS012115
"             MOVE W-CMODUIC                 TO MOVC-CCAUIC             TS012116
"             MOVE WRK-CABIBCA               TO MOVC-CODABI             TS012119
"             MOVE WPRCSC-VMATRICE(IND22)    TO MOVC-VMATRICE           TS012117
"             MOVE 3                         TO MOVC-TCODCAU            TS012118
"             MOVE ZEROES                    TO MOVC-ICAUORI            TS012120
"             MOVE ZEROES                    TO MOVC-CDPZGINT           TS012121
"          END-IF                                                       TS012122
"     *------------------------ INTABELLA AMOVC --------                TS012123
"          MOVE SPACES                        TO W-F-EX                 TS012124
000142     MOVE ZEROES                        TO MOVC-NPRGRIGA          TS003031
"          PERFORM 1090-INTAB-TTCAU-98                                  TS012125
"             THRU 1090-INTAB-TTCAU-98-END                              TS012126
"              VARYING INDC FROM 1 BY 1                                 TS012127
"               UNTIL INDC > 50                                         TS012128
"                 OR L-ERR-ERR  OR W-EXIT                               TS012130
"          IF L-ERR-ERR  OR W-EXIT                                      TS012131
"             GO TO 1081-WPRCSC-TTCAU-CAA-END                           TS012132
"          END-IF.                                                      TS012133
"                                                                       TS012134
"      1081-WPRCSC-TTCAU-CAA-END.                                       TS012135
000092     EXIT.                                                        TS012136

000377 1082-TTRNDG.                                                     TS012137
000377*--------------- RIPULITI I CAMPI CODABI E SWFNDG UTILIZZATI PER
000377*                               IL CONTO DEL'ORDINE/BENEFICIARIO.
000377     MOVE ZEROES         TO WRK-CAU-2000-CODABI.
000377     MOVE SPACES         TO WRK-CAU-2000-SWFNDG.
000377*------------------  PRELEVATO IL CODICE ABI E L'INDIRIZZO SWIFT
000377*------------- DA UTLIZZARE NELLA DISCRIMINANTE DEL C/REGOLAMENTO
000377     MOVE 'ZOR031801'            TO W-DECOD
000377     COPY ZMZINDIR.
000377     MOVE MOD(M-I(IND1):M-L(IND1)) TO WRK-ORDINANTE
000377     MOVE SPACES     TO WRK-CNTR-CAMPO123
000377*---------------------------------------------- CONTROLLO TRNDG1
000077     IF WPRKSC-TTRNDG1(IND21)  = 'ORD'
000377*------------------------------------------- SWIFT NDG
000377        IF WRK-ORDINANTE NOT = SPACES
000377          MOVE 'ZOR032701'      TO W-DECOD
000377          COPY ZMZINDIR.
000377          MOVE MOD(M-I(IND1):M-L(IND1)) TO WRK-CAU-2000-SWFNDG
000377*------------------------------------------- CODICE ABI
000377          MOVE 'ZOR033101'      TO W-DECOD
000377          COPY ZMZINDIR.
000377          COPY ZMZVALNM.
000377          COMPUTE WRK-CAU-2000-CODABI =
000377                                   W-COM-NUM / 10 **(M-D(IND1))
000377        ELSE
000377          MOVE 'SI'           TO WRK-CNTR-CAMPO123
000377        END-IF
000377     ELSE
000377        IF WPRKSC-TTRNDG1(IND21)(1:1) = 'F'
000377           MOVE WPRKSC-TTRNDG1(IND21)   TO W-XNN
000377*--------------------------------------------- SWIFT NDG
000377           MOVE 'ZND060101'            TO W-DECOD
000377           MOVE W-XNN-N                TO C
000377           COPY ZMZINDIR.
000377           IF MOD(M-I(IND1):M-L(IND1)) NOT = SPACES
000377*--------------------------------------------- SWIFT NDG
000377              MOVE 'ZND061001'            TO W-DECOD
000377              MOVE W-XNN-N                TO C
000377              COPY ZMZINDIR.
000377              MOVE MOD(M-I(IND1):M-L(IND1)) TO WRK-CAU-2000-SWFNDG
000377*--------------------------------------------- CODICE ABI
000377              MOVE WPRKSC-TTRNDG1(IND21)   TO W-XNN
000377              MOVE 'ZND061401'            TO W-DECOD
000377              MOVE W-XNN-N                TO C
000377              COPY ZMZINDIR.
000377              COPY ZMZVALNM.
000377              COMPUTE WRK-CAU-2000-CODABI =
000377                            W-COM-NUM / 10 **(M-D(IND1))
000377           ELSE
000377              MOVE 'SI'           TO WRK-CNTR-CAMPO123
000377           END-IF
000377*---------------------------------------------- RIFERIMENTO
000377*--------------------------------------------------- FIGURA
000377        ELSE
000377          IF WPRKSC-TTRNDG1(IND21)(1:1) = 'R'
000377             MOVE WPRKSC-TTRNDG1(IND21)  TO W-XNN
000377             MOVE 'ZRA093901'            TO W-DECOD
000377             MOVE W-XNN-N                 TO C
000377             COPY ZMZINDIR.
000377             COPY ZMZVALNM.
000377             COMPUTE WRK-CAU-2000-CODABI =
000377                           W-COM-NUM / ( 10 ** M-D(IND1))
000377          ELSE
000377              MOVE 'SI'       TO WRK-CNTR-CAMPO123
000377          END-IF
000377        END-IF
000377     END-IF
000377*---------------------------------------------- CONTROLLO TNDG2
000377     IF WRK-CNTR-CAMPO123 = 'SI'
000377        IF WPRKSC-TTRNDG2(IND21)  = 'ORD'
000377         IF WRK-ORDINANTE NOT = SPACES
000377*------------------------------------------ SWIFT NDG
000377            MOVE 'ZOR032701'      TO W-DECOD
000377            COPY ZMZINDIR.
000377            MOVE MOD(M-I(IND1):M-L(IND1)) TO WRK-CAU-2000-SWFNDG
000377*------------------------------------------- CODICE ABI
000377            MOVE 'ZOR033101'      TO W-DECOD
000377            COPY ZMZINDIR.
000377            COPY ZMZVALNM.
000377            COMPUTE WRK-CAU-2000-CODABI =
000377                               W-COM-NUM / 10 **(M-D(IND1))
000377            MOVE SPACES         TO WRK-CNTR-CAMPO123
000377         ELSE
000377            MOVE 'SI'           TO WRK-CNTR-CAMPO123
000377         END-IF
000377        ELSE
000377           IF WPRKSC-TTRNDG2(IND21)(1:1) = 'F'
000377              MOVE WPRKSC-TTRNDG2(IND21) TO W-XNN
000377*--------------------------------------------- CODICE NDG
000377              MOVE 'ZND060101'            TO W-DECOD
000377              MOVE W-XNN-N                TO C
000377              COPY ZMZINDIR.
000377              IF MOD(M-I(IND1):M-L(IND1)) NOT = SPACES
000377*--------------------------------------------- SWIFT NDG
000377                 MOVE 'ZND061001'            TO W-DECOD
000377                 MOVE W-XNN-N                TO C
000377                 COPY ZMZINDIR.
000377                 MOVE MOD(M-I(IND1):M-L(IND1))
000377                                       TO WRK-CAU-2000-SWFNDG
000377*--------------------------------------------- CODICE ABI
000377                 MOVE WPRKSC-TTRNDG2(IND21)   TO W-XNN
000377                 MOVE 'ZND061401'            TO W-DECOD
000377                 MOVE W-XNN-N                TO C
000377                 COPY ZMZINDIR.
000377                 COPY ZMZVALNM.
000377                 COMPUTE WRK-CAU-2000-CODABI =
000377                                   W-COM-NUM / 10 **(M-D(IND1))
000377                 MOVE SPACES     TO WRK-CNTR-CAMPO123
000377              ELSE
000377                MOVE 'SI'           TO WRK-CNTR-CAMPO123
000377              END-IF
000377           ELSE
000377             IF WPRKSC-TTRNDG2(IND21)(1:1) = 'R'
000377                MOVE WPRKSC-TTRNDG2(IND21)  TO W-XNN
000377                MOVE 'ZRA093901'            TO W-DECOD
000377                MOVE W-XNN-N                 TO C
000377                COPY ZMZINDIR.
000377                COPY ZMZVALNM.
000377                COMPUTE WRK-CAU-2000-CODABI =
000377                              W-COM-NUM / ( 10 ** M-D(IND1))
000377                 MOVE SPACES     TO WRK-CNTR-CAMPO123
000377             ELSE
000377                 MOVE 'SI'       TO WRK-CNTR-CAMPO123
000377              END-IF
000377           END-IF
000377        END-IF
000377     END-IF
000377*---------------------------------------------  CONTROLLO TNDG3
000377     IF WRK-CNTR-CAMPO123 = 'SI'
000377        IF WPRKSC-TTRNDG3(IND21)  = 'ORD'
000377           IF WRK-ORDINANTE NOT = SPACES
000377*------------------------------------------- SWIFT NDG
000377               MOVE 'ZOR032701'      TO W-DECOD
000377               COPY ZMZINDIR.
000377               MOVE MOD(M-I(IND1):M-L(IND1))
000377                                  TO WRK-CAU-2000-SWFNDG
000377*------------------------------------------- CODICE ABI
000377               MOVE 'ZOR033101'      TO W-DECOD
000377               COPY ZMZINDIR.
000377               COPY ZMZVALNM.
000377               COMPUTE WRK-CAU-2000-CODABI =
000377                               W-COM-NUM / 10 **(M-D(IND1))
000377               MOVE SPACES     TO WRK-CNTR-CAMPO123
000377           ELSE
000377               MOVE 'SI'       TO WRK-CNTR-CAMPO123
000377           END-IF
000377        ELSE
000377                IF WPRKSC-TTRNDG3(IND21)(1:1) = 'F'
000377                    MOVE WPRKSC-TTRNDG3(IND21) TO W-XNN
000377*--------------------------------------------- CODICE NDG
000377                    MOVE 'ZND060101'            TO W-DECOD
000377                    MOVE W-XNN-N                TO C
000377                    COPY ZMZINDIR.
000377                    IF MOD(M-I(IND1):M-L(IND1)) NOT = SPACES
000377*--------------------------------------------- SWIFT NDG
000377                       MOVE 'ZND061001'            TO W-DECOD
000377                       MOVE W-XNN-N                TO C
000377                       COPY ZMZINDIR.
000377                       MOVE MOD(M-I(IND1):M-L(IND1))
000377                                  TO WRK-CAU-2000-SWFNDG
000377*--------------------------------------------- CODICE ABI
000377                       MOVE WPRKSC-TTRNDG3(IND21)   TO W-XNN
000377                       MOVE 'ZND061401'            TO W-DECOD
000377                       MOVE W-XNN-N                TO C
000377                       COPY ZMZINDIR.
000377                       COPY ZMZVALNM.
000377                       COMPUTE WRK-CAU-2000-CODABI =
000377                                      W-COM-NUM / 10 **(M-D(IND1))
000377                       MOVE SPACES     TO WRK-CNTR-CAMPO123
000377                    ELSE
000377                      MOVE 'SI'       TO WRK-CNTR-CAMPO123
000377                    END-IF
000377                ELSE
000377                  IF WPRKSC-TTRNDG3(IND21)(1:1) = 'R'
000377                     MOVE WPRKSC-TTRNDG3(IND21)  TO W-XNN
000377                     MOVE 'ZRA093901'            TO W-DECOD
000377                     MOVE W-XNN-N                 TO C
000377                     COPY ZMZINDIR.
000377                     COPY ZMZVALNM.
000377                     COMPUTE WRK-CAU-2000-CODABI =
000377                                 W-COM-NUM / ( 10 ** M-D(IND1))
000377                  ELSE
000377                    MOVE 'SI'       TO WRK-CNTR-CAMPO123
000377                  END-IF
000377                END-IF
000377        END-IF
000377     END-IF
000377*-------------------------------------------------  ERRORE
000377     IF WRK-CNTR-CAMPO123 = 'SI'
000377        IF WPRKSC-TTSGNL(IND21)  = 'WG' OR 'WR'
000377           MOVE 'FIG REGOL:'             TO WCM-MTX-DESCR(1:10)
000377           MOVE WPRKSC-TTRNDG2(IND21)    TO WCM-MTX-DESCR(11:3)
000377           MOVE 'ASSENTE X SEGN.'        TO WCM-MTX-DESCR(15:15)
000377           MOVE  WPRKSC-TTSGNL(IND21)    TO WCM-MTX-DESCR(31:3)
000377           MOVE '0'                      TO W-MAP-ERR
000377           MOVE 2                        TO W-FLAG-ERR
000377           MOVE 'S196'                   TO W-COD-ERR
000377           MOVE WCM-ERR-MTX               TO W-DES-ERR
000377           PERFORM 9999-GESTIONE-ERRORE
000377             THRU 9999-GESTIONE-ERRORE-END
000377       END-IF
000377     END-IF.

000377 1082-TTRNDG-END.
000377     EXIT.

000377 1083-RISCRIVI-TTCNT1.
000377*-----------------------------------------------------------------
000377* PER ALCUNE SEGNALAZIONI E' NECESSARIO VALORIZZARE IL CTO ORDIN.
000377* IN FUNZIONE DELLA FIGURA DELL'ORDINANTE E RIPULIRE IL CAMPO
000377* DELLA FIGURA PRECEDENTEMENTE IMPOSTATO.
000377*-----------------------------------------------------------------
000377     IF WPRKSC-TTSGNL(IND21) = 'WR'
000377        MOVE SPACES          TO WRK-CSC-TTFIG
000377        IF WRK-CAU-2000-CODABI = ISTI-CIST
000377           MOVE 'IST'         TO WRK-CSC-TTCNT1
000377        END-IF
000377        GO TO 1083-RISCRIVI-TTCNT1-END
000377     END-IF
000377
000377     IF WRK-CAU-2000-CTIPSTC = ( 101 OR 116 )
000377*----------------------------'SG' ->  C/RECIPROCO STANZA
000377        MOVE 'BCNSG'       TO WRK-CSC-TTCNT1
000377     ELSE
000377        IF WRK-CAU-2000-FTPGEST = 1
000434        OR = 6
000377*-------------------------------------TARGET O NON TARGET
000377           IF WRK-CAU-2000-CTIPSTC = 112 OR 103
000377              IF WRK-CAU-2000-CODABI = 1000
000377                 MOVE 'BCRTG'           TO WRK-CSC-TTCNT1
000377              ELSE
000377                 MOVE 'BCRIB'  TO WRK-CSC-TTCNT1
000377              END-IF
000377           ELSE
000377*-------------------------------------- EBA O NON EBA
000377              IF WRK-CAU-2000-FRSDSTC = 2
000377                 IF WRK-CAU-2000-CTIPSTC NOT = 101 AND 116
000377                    IF WRK-CAU-2000-SWFNDG NOT = 'EBAX'
BPO239                       IF WRK-CAU-2000-CTIPSTC = 400
BPO239                          MOVE 'CLNRE'          TO WRK-CSC-TTCNT1
BPO239                       ELSE
000377                          IF  WRK-CAU-2000-FRSTNDG = 2
000377                              MOVE 'BCNCL'  TO WRK-CSC-TTCNT1
000377                          ELSE
000377                              MOVE 'CLNRE'  TO WRK-CSC-TTCNT1
000377                          END-IF
BPO239                       END-IF
000377                    ELSE
000377                       MOVE 'BCNEB'         TO WRK-CSC-TTCNT1
000377                    END-IF
000377                 END-IF
000377              END-IF
000377           END-IF
000377        END-IF
000377     END-IF.
000377 1083-RISCRIVI-TTCNT1-END.
000377     EXIT.

000092*---------------------                                            TS012139
"      1085-TRATTA-TCAUIC-98.                                           TS012140
"     *---------------------------------------------------------------  TS012141
"     * SI VERIFICA LA COMPATIBILITA' TRA IL TIPO CAUSALE E IL TIPO     TS012142
"     * DI MOVIMENTO CAUSALE.                                           TS012143
"     *---------------------------------------------------------------  TS012144
"          MOVE MOVC-CIST             TO CAUIC-CIST.                    TS012145
"          MOVE MOVC-CCAUIC           TO CAUIC-CCAUIC.                  TS012146
"          PERFORM 1032-LEGGI-TCAUIC                                    TS012147
"             THRU 1032-LEGGI-TCAUIC-END.                               TS012148
"          IF W-SQL-NON-TROVATO                                         TS012149
"             MOVE 'SI'         TO W-FLAG-EXIT                          TS012150
"             MOVE '0'          TO W-MAP-ERR                            TS012151
"             MOVE 2            TO W-FLAG-ERR                           TS012152
"             MOVE 'S064'       TO W-COD-ERR                            TS012153
"             PERFORM 9999-GESTIONE-ERRORE                              TS012154
"                THRU 9999-GESTIONE-ERRORE-END                          TS012155
"             GO TO 1085-TRATTA-TCAUIC-98-END                           TS012156
"          ELSE                                                         TS012157
"             IF NOT W-SQL-OK                                           TS012158
"                MOVE 8                          TO W-FLAG-ERR          TS012159
"                MOVE '9999'                     TO W-COD-ERR           TS012160
"                MOVE 'TBTCAUIC'                 TO L-NOME-TABELLA      TS012161
"                MOVE W-SQLCODE                  TO L-CODICE-SQL        TS012162
"                MOVE 'ZMBSVIL0'                 TO L-MODULO            TS012163
"                MOVE '1085-TRATTA-TCAUIC-98'    TO L-SUB-MODULO        TS012164
"                PERFORM 9999-GESTIONE-ERRORE                           TS012165
"                   THRU 9999-GESTIONE-ERRORE-END                       TS012166
"                GO TO 1085-TRATTA-TCAUIC-98-END                        TS012167
"             END-IF                                                    TS012168
"          END-IF.                                                      TS012169
"     *----------------------------------- VERIFICO CHE SIA UNA         TS012171
"     *----------------------------------- CAUSALE MOVIMENTABILE        TS012172
000142*    IF MOVC-TMOVCAU = 0                                          TS012173
000142     IF CAUIC-TCAU  = 0                                           TS012173
000092         MOVE 'SI'             TO W-FLAG-EXIT                     TS012175
"              MOVE '0'              TO W-MAP-ERR                       TS012176
"              MOVE 2                TO W-FLAG-ERR                      TS012177
"              MOVE 'S153'           TO W-COD-ERR                       TS012178
"              PERFORM 9999-GESTIONE-ERRORE                             TS012179
"                 THRU 9999-GESTIONE-ERRORE-END                         TS012180
"              GO TO 1085-TRATTA-TCAUIC-98-END                          TS012181
"          END-IF.                                                      TS012182
"     *----------------------------------- COMPATIBILITA' TRA           TS012171
"     *----------------------------------- TMOVCAU E IMOVCAU            TS012172
"          IF MOVC-TMOVCAU = 'I' AND                                    TS012173
"             CAUIC-TCAU   = 2                                          TS012174
"              MOVE 'SI'             TO W-FLAG-EXIT                     TS012175
"              MOVE '0'              TO W-MAP-ERR                       TS012176
"              MOVE 2                TO W-FLAG-ERR                      TS012177
"              MOVE 'S060'           TO W-COD-ERR                       TS012178
"              PERFORM 9999-GESTIONE-ERRORE                             TS012179
"                 THRU 9999-GESTIONE-ERRORE-END                         TS012180
"              GO TO 1085-TRATTA-TCAUIC-98-END                          TS012181
"          END-IF.                                                      TS012182
"                                                                       TS012183
"          IF MOVC-TMOVCAU = 'E' AND                                    TS012184
"             CAUIC-TCAU   = 1                                          TS012185
"               MOVE 'SI'             TO W-FLAG-EXIT                    TS012186
"               MOVE '0'              TO W-MAP-ERR                      TS012187
"               MOVE 2                TO W-FLAG-ERR                     TS012188
"               MOVE 'S061'           TO W-COD-ERR                      TS012189
"               PERFORM 9999-GESTIONE-ERRORE                            TS012190
"                  THRU 9999-GESTIONE-ERRORE-END                        TS012191
"                GO TO 1085-TRATTA-TCAUIC-98-END                        TS012192
"          END-IF.                                                      TS012193
"                                                                       TS012194
"          IF CAUIC-TMVZ = 1 AND                                        TS012195
"             WRK-INOUT  > 3                                            TS012196
"              MOVE 'SI'             TO W-FLAG-EXIT                     TS012197
"              MOVE '0'              TO W-MAP-ERR                       TS012198
"              MOVE 2                TO W-FLAG-ERR                      TS012199
"              MOVE 'S062'           TO W-COD-ERR                       TS012200
"              MOVE 'SI'             TO W-FLAG-EXIT                     TS012201
"              PERFORM 9999-GESTIONE-ERRORE                             TS012202
"                 THRU 9999-GESTIONE-ERRORE-END                         TS012203
"              GO TO 1085-TRATTA-TCAUIC-98-END                          TS012204
"          END-IF.                                                      TS012205
"                                                                       TS012206
"          IF CAUIC-TMVZ = 2 AND                                        TS012207
"             WRK-INOUT < 3                                             TS012208
"                MOVE 'SI'                    TO W-FLAG-EXIT            TS012209
"                MOVE '0'                     TO W-MAP-ERR              TS012210
"                MOVE 2                       TO W-FLAG-ERR             TS012211
"                MOVE 'S063'                  TO W-COD-ERR              TS012212
"                PERFORM 9999-GESTIONE-ERRORE                           TS012213
"                   THRU 9999-GESTIONE-ERRORE-END                       TS012214
"                GO TO 1085-TRATTA-TCAUIC-98-END                        TS012215
"          END-IF.                                                      TS012216
"                                                                       TS012217
"      1085-TRATTA-TCAUIC-98-END.                                       TS012218
000092     EXIT.                                                        TS012219
                                                                        TS012220
000092*---------------------------------------------------------*       TS012221
"      1090-INTAB-TTCAU-98.                                             TS012222
"     *---------------------------------------------------------*       TS012223
"                                                                       TS012224
000452*--------------- SE L'IMPORTO E' ZERO LA CAUSALE NON VA GENERATA
000452     IF MOVC-ICAU NOT GREATER ZEROS
000452        GO TO 1090-INTAB-TTCAU-98-END
000452     END-IF.
000452*---------------------------------------------------------------
"          MOVE 'SI'                             TO W-ISRT-MOVC.        TS012225
"          MOVE SPACES                           TO W-EXPERFORM.        TS012226
"          IF ABSC-FRSTCAU = 3 AND                                      TS012227
"             MOVC-TCODCAU = 1                                          TS012228
"             MOVE 'SI'                          TO W-F-EX              TS012229
"             MOVE W-CIST                        TO CAUSC-CIST          TS012230
"             MOVE MOVP-CSTC                     TO CAUSC-CSTC          TS012231
"             MOVE MOVC-CCAUIC                   TO CAUSC-CCAUIC        TS012232
"             PERFORM 1041-LEGGI-TCAUSC                                 TS012233
"                THRU 1041-LEGGI-TCAUSC-END                             TS012234
"             GO TO 1090-INTAB-TTCAU-98-END                             TS012235
"          END-IF.                                                      TS012236
"                                                                       TS012237
"     *----------------------- NELLA TABELLA WRK-R-MOVC VIENE SCRITTO   TS012238
"     *-------------------------- UN RECORD PER OGNI NUMERO MOVIMENTO E TS012239
"     *------------------------------ SUBMOV DIVERSO, CON IL VALORE MAX TS012239
"     *---------------------------------- DI NPRGRIGA.                  TS012239
"          PERFORM                                                      TS012240
"             VARYING WRK-IND-INTAB FROM 1 BY 1                         TS012241
"               UNTIL WRK-IND-INTAB GREATER 35 OR                       TS012242
"                  (WRK-R-MOVC-NMOVP(WRK-IND-INTAB) = MOVC-NPRGMOVP     TS012243
"               AND WRK-R-MOVC-SUBMOVP(WRK-IND-INTAB) = MOVC-NSUBMOVP)  TS012244
"                  IF WRK-R-MOVC-NMOVP(WRK-IND-INTAB) = ZEROES          TS012245
"                     MOVE MOVC-NPRGMOVP                                TS012246
"                                 TO WRK-R-MOVC-NMOVP(WRK-IND-INTAB)    TS012247
"                     MOVE MOVC-NSUBMOVP                                TS012248
"                                 TO WRK-R-MOVC-SUBMOVP(WRK-IND-INTAB)  TS012249
"                     MOVE 36 TO WRK-IND-INTAB                          TS012250
"                  END-IF                                               TS012251
"          END-PERFORM.                                                 TS012252
"     *---------------------------------------------------------------- TS012253
"          IF WS-TAB-TBAMOVC(INDC) NOT = SPACES                         TS012254
"     *------------------------------- SU WT-TABMOVC VENGONO SCRITTI    TS012255
"     *---------------------------------- I RECORD DA INSERIRE; SE GIA' TS012256
"     *------------------------------------ VIENE AUMENTATO IL MPRGRIGA TS012256
"     *----------------------------------------  DI WRK-R-MOVC.         TS012256
"                                                                       TS012257
"            IF WS-MOVC-NPRGMOVP(INDC) = MOVC-NPRGMOVP                  TS012258
"             AND WS-MOVC-NSUBMOVP(INDC) = MOVC-NSUBMOVP                TS012259
"               MOVE ZEROES  TO W-LAST-NPRGRIGA                         TS012260
"               PERFORM                                                 TS012261
"                VARYING WRK-IND-INTAB FROM 1 BY 1                      TS012262
"                 UNTIL WRK-IND-INTAB GREATER 35                        TS012263
"                  OR WRK-R-MOVC-NMOVP(WRK-IND-INTAB) = ZEROES          TS012264
"                   IF WRK-R-MOVC-NMOVP(WRK-IND-INTAB) = MOVC-NPRGMOVP  TS012265
"                    AND WRK-R-MOVC-SUBMOVP(WRK-IND-INTAB)              TS012266
"                                                 = MOVC-NSUBMOVP       TS012267
"                      MOVE WRK-R-MOVC-NPRGRIGA-C(WRK-IND-INTAB)        TS012268
"                                                 TO W-LAST-NPRGRIGA    TS012269
"                      ADD 1                      TO W-LAST-NPRGRIGA    TS012270
"                      MOVE W-LAST-NPRGRIGA                             TS012271
"                               TO WRK-R-MOVC-NPRGRIGA-C(WRK-IND-INTAB) TS012272
"                     MOVE 36 TO WRK-IND-INTAB                          TS012273
"                   END-IF                                              TS012274
"               END-PERFORM                                             TS012275
"               MOVE W-LAST-NPRGRIGA           TO MOVC-NPRGRIGA         TS012276
"            END-IF                                                     TS012277
"          ELSE                                                         TS012278
"     *---------------------------- SE NON ANCORA REGISTRATO VIENE      TS012279
"     *------------------------------- INCREMENTATO NPRGRIGA DI AMOVC   TS012280
"     *-------------------------------------- E RIPORTATO SU WRK-R-MOVC.TS012280
"            IF MOVC-NPRGRIGA = ZEROES                                  TS012281
"               ADD 1        TO MOVC-NPRGRIGA                           TS012282
"               PERFORM                                                 TS012283
"                VARYING WRK-IND-INTAB FROM 1 BY 1                      TS012284
"                 UNTIL WRK-IND-INTAB GREATER 35                        TS012285
"                  OR WRK-R-MOVC-NMOVP(WRK-IND-INTAB) = ZEROES          TS012286
"                  IF WRK-R-MOVC-NMOVP(WRK-IND-INTAB) = MOVC-NPRGMOVP   TS012287
"                   AND WRK-R-MOVC-SUBMOVP(WRK-IND-INTAB)               TS012288
"                                                   = MOVC-NSUBMOVP     TS012289
"                    MOVE MOVC-NPRGRIGA                                 TS012290
"                           TO WRK-R-MOVC-NPRGRIGA-C(WRK-IND-INTAB)     TS012291
"                  END-IF                                               TS012292
"               END-PERFORM                                             TS012293
"            END-IF                                                     TS012294
"            IF MOVC-TMOVCAU = 'I'                                      TS012295
"               COMPUTE MOVC-ICAU = MOVC-ICAU * -1                      TS012296
"            END-IF                                                     TS012297

"     *---------------------------- IL RECORD DI AMOVC FINITO VIENE     TS012298
"     *----------------------------------REGISTRATO SU WS-TAB-TBAMOVC.  TS012298
"            MOVE DCLTBAMOVC                  TO WS-TAB-TBAMOVC(INDC)   TS012298

000142       IF WRK-CAUSALE-FISSA = 'S'                                 TS012298
000142          MOVE 'S'        TO WS-TAB-CAUSALE-FISSA(INDC)           TS012298
000142       ELSE                                                       TS012298
000142          MOVE SPACES     TO WS-TAB-CAUSALE-FISSA(INDC)           TS012298
000142       END-IF                                                     TS012298

000142       MOVE SPACES   TO WRK-CAUSALE-FISSA                         TS012298

"     *----------------------------  VENGONO RIPULITE LE AREA           TS012298
"     *-------------------------------- VALORIZZATE PER OGNI CAUSALE    TS012298
"            MOVE SPACES            TO MOVC-TMOVCAU                     TS012298
"                                      MOVC-SETTCLRES                   TS012298
"                                      MOVC-SETTEMITVM                  TS012298
"                                      MOVC-CSIGPAEMIT                  TS012298
"                                      MOVC-VMATRICE                    TS012298
"            MOVE ZEROES            TO MOVC-CCAUIC                      TS012298
"                                      MOVC-CDPZGINT                    TS012298
"                                      MOVC-ICAU                        TS012298
"                                      MOVC-TCODCAU                     TS012298
"                                      MOVC-CODABI                      TS012298
"                                      MOVC-ICAUORI                     TS012298
"                                      MOVC-NPRGRIGA                    TS012298
"            MOVE 51                TO INDC                             TS012299
"          END-IF.                                                      TS012300
                                                                        21271000
"                                                                       TS012301
"      1090-INTAB-TTCAU-98-END.                                         TS012302
000092     EXIT.                                                        TS012303
                                                                        TS012304
000092*---------------------------------------------------------*
"      1095-CONTROLLA-AMOVC.                                            TS012302
"     *---------------------------------------------------------*
"          MOVE WS-TAB-TBAMOVC(INDC)  TO DCLTBAMOVC.
"     *-------
"          IF MOVC-CCAUIC = 0
000142        OR MOVC-TCODCAU NOT = 1
"                GO TO 1095-CONTROLLA-AMOVC-END
"          END-IF.
"     *-------
"          IF MOVC-TCODCAU = 1
000142        MOVE W-CIST                TO CAUIC-CIST
"             MOVE MOVC-CCAUIC           TO CAUIC-CCAUIC
"             PERFORM 1032-LEGGI-TCAUIC
"                THRU 1032-LEGGI-TCAUIC-END
"             IF NOT W-SQL-OK
"                MOVE 8                          TO W-FLAG-ERR
"                MOVE '9999'                     TO W-COD-ERR
"                MOVE 'TBTCAUIC'                 TO L-NOME-TABELLA
"                MOVE W-SQLCODE                  TO L-CODICE-SQL
"                MOVE 'ZMBSVIL0'                 TO L-MODULO
"                MOVE '1095-CONTROLLA-AMOVC'     TO L-SUB-MODULO
"                PERFORM 9999-GESTIONE-ERRORE
"                   THRU 9999-GESTIONE-ERRORE-END
"                GO TO 1095-CONTROLLA-AMOVC-END
"             END-IF
"             IF L-ERR-ERR
"                GO TO 1095-CONTROLLA-AMOVC-END
"             END-IF
"     *-------
"             IF CAUIC-FUSOCAU  = 1
"                MOVE 'E'                        TO M-S(W-CAU)
"                MOVE M-M(W-CAU)                 TO W-MAP-ERR
"                MOVE W-COORD-CAU                TO W-MOD-ERR
"                MOVE 2                          TO W-FLAG-ERR
"                MOVE 'S131'                     TO W-COD-ERR
"                PERFORM 9999-GESTIONE-ERRORE
"                THRU 9999-GESTIONE-ERRORE-END
"             END-IF
"             IF CAUIC-FVLDCAU = 4
"                MOVE 'E'                        TO M-S(W-CAU)
"                MOVE M-M(W-CAU)                 TO W-MAP-ERR
"                MOVE W-COORD-CAU                TO W-MOD-ERR
"                MOVE 2                          TO W-FLAG-ERR
"                MOVE 'S132'                     TO W-COD-ERR
"                PERFORM 9999-GESTIONE-ERRORE
"                THRU 9999-GESTIONE-ERRORE-END
"             END-IF
"             IF CAUIC-FVLDCAU = 2
APV157        AND WRK-FLAG-CAU-2000 = 1
000092           MOVE 'E'                        TO M-S(W-CAU)
"                MOVE M-M(W-CAU)                 TO W-MAP-ERR
"                MOVE W-COORD-CAU                TO W-MOD-ERR
"                MOVE 2                          TO W-FLAG-ERR
"                MOVE 'S133'                     TO W-COD-ERR
"                PERFORM 9999-GESTIONE-ERRORE
"                   THRU 9999-GESTIONE-ERRORE-END
"             END-IF
"     *----------------------------------
"          END-IF
"          IF M-S(W-STC) = SPACES
"             INITIALIZE DCLTBTOBMTX                                    TS012805
"             MOVE W-CIST           TO OBMTX-CIST                       TS012806
"             MOVE MOVC-VMATRICE    TO OBMTX-VMATRICE                   TS012807
              EXEC CICS DELAY REQID('CAUS') END-EXEC
              EXEC CICS DELAY REQID(CAUIC-CCAUIC) END-EXEC
              EXEC CICS DELAY REQID('MATR') END-EXEC
              EXEC CICS DELAY REQID(OBMTX-VMATRICE) END-EXEC
"             PERFORM 1193-SOTTOVOCE                                    TS012808
"                THRU 1193-SOTTOVOCE-END                                TS012809
"             PERFORM 1194-LEGGI-TOBMTX                                 TS012810
"                THRU 1194-LEGGI-TOBMTX-END                             TS012811
"             IF W-SQL-OK                                               TS012810
"                PERFORM 1096-MTX-OBBLIGATORI                           TS012810
"                   THRU 1096-MTX-OBBLIGATORI-END                       TS012811
000377           MOVE DCLTBAMOVC     TO WS-TAB-TBAMOVC(INDC)
"             END-IF
"          END-IF.
000431*
"          IF MOVC-CCAUIC = 6620
"             MOVE MOVC-CSIGPAEMIT TO PAE-CSIGPAE
"          ELSE
"             MOVE MOVC-CSIGPAE    TO PAE-CSIGPAE
"          END-IF.
"          MOVE W-CIST             TO PAE-CIST.
"          IF PAE-CSIGPAE GREATER SPACES
"             PERFORM 0930-LEGGI-TBTPAE
"                THRU 0930-LEGGI-TBTPAE-END
"             IF L-ERR-ERR
"                GO TO 1095-CONTROLLA-AMOVC-END
"             END-IF
"             IF MOVC-CCAUIC = 6620
"                IF PAE-CPAE < 800
BPO422           AND (PAE-CPAE NOT = 589 AND                            22241000
BPO422               PAE-CPAE NOT = 590)
"                   MOVE 'SI'           TO W-FLAG-EXIT
"                   MOVE 'S207'         TO W-COD-ERR
"                   MOVE 0              TO W-MAP-ERR
"                   MOVE SPACES         TO WCM-PAE-DESCR1
"                   MOVE PAE-CSIGPAE    TO WCM-PAE-CSIGPAE
"                   MOVE ' ERRATA PER LA CAUSALE : ' TO WCM-PAE-DESCR
"                   MOVE MOVC-CCAUIC    TO WCM-PAE-DESCR1
"                   MOVE WCM-ERR-PAE    TO W-DES-ERR
"                   PERFORM 9999-GESTIONE-ERRORE
"                      THRU 9999-GESTIONE-ERRORE-END
"                END-IF
"             ELSE
BPO336           IF MOVC-CCAUIC NOT = 7010
BPO336          AND MOVC-CCAUIC NOT = 8706
"                   IF PAE-CPAE > 799
"                      MOVE 'SI'           TO W-FLAG-EXIT
"                      MOVE 'S208'         TO W-COD-ERR
"                      MOVE 0              TO W-MAP-ERR
"                      MOVE SPACES         TO WCM-PAE-DESCR1
"                      MOVE PAE-CSIGPAE    TO WCM-PAE-CSIGPAE
"                      MOVE ' ERRATA PER LA CAUSALE : ' TO WCM-PAE-DESCR
"                      MOVE MOVC-CCAUIC    TO WCM-PAE-DESCR1
"                      MOVE WCM-ERR-PAE    TO W-DES-ERR
"                      PERFORM 9999-GESTIONE-ERRORE
"                         THRU 9999-GESTIONE-ERRORE-END
"                   END-IF
BPO336           END-IF
"             END-IF
000431     END-IF.
"                                                                       TS012304
"      1095-CONTROLLA-AMOVC-END.                                        TS012302
000092     EXIT.                                                        TS012303
                                                                        TS012304
000092*---------------------                                            TS012304
"      1096-MTX-OBBLIGATORI.                                            TS012302
"     *-----------------------------------------------------------      TS012304
"     * CONTROLLA OBBLIGATORIETA' DEL CAMPO DELLA MATRICE SU AMOVC      TS012304
"     *-----------------------------------------------------------      TS012304
"
"          MOVE SPACES          TO WRK-ERRORE
BPL026     IF W-CAU = ZEROES THEN
BPL026        MOVE 1                          TO W-CAU
BPL026     END-IF.
"
"          IF OBMTX-FSETTCL = 'S'
"             AND MOVC-SETTCLRES = SPACES
"                MOVE 'S135'    TO WRK-ERRORE
"          END-IF.
"
"          IF OBMTX-FSETTEMIVM = 'S'
"             AND MOVC-SETTEMITVM = SPACES
"                MOVE 'S141'    TO WRK-ERRORE
"          END-IF.
"
"          IF OBMTX-FPAEMITVM = 'S'
"             AND MOVC-CSIGPAEMIT = SPACES
"                MOVE 'S142'    TO WRK-ERRORE
000377     ELSE
000377        PERFORM 1097-CONTROLLA-CSIGPAEMIT
000377           THRU 1097-CONTROLLA-CSIGPAEMIT-END
000092     END-IF.
"
000377*    MOVE MOVC-CSIGPAE               TO MOVC-CSIGPAEMIT

000377     IF OBMTX-FPAEMITVM = 'C'
000389     AND MOVC-CSIGPAEMIT = SPACES
000377        MOVE 'ZRA091301'        TO W-DECOD
000377        COPY ZMZINDIR.
000377        IF MOD(M-I(IND1):M-L(IND1)) NOT = SPACES
000377           MOVE MOD(M-I(IND1):M-L(IND1))   TO MOVC-CSIGPAEMIT
000377        ELSE
000377           IF MOVC-CSIGPAE  NOT = SPACES
000377              MOVE MOVC-CSIGPAE               TO MOVC-CSIGPAEMIT
000377           ELSE
000377               MOVE 'S142'    TO WRK-ERRORE
000377           END-IF
000377        END-IF
000377        IF W-EXIT
000377            GO TO 1096-MTX-OBBLIGATORI-END
000377        END-IF
000377     END-IF.

000092     IF OBMTX-FCODABI   = 'S'
"             AND MOVC-CODABI     = ZEROES
              EXEC CICS DELAY REQID('S143') END-EXEC
              EXEC CICS DELAY REQID('CAUS') END-EXEC
              EXEC CICS DELAY REQID(CAUIC-CCAUIC) END-EXEC
              EXEC CICS DELAY REQID('MATR') END-EXEC
              EXEC CICS DELAY REQID(OBMTX-VMATRICE) END-EXEC
"                MOVE 'S143'    TO WRK-ERRORE
"          END-IF.
"
"          IF OBMTX-FTPINVEST = 'S'
000164*       AND MOVC-TMOVCAU  = SPACES
000164        AND CAUIC-TIPOINVEST = SPACES
"                MOVE 'S144'    TO WRK-ERRORE
"          END-IF.
"
"          IF OBMTX-FPAEREGOL = 'S'
"             AND MOVC-CSIGPAE  = SPACES
"                MOVE 'S145'    TO WRK-ERRORE
"          END-IF.
"
000433     IF OBMTX-FPAEREGOL = 'D'
"             IF MOVC-CSIGPAE  = SPACES
"                MOVE 'S209'    TO WRK-ERRORE
BPO133*       ELSE
BPO133*          IF MOVC-CSIGPAE  = 'IT'
BPO133*             MOVE 'S210'    TO WRK-ERRORE
BPO133*          END-IF
"             END-IF
000433     END-IF.
"
"          IF WRK-ERRORE > SPACES
000142             AND L-FASE GREATER 1                                 TS011471
000142        MOVE 'E'                        TO M-S(W-CAU)
000092        MOVE 0                          TO W-MAP-ERR
000142*       MOVE W-COORD-STC                TO W-MOD-ERR
000142        MOVE W-COORD-CAU                TO W-MOD-ERR
"             MOVE 2                          TO W-FLAG-ERR
"             MOVE WRK-ERRORE                 TO W-COD-ERR
000142        MOVE 'SI'                       TO W-FLAG-EXIT
"             PERFORM 9999-GESTIONE-ERRORE
"                THRU 9999-GESTIONE-ERRORE-END
"          END-IF.
"                                                                       TS012304
"      1096-MTX-OBBLIGATORI-END.                                        TS012302
000092     EXIT.                                                        TS012303
000377*--------------------------
000377 1097-CONTROLLA-CSIGPAEMIT.
000377*--------------------------
000377     IF MOVC-TMOVCAU = 'I'
000377       IF (CAUIC-CTLXVCINT = 'I' AND MOVC-CSIGPAEMIT NOT = 'IT')
000377        OR (CAUIC-CTLXVCINT = 'A' AND MOVC-CSIGPAEMIT = 'IT')
000377            MOVE 'SI'                TO W-FLAG-EXIT
000377            MOVE 2                   TO W-FLAG-ERR
APV160*           MOVE 'S152'              TO W-COD-ERR
APV160            MOVE 'S199'              TO W-COD-ERR
000377            MOVE '0'                 TO W-MAP-ERR
000377            PERFORM 9999-GESTIONE-ERRORE
000377               THRU 9999-GESTIONE-ERRORE-END
APV160*           GO TO 1080-WPRCSC-TTCAU-98-END
APV160            GO TO 1097-CONTROLLA-CSIGPAEMIT-END
000377       END-IF
000377      END-IF
000377      IF MOVC-TMOVCAU = 'E'
000377       IF (CAUIC-CTLXVCESI = 'I' AND MOVC-CSIGPAEMIT NOT = 'IT')
000377        OR (CAUIC-CTLXVCESI = 'A' AND MOVC-CSIGPAEMIT = 'IT')
000377            MOVE 'SI'                TO W-FLAG-EXIT
000377            MOVE 2                   TO W-FLAG-ERR
APV160*           MOVE 'S152'              TO W-COD-ERR
APV160            MOVE 'S200'              TO W-COD-ERR
000377            MOVE '0'                 TO W-MAP-ERR
000377            PERFORM 9999-GESTIONE-ERRORE
000377               THRU 9999-GESTIONE-ERRORE-END
APV160*           GO TO 1080-WPRCSC-TTCAU-98-END
APV160            GO TO 1097-CONTROLLA-CSIGPAEMIT-END
000377       END-IF
000377     END-IF.
000377 1097-CONTROLLA-CSIGPAEMIT-END.
000377     EXIT.
      *---------------------------------------------------------*
      * PASSO 8 : QUADRATURA CONTABILE DELL' OPERAZIONE         *
      *---------------------------------------------------------*
       1100-QUADRATURA.
000172*------------------------VIENE EFFETTUATA LA QUADRATURA PER I CTV
000172*--------------------------- ESPRESSI NELLA DIVISA DI CONTABILITA'
           INITIALIZE DCLTBAMOVP.
           INITIALIZE W-DCLTBAMOVP-A.
           INITIALIZE W-DCLTBAMOVP-B.
           INITIALIZE W-DCLTBAMOVP-C.
           INITIALIZE W-TAB-QUADR-A.
           INITIALIZE W-TAB-QUADR-B.
           INITIALIZE W-TAB-QUADR-CAU.
070197     MOVE ISTI-VALUNIQUA    TO WRK-VALUNIQUA-PIU
070197                               WRK-VALUNIQUA-MENO.
070197     COMPUTE WRK-VALUNIQUA-MENO = WRK-VALUNIQUA-MENO * -1.
           MOVE W-CIST                           TO MOVP-CIST
                                                    MOVE-CIST.
           MOVE W-DIPOPE                         TO MOVP-DIPOPE
                                                    MOVE-DIPOPE.
           MOVE OPE-NUMOPE                       TO MOVP-NUMOPE
                                                    MOVE-NUMOPE.
           MOVE SPACES                           TO W-F-EX.
           MOVE ZEROES         TO WRK-IND-MOVP
           PERFORM 1110-ELABORA-MOVP
              THRU 1110-ELABORA-MOVP-END
              VARYING INDP FROM 1 BY 1
              UNTIL INDP > 35 OR
              WS-TAB-TBAMOVP(INDP) = SPACES OR
                    W-F-EX = 'SI'.
           MOVE SPACES                           TO W-F-EX.
           MOVE 0                                TO W-CTR-LETTI.
           IF W-TOT-ICTMOV-A NOT = 0
070197*       IF W-TOT-ICTMOV-A NOT > 5 AND
070197*          W-TOT-ICTMOV-A NOT < -5
070197        IF W-TOT-ICTMOV-A NOT > WRK-VALUNIQUA-PIU AND
070197           W-TOT-ICTMOV-A NOT < WRK-VALUNIQUA-MENO
                 MOVE 'A'                        TO W-CHI-SQUADRA
                 PERFORM 1190-QUADRA
                    THRU 1190-QUADRA-END
              ELSE
                 IF M-S(W-STC) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'E'                        TO M-S(W-STC)
                    MOVE M-M(W-STC)                 TO W-MAP-ERR
                    MOVE W-COORD-STC                TO W-MOD-ERR
                    MOVE 2                          TO W-FLAG-ERR
                    MOVE 'S066'                     TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
              END-IF
           END-IF.
           IF W-TOT-ICTMOV-B NOT = 0
              IF WRK-IND-MOVP GREATER 1
070197*          IF W-TOT-ICTMOV-B NOT > 5 AND
070197*             W-TOT-ICTMOV-B NOT < -5
070197           IF W-TOT-ICTMOV-B NOT > WRK-VALUNIQUA-PIU AND
070197              W-TOT-ICTMOV-B NOT < WRK-VALUNIQUA-MENO
                    MOVE 'B'                        TO W-CHI-SQUADRA
                    PERFORM 1190-QUADRA
                       THRU 1190-QUADRA-END
                 ELSE
                    IF M-S(W-STC) NOT = SPACES
                       NEXT SENTENCE
                    ELSE
                       MOVE 'E'                        TO M-S(W-STC)
                       MOVE M-M(W-STC)                 TO W-MAP-ERR
                       MOVE W-COORD-STC                TO W-MOD-ERR
                       MOVE 2                          TO W-FLAG-ERR
                       MOVE 'S067'                     TO W-COD-ERR
                       PERFORM 9999-GESTIONE-ERRORE
                          THRU 9999-GESTIONE-ERRORE-END
                    END-IF
                 END-IF
              END-IF
           END-IF.
           IF W-TOT-ICTMOV-C NOT = 0
070197*       IF W-TOT-ICTMOV-C NOT > 5 AND
070197*          W-TOT-ICTMOV-C NOT < -5
070197        IF W-TOT-ICTMOV-C NOT > WRK-VALUNIQUA-PIU AND
070197           W-TOT-ICTMOV-C NOT < WRK-VALUNIQUA-MENO
                 MOVE 'C'                        TO W-CHI-SQUADRA
                 PERFORM 1190-QUADRA
                    THRU 1190-QUADRA-END
              ELSE
                 IF M-S(W-STC) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'E'                        TO M-S(W-STC)
                    MOVE M-M(W-STC)                 TO W-MAP-ERR
                    MOVE W-COORD-STC                TO W-MOD-ERR
                    MOVE 2                          TO W-FLAG-ERR
                    MOVE 'S068'                     TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
              END-IF
           END-IF.
           MOVE SPACES                           TO W-EXPERFORM
           PERFORM 1104-QUADRA-DIV-A
              THRU 1104-QUADRA-DIV-A-END
                   VARYING IND8 FROM 1 BY 1
                   UNTIL W-EXPERFORM = 'SI' OR
                         IND8 > 20
           MOVE SPACES                           TO W-EXPERFORM
           PERFORM 1106-QUADRA-DIV-B
              THRU 1106-QUADRA-DIV-B-END
                   VARYING IND8 FROM 1 BY 1
                   UNTIL W-EXPERFORM = 'SI' OR
                         IND8 > 20
           MOVE SPACES                           TO W-EXPERFORM
IM0001*ELIMINAZIONE CAUSALI
IM0001*    PERFORM 1108-QUADRA-DIV-CAU
IM0001*       THRU 1108-QUADRA-DIV-CAU-END
IM0001*            VARYING IND8 FROM 1 BY 1
IM0001*            UNTIL W-EXPERFORM = 'SI' OR
IM0001*                  IND8 > 20.

060697***--- CONTROLLO CHE IMOV E ICTMOV SE CISO = DIVBASE
060697***--- ABBIANO LO STESSO VALORE
           MOVE SPACES                           TO W-F-EX.
           MOVE ZEROES         TO WRK-IND-MOVP
           PERFORM 1109-VERIFICA-IMPORTI
              THRU 1109-VERIFICA-IMPORTI-END
              VARYING INDP FROM 1 BY 1
              UNTIL INDP > 35 OR
              WS-TAB-TBAMOVP(INDP) = SPACES OR
                    W-F-EX = 'SI'.
       1100-QUADRATURA-END.
           EXIT.

      *------------------
       1104-QUADRA-DIV-A.
      *------------------
           IF W-TAB-DIV-A(IND8) NOT = SPACES
000172*       MOVE 'ZOP020701'              TO W-DECOD
000172        MOVE 'ZOP023701'              TO W-DECOD
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              IF W-COM-NUM NOT GREATER ZEROES
                 IF M-S(W-STC) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'E'                TO M-S(W-STC)
                    MOVE M-M(W-STC)         TO W-MAP-ERR
                    MOVE W-COORD-STC        TO W-MOD-ERR
                    MOVE 2                  TO W-FLAG-ERR
                    MOVE 'S085'             TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
              END-IF
           ELSE
              MOVE 'SI'                          TO W-EXPERFORM
           END-IF.
       1104-QUADRA-DIV-A-END.
           EXIT.

      *------------------
       1106-QUADRA-DIV-B.
      *------------------
           IF W-TAB-DIV-B(IND8) NOT = SPACES
              IF W-TAB-IMOV-B(IND8) NOT = 0
                 IF M-S(W-STC) NOT = SPACES
                    NEXT SENTENCE
                 ELSE
                    MOVE 'E'                     TO M-S(W-STC)
                    MOVE M-M(W-STC)              TO W-MAP-ERR
                    MOVE W-COORD-STC             TO W-MOD-ERR
                    MOVE 2                       TO W-FLAG-ERR
                    MOVE 'S082'                  TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                 END-IF
              END-IF
           ELSE
              MOVE 'SI'                          TO W-EXPERFORM
           END-IF.
       1106-QUADRA-DIV-B-END.
           EXIT.
      *-----------------------------------------------------------*
      * EFFETTUA LA QUADRATURA IN BASE AI CONTATORI DEI MOVIMENTI *
      * E DELLE CAUSALI (PNE / PNI)  (PASSO 8)                    *
      *-----------------------------------------------------------*
       1108-QUADRA-DIV-CAU.
           IF APROC-FQUAPNE NOT = 'S'
              NEXT SENTENCE
           ELSE
000092*--------------------------------------- QUESTO CONTROLLO RIMANE  TS012499
000092*--------------------------------------- FINCHE' NON VIENE FATTA  TS012499
000092*--------------------------------------- LA NUOVA QUADRATURA CAU. TS012499
000092      IF WRK-FLAG-CAU = 0                                         TS012499
000092*---------------------------------------------------------------- TS012499
              IF W-TAB-DIV-CAU(IND8) NOT = SPACES
                 IF W-TAB-PNE-CAU(IND8) NOT = W-TAB-CPNE-CAU(IND8)
                    IF M-S(W-STC) NOT = SPACES
                       NEXT SENTENCE
                    ELSE
                       MOVE 'E'                     TO M-S(W-STC)
                       MOVE M-M(W-STC)              TO W-MAP-ERR
                       MOVE W-COORD-STC             TO W-MOD-ERR
                       MOVE 2                       TO W-FLAG-ERR
                       MOVE 'S079'                  TO W-COD-ERR
                       PERFORM 9999-GESTIONE-ERRORE
                          THRU 9999-GESTIONE-ERRORE-END
                    END-IF
                 END-IF
000092           IF WRK-FLAG-CAU = 0                                    TS012499
                    IF W-TAB-PNI-CAU(IND8) NOT = W-TAB-CPNI-CAU(IND8)
                       IF M-S(W-STC) NOT = SPACES
                          NEXT SENTENCE
                       ELSE
                          MOVE 'E'                     TO M-S(W-STC)
                          MOVE M-M(W-STC)              TO W-MAP-ERR
                          MOVE W-COORD-STC             TO W-MOD-ERR
                          MOVE 2                       TO W-FLAG-ERR
                          MOVE 'S080'                  TO W-COD-ERR
                          PERFORM 9999-GESTIONE-ERRORE
                             THRU 9999-GESTIONE-ERRORE-END
                       END-IF
                    END-IF
000092           END-IF                                                 TS012513
              ELSE
                 MOVE 'SI'                          TO W-EXPERFORM
              END-IF
000092      END-IF
           END-IF.
       1108-QUADRA-DIV-CAU-END.
           EXIT.
       1109-VERIFICA-IMPORTI.
           IF WS-TAB-TBAMOVP(INDP) NOT = SPACES
              MOVE WS-TAB-TBAMOVP(INDP)          TO DCLTBAMOVP
000172*       IF MOVP-CISO = W-CSIGDBASE
000172        IF MOVP-CISO = W-CSIGDCON
                 IF MOVP-IMOV NOT = MOVP-ICTMOV
                    MOVE SPACES               TO W-MOD-ERR
                    MOVE '0'                  TO W-MAP-ERR
                    MOVE 'S108'               TO W-COD-ERR
                    MOVE 2                    TO W-FLAG-ERR
                    MOVE 'SI'                 TO W-F-EX
                    MOVE ' IMP E CTV DEVONO ESSERE '
                                              TO WCM-MOVP-DESCR1
000172*             MOVE 'UGUALI X DIV = DIV BASE'
000172              MOVE 'UGUALI X DIV = DIV CONT'
                                              TO WCM-MOVP-DESCR
                    MOVE MOVP-NPRGMOVP        TO WCM-MOVP-NPRGMOVP-1
                    MOVE WCM-ERR-MOVP-1       TO W-DES-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                    GO TO 1109-VERIFICA-IMPORTI-END
                 END-IF
              END-IF
           END-IF.
       1109-VERIFICA-IMPORTI-END.
           EXIT.
       1110-ELABORA-MOVP.
           IF WS-TAB-TBAMOVP(INDP) NOT = SPACES
              MOVE WS-TAB-TBAMOVP(INDP)          TO DCLTBAMOVP
              MOVE MOVP-IMOV                     TO W-LORDO-IMOV
                                                    W-CAUSA-IMOV
              MOVE MOVP-ICTMOV                   TO W-LORDO-ICTMOV
              MOVE 0                             TO W-COM-ICAU1
               PERFORM 1115-CALCOLA-LORDO-MOV
                  THRU 1115-CALCOLA-LORDO-MOV-END
                      VARYING INDE FROM 1 BY 1
                      UNTIL INDE > 35
                         OR WS-TAB-TBAMOVE(INDE) = SPACES
              ADD 1                              TO W-CTR-LETTI
              MOVE 0                             TO W-COM-NOSEGN-B
              MOVE 0                             TO W-COM-NOSEGN-C
              MOVE W-CIST                        TO ABSC-CIST
              MOVE MOVP-CSTC                     TO ABSC-CSTC
              PERFORM 0630-LEGGI-TABSC
                 THRU 0630-LEGGI-TABSC-END
              MOVE SPACES                        TO W-EXPERFORM
000092        IF WRK-FLAG-CAU = 0                                       TS012564
                 PERFORM 1178-CONTAB-PNE-PNI
                    THRU 1178-CONTAB-PNE-PNI-END
                     VARYING IND8 FROM 1 BY 1
                      UNTIL W-EXPERFORM = 'SI' OR
                            IND8 > 20
000092*---- TEST -- PARTE DA DISASTERICARE QUANDO SI DOVRA' EFFETTUARE  TS012570
000092*---- TEST -- LA QUADRATURA PER LE NUOVE CAUSALI.                 TS012570
000092*       ELSE                                                      TS012570
"     *          PERFORM 1192-CONTAB-PNE                                TS012571
"     *             THRU 1192-CONTAB-PNE-END                            TS012572
"     *              VARYING IND8 FROM 1 BY 1                           TS012573
"     *               UNTIL W-EXPERFORM = 'SI' OR                       TS012574
"     *                     IND8 > 20                                   TS012575
000092        END-IF                                                    TS012576
              PERFORM 1200-QUADRA-MOVC
                 THRU 1200-QUADRA-MOVC-END
              PERFORM 1111-INTAB-CTV
                 THRU 1111-INTAB-CTV-END
           END-IF.
       1110-ELABORA-MOVP-END.
           EXIT.
       1111-INTAB-CTV.
           IF MOVP-NPRGMOVP NOT > 20
           OR (MOVP-NPRGMOVP > 150  AND MOVP-NPRGMOVP < 200)
              IF W-MOVP-ICTMOV-A = 0
                 MOVE MOVP-CIST                  TO W-MOVP-CIST-A
                 MOVE MOVP-DIPOPE                TO W-MOVP-DIPOPE-A
                 MOVE MOVP-NUMOPE                TO W-MOVP-NUMOPE-A
                 MOVE MOVP-NPRGMOVP              TO W-MOVP-NPRGMOVP-A
                 MOVE MOVP-NSUBMOVP              TO W-MOVP-NSUBMOVP-A
                 MOVE MOVP-ICTMOV                TO W-MOVP-ICTMOV-A
              ELSE
                 MOVE MOVP-ICTMOV                TO W-NOSEGN-ICTMOV-B
                 MOVE W-MOVP-ICTMOV-A            TO W-NOSEGN-ICTMOV-A
                 IF W-NOSEGN-ICTMOV-B < W-NOSEGN-ICTMOV-A
                    MOVE MOVP-CIST               TO W-MOVP-CIST-A
                    MOVE MOVP-DIPOPE             TO W-MOVP-DIPOPE-A
                    MOVE MOVP-NUMOPE             TO W-MOVP-NUMOPE-A
                    MOVE MOVP-NPRGMOVP           TO W-MOVP-NPRGMOVP-A
                    MOVE MOVP-NSUBMOVP           TO W-MOVP-NSUBMOVP-A
                    MOVE MOVP-ICTMOV             TO W-MOVP-ICTMOV-A
                 END-IF
              END-IF
              COMPUTE W-TOT-ICTMOV-A =
                      W-TOT-ICTMOV-A + W-LORDO-ICTMOV
           END-IF.
           IF MOVP-NPRGMOVP > 20  AND
              MOVP-NPRGMOVP < 151
              ADD 1 TO WRK-IND-MOVP
              IF W-MOVP-ICTMOV-B = 0
                 MOVE MOVP-CIST                  TO W-MOVP-CIST-B
                 MOVE MOVP-DIPOPE                TO W-MOVP-DIPOPE-B
                 MOVE MOVP-NUMOPE                TO W-MOVP-NUMOPE-B
                 MOVE MOVP-NPRGMOVP              TO W-MOVP-NPRGMOVP-B
                 MOVE MOVP-NSUBMOVP              TO W-MOVP-NSUBMOVP-B
                 MOVE MOVP-ICTMOV                TO W-MOVP-ICTMOV-B
              ELSE
000280           MOVE ZEROES                    TO W-MOVP-ICTMOV-B-ASS
000280           MOVE ZEROES                    TO W-MOVP-ICTMOV-ASS
000280           MOVE W-MOVP-ICTMOV-B           TO W-MOVP-ICTMOV-B-ASS
000280           MOVE MOVP-ICTMOV               TO W-MOVP-ICTMOV-ASS
000280*          IF MOVP-ICTMOV < W-MOVP-ICTMOV-B
000280           IF W-MOVP-ICTMOV-ASS < W-MOVP-ICTMOV-B-ASS
                    MOVE MOVP-CIST               TO W-MOVP-CIST-B
                    MOVE MOVP-DIPOPE             TO W-MOVP-DIPOPE-B
                    MOVE MOVP-NUMOPE             TO W-MOVP-NUMOPE-B
                    MOVE MOVP-NPRGMOVP           TO W-MOVP-NPRGMOVP-B
                    MOVE MOVP-NSUBMOVP           TO W-MOVP-NSUBMOVP-B
                    MOVE MOVP-ICTMOV             TO W-MOVP-ICTMOV-B
                 END-IF
              END-IF
              COMPUTE W-TOT-ICTMOV-B =
                      W-TOT-ICTMOV-B + W-LORDO-ICTMOV
           END-IF.
           IF MOVP-NPRGMOVP NOT < 200 AND
              MOVP-NPRGMOVP NOT > 300
              IF W-MOVP-ICTMOV-C = 0
                 MOVE MOVP-CIST                  TO W-MOVP-CIST-C
                 MOVE MOVP-DIPOPE                TO W-MOVP-DIPOPE-C
                 MOVE MOVP-NUMOPE                TO W-MOVP-NUMOPE-C
                 MOVE MOVP-NPRGMOVP              TO W-MOVP-NPRGMOVP-C
                 MOVE MOVP-NSUBMOVP              TO W-MOVP-NSUBMOVP-C
                 MOVE MOVP-ICTMOV                TO W-MOVP-ICTMOV-C
              ELSE
000280           MOVE ZEROES                    TO W-MOVP-ICTMOV-C-ASS
000280           MOVE ZEROES                    TO W-MOVP-ICTMOV-ASS
000280           MOVE W-MOVP-ICTMOV-C           TO W-MOVP-ICTMOV-C-ASS
000280           MOVE MOVP-ICTMOV               TO W-MOVP-ICTMOV-ASS
000280*          IF MOVP-ICTMOV < W-MOVP-ICTMOV-C
000280           IF W-MOVP-ICTMOV-ASS < W-MOVP-ICTMOV-C-ASS
                    MOVE MOVP-CIST               TO W-MOVP-CIST-C
                    MOVE MOVP-DIPOPE             TO W-MOVP-DIPOPE-C
                    MOVE MOVP-NUMOPE             TO W-MOVP-NUMOPE-C
                    MOVE MOVP-NPRGMOVP           TO W-MOVP-NPRGMOVP-C
                    MOVE MOVP-NSUBMOVP           TO W-MOVP-NSUBMOVP-C
                    MOVE MOVP-ICTMOV             TO W-MOVP-ICTMOV-C
                 END-IF
              END-IF
              COMPUTE W-TOT-ICTMOV-C =
                      W-TOT-ICTMOV-C + W-LORDO-ICTMOV
              MOVE SPACES                        TO W-EXPERFORM
              PERFORM 1182-INTAB-DIVISA-B
                 THRU 1182-INTAB-DIVISA-B-END
                      VARYING IND8 FROM 1 BY 1
                      UNTIL W-EXPERFORM = 'SI' OR
                            IND8 > 20
           END-IF.
       1111-INTAB-CTV-END.
           EXIT.
       1115-CALCOLA-LORDO-MOV.
280597*    IF WS-TAB-TBAMOVE(INDE) NOT = SPACES
280597*       MOVE WS-TAB-TBAMOVE(INDE)          TO DCLTBAMOVE
280597     MOVE WS-TAB-TBAMOVE(INDE) TO DCLTBAMOVE
280597     IF MOVE-CCEC NOT = SPACES
              IF MOVE-NPRGMOVP = MOVP-NPRGMOVP AND
                 MOVE-NSUBMOVP = MOVP-NSUBMOVP
                 MOVE ZEROES TO WRK-ISPSVAL
                                WRK-ICTVSPS
                 COMPUTE WRK-ISPSVAL = MOVE-ISPSVAL * -1
                 COMPUTE WRK-ICTVSPS = MOVE-ICTVSPS * -1
                 COMPUTE W-LORDO-IMOV = W-LORDO-IMOV - WRK-ISPSVAL
                 COMPUTE W-LORDO-ICTMOV = W-LORDO-ICTMOV - WRK-ICTVSPS
              END-IF
           END-IF.
       1115-CALCOLA-LORDO-MOV-END.
           EXIT.
      *--------------------------------------------------------------*
      * PREDISPONE DUE CONTATORI PER QUADRATURA CONTABILITA'(PASSO 8)*
      *--------------------------------------------------------------*
       1178-CONTAB-PNE-PNI.
           IF MOVP-NPRGMOVP NOT > 20
           OR (MOVP-NPRGMOVP > 150  AND MOVP-NPRGMOVP < 200)
              MOVE 'SI'                          TO W-EXPERFORM
              GO TO 1178-CONTAB-PNE-PNI-END
           END-IF.

           IF W-TAB-DIV-CAU(IND8) = MOVP-CISO
              MOVE 'SI'                          TO W-EXPERFORM
           ELSE
              IF W-TAB-DIV-CAU(IND8) = SPACES
                 MOVE 'SI'                     TO W-EXPERFORM
                 MOVE MOVP-CISO                TO W-TAB-DIV-CAU(IND8)
           END-IF.
           IF W-TAB-DIV-CAU(IND8) = MOVP-CISO
              IF ABSC-FRSDSTC = 2
                 COMPUTE W-TAB-PNE-CAU(IND8) =
                         W-TAB-PNE-CAU(IND8) + W-CAUSA-IMOV
              ELSE
                 IF ABSC-FRSDSTC = 1 AND
                    MOVP-CISO NOT = W-CSIGDBASE
                    COMPUTE W-TAB-PNI-CAU(IND8) =
                            W-TAB-PNI-CAU(IND8) + W-CAUSA-IMOV
                 END-IF
              END-IF
           END-IF.
       1178-CONTAB-PNE-PNI-END.
           EXIT.

      *-------------------
       1179-INTAB-CAUSALI.
      *-------------------
           IF W-TAB-DIV-CAU(IND8) = MOVP-CISO
              IF MOVC-TCODCAU = 1
                 MOVE 'SI'                          TO W-EXPERFORM
                 MOVE MOVC-CIST                     TO CAUIC-CIST
                 MOVE MOVC-CCAUIC                   TO CAUIC-CCAUIC
                 PERFORM 1032-LEGGI-TCAUIC
                    THRU 1032-LEGGI-TCAUIC-END
                 IF W-SQL-NON-TROVATO
999999*             IF NCSVC-TTCAU (INDC) = 'CAA'
999999*                MOVE '0'                     TO W-MAP-ERR
999999*                MOVE 2                       TO W-FLAG-ERR
999999*                MOVE 'S064'                  TO W-COD-ERR
999999*                PERFORM 9999-GESTIONE-ERRORE
999999*                   THRU 9999-GESTIONE-ERRORE-END
999999*                GO TO 1179-INTAB-CAUSALI-END
999999*             ELSE
                       IF M-S(W-CAU) NOT = SPACES
                          GO TO 1179-INTAB-CAUSALI-END
                       ELSE
                          MOVE 'E'                  TO M-S(W-CAU)
                          MOVE W-COORD-CAU          TO W-MOD-ERR
                          MOVE M-M(W-CAU)           TO W-MAP-ERR
                          MOVE 2                    TO W-FLAG-ERR
                          MOVE 'S064'               TO W-COD-ERR
                          PERFORM 9999-GESTIONE-ERRORE
                             THRU 9999-GESTIONE-ERRORE-END
                          GO TO 1179-INTAB-CAUSALI-END
                       END-IF
999999*             END-IF
                 ELSE
                    IF NOT W-SQL-OK
                       MOVE 8                       TO W-FLAG-ERR
                       MOVE '9999'                  TO W-COD-ERR
                       MOVE 'TBTCAUIC'              TO L-NOME-TABELLA
                       MOVE W-SQLCODE               TO L-CODICE-SQL
                       MOVE 'ZMBSVIL0'              TO L-MODULO
                       MOVE '1179-INTAB-CAUSALI'    TO L-SUB-MODULO
                       PERFORM 9999-GESTIONE-ERRORE
                          THRU 9999-GESTIONE-ERRORE-END
                    END-IF
                 END-IF
              ELSE
                 INITIALIZE DCLTBTCAUIC
                 MOVE 'SI'    TO W-EXPERFORM
              END-IF
           ELSE
              IF W-TAB-DIV-CAU(IND8) = SPACES
                 MOVE 'SI'                     TO W-EXPERFORM
                 MOVE MOVP-CISO                TO W-TAB-DIV-CAU(IND8)
                 MOVE MOVC-CIST                TO CAUIC-CIST
                 MOVE MOVC-CCAUIC              TO CAUIC-CCAUIC
                 PERFORM 1032-LEGGI-TCAUIC
                    THRU 1032-LEGGI-TCAUIC-END
              END-IF
           END-IF.
      *--------------------------------- SE LA DIVISA ERA UGUALE
      *--------------------------------- OPPURE SE E' STATA INSERITA :
      *--------------------------------- CALCOLA PNE E PNI
      *-----------------------------------------------------------*
      * PREDISPONE DUE CONTATORI PER QUADRATURA CAUSALI (PASSO 8) *
      *-----------------------------------------------------------*
           IF W-TAB-DIV-CAU(IND8) = MOVP-CISO
000092*-----------------------------------------------------------*     TS012773
000092        IF WRK-FLAG-CAU = 0                                       TS012774
000092*---------------------------------- FINO AL 31/05/98  ------*     TS012775
                 IF (MOVC-TCODCAU = 2)                             OR
                    (CAUIC-FPNE = 2)                               OR
                    ((CAUIC-FPNE = 3 OR 4) AND (ABSC-FRSDSTC = 2)) OR
                    (MOVC-TCODCAU = 3 AND ABSC-FRSDSTC = 2)
                       COMPUTE W-TAB-CPNE-CAU(IND8) =
                             W-TAB-CPNE-CAU(IND8) + MOVC-ICAU
                 END-IF
                 IF MOVC-CISO = W-CSIGDBASE
                    GO TO 1179-INTAB-CAUSALI-END
                 END-IF
                 IF CAUIC-FPNE NOT = 3                          OR
                    ((MOVC-TCODCAU = 3) AND (ABSC-FRSDSTC = 1)) OR
                    (MOVC-TCODCAU = 2)                          OR
                    ((ABSC-FRSDSTC = 1) AND (CAUIC-FPNE = 3 OR 4))
                    IF ABSC-FRSDSTC = 1 AND
                      (ABSC-CTIPSTC = 341 OR 342)
                         MOVE MOVC-ICAU TO W-COM-ICAU2
                    ELSE
                         COMPUTE W-COM-ICAU2 = MOVC-ICAU * -1
                    END-IF
                    COMPUTE W-TAB-CPNI-CAU(IND8) =
                             W-TAB-CPNI-CAU(IND8) +  W-COM-ICAU2
                 END-IF
000092*-----------------------------------------------------------*     TS012799
"             ELSE                                                      TS012800
"                IF WRK-FLAG-CAU = 1                                    TS012801
"     *---------------------------------- DAL 01/06/98  ------*         TS012802
"     *---------------------------------------- SOLO UN CONTATORE C-PNE TS012803
000092*                                                                 TS012804
000142              IF MOVC-TCODCAU = 1                                 TS012805
000092                 INITIALIZE DCLTBTOBMTX                           TS012805
"                      MOVE W-CIST           TO OBMTX-CIST              TS012806
"                      MOVE MOVC-VMATRICE    TO OBMTX-VMATRICE          TS012807
"                      PERFORM 1193-SOTTOVOCE                           TS012808
"                         THRU 1193-SOTTOVOCE-END                       TS012809
"                      PERFORM 1194-LEGGI-TOBMTX                        TS012810
"                         THRU 1194-LEGGI-TOBMTX-END                    TS012811
000386*                IF OBMTX-FINTPNE = 'S'                           TS012812
000092                    COMPUTE W-TAB-CPNE-CAU(IND8) =                TS012813
000092                            W-TAB-CPNE-CAU(IND8) + MOVC-ICAU      TS012814
000386*                END-IF                                           TS012815
000142              END-IF                                              TS012815
000092           END-IF                                                 TS012816
000092        END-IF                                                    TS012817
           END-IF.
       1179-INTAB-CAUSALI-END.
           EXIT.

      *--------------------
       1182-INTAB-DIVISA-B.
      *--------------------
           IF W-TAB-DIV-B(IND8) = MOVP-CISO
              MOVE 'SI'                          TO W-EXPERFORM
              COMPUTE W-TAB-IMOV-B(IND8) = W-TAB-IMOV-B(IND8) +
                                           W-LORDO-IMOV
           ELSE
              IF W-TAB-DIV-B(IND8) = SPACES
                 MOVE 'SI'                       TO W-EXPERFORM
                 MOVE MOVP-CISO                  TO W-TAB-DIV-B(IND8)
                 COMPUTE W-TAB-IMOV-B(IND8) = W-TAB-IMOV-B(IND8) +
                                              W-LORDO-IMOV
              END-IF
           END-IF.
       1182-INTAB-DIVISA-B-END.
           EXIT.
       1190-QUADRA.
           EVALUATE W-CHI-SQUADRA
             WHEN 'A'
               MOVE W-MOVP-NPRGMOVP-A            TO W-NPRGMOVP-CERCA
               MOVE W-MOVP-NSUBMOVP-A            TO W-NSUBMOVP-CERCA
               MOVE 'SI'                         TO MOVP-NON-TROVATO
               PERFORM 0820-CERCA-AMOVP
                 THRU 0820-CERCA-AMOVP-END
                      VARYING INDP FROM 1 BY 1
                      UNTIL INDP > 35  OR
                      MOVP-NON-TROVATO = SPACES
               COMPUTE MOVP-ICTMOV = W-MOVP-ICTMOV-A -
                                     W-TOT-ICTMOV-A
090697***--- CORREGGO ANCHE IMOV SE ICTMOV VIENE ARROTONDATO
090697***---  PER VIA DELL'IMPORTO DA QUADRARE
090697***--- SE CISO = DIVBASE  (IMP E CTV DEVONO ESSERE UGUALI)
090697***---
000172*        IF MOVP-CISO = W-CSIGDBASE
000172         IF MOVP-CISO = W-CSIGDCON
090697                 MOVE MOVP-ICTMOV TO MOVP-IMOV
090697         END-IF
               SUBTRACT 1 FROM INDP
               MOVE DCLTBAMOVP                 TO WS-TAB-TBAMOVP(INDP)
             WHEN 'B'
               MOVE W-MOVP-NPRGMOVP-B            TO W-NPRGMOVP-CERCA
               MOVE W-MOVP-NSUBMOVP-B            TO W-NSUBMOVP-CERCA
               MOVE 'SI'                         TO MOVP-NON-TROVATO
               PERFORM 0820-CERCA-AMOVP
                 THRU 0820-CERCA-AMOVP-END
                      VARYING INDP FROM 1 BY 1
                      UNTIL INDP > 35  OR
                      MOVP-NON-TROVATO = SPACES
               COMPUTE MOVP-ICTMOV = W-MOVP-ICTMOV-B -
                                     W-TOT-ICTMOV-B
090697***--- CORREGGO ANCHE IMOV SE ICTMOV VIENE ARROTONDATO
090697***---  PER VIA DELL'IMPORTO DA QUADRARE
090697***--- SE CISO = DIVBASE  (IMP E CTV DEVONO ESSERE UGUALI)
090697***---
000172*        IF MOVP-CISO = W-CSIGDBASE
000172         IF MOVP-CISO = W-CSIGDCON
090697                 MOVE MOVP-ICTMOV TO MOVP-IMOV
090697         END-IF
               SUBTRACT 1 FROM INDP
               MOVE DCLTBAMOVP                 TO WS-TAB-TBAMOVP(INDP)
             WHEN 'C'
               MOVE W-MOVP-NPRGMOVP-C            TO W-NPRGMOVP-CERCA
               MOVE W-MOVP-NSUBMOVP-C            TO W-NSUBMOVP-CERCA
               MOVE 'SI'                         TO MOVP-NON-TROVATO
               PERFORM 0820-CERCA-AMOVP
                 THRU 0820-CERCA-AMOVP-END
                      VARYING INDP FROM 1 BY 1
                      UNTIL INDP > 35  OR
                      MOVP-NON-TROVATO = SPACES
               COMPUTE MOVP-ICTMOV = W-MOVP-ICTMOV-C -
                                     W-TOT-ICTMOV-C
090697***--- CORREGGO ANCHE IMOV SE ICTMOV VIENE ARROTONDATO
090697***---  PER VIA DELL'IMPORTO DA QUADRARE
090697***--- SE CISO = DIVBASE  (IMP E CTV DEVONO ESSERE UGUALI)
090697***---
000172*        IF MOVP-CISO = W-CSIGDBASE
000172         IF MOVP-CISO = W-CSIGDCON
090697                 MOVE MOVP-ICTMOV TO MOVP-IMOV
090697         END-IF
               SUBTRACT 1 FROM INDP
               MOVE DCLTBAMOVP                 TO WS-TAB-TBAMOVP(INDP)
           END-EVALUATE.
       1190-QUADRA-END.
           EXIT.
       1191-AGGIORNA-MOVP.
           MOVE 'SI'                             TO MOVP-NON-TROVATO.
           PERFORM 0820-CERCA-AMOVP
              THRU 0820-CERCA-AMOVP-END
                   VARYING INDP FROM 1 BY 1
                   UNTIL INDP > 35  OR
                   MOVP-NON-TROVATO = SPACES
           MOVE DCLTBAMOVP                 TO WS-TAB-TBAMOVP(INDP).
       1191-AGGIORNA-MOVP-END.
           EXIT.

000092*--------------------------------------------------------------*  TS012915
"      1192-CONTAB-PNE.                                                 TS012916
"     *--------------------------------------------------------------*  TS012917
"     * PREDISPONE UN CONTATORE PER QUADRATURA CONTABILITA'(PASSO 8)*   TS012918
"     *--------------------------------------------------------------*  TS012919
"          IF MOVP-NPRGMOVP NOT > 20                                    TS012920
"           OR (MOVP-NPRGMOVP > 150  AND MOVP-NPRGMOVP < 200)           TS012921
"             MOVE 'SI'                          TO W-EXPERFORM         TS012922
"             GO TO 1192-CONTAB-PNE-END                                 TS012923
"          END-IF.                                                      TS012924
"                                                                       TS012925
"          IF W-TAB-DIV-CAU(IND8) = MOVP-CISO                           TS012926
"             MOVE 'SI'                          TO W-EXPERFORM         TS012927
"          ELSE                                                         TS012928
"             IF W-TAB-DIV-CAU(IND8) = SPACES                           TS012929
"                MOVE 'SI'                     TO W-EXPERFORM           TS012930
"                MOVE MOVP-CISO                TO W-TAB-DIV-CAU(IND8)   TS012931
"          END-IF.                                                      TS012932
"          IF W-TAB-DIV-CAU(IND8) = MOVP-CISO                           TS012933
"             IF ABSC-FINTPNE = 'S'                                     TS012934
"                COMPUTE W-TAB-PNE-CAU(IND8) =                          TS012935
"                        W-TAB-PNE-CAU(IND8) + W-CAUSA-IMOV             TS012936
"             END-IF                                                    TS012937
"          END-IF.                                                      TS012938
"                                                                       TS012939
"      1192-CONTAB-PNE-END.                                             TS012940
000092     EXIT.                                                        TS012941
                                                                        TS012942
000092*-------------------------                                        TS012943
"      1193-SOTTOVOCE.                                                  TS012944
"     *-------------------------                                        TS012945
"                                                                       TS012946
"          IF MOVC-VMATRICE = '7401A'                                   TS012947
"             MOVE CAUIC-SV7401A1        TO OBMTX-SVMATRICE             TS012948
"          END-IF.                                                      TS012949
"          IF MOVC-VMATRICE = '7401B'                                   TS012950
"             MOVE CAUIC-SV7401B1        TO OBMTX-SVMATRICE             TS012951
"          END-IF.                                                      TS012952
"          IF MOVC-VMATRICE = '7403A'                                   TS012953
"             MOVE CAUIC-SV7403A1        TO OBMTX-SVMATRICE             TS012954
"          END-IF.                                                      TS012955
"          IF MOVC-VMATRICE = '7403B'                                   TS012956
"             MOVE CAUIC-SV7403B1        TO OBMTX-SVMATRICE             TS012957
"          END-IF.                                                      TS012958
"          IF MOVC-VMATRICE = '7405'                                    TS012959
"             MOVE CAUIC-SV74051        TO OBMTX-SVMATRICE              TS012960
"          END-IF.                                                      TS012961
"          IF MOVC-VMATRICE = '7416'                                    TS012962
"             MOVE CAUIC-SV74161        TO OBMTX-SVMATRICE              TS012963
"          END-IF.                                                      TS012964
"          IF MOVC-VMATRICE = '7421'                                    TS012965
"             MOVE CAUIC-SV74211        TO OBMTX-SVMATRICE              TS012966
"          END-IF.                                                      TS012967
"          IF MOVC-VMATRICE = '7431A'                                   TS012968
"             MOVE CAUIC-SV7431A1       TO OBMTX-SVMATRICE              TS012969
"          END-IF.                                                      TS012970
"          IF MOVC-VMATRICE = '7431B'                                   TS012971
"             MOVE CAUIC-SV7431B1       TO OBMTX-SVMATRICE              TS012972
"          END-IF.                                                      TS012973
"          IF MOVC-VMATRICE = '7433A'                                   TS012974
"             MOVE CAUIC-SV7433A1       TO OBMTX-SVMATRICE              TS012975
"          END-IF.                                                      TS012976
"          IF MOVC-VMATRICE = '7433B'                                   TS012977
"             MOVE CAUIC-SV7433B1       TO OBMTX-SVMATRICE              TS012978
"          END-IF.                                                      TS012979
"          IF MOVC-VMATRICE = '7435'                                    TS012980
"             MOVE CAUIC-SV74351        TO OBMTX-SVMATRICE              TS012981
"          END-IF.                                                      TS012982
"          IF MOVC-VMATRICE = '7441'                                    TS012983
"             MOVE CAUIC-SV74411        TO OBMTX-SVMATRICE              TS012984
"          END-IF.                                                      TS012985
"          IF MOVC-VMATRICE = '7451'                                    TS012986
"             MOVE CAUIC-SV74511        TO OBMTX-SVMATRICE              TS012987
"          END-IF.                                                      TS012988
000377*----------------------------------- NUOVE VOCI
000377     IF MOVC-VMATRICE = '7433'
000377        MOVE CAUIC-SV7433A1       TO OBMTX-SVMATRICE
000377     END-IF.
000377     IF MOVC-VMATRICE = '7403'
000377        MOVE CAUIC-SV7403A1        TO OBMTX-SVMATRICE
000377     END-IF.
000377     IF MOVC-VMATRICE = '7402'
000377        MOVE CAUIC-VXICOLF        TO WRK-NUOVE-SV
000377        MOVE WRK-NUOVE-SV         TO OBMTX-SVMATRICE
000377     END-IF.
000377     IF MOVC-VMATRICE = '7432'
000377        MOVE CAUIC-VXECOLF        TO WRK-NUOVE-SV
000377        MOVE WRK-NUOVE-SV         TO OBMTX-SVMATRICE
000377     END-IF.
000377     IF MOVC-VMATRICE = '7425'
000377        MOVE CAUIC-VXICOL2        TO WRK-NUOVE-SV
000377        MOVE WRK-NUOVE-SV         TO OBMTX-SVMATRICE
000377     END-IF.
000377     IF MOVC-VMATRICE = '7455'
000377        MOVE CAUIC-VXECOL2        TO WRK-NUOVE-SV
000377        MOVE WRK-NUOVE-SV         TO OBMTX-SVMATRICE
000377     END-IF.
000377     IF MOVC-VMATRICE = '7427'
000377        MOVE CAUIC-VXICOL3        TO WRK-NUOVE-SV
000377        MOVE WRK-NUOVE-SV         TO OBMTX-SVMATRICE
000377     END-IF.
000377     IF MOVC-VMATRICE = '7457'
000377        MOVE CAUIC-VXECOL3        TO WRK-NUOVE-SV
000377        MOVE WRK-NUOVE-SV         TO OBMTX-SVMATRICE
000377     END-IF.
000377     IF MOVC-VMATRICE = '7404'
000377        MOVE CAUIC-VXICOL4        TO WRK-NUOVE-SV
000377        MOVE WRK-NUOVE-SV         TO OBMTX-SVMATRICE
000377     END-IF.
000377     IF MOVC-VMATRICE = '7434'
000377        MOVE CAUIC-VXECOL4        TO WRK-NUOVE-SV
000377        MOVE WRK-NUOVE-SV         TO OBMTX-SVMATRICE
000377     END-IF.                                                      TS012989
000092
"      1193-SOTTOVOCE-END.                                              TS012990
000092     EXIT.                                                        TS012991
                                                                        TS012992
000092*-------------------------                                        TS012993
"      1194-LEGGI-TOBMTX.                                               TS012994
"     *-------------------------                                        TS012995
"                                                                       TS012992
000377*    EXEC SQL INCLUDE ZMS27701 END-EXEC.                          TS012996
000377     EXEC SQL INCLUDE ZMS27702 END-EXEC.                          TS012996
000092                                                                  TS012992
"          IF  NOT W-SQL-OK                                             TS012997
"            AND NOT W-SQL-NON-TROVATO                                  TS012997
"                MOVE 8                             TO W-FLAG-ERR       TS012998
"                MOVE '9999'                        TO W-COD-ERR        TS012999
"                MOVE 'TBTOBMTX'                    TO L-NOME-TABELLA   TS013000
"                MOVE W-SQLCODE                     TO L-CODICE-SQL     TS013001
"                MOVE 'ZMBSVIL0'                    TO L-MODULO         TS013002
"                MOVE '1194-LEGGI-TOBMTX'           TO L-SUB-MODULO     TS013003
"                PERFORM 9999-GESTIONE-ERRORE                           TS013004
"                   THRU 9999-GESTIONE-ERRORE-END                       TS013005
"          ELSE                                                         TS012997
"            IF W-SQL-NON-TROVATO                                       TS012997
"               MOVE SPACES                    TO WCM-MTX-DESCR         TS013009
"               MOVE 0                         TO W-MAP-ERR             TS013009
"               MOVE SPACES                    TO W-MOD-ERR             TS013009
"               MOVE 2                         TO W-FLAG-ERR            TS013009
"               MOVE 'S150'                    TO W-COD-ERR             TS013009
BPO271*         MOVE OBMTX-VMATRICE            TO WCM-MTX-VOCE          TS013009
BPO271          MOVE OBMTX-VMATRICE            TO WCM-MTX-VOCE-BP       TS013009
BPO271          MOVE '  SOTTOVOCE :'           TO WCM-MTX-DESCR1        TS013009
BPO271*         MOVE OBMTX-SVMATRICE           TO WCM-MTX-SVOCE         TS013009
BPO271          MOVE OBMTX-SVMATRICE           TO WCM-MTX-SVOCE-BP      TS013009
"               MOVE ' ASSENTE IN ZM.TBTOBMTX' TO WCM-MTX-DESCR2        TS013009
BPO271*         MOVE WCM-ERR-MTX               TO W-DES-ERR             TS013009
BPO271          MOVE WCM-ERR-MTX-BP            TO W-DES-ERR             TS013009
"               PERFORM 9999-GESTIONE-ERRORE                            TS013009
"                  THRU 9999-GESTIONE-ERRORE-END                        TS013009
"            END-IF                                                     TS013006
"          END-IF.                                                      TS013006
"                                                                       TS013009
"      1194-LEGGI-TOBMTX-END.                                           TS013007
000092     EXIT.                                                        TS013008
                                                                        TS013009
       1200-QUADRA-MOVC.
           MOVE SPACES                           TO W-TROVATO-MOVC
           PERFORM 1220-SCORRI-MOVC
              THRU 1220-SCORRI-MOVC-END
              VARYING INDC FROM 1 BY 1
              UNTIL WS-TAB-TBAMOVC(INDC) = SPACES OR
                    INDC > 50.
       1200-QUADRA-MOVC-END.
           EXIT.
       1220-SCORRI-MOVC.
           IF WS-TAB-TBAMOVC(INDC) NOT = SPACES
              IF WS-MOVC-CIST(INDC)     = MOVP-CIST     AND
                 WS-MOVC-DIPOPE(INDC)   = MOVP-DIPOPE   AND
                 WS-MOVC-NUMOPE(INDC)   = MOVP-NUMOPE   AND
                 WS-MOVC-NPRGMOVP(INDC) = MOVP-NPRGMOVP AND
                 WS-MOVC-NSUBMOVP(INDC) = MOVP-NSUBMOVP
                 MOVE WS-TAB-TBAMOVC(INDC)       TO DCLTBAMOVC
                 IF MOVC-TMOVCAU = 'I'
                    COMPUTE W-COM-ICAU1 =
                            W-COM-ICAU1 + (MOVC-ICAU * -1)
                 ELSE
                    COMPUTE W-COM-ICAU1 =
                            W-COM-ICAU1 + MOVC-ICAU
                 END-IF
                 MOVE SPACES                     TO W-EXPERFORM
                 PERFORM 1179-INTAB-CAUSALI
                    THRU 1179-INTAB-CAUSALI-END
                         VARYING IND8 FROM 1 BY 1
                         UNTIL W-EXPERFORM = 'SI' OR
                               IND8 > 20
                 MOVE 'SI'                       TO W-TROVATO-MOVC
              END-IF
           END-IF.
       1220-SCORRI-MOVC-END.
           EXIT.

       1400-INTAB-NUMMOV.
           MOVE W-CIST                        TO MOVP-CIST.
           MOVE W-DIPOPE                      TO MOVP-DIPOPE.
           MOVE L-NUMOPE                      TO MOVP-NUMOPE.
           EXEC SQL INCLUDE ZMLOPE06 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8             TO W-FLAG-ERR
              MOVE '9999'        TO W-COD-ERR
              MOVE SPACES        TO L-NOME-TABELLA
              MOVE W-SQLCODE     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'    TO L-MODULO
              MOVE 'ZMLOPE06'    TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
              GO TO 1400-INTAB-NUMMOV-END.

           MOVE SPACES TO WRK-FINE-INTAB.
           MOVE ZEROES TO WRK-IND-INTAB.
           INITIALIZE  WRK-TABELLA-MOVP.
           PERFORM 1400-INTAB-MOVP
              THRU 1400-INTAB-MOVP-END
                   UNTIL WRK-FINE-INTAB = 'SI' OR
                             L-ERR-ERR.
           IF L-ERR-ERR
              GO TO 1400-INTAB-NUMMOV-END.

           IF WRK-IND-INTAB GREATER ZEROES
              MOVE 'S' TO WRK-UPDATE-AMOVP.

           EXEC SQL INCLUDE ZMLCLO06 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8              TO W-FLAG-ERR
              MOVE '9999'         TO W-COD-ERR
              MOVE SPACES         TO L-NOME-TABELLA
              MOVE W-SQLCODE      TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'     TO L-MODULO
              MOVE 'ZMLCLO06'     TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END.

           MOVE W-CIST           TO MOVE-CIST.
           MOVE W-DIPOPE         TO MOVE-DIPOPE.
           MOVE L-NUMOPE         TO MOVE-NUMOPE.


           EXEC SQL INCLUDE ZMLOPE07 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8             TO W-FLAG-ERR
              MOVE '9999'        TO W-COD-ERR
              MOVE SPACES        TO L-NOME-TABELLA
              MOVE W-SQLCODE     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'    TO L-MODULO
              MOVE 'ZMLOPE07'    TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
              GO TO 1400-INTAB-NUMMOV-END.

           MOVE SPACES TO WRK-FINE-INTAB.
           MOVE ZEROES TO WRK-IND-INTAB.
           INITIALIZE  WRK-TABELLA-MOVE.
           PERFORM 1400-INTAB-MOVE
              THRU 1400-INTAB-MOVE-END
                   UNTIL WRK-FINE-INTAB = 'SI' OR
                             L-ERR-ERR.
           IF L-ERR-ERR
              GO TO 1400-INTAB-NUMMOV-END.

           IF WRK-IND-INTAB GREATER ZEROES
              MOVE 'S' TO WRK-UPDATE-AMOVE.

           EXEC SQL INCLUDE ZMLCLO07 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8              TO W-FLAG-ERR
              MOVE '9999'         TO W-COD-ERR
              MOVE SPACES         TO L-NOME-TABELLA
              MOVE W-SQLCODE      TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'     TO L-MODULO
              MOVE 'ZMLCLO07'     TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END.

           MOVE W-CIST           TO MOVC-CIST.
           MOVE W-DIPOPE         TO MOVC-DIPOPE.
           MOVE L-NUMOPE         TO MOVC-NUMOPE.
           EXEC SQL INCLUDE ZMLOPE08 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8             TO W-FLAG-ERR
              MOVE '9999'        TO W-COD-ERR
              MOVE SPACES        TO L-NOME-TABELLA
              MOVE W-SQLCODE     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'    TO L-MODULO
              MOVE 'ZMLOPE08'    TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
              GO TO 1400-INTAB-NUMMOV-END.

           MOVE SPACES TO WRK-FINE-INTAB.
           MOVE ZEROES TO WRK-IND-INTAB.
           INITIALIZE  WRK-TABELLA-MOVC.
           PERFORM 1400-INTAB-MOVC
              THRU 1400-INTAB-MOVC-END
                   UNTIL WRK-FINE-INTAB = 'SI' OR
                             L-ERR-ERR.
           IF L-ERR-ERR
              GO TO 1400-INTAB-NUMMOV-END.

           IF WRK-IND-INTAB GREATER ZEROES
              MOVE 'S' TO WRK-UPDATE-AMOVC.

           EXEC SQL INCLUDE ZMLCLO08 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8              TO W-FLAG-ERR
              MOVE '9999'         TO W-COD-ERR
              MOVE SPACES         TO L-NOME-TABELLA
              MOVE W-SQLCODE      TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'     TO L-MODULO
              MOVE 'ZMLCLO08'     TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END.

           MOVE W-CIST           TO DISTI-CIST.
           MOVE W-DIPOPE         TO DISTI-DIPOPE.
           MOVE L-NUMOPE         TO DISTI-NUMOPE.
           EXEC SQL INCLUDE ZMLOPE09 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8             TO W-FLAG-ERR
              MOVE '9999'        TO W-COD-ERR
              MOVE SPACES        TO L-NOME-TABELLA
              MOVE W-SQLCODE     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'    TO L-MODULO
              MOVE 'ZMLOPE09'    TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
              GO TO 1400-INTAB-NUMMOV-END.

           MOVE SPACES TO WRK-FINE-INTAB.
           MOVE ZEROES TO WRK-IND-INTAB.
           INITIALIZE  WRK-TABELLA-DISTI.
           PERFORM 1400-INTAB-DISTI
              THRU 1400-INTAB-DISTI-END
                   UNTIL WRK-FINE-INTAB = 'SI' OR
                             L-ERR-ERR.
           IF L-ERR-ERR
              GO TO 1400-INTAB-NUMMOV-END.

           IF WRK-IND-INTAB GREATER ZEROES
              MOVE 'S' TO WRK-UPDATE-ADISTI.

           EXEC SQL INCLUDE ZMLCLO09 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8              TO W-FLAG-ERR
              MOVE '9999'         TO W-COD-ERR
              MOVE SPACES         TO L-NOME-TABELLA
              MOVE W-SQLCODE      TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'     TO L-MODULO
              MOVE 'ZMLCLO09'     TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END.
       1400-INTAB-NUMMOV-END.
           EXIT.
       1400-INTAB-MOVP.
           EXEC SQL INCLUDE ZMF11620 END-EXEC.
           IF W-SQL-NON-TROVATO
              MOVE 'SI' TO WRK-FINE-INTAB
           ELSE
              IF NOT W-SQL-OK
                 MOVE 8            TO W-FLAG-ERR
                 MOVE '9999'       TO W-COD-ERR
                 MOVE 'TBAMOVP'    TO L-NOME-TABELLA
                 MOVE W-SQLCODE    TO L-CODICE-SQL
                 MOVE 'ZMBSVIL0'   TO L-MODULO
                 MOVE 'ZMF11620'   TO L-SUB-MODULO
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              ELSE
                 ADD 1              TO WRK-IND-INTAB
                 MOVE MOVP-NPRGMOVP TO WRK-INTAB-NMOVP(WRK-IND-INTAB)
                 MOVE MOVP-NSUBMOVP TO WRK-INTAB-SUBMOVP(WRK-IND-INTAB).
       1400-INTAB-MOVP-END.
           EXIT.
       1400-INTAB-MOVE.
           EXEC SQL INCLUDE ZMF11909 END-EXEC.
           IF W-SQL-NON-TROVATO
              MOVE 'SI' TO WRK-FINE-INTAB
           ELSE
              IF NOT W-SQL-OK
                 MOVE 8            TO W-FLAG-ERR
                 MOVE '9999'       TO W-COD-ERR
                 MOVE 'TBAMOVE'    TO L-NOME-TABELLA
                 MOVE W-SQLCODE    TO L-CODICE-SQL
                 MOVE 'ZMBSVIL0'   TO L-MODULO
                 MOVE 'ZMF11909'   TO L-SUB-MODULO
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              ELSE
                 ADD 1              TO WRK-IND-INTAB
                 MOVE MOVE-NPRGMOVP TO WRK-INTAB-NMOVE(WRK-IND-INTAB)
                 MOVE MOVE-NSUBMOVP TO WRK-INTAB-SUBMOVE(WRK-IND-INTAB)
                 MOVE MOVE-NPRGRIGA TO WRK-INTAB-NRIGE(WRK-IND-INTAB).
       1400-INTAB-MOVE-END.
           EXIT.
       1400-INTAB-MOVC.
           EXEC SQL INCLUDE ZMF12007 END-EXEC.
           IF W-SQL-NON-TROVATO
              MOVE 'SI' TO WRK-FINE-INTAB
           ELSE
              IF NOT W-SQL-OK
                 MOVE 8            TO W-FLAG-ERR
                 MOVE '9999'       TO W-COD-ERR
                 MOVE 'TBAMOVC'    TO L-NOME-TABELLA
                 MOVE W-SQLCODE    TO L-CODICE-SQL
                 MOVE 'ZMBSVIL0'   TO L-MODULO
                 MOVE 'ZMF12007'   TO L-SUB-MODULO
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              ELSE
                 ADD 1              TO WRK-IND-INTAB
                 MOVE MOVC-NPRGMOVP TO WRK-INTAB-NMOVC(WRK-IND-INTAB)
                 MOVE MOVC-NSUBMOVP TO WRK-INTAB-SUBMOVC(WRK-IND-INTAB)
                 MOVE MOVC-NPRGRIGA TO WRK-INTAB-NRIGC(WRK-IND-INTAB).
       1400-INTAB-MOVC-END.
           EXIT.
       1400-INTAB-DISTI.
           EXEC SQL INCLUDE ZMF11805 END-EXEC.
           IF W-SQL-NON-TROVATO
              MOVE 'SI' TO WRK-FINE-INTAB
           ELSE
             IF NOT W-SQL-OK
                MOVE 8            TO W-FLAG-ERR
                MOVE '9999'       TO W-COD-ERR
                MOVE 'TBADISTI'   TO L-NOME-TABELLA
                MOVE W-SQLCODE    TO L-CODICE-SQL
                MOVE 'ZMBSVIL0'   TO L-MODULO
                MOVE 'ZMF11809'   TO L-SUB-MODULO
                PERFORM 9999-GESTIONE-ERRORE
                   THRU 9999-GESTIONE-ERRORE-END
             ELSE
              ADD 1               TO WRK-IND-INTAB
              MOVE DISTI-NPRGMOVP TO WRK-INTAB-NDISTI(WRK-IND-INTAB)
              MOVE DISTI-NSUBMOVP TO WRK-INTAB-SUBDISTI(WRK-IND-INTAB)
              MOVE DISTI-NPRGRIGA TO WRK-INTAB-NRIGDISTI(WRK-IND-INTAB).
       1400-INTAB-DISTI-END.
           EXIT.
       1410-DELETA-OPE.
           MOVE W-CIST                        TO OPE-CIST.
           MOVE W-DIPOPE                      TO OPE-DIPOPE.
           MOVE L-NUMOPE                      TO OPE-NUMOPE.
           EXEC SQL INCLUDE ZMD11501 END-EXEC.
           IF NOT W-SQL-OK AND
              NOT W-SQL-NON-TROVATO
              MOVE 8                          TO W-FLAG-ERR
              MOVE '9999'                     TO W-COD-ERR
              MOVE 'TBAOPE  '                 TO L-NOME-TABELLA
              MOVE W-SQLCODE                  TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                 TO L-MODULO
              MOVE '1410-DELETA-OPE'          TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       1410-DELETA-OPE-END.
           EXIT.
       1420-DELETA-MOVP.
           MOVE W-CIST                        TO MOVP-CIST.
           MOVE W-DIPOPE                      TO MOVP-DIPOPE.
           MOVE L-NUMOPE                      TO MOVP-NUMOPE.
           EXEC SQL INCLUDE ZMD11602 END-EXEC.
           IF NOT W-SQL-OK AND
              NOT W-SQL-NON-TROVATO
              MOVE 8                          TO W-FLAG-ERR
              MOVE '9999'                     TO W-COD-ERR
              MOVE 'TBAMOVP '                 TO L-NOME-TABELLA
              MOVE W-SQLCODE                  TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                 TO L-MODULO
              MOVE '1420-DELETA-MOVP'         TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       1420-DELETA-MOVP-END.
           EXIT.
       1430-DELETA-MOVE.
           MOVE W-CIST                        TO MOVE-CIST.
           MOVE W-DIPOPE                      TO MOVE-DIPOPE.
           MOVE L-NUMOPE                      TO MOVE-NUMOPE.
           EXEC SQL INCLUDE ZMD11902 END-EXEC.
           IF NOT W-SQL-OK AND
              NOT W-SQL-NON-TROVATO
              MOVE 8                          TO W-FLAG-ERR
              MOVE '9999'                     TO W-COD-ERR
              MOVE 'TBAMOVE '                 TO L-NOME-TABELLA
              MOVE W-SQLCODE                  TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                 TO L-MODULO
              MOVE '1430-DELETA-MOVE'         TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       1430-DELETA-MOVE-END.
           EXIT.
       1440-DELETA-MOVC.
           MOVE W-CIST                        TO MOVC-CIST.
           MOVE W-DIPOPE                      TO MOVC-DIPOPE.
           MOVE L-NUMOPE                      TO MOVC-NUMOPE.
           EXEC SQL INCLUDE ZMD12003 END-EXEC.
           IF NOT W-SQL-OK AND
              NOT W-SQL-NON-TROVATO
              MOVE 8                          TO W-FLAG-ERR
              MOVE '9999'                     TO W-COD-ERR
              MOVE 'TBAMOVC '                 TO L-NOME-TABELLA
              MOVE W-SQLCODE                  TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                 TO L-MODULO
              MOVE '1440-DELETA-MOVC'         TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       1440-DELETA-MOVC-END.
           EXIT.
       1450-DELETA-ADISTI.
           MOVE W-CIST                        TO DISTI-CIST.
           MOVE W-DIPOPE                      TO DISTI-DIPOPE.
           MOVE L-NUMOPE                      TO DISTI-NUMOPE.
           EXEC SQL INCLUDE ZMD11802 END-EXEC.
           IF NOT W-SQL-OK AND
              NOT W-SQL-NON-TROVATO
              MOVE 8                          TO W-FLAG-ERR
              MOVE '9999'                     TO W-COD-ERR
              MOVE 'TBADISTI'                 TO L-NOME-TABELLA
              MOVE W-SQLCODE                  TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                 TO L-MODULO
              MOVE '1450-DELETA-ADISTI'       TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       1450-DELETA-ADISTI-END.
           EXIT.
       1460-DELETA-ARDAT.
           MOVE W-CIST                        TO RDAT-CIST.
           MOVE W-DIPOPE                      TO RDAT-DIPOPE.
           MOVE L-NUMOPE                      TO RDAT-NUMOPE.
           EXEC SQL INCLUDE ZMD10401 END-EXEC.
           IF NOT W-SQL-OK AND
              NOT W-SQL-NON-TROVATO
              MOVE 8                          TO W-FLAG-ERR
              MOVE '9999'                     TO W-COD-ERR
              MOVE 'TBARDAT '                 TO L-NOME-TABELLA
              MOVE W-SQLCODE                  TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                 TO L-MODULO
              MOVE '1460-DELETA-ARDAT'        TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       1460-DELETA-ARDAT-END.
           EXIT.
      *---------------------------------------------------------*
      * PASSO 9 : VERIFICA MESSAGGIO DA CREARE PER SEGNALARE ERR*
      *           TABELLA DI RIFERIMENTO TTCLI                  *
      *---------------------------------------------------------*
       1500-ELABORA-TTCLI.
           PERFORM 1510-LEGGI-TTCLI
              THRU 1510-LEGGI-TTCLI-END.
           IF W-SQL-OK
BPEL26        IF PRCLI-WDATCLI-LEN GREATER ZEROES
                 MOVE  PRCLI-WDATCLI-TEXT(1:PRCLI-WDATCLI-LEN)
                                                 TO W-TAB-CLIC
BPEL26        END-IF
              PERFORM 1520-CICLA-TTCLI
                 THRU 1520-CICLA-TTCLI-END
                      VARYING IND7 FROM 1 BY 1
                      UNTIL IND7 > 50 OR
                      W-ELE-CLIC(IND7) NOT > SPACES
           END-IF.
       1500-ELABORA-TTCLI-END.
           EXIT.
       1510-LEGGI-TTCLI.
           MOVE W-CPCS-MOD                       TO PRCLI-CPCS.
           EXEC SQL INCLUDE ZMS31801 END-EXEC.
           IF  NOT W-SQL-OK
           AND NOT W-SQL-NON-TROVATO
              MOVE 8                             TO W-FLAG-ERR
              MOVE '9999'                        TO W-COD-ERR
              MOVE 'TBTTCLI'                     TO L-NOME-TABELLA
              MOVE W-SQLCODE                     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                    TO L-MODULO
              MOVE '1510-LEGGI-TTCLI'            TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       1510-LEGGI-TTCLI-END.
           EXIT.
       1520-CICLA-TTCLI.
BAVG90*    MOVE 'S' TO COND-ESITO.
BAVG90     MOVE 'S' TO C-COND-ESITO.
           PERFORM 1530-VERIFICA-CONDIZIONE
              THRU 1530-VERIFICA-CONDIZIONE-END.
BAVG90*    IF COND-ESITO = 'S'
BAVG90     IF C-COND-ESITO = 'S'
              PERFORM 1540-ESAMINA-TTDEST
                 THRU 1540-ESAMINA-TTDEST-END
              IF W-ADMSG-NNDGSET = ALL '9'
                 MOVE SPACES  TO W-ADMSG-NNDGSET
              END-IF
           END-IF.
       1520-CICLA-TTCLI-END.
           EXIT.
       1530-VERIFICA-CONDIZIONE.
           IF WPRCLI-TTZNAPC1 (IND7) > SPACES
BAVG90*       MOVE WPRCLI-TTZNAPC1 (IND7)        TO COND-MOD-COORD
BAVG90*       MOVE WPRCLI-TTPRES (IND7)          TO COND-CONDIZ
BAVG90*       MOVE WPRCLI-TTVALC11 (IND7)        TO COND-VALORE
BAVG90*       PERFORM 0700-CHIAMA-COND
BAVG90*          THRU 0700-CHIAMA-COND-END
BAVG90*       IF COND-RC NOT = ZEROES
BAVG90        MOVE WPRCLI-TTZNAPC1 (IND7)        TO C-COND-MOD-COORD
BAVG90        MOVE WPRCLI-TTPRES (IND7)          TO C-COND-CONDIZ
BAVG90        MOVE WPRCLI-TTVALC11 (IND7)        TO C-COND-VALORE
BAVG90        PERFORM CONDIZIONI-COPY
BAVG90           THRU CONDIZIONI-COPY-EX
BAVG90        MOVE SPACES                        TO W-TROVATO
BAVG90        IF C-COND-RC NOT = ZEROES
                 MOVE 2                          TO W-FLAG-ERR
                 MOVE '9999'                     TO W-COD-ERR
                 MOVE 'ZMBSVIL0'                 TO L-MODULO
                 MOVE '1530-VERIFICA-CONDIZIONE' TO L-SUB-MODULO
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
           END-IF.
      *
       1530-VERIFICA-CONDIZIONE-END.
           EXIT.
       1540-ESAMINA-TTDEST.

           IF  WPRCLI-TTDEST (IND7) = 'ORD'
               MOVE 'ZOR031801'    TO W-DECOD
               COPY ZMZINDIR.
               IF MOD(M-I(IND1):M-L(IND1))  NOT = SPACES
                  IF WPRCLI-TTPREV(IND7) NOT GREATER SPACES
                     MOVE 'ZOR033801'           TO  W-DECOD
                  ELSE
                     IF WPRCLI-TTPREV(IND7) = 'A'
                        MOVE 'ZOR035401'           TO  W-DECOD
                     ELSE
                        IF WPRCLI-TTPREV(IND7) = 'C'
                           MOVE 'ZOR035601'           TO  W-DECOD
                        END-IF
                     END-IF
                  END-IF
                  MOVE W-DEC-COORD              TO  W-COORD-SW
                  COPY ZMZINDIR.
                  MOVE IND1                     TO  W-SW
                  IF M-S(IND1) NOT = SPACES
                     GO TO 1540-ESAMINA-TTDEST-END
                  END-IF
                  MOVE MOD(M-I(IND1):2)         TO W-ADMSG-TTFORMAT
                  MOVE 'ZOR032701'              TO W-DECOD
                  COPY ZMZINDIR.
                  MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-SWFNDG
                  MOVE 'ZOR032801'              TO W-DECOD
                  COPY ZMZINDIR.
                  MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-SWFPAE
                  MOVE 'ZOR032901'              TO W-DECOD
                  COPY ZMZINDIR.
                  MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-SWFREG
                  MOVE 'ZOR033001'              TO W-DECOD
                  COPY ZMZINDIR.
                  MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-SWFBCH
                  MOVE 'ZOR031801'              TO W-DECOD
                  COPY ZMZINDIR.
                  MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-NNDGSET
                  MOVE 'ZOR032601'              TO W-DECOD
                  COPY ZMZINDIR.
                  COPY ZMZVALNM.
                  MOVE W-COM-NUM                TO W-ADMSG-CLIN
                  MOVE 'ZOR034001'              TO W-DECOD
                  COPY ZMZINDIR.
                  MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-CSIGTLX
                  MOVE 'ZOR034601'              TO W-DECOD
                  COPY ZMZINDIR.
                  COPY ZMZVALNM.
                  MOVE W-COM-NUM                TO W-FCIFSW
                  PERFORM 1550-ESAMINA-TTFORMAT
                     THRU 1550-ESAMINA-TTFORMAT-END
                  IF L-ERR-ERR
                     GO TO 1540-ESAMINA-TTDEST-END
                  END-IF
               END-IF
           END-IF.
           IF WPRCLI-TTDEST (IND7)(2:2) IS NUMERIC AND
              WPRCLI-TTDEST (IND7)(1:1) = 'F'
              MOVE WPRCLI-TTDEST (IND7) TO W-XNN
              MOVE 'ZND060301'              TO W-DECOD
              MOVE W-XNN-N                      TO C
              COPY ZMZINDIR.
              IF MOD(M-I(IND1):M-L(IND1)) NOT = SPACES
                 IF WPRCLI-TTPREV(IND7) NOT GREATER SPACES
                    MOVE 'ZND062001'              TO W-DECOD
                 ELSE
                    IF WPRCLI-TTPREV(IND7) = 'A'
                       MOVE 'ZND063701'              TO W-DECOD
                    ELSE
                       IF WPRCLI-TTPREV(IND7) = 'C'
                          MOVE 'ZND063901'              TO W-DECOD
                       END-IF
                    END-IF
                 END-IF
                 MOVE W-XNN-N                  TO C
                 COPY ZMZINDIR.
                 MOVE W-DEC-COORD              TO  W-COORD-SW
                 MOVE IND1                     TO  W-SW
                 IF M-S(IND1) NOT = SPACES
                    GO TO 1540-ESAMINA-TTDEST-END
                 END-IF
                 MOVE MOD(M-I(IND1):2)         TO W-ADMSG-TTFORMAT
                 MOVE 'ZND061001'              TO W-DECOD
                 MOVE W-XNN-N                  TO C
                 COPY ZMZINDIR.
                 MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-SWFNDG
                 MOVE 'ZND061101'              TO W-DECOD
                 MOVE W-XNN-N                  TO C
                 COPY ZMZINDIR.
                 MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-SWFPAE
                 MOVE 'ZND061201'              TO W-DECOD
                 MOVE W-XNN-N                  TO C
                 COPY ZMZINDIR.
                 MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-SWFREG
                 MOVE 'ZND061301'              TO W-DECOD
                 MOVE W-XNN-N                  TO C
                 COPY ZMZINDIR.
                 MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-SWFBCH
                 MOVE 'ZND060101'              TO W-DECOD
                 MOVE W-XNN-N                  TO C
                 COPY ZMZINDIR.
                 MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-NNDGSET
                 MOVE 'ZND060901'              TO W-DECOD
                 MOVE W-XNN-N                  TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                TO W-ADMSG-CLIN
                 MOVE 'ZND062301'              TO W-DECOD
                 MOVE W-XNN-N                  TO C
                 COPY ZMZINDIR.
                 MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-CSIGTLX
                 MOVE 'ZND062901'              TO W-DECOD
                 MOVE W-XNN-N                  TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                TO W-FCIFSW
                 PERFORM 1550-ESAMINA-TTFORMAT
                    THRU 1550-ESAMINA-TTFORMAT-END
              END-IF
           END-IF.
      *-------------------------------------------- TTDEST = FL1/2
           IF  WPRCLI-TTDEST (IND7) (1:2) = 'FL'
           AND WPRCLI-TTDEST (IND7) (3:1) IS NUMERIC
              MOVE WPRCLI-TTDEST (IND7)           TO W-XXN
              MOVE 'ZDF180101'                    TO W-DECOD
              MOVE W-XXN-N                        TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              IF  W-COM-NUM GREATER ZEROES
                  MOVE 'ZDF181401'              TO W-DECOD
                  MOVE W-XXN-N                  TO C
                  COPY ZMZINDIR.
                  MOVE MOD(M-I(IND1):2)         TO W-ADMSG-TTFORMAT
                  MOVE 'ZDF180901'              TO W-DECOD
                  MOVE W-XXN-N                  TO C
                  COPY ZMZINDIR.
                  MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-SWFNDG
                  MOVE 'ZDF181001'              TO W-DECOD
                  MOVE W-XXN-N                  TO C
                  COPY ZMZINDIR.
                  MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-SWFPAE
                  MOVE 'ZDF181101'              TO W-DECOD
                  MOVE W-XXN-N                  TO C
                  COPY ZMZINDIR.
                  MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-SWFREG
                  MOVE 'ZDF181201'              TO W-DECOD
                  MOVE W-XXN-N                  TO C
                  COPY ZMZINDIR.
                  MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-SWFBCH
                  MOVE SPACES                   TO W-ADMSG-NNDGSET
                  MOVE 'ZDF181301'              TO W-DECOD
                  MOVE W-XXN-N                  TO C
                  COPY ZMZINDIR.
                  COPY ZMZVALNM.
                  MOVE W-COM-NUM                TO W-ADMSG-CLIN
                  MOVE 'ZDF180701'              TO W-DECOD
                  MOVE W-XXN-N                  TO C
                  COPY ZMZINDIR.
                  MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-CSIGTLX
                  MOVE 'ZDF181401'              TO W-DECOD
                  MOVE W-XXN-N                  TO C
                  COPY ZMZINDIR.
                  MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-TAVV
                  MOVE 'ZDF180201'              TO W-DECOD
                  MOVE W-XXN-N                  TO C
                  COPY ZMZINDIR.
                  MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-ZRAGSOC
                  MOVE 'ZDF180301'              TO W-DECOD
                  MOVE W-XXN-N                  TO C
                  COPY ZMZINDIR.
                  MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-ZIND
                  MOVE 'ZDF180401'              TO W-DECOD
                  MOVE W-XXN-N                  TO C
                  COPY ZMZINDIR.
                  MOVE MOD(M-I(IND1):M-L(IND1)) TO W-ADMSG-ZCTA
                  MOVE SPACES                   TO W-ADMSG-ZPAE
                  MOVE 1                        TO W-FCIFSW
               END-IF
           END-IF.
           IF  WPRCLI-TTDEST (IND7) = 'FLU'
               MOVE 'FL'                         TO W-ADMSG-TTFORMAT
               MOVE SPACES                       TO W-ADMSG-SWFNDG
               MOVE SPACES                       TO W-ADMSG-SWFPAE
               MOVE SPACES                       TO W-ADMSG-SWFREG
               MOVE SPACES                       TO W-ADMSG-SWFBCH
               MOVE SPACES                       TO W-ADMSG-NNDGSET
               MOVE ZEROS                        TO W-ADMSG-CLIN
               MOVE SPACES                       TO W-ADMSG-CSIGTLX
               PERFORM 1550-ESAMINA-TTFORMAT
                  THRU 1550-ESAMINA-TTFORMAT-END
           END-IF.
       1540-ESAMINA-TTDEST-END.
           EXIT.
       1550-ESAMINA-TTFORMAT.
           IF WPRCLI-TTCLIC (IND7)  = 021
              MOVE 'FC'  TO W-ADMSG-TTFORMAT.

           IF W-ADMSG-TTFORMAT  NOT = SPACES AND
              W-ADMSG-TTFORMAT  NOT = 'NE'
              IF W-ADMSG-TTFORMAT  = 'RA'
                  MOVE 'LT'             TO W-ADMSG-TTFORMAT
              END-IF
              IF W-ADMSG-TTFORMAT  = 'SW' AND
                 APROC-FPCSBOE NOT = 'S'
                 IF W-ADMSG-SWFNDG = SPACES OR
                    W-ADMSG-SWFPAE = SPACES OR
                    W-ADMSG-SWFREG = SPACES
                    IF M-S(W-SW) NOT = SPACES
                       NEXT SENTENCE
                    ELSE
                       MOVE 'E'                     TO M-S(W-SW)
                       MOVE M-M(W-SW)               TO W-MAP-ERR
                       MOVE W-COORD-SW              TO W-MOD-ERR
                       MOVE 2                       TO W-FLAG-ERR
                       MOVE 'S070'                  TO W-COD-ERR
                       PERFORM 9999-GESTIONE-ERRORE
                          THRU 9999-GESTIONE-ERRORE-END
                       GO TO 1550-ESAMINA-TTFORMAT-END
                    END-IF
                 END-IF
              END-IF
           END-IF.
           IF W-ADMSG-TTFORMAT  NOT = SPACES AND
              W-ADMSG-TTFORMAT  NOT = 'NE'
              MOVE W-DIPOPE     TO AUTAV-CUTE
              PERFORM 1560-LEGGI-AUTAV
                 THRU 1560-LEGGI-AUTAV-END
              IF L-ERR-ERR
                 GO TO 1550-ESAMINA-TTFORMAT-END
              END-IF
              IF W-SQL-NON-TROVATO
                 MOVE ZEROES       TO AUTAV-CUTE
                 PERFORM 1560-LEGGI-AUTAV
                    THRU 1560-LEGGI-AUTAV-END
                 IF L-ERR-ERR
                    GO TO 1550-ESAMINA-TTFORMAT-END
                 END-IF
                 IF W-SQL-NON-TROVATO
                    IF M-S(W-SW) NOT = SPACES
                       NEXT SENTENCE
                    ELSE
                       MOVE 'E'               TO M-S(W-SW)
                       MOVE M-M(W-SW)         TO W-MAP-ERR
                       MOVE W-COORD-SW        TO W-MOD-ERR
                       MOVE 2                 TO W-FLAG-ERR
                       MOVE 'S071'            TO W-COD-ERR
                       PERFORM 9999-GESTIONE-ERRORE
                          THRU 9999-GESTIONE-ERRORE-END
                    END-IF
                 ELSE
                    IF W-ADMSG-TTFORMAT = 'SW'
                       IF AUTAV-FAUTSWF = 1 AND
                          (W-FCIFSW = 0 OR 2)
                          IF M-S(W-SW) NOT = SPACES
                             NEXT SENTENCE
                          ELSE
BPO720                       IF OPE-CPCS NOT = 1601 AND
BPO720                                   NOT = 1605
                             MOVE 'E'            TO M-S(W-SW)
                             MOVE M-M(W-SW)      TO W-MAP-ERR
                             MOVE W-COORD-SW     TO W-MOD-ERR
                             MOVE 2              TO W-FLAG-ERR
                             MOVE 'S072'         TO W-COD-ERR
                             PERFORM 9999-GESTIONE-ERRORE
                                THRU 9999-GESTIONE-ERRORE-END
BPO720                       END-IF
                          END-IF
                       END-IF
                    END-IF
                 END-IF
              ELSE
                 IF W-ADMSG-TTFORMAT = 'SW'
                    IF AUTAV-FAUTSWF = 1 AND
                       (W-FCIFSW = 0 OR 2)
                       IF M-S(W-SW) NOT = SPACES
                          NEXT SENTENCE
                       ELSE
BPO720                    IF OPE-CPCS NOT = 1601 AND
BPO720                                NOT = 1605
                          MOVE 'E'            TO M-S(W-SW)
                          MOVE M-M(W-SW)      TO W-MAP-ERR
                          MOVE W-COORD-SW     TO W-MOD-ERR
                          MOVE 2              TO W-FLAG-ERR
                          MOVE 'S072'         TO W-COD-ERR
                          PERFORM 9999-GESTIONE-ERRORE
                             THRU 9999-GESTIONE-ERRORE-END
BPO720                    END-IF
                       END-IF
                    END-IF
                 END-IF
              END-IF
           END-IF.
       1550-ESAMINA-TTFORMAT-END.
           EXIT.
       1560-LEGGI-AUTAV.
           MOVE W-CIST                           TO AUTAV-CIST
           MOVE WPRCLI-TTCLIC (IND7)             TO AUTAV-TTCLIC.
           MOVE W-ADMSG-TTFORMAT                 TO AUTAV-TTFORMAT.
           EXEC SQL INCLUDE ZMS22801 END-EXEC
           IF  NOT W-SQL-OK
           AND NOT W-SQL-NON-TROVATO
              MOVE 8                             TO W-FLAG-ERR
              MOVE '9999'                        TO W-COD-ERR
              MOVE 'TBTAUTAV'                    TO L-NOME-TABELLA
              MOVE W-SQLCODE                     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                    TO L-MODULO
              MOVE '1560-LEGGI-AUTAV'            TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       1560-LEGGI-AUTAV-END.
           EXIT.
       1600-QUADRATURA-DVLIS.
000172*------------------------VIENE EFFETTUATA LA QUADRATURA PER I CTV
000172*----------------------------- ESPRESSI NELLA DIVISA DI LISTINO
000172     INITIALIZE DCLTBAMOVP.
000172     INITIALIZE W-DCLTBAMOVP-A.
000172     INITIALIZE W-DCLTBAMOVP-B.
000172     INITIALIZE W-DCLTBAMOVP-C.
000172     INITIALIZE W-TAB-QUADR-A.
000172     INITIALIZE W-TAB-QUADR-B.
000172     INITIALIZE W-TAB-QUADR-CAU.
BDR136     IF ISTI-TQUOLIS = 1
000172        MOVE ISTI-VARREUR      TO WRK-VARREUR-PIU
000172                                  WRK-VARREUR-MENO
BDR136     ELSE
BDR136        MOVE ISTI-VALUNIQUA    TO WRK-VARREUR-PIU
BDR136                                  WRK-VARREUR-MENO
BDR136     END-IF
000172     COMPUTE WRK-VARREUR-MENO = WRK-VARREUR-MENO * -1.
000172     MOVE W-CIST                           TO MOVP-CIST
000172                                              MOVE-CIST.
000172     MOVE W-DIPOPE                         TO MOVP-DIPOPE
000172                                              MOVE-DIPOPE.
000172     MOVE OPE-NUMOPE                       TO MOVP-NUMOPE
000172                                              MOVE-NUMOPE.
000172     MOVE SPACES                           TO W-F-EX.
000172     MOVE ZEROES         TO WRK-IND-MOVP
000172     PERFORM 1610-ELABORA-MOVP
000172        THRU 1610-ELABORA-MOVP-END
000172        VARYING INDP FROM 1 BY 1
000172        UNTIL INDP > 35 OR
000172        WS-TAB-TBAMOVP(INDP) = SPACES OR
000172              W-F-EX = 'SI'.
000172     MOVE SPACES                           TO W-F-EX.
000172     MOVE 0                                TO W-CTR-LETTI.
000172     IF W-TOT-ICTVLIS-A NOT = 0
000172        IF W-TOT-ICTVLIS-A NOT > WRK-VARREUR-PIU AND
000172           W-TOT-ICTVLIS-A NOT < WRK-VARREUR-MENO
000172           MOVE 'A'                        TO W-CHI-SQUADRA
000172           PERFORM 1690-QUADRA
000172              THRU 1690-QUADRA-END
000172        ELSE
000172           IF M-S(W-STC) NOT = SPACES
000172              NEXT SENTENCE
000172           ELSE
000172              MOVE 'E'                        TO M-S(W-STC)
000172              MOVE M-M(W-STC)                 TO W-MAP-ERR
000172              MOVE W-COORD-STC                TO W-MOD-ERR
000172              MOVE 2                          TO W-FLAG-ERR
000172              MOVE 'S066'                     TO W-COD-ERR
000172              PERFORM 9999-GESTIONE-ERRORE
000172                 THRU 9999-GESTIONE-ERRORE-END
000172           END-IF
000172        END-IF
000172     END-IF.
000172     IF W-TOT-ICTVLIS-B NOT = 0
000172        IF WRK-IND-MOVP GREATER 1
000172           IF W-TOT-ICTVLIS-B NOT > WRK-VARREUR-PIU AND
000172              W-TOT-ICTVLIS-B NOT < WRK-VARREUR-MENO
000172              MOVE 'B'                        TO W-CHI-SQUADRA
000172              PERFORM 1690-QUADRA
000172                 THRU 1690-QUADRA-END
000172           ELSE
000172              IF M-S(W-STC) NOT = SPACES
000172                 NEXT SENTENCE
000172              ELSE
000172                 MOVE 'E'                        TO M-S(W-STC)
000172                 MOVE M-M(W-STC)                 TO W-MAP-ERR
000172                 MOVE W-COORD-STC                TO W-MOD-ERR
000172                 MOVE 2                          TO W-FLAG-ERR
000172                 MOVE 'S067'                     TO W-COD-ERR
000172                 PERFORM 9999-GESTIONE-ERRORE
000172                    THRU 9999-GESTIONE-ERRORE-END
000172              END-IF
000172           END-IF
000172        END-IF
000172     END-IF.
000172     IF W-TOT-ICTVLIS-C NOT = 0
000172        IF W-TOT-ICTVLIS-C NOT > WRK-VARREUR-PIU AND
000172           W-TOT-ICTVLIS-C NOT < WRK-VARREUR-MENO
000172           MOVE 'C'                        TO W-CHI-SQUADRA
000172           PERFORM 1690-QUADRA
000172              THRU 1690-QUADRA-END
000172        ELSE
000172           IF M-S(W-STC) NOT = SPACES
000172              NEXT SENTENCE
000172           ELSE
000172              MOVE 'E'                        TO M-S(W-STC)
000172              MOVE M-M(W-STC)                 TO W-MAP-ERR
000172              MOVE W-COORD-STC                TO W-MOD-ERR
000172              MOVE 2                          TO W-FLAG-ERR
000172              MOVE 'S068'                     TO W-COD-ERR
000172              PERFORM 9999-GESTIONE-ERRORE
000172                 THRU 9999-GESTIONE-ERRORE-END
000172           END-IF
000172        END-IF
000172     END-IF.
000172     MOVE SPACES                           TO W-EXPERFORM
000172     PERFORM 1604-QUADRA-DIV-A
000172        THRU 1604-QUADRA-DIV-A-END
000172             VARYING IND8 FROM 1 BY 1
000172             UNTIL W-EXPERFORM = 'SI' OR
000172                   IND8 > 20
000172     MOVE SPACES                           TO W-EXPERFORM
000172     PERFORM 1106-QUADRA-DIV-B
000172        THRU 1106-QUADRA-DIV-B-END
000172             VARYING IND8 FROM 1 BY 1
000172             UNTIL W-EXPERFORM = 'SI' OR
000172                   IND8 > 20
000172     MOVE SPACES                           TO W-EXPERFORM
000172
000172***--- CONTROLLO CHE IMOV E ICTMOV SE CISO = DIVBASE
000172***--- ABBIANO LO STESSO VALORE
000172     MOVE SPACES                           TO W-F-EX.
000172     MOVE ZEROES         TO WRK-IND-MOVP
000172     PERFORM 1609-VERIFICA-IMPORTI
000172        THRU 1609-VERIFICA-IMPORTI-END
000172        VARYING INDP FROM 1 BY 1
000172        UNTIL INDP > 35 OR
000172        WS-TAB-TBAMOVP(INDP) = SPACES OR
000172              W-F-EX = 'SI'.
000172 1600-QUADRATURA-DVLIS-END.
000172     EXIT.
000172
000172 1610-ELABORA-MOVP.
000172     IF WS-TAB-TBAMOVP(INDP) NOT = SPACES
000172        MOVE WS-TAB-TBAMOVP(INDP)          TO DCLTBAMOVP
000172        MOVE MOVP-IMOV                     TO W-LORDO-IMOV
000172                                              W-CAUSA-IMOV
000172        MOVE MOVP-ICTVLIS                  TO W-LORDO-ICTVLIS
000172        MOVE 0                             TO W-COM-ICAU1
000172         PERFORM 1615-CALCOLA-LORDO-MOV
000172            THRU 1615-CALCOLA-LORDO-MOV-END
000172                VARYING INDE FROM 1 BY 1
000172                UNTIL INDE > 35
000172                   OR WS-TAB-TBAMOVE(INDE) = SPACES
000172        ADD 1                              TO W-CTR-LETTI
000172        MOVE 0                             TO W-COM-NOSEGN-B
000172        MOVE 0                             TO W-COM-NOSEGN-C
000172        MOVE W-CIST                        TO ABSC-CIST
000172        MOVE MOVP-CSTC                     TO ABSC-CSTC
000172        PERFORM 0630-LEGGI-TABSC
000172           THRU 0630-LEGGI-TABSC-END
000172        MOVE SPACES                        TO W-EXPERFORM
000172        IF WRK-FLAG-CAU = 0                                       TS012564
000172           PERFORM 1178-CONTAB-PNE-PNI
000172              THRU 1178-CONTAB-PNE-PNI-END
000172               VARYING IND8 FROM 1 BY 1
000172                UNTIL W-EXPERFORM = 'SI' OR
000172                      IND8 > 20
000172*---- TEST -- PARTE DA DISASTERICARE QUANDO SI DOVRA' EFFETTUARE  TS012570
000172*---- TEST -- LA QUADRATURA PER LE NUOVE CAUSALI.                 TS012570
000172*       ELSE                                                      TS012570
000172*          PERFORM 1192-CONTAB-PNE                                TS012571
000172*             THRU 1192-CONTAB-PNE-END                            TS012572
000172*              VARYING IND8 FROM 1 BY 1                           TS012573
000172*               UNTIL W-EXPERFORM = 'SI' OR                       TS012574
000172*                     IND8 > 20                                   TS012575
000172        END-IF                                                    TS012576
000172        PERFORM 1200-QUADRA-MOVC
000172           THRU 1200-QUADRA-MOVC-END
000172        PERFORM 1611-INTAB-CTV
000172           THRU 1611-INTAB-CTV-END
000172     END-IF.
000172 1610-ELABORA-MOVP-END.
000172     EXIT.
000172
000172 1615-CALCOLA-LORDO-MOV.
280597     MOVE WS-TAB-TBAMOVE(INDE) TO DCLTBAMOVE
280597     IF MOVE-CCEC NOT = SPACES
000172        IF MOVE-NPRGMOVP = MOVP-NPRGMOVP AND
000172           MOVE-NSUBMOVP = MOVP-NSUBMOVP
000172           MOVE ZEROES TO WRK-ISPSVAL
000172                          WRK-ICTVLISPS
000172           COMPUTE WRK-ISPSVAL = MOVE-ISPSVAL * -1
000172           COMPUTE WRK-ICTVLISPS = MOVE-ICTVLISPS * -1
000172           COMPUTE W-LORDO-IMOV = W-LORDO-IMOV - WRK-ISPSVAL
000172           COMPUTE W-LORDO-ICTVLIS =
000172                           W-LORDO-ICTVLIS - WRK-ICTVLISPS
000172        END-IF
000172     END-IF.
000172 1615-CALCOLA-LORDO-MOV-END.
000172     EXIT.
000172 1611-INTAB-CTV.
000172     IF MOVP-NPRGMOVP NOT > 20
000172     OR (MOVP-NPRGMOVP > 150  AND MOVP-NPRGMOVP < 200)
000172        IF W-MOVP-ICTVLIS-A = 0
000172           MOVE MOVP-CIST                  TO W-MOVP-CIST-A
000172           MOVE MOVP-DIPOPE                TO W-MOVP-DIPOPE-A
000172           MOVE MOVP-NUMOPE                TO W-MOVP-NUMOPE-A
000172           MOVE MOVP-NPRGMOVP              TO W-MOVP-NPRGMOVP-A
000172           MOVE MOVP-NSUBMOVP              TO W-MOVP-NSUBMOVP-A
000172           MOVE MOVP-ICTVLIS               TO W-MOVP-ICTVLIS-A
000172        ELSE
000172           MOVE MOVP-ICTVLIS               TO W-NOSEGN-ICTVLIS-B
000172           MOVE W-MOVP-ICTVLIS-A           TO W-NOSEGN-ICTVLIS-A
000172           IF W-NOSEGN-ICTVLIS-B < W-NOSEGN-ICTVLIS-A
000172              MOVE MOVP-CIST               TO W-MOVP-CIST-A
000172              MOVE MOVP-DIPOPE             TO W-MOVP-DIPOPE-A
000172              MOVE MOVP-NUMOPE             TO W-MOVP-NUMOPE-A
000172              MOVE MOVP-NPRGMOVP           TO W-MOVP-NPRGMOVP-A
000172              MOVE MOVP-NSUBMOVP           TO W-MOVP-NSUBMOVP-A
000172              MOVE MOVP-ICTVLIS            TO W-MOVP-ICTVLIS-A
000172           END-IF
000172        END-IF
000172        COMPUTE W-TOT-ICTVLIS-A =
000172                W-TOT-ICTVLIS-A + W-LORDO-ICTVLIS
000172     END-IF.
000172     IF MOVP-NPRGMOVP > 20  AND
000172        MOVP-NPRGMOVP < 151
000172        ADD 1 TO WRK-IND-MOVP
000172        IF W-MOVP-ICTVLIS-B = 0
000172           MOVE MOVP-CIST                  TO W-MOVP-CIST-B
000172           MOVE MOVP-DIPOPE                TO W-MOVP-DIPOPE-B
000172           MOVE MOVP-NUMOPE                TO W-MOVP-NUMOPE-B
000172           MOVE MOVP-NPRGMOVP              TO W-MOVP-NPRGMOVP-B
000172           MOVE MOVP-NSUBMOVP              TO W-MOVP-NSUBMOVP-B
000172           MOVE MOVP-ICTVLIS               TO W-MOVP-ICTVLIS-B
000172        ELSE
000280           MOVE ZEROES                 TO W-MOVP-ICTVLIS-B-ASS
000280           MOVE ZEROES                 TO W-MOVP-ICTVLIS-ASS
000280           MOVE W-MOVP-ICTVLIS-B       TO W-MOVP-ICTVLIS-B-ASS
000280           MOVE MOVP-ICTVLIS           TO W-MOVP-ICTVLIS-ASS
000280*          IF MOVP-ICTVLIS < W-MOVP-ICTVLIS-B
000280           IF W-MOVP-ICTVLIS-ASS < W-MOVP-ICTVLIS-B-ASS
000172              MOVE MOVP-CIST               TO W-MOVP-CIST-B
000172              MOVE MOVP-DIPOPE             TO W-MOVP-DIPOPE-B
000172              MOVE MOVP-NUMOPE             TO W-MOVP-NUMOPE-B
000172              MOVE MOVP-NPRGMOVP           TO W-MOVP-NPRGMOVP-B
000172              MOVE MOVP-NSUBMOVP           TO W-MOVP-NSUBMOVP-B
000172              MOVE MOVP-ICTVLIS            TO W-MOVP-ICTVLIS-B
000172           END-IF
000172        END-IF
000172        COMPUTE W-TOT-ICTVLIS-B =
000172                W-TOT-ICTVLIS-B + W-LORDO-ICTVLIS
000172     END-IF.
000172     IF MOVP-NPRGMOVP NOT < 200 AND
000172        MOVP-NPRGMOVP NOT > 300
000172        IF W-MOVP-ICTVLIS-C = 0
000172           MOVE MOVP-CIST                  TO W-MOVP-CIST-C
000172           MOVE MOVP-DIPOPE                TO W-MOVP-DIPOPE-C
000172           MOVE MOVP-NUMOPE                TO W-MOVP-NUMOPE-C
000172           MOVE MOVP-NPRGMOVP              TO W-MOVP-NPRGMOVP-C
000172           MOVE MOVP-NSUBMOVP              TO W-MOVP-NSUBMOVP-C
000172           MOVE MOVP-ICTVLIS               TO W-MOVP-ICTVLIS-C
000172        ELSE
000280           MOVE ZEROES                 TO W-MOVP-ICTVLIS-C-ASS
000280           MOVE ZEROES                 TO W-MOVP-ICTVLIS-ASS
000280           MOVE W-MOVP-ICTVLIS-C       TO W-MOVP-ICTVLIS-C-ASS
000280           MOVE MOVP-ICTVLIS           TO W-MOVP-ICTVLIS-ASS
000280*          IF MOVP-ICTVLIS < W-MOVP-ICTVLIS-C
000280           IF W-MOVP-ICTVLIS-ASS < W-MOVP-ICTVLIS-C-ASS
000172              MOVE MOVP-CIST               TO W-MOVP-CIST-C
000172              MOVE MOVP-DIPOPE             TO W-MOVP-DIPOPE-C
000172              MOVE MOVP-NUMOPE             TO W-MOVP-NUMOPE-C
000172              MOVE MOVP-NPRGMOVP           TO W-MOVP-NPRGMOVP-C
000172              MOVE MOVP-NSUBMOVP           TO W-MOVP-NSUBMOVP-C
000172              MOVE MOVP-ICTVLIS            TO W-MOVP-ICTVLIS-C
000172           END-IF
000172        END-IF
000172        COMPUTE W-TOT-ICTVLIS-C =
000172                W-TOT-ICTVLIS-C + W-LORDO-ICTVLIS
000172        MOVE SPACES                        TO W-EXPERFORM
000172        PERFORM 1182-INTAB-DIVISA-B
000172           THRU 1182-INTAB-DIVISA-B-END
000172                VARYING IND8 FROM 1 BY 1
000172                UNTIL W-EXPERFORM = 'SI' OR
000172                      IND8 > 20
000172     END-IF.
000172 1611-INTAB-CTV-END.
000172     EXIT.
000172*------------------
000172 1604-QUADRA-DIV-A.
000172*------------------
000172     IF W-TAB-DIV-A(IND8) NOT = SPACES
000172        MOVE 'ZOP020701'              TO W-DECOD
000172        COPY ZMZINDIR.
000172        COPY ZMZVALNM.
000172        IF W-COM-NUM NOT GREATER ZEROES
000172           IF M-S(W-STC) NOT = SPACES
000172              NEXT SENTENCE
000172           ELSE
000172              MOVE 'E'                TO M-S(W-STC)
000172              MOVE M-M(W-STC)         TO W-MAP-ERR
000172              MOVE W-COORD-STC        TO W-MOD-ERR
000172              MOVE 2                  TO W-FLAG-ERR
000172              MOVE 'S085'             TO W-COD-ERR
000172              PERFORM 9999-GESTIONE-ERRORE
000172                 THRU 9999-GESTIONE-ERRORE-END
000172           END-IF
000172        END-IF
000172     ELSE
000172        MOVE 'SI'                          TO W-EXPERFORM
000172     END-IF.
000172 1604-QUADRA-DIV-A-END.
000172     EXIT.
000172 1609-VERIFICA-IMPORTI.
000172     IF WS-TAB-TBAMOVP(INDP) NOT = SPACES
000172        MOVE WS-TAB-TBAMOVP(INDP)          TO DCLTBAMOVP
000172        IF MOVP-CISO = W-CSIGDBASE
000172           IF MOVP-IMOV NOT = MOVP-ICTVLIS
000172              MOVE SPACES               TO W-MOD-ERR
000172              MOVE '0'                  TO W-MAP-ERR
000172              MOVE 'S108'               TO W-COD-ERR
000172              MOVE 2                    TO W-FLAG-ERR
000172              MOVE 'SI'                 TO W-F-EX
000172              MOVE ' IMP E CTV DEVONO ESSERE '
000172                                        TO WCM-MOVP-DESCR1
000172              MOVE 'UGUALI X DIV = DIV BASE'
000172                                        TO WCM-MOVP-DESCR
000172              MOVE MOVP-NPRGMOVP        TO WCM-MOVP-NPRGMOVP-1
000172              MOVE WCM-ERR-MOVP-1       TO W-DES-ERR
000172              PERFORM 9999-GESTIONE-ERRORE
000172                 THRU 9999-GESTIONE-ERRORE-END
000172              GO TO 1609-VERIFICA-IMPORTI-END
000172           END-IF
000172        END-IF
000172     END-IF.
000172 1609-VERIFICA-IMPORTI-END.
000172     EXIT.
000172 1690-QUADRA.
000172     EVALUATE W-CHI-SQUADRA
000172       WHEN 'A'
000172         MOVE W-MOVP-NPRGMOVP-A            TO W-NPRGMOVP-CERCA
000172         MOVE W-MOVP-NSUBMOVP-A            TO W-NSUBMOVP-CERCA
000172         MOVE 'SI'                         TO MOVP-NON-TROVATO
000172         PERFORM 0820-CERCA-AMOVP
000172           THRU 0820-CERCA-AMOVP-END
000172                VARYING INDP FROM 1 BY 1
000172                UNTIL INDP > 35  OR
000172                MOVP-NON-TROVATO = SPACES
000172         COMPUTE MOVP-ICTVLIS = W-MOVP-ICTVLIS-A -
000172                               W-TOT-ICTVLIS-A
000172***--- CORREGGO ANCHE IMOV SE ICTMOV VIENE ARROTONDATO
000172***---  PER VIA DELL'IMPORTO DA QUADRARE
000172***--- SE CISO = DIVBASE  (IMP E CTV DEVONO ESSERE UGUALI)
000172***---
000172         IF MOVP-CISO = W-CSIGDBASE
000172                 MOVE MOVP-ICTVLIS TO MOVP-IMOV
000172         END-IF
000172         SUBTRACT 1 FROM INDP
000172         MOVE DCLTBAMOVP                 TO WS-TAB-TBAMOVP(INDP)
000172       WHEN 'B'
000172         MOVE W-MOVP-NPRGMOVP-B            TO W-NPRGMOVP-CERCA
000172         MOVE W-MOVP-NSUBMOVP-B            TO W-NSUBMOVP-CERCA
000172         MOVE 'SI'                         TO MOVP-NON-TROVATO
000172         PERFORM 0820-CERCA-AMOVP
000172           THRU 0820-CERCA-AMOVP-END
000172                VARYING INDP FROM 1 BY 1
000172                UNTIL INDP > 35  OR
000172                MOVP-NON-TROVATO = SPACES
000172         COMPUTE MOVP-ICTVLIS = W-MOVP-ICTVLIS-B -
000172                               W-TOT-ICTVLIS-B
000172***--- CORREGGO ANCHE IMOV SE ICTMOV VIENE ARROTONDATO
000172***---  PER VIA DELL'IMPORTO DA QUADRARE
000172***--- SE CISO = DIVBASE  (IMP E CTV DEVONO ESSERE UGUALI)
000172***---
000172         IF MOVP-CISO = W-CSIGDBASE
000172                 MOVE MOVP-ICTVLIS TO MOVP-IMOV
000172         END-IF
000172         SUBTRACT 1 FROM INDP
000172         MOVE DCLTBAMOVP                 TO WS-TAB-TBAMOVP(INDP)
000172       WHEN 'C'
000172         MOVE W-MOVP-NPRGMOVP-C            TO W-NPRGMOVP-CERCA
000172         MOVE W-MOVP-NSUBMOVP-C            TO W-NSUBMOVP-CERCA
000172         MOVE 'SI'                         TO MOVP-NON-TROVATO
000172         PERFORM 0820-CERCA-AMOVP
000172           THRU 0820-CERCA-AMOVP-END
000172                VARYING INDP FROM 1 BY 1
000172                UNTIL INDP > 35  OR
000172                MOVP-NON-TROVATO = SPACES
000172         COMPUTE MOVP-ICTVLIS = W-MOVP-ICTVLIS-C -
000172                               W-TOT-ICTVLIS-C
000172***--- CORREGGO ANCHE IMOV SE ICTMOV VIENE ARROTONDATO
000172***---  PER VIA DELL'IMPORTO DA QUADRARE
000172***--- SE CISO = DIVBASE  (IMP E CTV DEVONO ESSERE UGUALI)
000172***---
000172         IF MOVP-CISO = W-CSIGDBASE
000172                 MOVE MOVP-ICTVLIS TO MOVP-IMOV
000172         END-IF
000172         SUBTRACT 1 FROM INDP
000172         MOVE DCLTBAMOVP                 TO WS-TAB-TBAMOVP(INDP)
000172     END-EVALUATE.
000172 1690-QUADRA-END.
000172     EXIT.
       2000-INSERIMENTI.
           IF W-ISRT-MOVP = 'SI'
              PERFORM 2020-MODIFICA-AMOVP
                 THRU 2020-MODIFICA-AMOVP-END
                      VARYING INDP FROM 1 BY 1
                      UNTIL INDP > 35     OR
                      WS-TAB-TBAMOVP(INDP) = SPACES OR
                      L-ERR-ERR
              IF L-ERR-ERR
                 GO TO 2000-INSERIMENTI-END
              END-IF
           END-IF.

           IF WRK-UPDATE-AMOVP = 'S'
              PERFORM
                 VARYING WRK-IND-INTAB FROM 1 BY 1
                   UNTIL WRK-IND-INTAB GREATER 35
                      OR WRK-INTAB-NMOVP(WRK-IND-INTAB) = ZEROES
                    IF WRK-INTAB-OPER-P(WRK-IND-INTAB) NOT = 'U'
070597*                IF WRK-INTAB-OPER-P(WRK-IND-INTAB) = 'S'
070597*                   MOVE 'ZFL101301'   TO   W-DECOD
070597*                   COPY ZMZINDIR.
070597*                   MOVE 'N'   TO MOD(M-I(IND1):M-L(IND1))
070597*                END-IF
                       MOVE WRK-INTAB-NMOVP(WRK-IND-INTAB)
                                                   TO MOVP-NPRGMOVP
                       MOVE WRK-INTAB-SUBMOVP(WRK-IND-INTAB)
                                                   TO MOVP-NSUBMOVP
                       PERFORM 1420-DELETA-MOVP
                          THRU 1420-DELETA-MOVP-END
                       IF L-ERR-ERR
                          GO TO 2000-INSERIMENTI-END
                       END-IF
                    END-IF
              END-PERFORM
              PERFORM
                 VARYING WRK-IND-INTAB FROM 1 BY 1
                    UNTIL WRK-IND-INTAB GREATER 35
                       OR WRK-INTAB-NDISTI(WRK-IND-INTAB) = ZEROES
                      IF WRK-INTAB-OPER-DISTI(WRK-IND-INTAB) NOT = 'U'
                         MOVE WRK-INTAB-NDISTI(WRK-IND-INTAB)
                                                  TO DISTI-NPRGMOVP
                         MOVE WRK-INTAB-SUBDISTI(WRK-IND-INTAB)
                                                  TO DISTI-NSUBMOVP
                         MOVE WRK-INTAB-NRIGDISTI(WRK-IND-INTAB)
                                                  TO DISTI-NPRGRIGA
                         PERFORM 1450-DELETA-ADISTI
                            THRU 1450-DELETA-ADISTI-END
                         IF L-ERR-ERR
                            GO TO 2000-INSERIMENTI-END
                         END-IF
                      END-IF
              END-PERFORM
           END-IF.
           IF W-ISRT-MOVE = 'SI'
              PERFORM 2030-INSERT-AMOVE
                 THRU 2030-INSERT-AMOVE-END
                      VARYING INDE FROM 1 BY 1
SDM002*               UNTIL INDE > 50     OR                            43940000
SDM002                UNTIL INDE > 35     OR                            43941000
                      WS-TAB-TBAMOVE(INDE) = SPACES OR
                      L-ERR-ERR
              IF L-ERR-ERR
                 GO TO 2000-INSERIMENTI-END
              END-IF
           END-IF.
           IF WRK-UPDATE-AMOVE = 'S'
              PERFORM
                 VARYING WRK-IND-INTAB FROM 1 BY 1
                   UNTIL WRK-IND-INTAB GREATER 35
                      OR WRK-INTAB-NMOVE(WRK-IND-INTAB) = ZEROES
                     IF WRK-INTAB-OPER-E(WRK-IND-INTAB) NOT = 'U'
                        MOVE WRK-INTAB-NMOVE(WRK-IND-INTAB)
                                                   TO MOVE-NPRGMOVP
                        MOVE WRK-INTAB-SUBMOVE(WRK-IND-INTAB)
                                                   TO MOVE-NSUBMOVP
                        MOVE WRK-INTAB-NRIGE(WRK-IND-INTAB)
                                                   TO MOVE-NPRGRIGA
                        PERFORM 1430-DELETA-MOVE
                           THRU 1430-DELETA-MOVE-END
                        IF L-ERR-ERR
                           GO TO 2000-INSERIMENTI-END
                        END-IF
                     END-IF
              END-PERFORM
           END-IF.
                                                                        44201000
           IF W-ISRT-MOVC = 'SI'
              PERFORM 2040-INSERT-AMOVC
                 THRU 2040-INSERT-AMOVC-END
                      VARYING INDC FROM 1 BY 1
                      UNTIL INDC > 50     OR
                      WS-TAB-TBAMOVC(INDC) = SPACES OR
                      L-ERR-ERR
           END-IF.
           IF WRK-UPDATE-AMOVC = 'S'
              PERFORM
                 VARYING WRK-IND-INTAB FROM 1 BY 1
                    UNTIL WRK-IND-INTAB GREATER 35
                       OR WRK-INTAB-NMOVC(WRK-IND-INTAB) = ZEROES
                       IF WRK-INTAB-OPER-C(WRK-IND-INTAB) NOT = 'U'
                          MOVE WRK-INTAB-NMOVC(WRK-IND-INTAB)
                                                    TO MOVC-NPRGMOVP
                          MOVE WRK-INTAB-SUBMOVC(WRK-IND-INTAB)
                                                    TO MOVC-NSUBMOVP
                          MOVE WRK-INTAB-NRIGC(WRK-IND-INTAB)
                                                    TO MOVC-NPRGRIGA
                          PERFORM 1440-DELETA-MOVC
                             THRU 1440-DELETA-MOVC-END
                       END-IF
              END-PERFORM
           END-IF.
       2000-INSERIMENTI-END.
           EXIT.
       2010-UPDATE-AOPE.
           EXEC SQL INCLUDE ZMU11507 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8                             TO W-FLAG-ERR
              MOVE '9999'                        TO W-COD-ERR
              MOVE 'TBAOPE  '                    TO L-NOME-TABELLA
              MOVE W-SQLCODE                     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                    TO L-MODULO
              MOVE '2010-UPDATE-AOPE'            TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
           PERFORM 6000-SYNCPOINT
              THRU 6000-SYNCPOINT-END.
       2010-UPDATE-AOPE-END.
           EXIT.
       2010-INSERT-AOPE.
           EXEC SQL INCLUDE ZMV11501 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8                             TO W-FLAG-ERR
              MOVE '9999'                        TO W-COD-ERR
              MOVE 'TBAOPE  '                    TO L-NOME-TABELLA
              MOVE W-SQLCODE                     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                    TO L-MODULO
              MOVE '2010-INSERT-AOPE'            TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
           PERFORM 6000-SYNCPOINT
              THRU 6000-SYNCPOINT-END.
       2010-INSERT-AOPE-END.
           EXIT.
       2020-MODIFICA-AMOVP.
           MOVE WS-TAB-TBAMOVP(INDP)  TO DCLTBAMOVP.

000292     IF WRK-DVALNOA > ZEROES
000292        MOVE WRK-DVALNOA TO MOVP-DVALNOA
000292     END-IF

060597     IF L-FASE GREATER 1
  ""          IF MOVP-IMOV   = ZEROES AND
  ""             MOVP-ICTMOV = ZEROES
060597           IF WS-TAB-TTIMP(INDP) = 'IS'
140597              MOVE 'ZFL101301'   TO   W-DECOD
140597              COPY ZMZINDIR.
140597              MOVE 'N'   TO MOD(M-I(IND1):M-L(IND1))
060597              GO TO 2020-MODIFICA-AMOVP-END
  ""             ELSE
  ""                IF (MOVP-NPRGMOVP NOT < 21 AND NOT > 151)
  ""                   MOVE '0'        TO W-MAP-ERR
  ""                   MOVE SPACES     TO W-MOD-ERR
  ""                   MOVE 2          TO W-FLAG-ERR
  ""                   MOVE 'S102'     TO W-COD-ERR
  ""                   MOVE 'SI'       TO W-FLAG-EXIT
  ""                   PERFORM 9999-GESTIONE-ERRORE
  ""                      THRU 9999-GESTIONE-ERRORE-END
  ""                   GO TO 2020-MODIFICA-AMOVP-END
  ""                END-IF
  ""             END-IF
  ""          END-IF
EUR001*----------- VERIFICA SE E' ATTIVO IL BLOCCO SULLA VALUTA DI
EUR001*----------- REGOLAMENTO PER I MOVIMENTI IN DIVISA IN O LIRE
EUR001        IF CONFG-FVALDUEM = 'B' OR 'F'
EUR001           IF WRK-DIVISA-UEM = 'S'
EUR001              IF CONFG-DVALDUEM = ZEROES
EUR001                 MOVE 20011231 TO  WRK-DATA-VALIDITA
EUR001              ELSE
EUR001                 MOVE CONFG-DVALDUEM TO WRK-DATA-VALIDITA
EUR001              END-IF
EUR001              IF WRK-MOVP-DVALNOA > WRK-DATA-VALIDITA
EUR001                 IF CONFG-FVALDUEM = 'B'
EUR001                    MOVE '0'                     TO W-MAP-ERR
EUR001                    MOVE SPACES                  TO W-MOD-ERR
EUR001                    MOVE 2                       TO W-FLAG-ERR
EUR001                    MOVE 'S211'                  TO W-COD-ERR
EUR001                    PERFORM 9999-GESTIONE-ERRORE
EUR001                       THRU 9999-GESTIONE-ERRORE-END
EUR001                    GO TO 2020-MODIFICA-AMOVP-END
EUR001                 END-IF
EUR001                 IF CONFG-FVALDUEM = 'F'
EUR001                    MOVE WRK-DATA-VALIDITA       TO MOVP-DVALNOA
EUR001                    MOVE 'N'                     TO W-BLOCC
EUR001                    MOVE 'A'                     TO W-MAP-ERR
EUR001                    MOVE W-DEC-COORD             TO W-MOD-ERR
EUR001                    MOVE 'S212'                  TO W-COD-ERR
EUR001                    PERFORM 9999-GESTIONE-ERRORE
EUR001                       THRU 9999-GESTIONE-ERRORE-END
EUR001                 END-IF
EUR001              END-IF
EUR001           END-IF
EUR001        END-IF
060597     END-IF.
                                                                        45400000
SDM002*-----------------------------------------------------------------45401000
SDM002*               NUOVA GESTIONE IMPEGNI E RISCHI                   45402000
SDM002*-----------------------------------------------------------------45403000
SDM002*------ AZZERAMENTO CAMPI INSERITI PER ALLINEAMENTO MA NON GESTITI45404000
BPO313*SDM002   MOVE  ZEROS             TO  MOVP-NCCO13.                45405000
BPO313*SDM002    MOVE  ZEROS             TO  MOVP-NCCOANT13.            45406000
BPO313*SDM002    MOVE  ZEROS             TO  MOVP-NPRNCCO13.            45407000
SDM002*------ AZZERAMENTO CAMPI PER NUOVA GESTIONE IMPEGNI E RISCHI     45408000
SDM002     MOVE  ZEROS             TO  MOVP-CSTCIR                      45409000
SDM002     MOVE  ZEROS             TO  MOVP-CSTCCPIR                    45409100
SDM002     MOVE  ZEROS             TO  MOVP-IMOVIR                      45409200
SDM002     MOVE  ZEROS             TO  MOVP-CSTCSVIR                    45409300
SDM002     MOVE  ZEROS             TO  MOVP-CSTCSVCPIR                  45409400
SDM002     MOVE  ZEROS             TO  MOVP-ISPSVALIR                   45409500
SDM002     MOVE  ZEROS             TO  MOVP-CSTCSEIR                    45409600
SDM002     MOVE  ZEROS             TO  MOVP-CSTCSECPIR                  45409700
SDM002     MOVE  ZEROS             TO  MOVP-ICTVSPSIR                   45409800
SDM002     MOVE  ZEROS             TO  MOVP-CSTCFD                      45409900
SDM002     MOVE  ZEROS             TO  MOVP-CSTCCPFD                    45410000
SDM002     MOVE  ZEROS             TO  MOVP-IMOVFD                      45410100
SDM002     MOVE  SPACES            TO  MOVP-EXTRT                       45410200
BPO313*PERSONALIZZAZIONE BANCO POSTA                                    45410300
BPO313*PER I BONIFICI IMPOSTO DVANOA = DVALNOANEW                       45410301
BPO313*PER EUROGIRO LA DVALNOA = DVAL                                   45410310
BPO313     IF APROC-TPCS NOT = 76 AND NOT = 77 AND NOT = 78             45410400
BPO313               AND NOT = 79 AND NOT = 80                          45410500
SDM002        MOVE  MOVP-DVALNOA         TO  MOVP-NEWDVALNOA            45410600
BPO313     ELSE                                                         45410700
BPO313        IF MOVP-DVAL LESS OPE-DESCOPE                             45410900
BPO313           MOVE OPE-DESCOPE        TO MOVP-NEWDVALNOA             45411000
BPO313        ELSE                                                      45411100
BPO313           MOVE  MOVP-DVAL         TO  MOVP-NEWDVALNOA            45411200
BPO313        END-IF                                                    45411300
BPO313     END-IF                                                       45411400
SDM002                                                                  45411500
SDM002*------ LETTURA S/C MOVIM PER PRELEVARE FLAG POSTERGATE DARE/AVERE45411600
SDM002     IF MOVP-NPRGMOVP LESS 21          OR                         45411700
SDM002        (MOVP-NPRGMOVP GREATER 150 AND                            45411800
SDM002         MOVP-NPRGMOVP LESS    200    )                           45411900
SDM002        MOVE  OPE-DESCOPE    TO  MOVP-NEWDVALNOA                  45412000
SDM002     END-IF.                                                      45412100
SDM021*------ IN CASO DI SUPPLETIVA NON DEVONO ESSERE CREATI IMPEGNI    45412200
SDM021*------ ANCHE SE LA DVALNOA E' POSTERGATA POICHE' IL BATCH COMUNQU45412300
SDM021*------ SCHIACCIERA' AD OGGI SIA DESCOPE CHE DVALNOA              45412400
SDM021     IF MOVP-FCON = 3                                             45412500
SDM021        MOVE  OPE-DESCOPE    TO  MOVP-NEWDVALNOA                  45412600
SDM021     END-IF.                                                      45412700
SDM002                                                                  45412800
SDM002*------ SE HO VALUTA POSTERGATA ENTRO NELLA NUOVA GEST. IMP/RISCHI45412900
SDM008*2---- IF MOVP-DVALNOA    GREATER OPE-DESCOPE AND                 45413000
SDM002     IF MOVP-NEWDVALNOA GREATER OPE-DESCOPE                       45413100
SDM002        PERFORM GESTIONE-IMPEGNI-RISCHI                           45413200
SDM002           THRU GESTIONE-IMPEGNI-RISCHI-END                       45413300
SDM002     END-IF.                                                      45413400
SDM002                                                                  45413500
SDM002     IF L-ERR-ERR                                                 45413600
SDM002        GO TO 2020-MODIFICA-AMOVP-END                             45413700
SDM002     END-IF.                                                      45413800

           IF WRK-UPDATE-AMOVP = 'S'
              MOVE ZEROES        TO WRK-IND-INTAB
              MOVE SPACES        TO WRK-FINE-INTAB
              PERFORM
                 VARYING WRK-IND-INTAB FROM 1 BY 1
                   UNTIL WRK-IND-INTAB GREATER 35
                      OR WRK-INTAB-NMOVP(WRK-IND-INTAB) = ZEROES
                      OR WRK-FINE-INTAB = 'SI'
                    IF MOVP-NPRGMOVP = WRK-INTAB-NMOVP(WRK-IND-INTAB)
                   AND MOVP-NSUBMOVP = WRK-INTAB-SUBMOVP(WRK-IND-INTAB)
                       MOVE 'U'   TO WRK-INTAB-OPER-P(WRK-IND-INTAB)
                       MOVE 'SI'  TO WRK-FINE-INTAB
                       PERFORM 2020-UPDATE-AMOVP
                          THRU 2020-UPDATE-AMOVP-END
                       IF L-ERR-ERR
                          GO TO 2020-MODIFICA-AMOVP-END
                       END-IF
                    END-IF
              END-PERFORM
              IF WRK-FINE-INTAB = 'SI'
                 GO TO 2020-MODIFICA-ADISTI
              END-IF
           END-IF.

           PERFORM 2020-INSERT-AMOVP
              THRU 2020-INSERT-AMOVP-END.
           IF L-ERR-ERR
              GO TO 2020-MODIFICA-AMOVP-END
           END-IF.

       2020-MODIFICA-ADISTI.
           IF INDD(INDP) > 0
              PERFORM 2050-PREPARA-ADISTI
                 THRU 2050-PREPARA-ADISTI-END
           END-IF.
       2020-MODIFICA-AMOVP-END.
           EXIT.
       2020-UPDATE-AMOVP.
           EXEC SQL INCLUDE ZMU11603 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8                             TO W-FLAG-ERR
              MOVE '9999'                        TO W-COD-ERR
              MOVE 'TBAMOVP '                    TO L-NOME-TABELLA
              MOVE W-SQLCODE                     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                    TO L-MODULO
              MOVE '2020-UPDATE-AMOVP'           TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       2020-UPDATE-AMOVP-END.
           EXIT.
       2020-INSERT-AMOVP.
           EXEC SQL INCLUDE ZMV11601 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8                             TO W-FLAG-ERR
              MOVE '9999'                        TO W-COD-ERR
              MOVE 'TBAMOVP '                    TO L-NOME-TABELLA
              MOVE W-SQLCODE                     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                    TO L-MODULO
              MOVE '2020-INSERT-AMOVP'           TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       2020-INSERT-AMOVP-END.
           EXIT.
       2030-INSERT-AMOVE.
           MOVE WS-TAB-TBAMOVE(INDE)             TO DCLTBAMOVE
           IF WRK-UPDATE-AMOVE = 'S'
              MOVE ZEROES        TO WRK-IND-INTAB
              MOVE SPACES        TO WRK-FINE-INTAB
              PERFORM
               VARYING WRK-IND-INTAB FROM 1 BY 1
                 UNTIL WRK-IND-INTAB GREATER 35
                    OR WRK-INTAB-NMOVE(WRK-IND-INTAB) = ZEROES
                    OR WRK-FINE-INTAB = 'SI'
                  IF MOVE-NPRGMOVP = WRK-INTAB-NMOVE(WRK-IND-INTAB)
                 AND MOVE-NSUBMOVP = WRK-INTAB-SUBMOVE(WRK-IND-INTAB)
                 AND MOVE-NPRGRIGA = WRK-INTAB-NRIGE(WRK-IND-INTAB)
                     MOVE 'U'   TO WRK-INTAB-OPER-E(WRK-IND-INTAB)
                     MOVE 'SI'  TO WRK-FINE-INTAB
                     PERFORM 2030-UPDATE-AMOVE
                        THRU 2030-UPDATE-AMOVE-END
                     IF L-ERR-ERR
                        GO TO 2030-INSERT-AMOVE-END
                     END-IF
                  END-IF
              END-PERFORM
              IF WRK-FINE-INTAB = 'SI'
                 GO TO 2030-INSERT-AMOVE-END
              END-IF
           END-IF.


           EXEC SQL INCLUDE ZMV11901 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8                             TO W-FLAG-ERR
              MOVE '9999'                        TO W-COD-ERR
              MOVE 'TBAMOVE '                    TO L-NOME-TABELLA
              MOVE W-SQLCODE                     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                    TO L-MODULO
              MOVE '2030-INSERT-AMOVE'         TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       2030-INSERT-AMOVE-END.
           EXIT.
       2030-UPDATE-AMOVE.
           EXEC SQL INCLUDE ZMU11901 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8                             TO W-FLAG-ERR
              MOVE '9999'                        TO W-COD-ERR
              MOVE 'TBAMOVE '                    TO L-NOME-TABELLA
              MOVE W-SQLCODE                     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                    TO L-MODULO
              MOVE '2030-UPDATE-AMOVE'           TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       2030-UPDATE-AMOVE-END.
           EXIT.
       2040-INSERT-AMOVC.
           MOVE WS-TAB-TBAMOVC(INDC)             TO DCLTBAMOVC
000377*I
           IF MOVP-DVALNOA <  ISTI-DVLDCAU
              IF MOVC-VMATRICE  = '7402'
                 MOVE '7401' TO MOVC-VMATRICE
              ELSE
                IF MOVC-VMATRICE  = '7404'
                   MOVE '7403' TO MOVC-VMATRICE
                ELSE
                   IF MOVC-VMATRICE  = '7432'
                      MOVE '7431' TO MOVC-VMATRICE
                   ELSE
                      IF MOVC-VMATRICE  = '7434'
                         MOVE '7433' TO MOVC-VMATRICE
                      END-IF
                   END-IF
                END-IF
              END-IF
           END-IF
000377*F
           IF WRK-UPDATE-AMOVC = 'S'
              MOVE ZEROES        TO WRK-IND-INTAB
              MOVE SPACES        TO WRK-FINE-INTAB
              PERFORM
               VARYING WRK-IND-INTAB FROM 1 BY 1
                 UNTIL WRK-IND-INTAB GREATER 35
                    OR WRK-INTAB-NMOVC(WRK-IND-INTAB) = ZEROES
                    OR WRK-FINE-INTAB = 'SI'
                  IF MOVC-NPRGMOVP = WRK-INTAB-NMOVC(WRK-IND-INTAB)
                 AND MOVC-NSUBMOVP = WRK-INTAB-SUBMOVC(WRK-IND-INTAB)
                 AND MOVC-NPRGRIGA = WRK-INTAB-NRIGC(WRK-IND-INTAB)
                     MOVE 'U'   TO WRK-INTAB-OPER-C(WRK-IND-INTAB)
                     MOVE 'SI'  TO WRK-FINE-INTAB
                     PERFORM 2040-UPDATE-AMOVC
                        THRU 2040-UPDATE-AMOVC-END
                     IF L-ERR-ERR
                        GO TO 2040-INSERT-AMOVC-END
                     END-IF
                  END-IF
              END-PERFORM
              IF WRK-FINE-INTAB = 'SI'
                 GO TO 2040-INSERT-AMOVC-END
              END-IF
           END-IF.
           EXEC SQL INCLUDE ZMV12001 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8                             TO W-FLAG-ERR
              MOVE '9999'                        TO W-COD-ERR
              MOVE 'TBAMOVC '                    TO L-NOME-TABELLA
              MOVE W-SQLCODE                     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                    TO L-MODULO
              MOVE '2040-INSERT-AMOVC'           TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       2040-INSERT-AMOVC-END.
           EXIT.
       2040-UPDATE-AMOVC.
           EXEC SQL INCLUDE ZMU12001 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8                             TO W-FLAG-ERR
              MOVE '9999'                        TO W-COD-ERR
              MOVE 'TBAMOVC '                    TO L-NOME-TABELLA
              MOVE W-SQLCODE                     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                    TO L-MODULO
              MOVE '2040-UPDATE-AMOVC'           TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       2040-UPDATE-AMOVC-END.
           EXIT.
      *-------------------------------------------------------------*
      * PREPARA IL RECORD  DA REGISTRARE IN ADISTI (PASSO 10)       *
      *-------------------------------------------------------------*
       2050-PREPARA-ADISTI.
           INITIALIZE DCLTBADISTI.
           MOVE INDD(INDP)              TO IND5.
           MOVE WS-TAB-TTSTC(INDP)      TO NCSVP-TTSTC(IND5).
           MOVE WS-TAB-TTDIV(INDP)      TO NCSVP-TTDIV(IND5).
           MOVE NCSVP-TTSTC (IND5)      TO W-XN.
           IF NCSVP-TTSTC (IND5) = 'AA'
              GO TO 2050-PREPARA-ADISTI-END.
           IF NCSVP-TTSTC (IND5) (1:1) = 'D'
              MOVE 'ZSC052601'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              IF MOD(M-I(IND1):M-L(IND1)) > SPACES
                 IF NCSVP-TTDIV(IND5) (1:2) NOT = 'DV'
                    MOVE SPACES               TO W-MOD-ERR
                    MOVE '0'                  TO W-MAP-ERR
                    MOVE 'S097'               TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                    GO TO 2050-PREPARA-ADISTI-END
                 END-IF
                 MOVE NCSVP-TTDIV (IND5)         TO W-XXN
                 MOVE MOVP-CIST                  TO DISTI-CIST
                 MOVE MOVP-NUMOPE                TO DISTI-NUMOPE
                 MOVE MOVP-DIPOPE                TO DISTI-DIPOPE
                 MOVE MOVP-NPRGMOVP              TO DISTI-NPRGMOVP
                 MOVE IND-KCS                    TO DISTI-NSUBMOVP
                 MOVE MOVP-TMOV                  TO DISTI-TMOV
                 COMPUTE DISTI-NPRGRIGA = DISTI-NPRGRIGA + 1
                 MOVE MOD(M-I(IND1):M-L(IND1))   TO DISTI-TPVLR
                 MOVE MOVP-CSTC                  TO DISTI-CSTC
                 MOVE MOVP-CISO                  TO DISTI-CISO
                 MOVE MOVP-NNDGSET               TO DISTI-NNDGSET
                 MOVE MOVP-NSUFABT               TO DISTI-NSUFABT
                 MOVE MOVP-CDPZ                  TO DISTI-CDPZ
                 MOVE MOVP-NPRGOPE               TO DISTI-NPRGOPE
                 MOVE 'ZSC052201'                TO W-DECOD
                 MOVE W-XN-N                     TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO DISTI-CASSA
                 MOVE 'ZSC052301'                TO W-DECOD
                 MOVE W-XN-N                     TO C
                 COPY ZMZINDIR.
                 MOVE MOD(M-I(IND1):M-L(IND1))   TO DISTI-CASSIERE
                 MOVE 'ZSC052801'                TO W-DECOD
                 MOVE W-XN-N                     TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO DISTI-FGESTCC
                 MOVE 'ZAA171501'                TO W-DECOD
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO DISTI-RILDT
                                                    DISTI-DULTMOV
                 MOVE MOVP-DIPOPE                TO DISTI-RILDIP
                                                    DISTI-UMOVDP
                 MOVE MOVP-NUMOPE                TO DISTI-RILNUM
                                                    DISTI-UMOVNU
                 MOVE 'ZDV131601'                TO W-DECOD
                 MOVE W-XXN-N                    TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO DISTI-TGESTVAL
                 MOVE 'ZDV131701'                TO W-DECOD
                 MOVE W-XXN-N                    TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO DISTI-FGENVAL
                 MOVE 'ZDV131801'                TO W-DECOD
                 MOVE W-XXN-N                    TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO DISTI-FINIZNUM
                 MOVE 'ZDV130601'                TO W-DECOD
                 MOVE W-XXN-N                     TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO DISTI-TRASABI
                 MOVE 'ZDV130701'                TO W-DECOD
                 MOVE W-XXN-N                     TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO DISTI-TRASCAB
                 MOVE 'ZDV130801'                TO W-DECOD
                 MOVE W-XXN-N                     TO C
                 COPY ZMZINDIR.
                 MOVE MOD(M-I(IND1):M-L(IND1))   TO DISTI-TRASNDG
      *----------------------------------------------------------
                 MOVE 'ZDV131601'                TO W-DECOD
                 MOVE W-XXN-N                     TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO W-COM-NUM-A
                 IF W-COM-NUM-A = 2
      *-----------------------GESTIONE TAGLI NON ABILITATO
                    MOVE 'E'                     TO M-S(IND1)
                    MOVE M-M(IND1)               TO W-MAP-ERR
                    MOVE W-DEC-COORD             TO W-MOD-ERR
                    MOVE 'S099'                  TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                    GO TO 2050-PREPARA-ADISTI-END
                 END-IF
BDRTC1*-----------------------GESTIONE TRANCHE E TRAVEL CHEQUE
BDRTC1           IF  W-COM-NUM-A  =  3
BDRTC1           THEN
BDRTC1               IF  MOVP-TPVLR   >  SPACES
BDRTC1               AND DISTI-FGENVAL  =   4
BDRTC1               THEN
BDRTC1                   PERFORM  2054-CTRL-TC
BDRTC1                      THRU  2054-CTRL-TC-END
BDRTC1               END-IF
BDRTC1           END-IF
      *-----------------------GESTIONE PER NUMERO
                 IF W-COM-NUM-A = 4
                    MOVE 'ZDV130401'             TO W-DECOD
                    MOVE W-XXN-N                 TO C
                    COPY ZMZINDIR.
                    MOVE MOD(M-I(IND1):M-L(IND1)) TO DISTI-NUMVALORE
                    MOVE ZEROES                  TO DISTI-TAGLIO
                                                    DISTI-QUANT
                    IF MOVP-IMOV < 0
                       COMPUTE DISTI-IMPVAL =  MOVP-IMOV * -1
                    ELSE
                       MOVE MOVP-IMOV         TO DISTI-IMPVAL
                    END-IF
                    MOVE 'ZDV130901'             TO W-DECOD
                    MOVE W-XXN-N                 TO C
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    IF W-COM-NUM > 0
                       MOVE W-COM-NUM            TO DISTI-DSCAEFF
                    ELSE
                       MOVE 'ZDV131701'          TO W-DECOD
                       MOVE W-XXN-N              TO C
                       COPY ZMZINDIR.
                       COPY ZMZVALNM.
                       IF W-COM-NUM = 5
                          MOVE 'ZDV131001'          TO W-DECOD
                          MOVE W-XXN-N              TO C
                          COPY ZMZINDIR.
                          IF MOD(M-I(IND1):M-L(IND1)) GREATER SPACES
170797                       INITIALIZE SC-AREA
                             MOVE MOD(M-I(IND1):M-L(IND1))
                                                    TO SC-CAMPO-DATA
                             PERFORM 2053-DECOD-SCAD
                                THRU 2053-DECOD-SCAD-END
                             IF SC-CODICE-RITORNO = ZEROES
                                MOVE SC-DATA-TRADIZIONALE
                                                    TO DISTI-DSCAEFF
                             END-IF
                          END-IF
                       ELSE
                          MOVE ZEROES               TO DISTI-DSCAEFF
                       END-IF
                    END-IF
                    MOVE 'ZDV131201'             TO W-DECOD
                    MOVE W-XXN-N                 TO C
                    COPY ZMZINDIR.
                    MOVE MOD(M-I(IND1):M-L(IND1)) TO DISTI-TCART
                    MOVE 'ZDV131301'             TO W-DECOD
                    MOVE W-XXN-N                 TO C
                    COPY ZMZINDIR.
                    MOVE MOD(M-I(IND1):M-L(IND1)) TO DISTI-TRCH
                    MOVE 'ZDV131401'             TO W-DECOD
                    MOVE W-XXN-N                 TO C
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    MOVE W-COM-NUM               TO DISTI-ACCDIP
                    MOVE 'ZDV131501'             TO W-DECOD
                    MOVE W-XXN-N                 TO C
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    MOVE W-COM-NUM               TO DISTI-ACCNCC
BPO002              MOVE W-COM-NUM               TO DISTI-ACCNCC13
                    MOVE 'ZDV131101'             TO W-DECOD
                    MOVE W-XXN-N                 TO C
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    MOVE W-COM-NUM               TO DISTI-NCST
                    MOVE 'ZDV136001'             TO W-DECOD
                    MOVE W-XXN-N                 TO C
                    COPY ZMZINDIR.
                    MOVE MOD(M-I(IND1):M-L(IND1)) TO DISTI-CSIGPAE
                    MOVE 'ZDV131701'             TO W-DECOD
                    MOVE W-XXN-N                 TO C
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    IF W-COM-NUM = 5
                       IF APROC-STSEFF = 1
                          IF MOVP-NNDGPART GREATER SPACES
                             MOVE MOVP-NNDGPART  TO DISTI-CODCEDENTE
                          ELSE
                             MOVE MOVP-NNDGNCONT TO DISTI-CODCEDENTE
                          END-IF
                       ELSE
                          MOVE MOVP-NNDGNCONT    TO DISTI-CODCEDENTE
                       END-IF
                       MOVE 'ZFL100501'          TO W-DECOD
                       COPY ZMZINDIR.
                       IF MOD(M-I(IND1):M-L(IND1)) NOT GREATER SPACES
                          MOVE APROC-STSEFF      TO DISTI-STSEFF
                       END-IF
                       IF MOD(M-I(IND1):M-L(IND1)) = 'IS'
                          MOVE 2                 TO DISTI-STSEFF
                       END-IF
                       IF MOD(M-I(IND1):M-L(IND1)) = 'ME'
                          MOVE 5                 TO DISTI-STSEFF
                       END-IF
                       IF MOD(M-I(IND1):M-L(IND1)) = 'RI'
                          MOVE 3                 TO DISTI-STSEFF
                       END-IF
                    ELSE
                       MOVE SPACES               TO DISTI-STSEFF
                    END-IF

                    MOVE 'ZDV136201'             TO W-DECOD
                    MOVE W-XXN-N                  TO C
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    MOVE W-COM-NUM               TO DISTI-CSTGDB
                    PERFORM 2060-SCRIVI-ADISTI
                       THRU 2060-SCRIVI-ADISTI-END
                 END-IF
              END-IF
           END-IF.
      *---------------------------------- SE TTSTC = A1/6 (PASSO 10)
           IF NCSVP-TTSTC (IND5) (1:1) = 'A'
              MOVE 'ZSC052701'                   TO W-DECOD
              MOVE W-XN-N                        TO C
              COPY ZMZINDIR.
              IF MOD(M-I(IND1):M-L(IND1)) > SPACES
                 IF NCSVP-TTDIV(IND5) (1:2) NOT = 'DV'
                    MOVE SPACES               TO W-MOD-ERR
                    MOVE '0'                  TO W-MAP-ERR
                    MOVE 'S098'               TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                    GO TO 2050-PREPARA-ADISTI-END
                 END-IF
                 MOVE NCSVP-TTDIV (IND5)         TO W-XXN
                 MOVE MOVP-CIST                  TO DISTI-CIST
                 MOVE MOVP-DIPOPE                TO DISTI-DIPOPE
                 MOVE MOVP-NUMOPE                TO DISTI-NUMOPE
                 MOVE MOVP-NPRGMOVP              TO DISTI-NPRGMOVP
                 MOVE IND-KCS                    TO DISTI-NSUBMOVP
                 MOVE MOVP-TMOV                  TO DISTI-TMOV
                 COMPUTE DISTI-NPRGRIGA = DISTI-NPRGRIGA + 1
                 MOVE MOD(M-I(IND1):M-L(IND1))   TO DISTI-TPVLR
                 MOVE MOVP-CSTC                  TO DISTI-CSTC
                 MOVE MOVP-CISO                  TO DISTI-CISO
                 MOVE MOVP-NNDGSET               TO DISTI-NNDGSET
                 MOVE MOVP-NSUFABT               TO DISTI-NSUFABT
                 MOVE MOVP-CDPZ                  TO DISTI-CDPZ
                 MOVE MOVP-NPRGOPE               TO DISTI-NPRGOPE
                 MOVE 'ZSC052401'                TO W-DECOD
                 MOVE W-XN-N                     TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO DISTI-CASSA
                 MOVE 'ZSC052501'                TO W-DECOD
                 MOVE W-XN-N                     TO C
                 COPY ZMZINDIR.
                 MOVE MOD(M-I(IND1):M-L(IND1))   TO DISTI-CASSIERE
                 MOVE 'ZSC052901'                TO W-DECOD
                 MOVE W-XN-N                     TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO DISTI-FGESTCC
                 MOVE 'ZAA171501'                TO W-DECOD
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO DISTI-RILDT
                                                    DISTI-DULTMOV
                 MOVE MOVP-DIPOPE                TO DISTI-RILDIP
                                                    DISTI-UMOVDP
                 MOVE MOVP-NUMOPE                TO DISTI-RILNUM
                                                    DISTI-UMOVNU
                 MOVE 'ZDV131601'                TO W-DECOD
                 MOVE W-XXN-N                     TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO DISTI-TGESTVAL
                 MOVE 'ZDV131701'                TO W-DECOD
                 MOVE W-XXN-N                     TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO DISTI-FGENVAL
                 MOVE 'ZDV131801'                TO W-DECOD
                 MOVE W-XXN-N                    TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO DISTI-FINIZNUM
                 MOVE 'ZDV130601'                TO W-DECOD
                 MOVE W-XXN-N                     TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO DISTI-TRASABI
                 MOVE 'ZDV130701'                TO W-DECOD
                 MOVE W-XXN-N                     TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO DISTI-TRASCAB
                 MOVE 'ZDV130801'                TO W-DECOD
                 MOVE W-XXN-N                     TO C
                 COPY ZMZINDIR.
                 MOVE MOD(M-I(IND1):M-L(IND1))   TO DISTI-TRASNDG
      *----------------------------------------------------------
                 MOVE 'ZDV131601'                TO W-DECOD
                 MOVE W-XXN-N                     TO C
                 COPY ZMZINDIR.
                 COPY ZMZVALNM.
                 MOVE W-COM-NUM                  TO W-COM-NUM-A
                 IF W-COM-NUM-A = 2
      *-----------------------GESTIONE TAGLI NON ABILITATA
                    MOVE 'E'                     TO M-S(IND1)
                    MOVE M-M(IND1)               TO W-MAP-ERR
                    MOVE W-DEC-COORD             TO W-MOD-ERR
                    MOVE 'S100'                  TO W-COD-ERR
                    PERFORM 9999-GESTIONE-ERRORE
                       THRU 9999-GESTIONE-ERRORE-END
                    GO TO 2050-PREPARA-ADISTI-END
                 END-IF
BDRTC1*-----------------------GESTIONE TRANCHE E TRAVEL CHEQUE
BDRTC1           IF  W-COM-NUM-A  =  3
BDRTC1           THEN
BDRTC1               IF  MOVP-TPVLR   >  SPACES
BDRTC1               AND DISTI-FGENVAL  =   4
BDRTC1               THEN
BDRTC1                   PERFORM  2054-CTRL-TC
BDRTC1                      THRU  2054-CTRL-TC-END
BDRTC1               END-IF
BDRTC1           END-IF
      *-----------------------GESTIONE PER NUMERO
                 IF W-COM-NUM-A = 4
                    MOVE 'ZDV130401'             TO W-DECOD
                    MOVE W-XXN-N                  TO C
                    COPY ZMZINDIR.
                    MOVE MOD(M-I(IND1):M-L(IND1)) TO DISTI-NUMVALORE
                    MOVE ZEROES                  TO DISTI-TAGLIO
                                                    DISTI-QUANT
                    IF MOVP-IMOV < 0
                       COMPUTE DISTI-IMPVAL =  MOVP-IMOV * -1
                    ELSE
                       MOVE MOVP-IMOV         TO DISTI-IMPVAL
                    END-IF
                    MOVE 'ZDV130901'             TO W-DECOD
                    MOVE W-XXN-N                  TO C
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    IF W-COM-NUM > 0
                       MOVE W-COM-NUM            TO DISTI-DSCAEFF
                    ELSE
                       MOVE 'ZDV131701'          TO W-DECOD
                       MOVE W-XXN-N               TO C
                       COPY ZMZINDIR.
                       COPY ZMZVALNM.
                       IF W-COM-NUM = 5
                          MOVE 'ZDV131001'          TO W-DECOD
                          MOVE W-XXN-N               TO C
                          COPY ZMZINDIR.
                          IF MOD(M-I(IND1):M-L(IND1)) GREATER SPACES
170797                       INITIALIZE SC-AREA
                             MOVE MOD(M-I(IND1):M-L(IND1))
                                                    TO SC-CAMPO-DATA
                             PERFORM 2053-DECOD-SCAD
                                THRU 2053-DECOD-SCAD-END
                             IF SC-CODICE-RITORNO = ZEROES
                                MOVE SC-DATA-TRADIZIONALE
                                                 TO DISTI-DSCAEFF
                             END-IF
                          END-IF
                       ELSE
                          MOVE ZEROES            TO DISTI-DSCAEFF
                       END-IF
                    END-IF
                    MOVE 'ZDV131201'             TO W-DECOD
                    MOVE W-XXN-N                 TO C
                    COPY ZMZINDIR.
                    MOVE MOD(M-I(IND1):M-L(IND1)) TO DISTI-TCART
                    MOVE 'ZDV131301'             TO W-DECOD
                    MOVE W-XXN-N                 TO C
                    COPY ZMZINDIR.
                    MOVE MOD(M-I(IND1):M-L(IND1)) TO DISTI-TRCH
                    MOVE 'ZDV131401'             TO W-DECOD
                    MOVE W-XXN-N                 TO C
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    MOVE W-COM-NUM               TO DISTI-ACCDIP
                    MOVE 'ZDV131501'             TO W-DECOD
                    MOVE W-XXN-N                 TO C
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    MOVE W-COM-NUM               TO DISTI-ACCNCC
BPO002              MOVE W-COM-NUM               TO DISTI-ACCNCC13
                    MOVE 'ZDV131101'             TO W-DECOD
                    MOVE W-XXN-N                  TO C
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    MOVE W-COM-NUM               TO DISTI-NCST
                    MOVE 'ZDV136001'             TO W-DECOD
                    MOVE W-XXN-N                  TO C
                    COPY ZMZINDIR.
                    MOVE MOD(M-I(IND1):M-L(IND1)) TO DISTI-CSIGPAE
                    MOVE 'ZDV131701'             TO W-DECOD
                    MOVE W-XXN-N                  TO C
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    IF W-COM-NUM = 5
                       IF APROC-STSEFF = 1
                          IF MOVP-NNDGPART GREATER SPACES
                             MOVE MOVP-NNDGPART  TO DISTI-CODCEDENTE
                          ELSE
                             MOVE MOVP-NNDGNCONT TO DISTI-CODCEDENTE
                          END-IF
                       ELSE
                          MOVE MOVP-NNDGNCONT TO DISTI-CODCEDENTE
                       END-IF
                       MOVE 'ZFL100501'             TO W-DECOD
                       COPY ZMZINDIR.
                       IF MOD(M-I(IND1):M-L(IND1)) NOT GREATER SPACES
                          MOVE APROC-STSEFF      TO DISTI-STSEFF
                       END-IF
                       IF MOD(M-I(IND1):M-L(IND1)) = 'IS'
                          MOVE 2                 TO DISTI-STSEFF
                       END-IF
                       IF MOD(M-I(IND1):M-L(IND1)) = 'ME'
                          MOVE 5                 TO DISTI-STSEFF
                       END-IF
                       IF MOD(M-I(IND1):M-L(IND1)) = 'RI'
                          MOVE 3                 TO DISTI-STSEFF
                       END-IF
                    ELSE
                       MOVE SPACES               TO DISTI-STSEFF
                    END-IF

                    MOVE 'ZDV136201'             TO W-DECOD
                    MOVE W-XXN-N                  TO C
                    COPY ZMZINDIR.
                    COPY ZMZVALNM.
                    MOVE W-COM-NUM               TO DISTI-CSTGDB
                    PERFORM 2060-SCRIVI-ADISTI
                       THRU 2060-SCRIVI-ADISTI-END
                 END-IF
              END-IF
           END-IF.
       2050-PREPARA-ADISTI-END.
           EXIT.
       2051-ABBINA.
           MOVE 'ZDV130101'                      TO W-DECOD
           MOVE IND9                             TO C
           COPY ZMZINDIR.
           MOVE IND1                             TO IND2
           MOVE SPACES                           TO W-EXPERFORM
           PERFORM 2052-ABBINATO
              THRU 2052-ABBINATO-END
                   VARYING IND8 FROM 1 BY 1
                   UNTIL IND8 > WCM-INDMAX(05) OR
                         W-EXPERFORM = 'SI'.
       2051-ABBINA-END.
           EXIT.
       2052-ABBINATO.
           MOVE 'ZSC052601'                  TO W-DECOD
           MOVE IND8                         TO C
           COPY ZMZINDIR.
           IF MOD(M-I(IND2):M-L(IND2)) = MOD(M-I(IND1):M-L(IND1))
              MOVE 'ZDI040101'               TO W-DECOD
              MOVE IND9                      TO C
              COPY ZMZINDIR.
              IF MOD(M-I(IND1):M-L(IND1)) = MOVP-CISO
                 MOVE 'SI'                  TO W-EXPERFORM
              END-IF
           END-IF.
       2052-ABBINATO-END.
           EXIT.
       2053-DECOD-SCAD.
           PERFORM 0720-CHIAMA-SGSCA
              THRU 0720-CHIAMA-SGSCA-END
           IF SC-CODICE-RITORNO NOT = ZEROES
              MOVE 'E'                        TO M-S(IND1)
              MOVE M-M(IND1)                  TO W-MAP-ERR
              MOVE W-DEC-COORD                TO W-MOD-ERR
              MOVE 'S014'                     TO W-COD-ERR
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       2053-DECOD-SCAD-END.
           EXIT.
BDRTC1*----------------------------------------------------------------
BDRTC1 2054-CTRL-TC.
BDRTC1*----------------------------------------------------------------
BDRTC1*
BDRTC1     MOVE W-CIST       TO ABSC-CIST
BDRTC1     MOVE MOVP-CSTC    TO ABSC-CSTC
BDRTC1     PERFORM 0630-LEGGI-TABSC
BDRTC1        THRU 0630-LEGGI-TABSC-END
BDRTC1     IF  W-SQL-NON-TROVATO
BDRTC1         MOVE 0                        TO W-MAP-ERR
BDRTC1         MOVE SPACES                   TO W-MOD-ERR
BDRTC1         MOVE 2                        TO W-FLAG-ERR
BDRTC1         MOVE 'S032'                   TO W-COD-ERR
BDRTC1         MOVE ABSC-CSTC                TO WCM-ABSC-CSTC
BDRTC1         MOVE SPACES                   TO WCM-ABSC-DESCR
BDRTC1         MOVE ' ASSENTE IN ZM.TBTABSC' TO WCM-ABSC-DESCR
BDRTC1         MOVE WCM-ERR-ABSC             TO W-DES-ERR
BDRTC1         PERFORM 9999-GESTIONE-ERRORE
BDRTC1            THRU 9999-GESTIONE-ERRORE-END
VAC???         GO TO  2054-CTRL-TC-END
BDRTC1     END-IF
BDRTC1     MOVE 'ZFL101901'              TO W-DECOD
BDRTC1     MOVE W-XXN-N                  TO C
BDRTC1     COPY ZMZINDIR.
BDRTC1     MOVE MOD(M-I(IND1):M-L(IND1)) TO  WS-ZFL101901
BDRTC1*
BDRTC1     MOVE 'ZDV13'                  TO  WS-DECOD-DA
BDRTC1                                       WS-DECOD-A
BDRTC1*
BDRTC1* ... PER TUTTI I CAMPI DEL MODELLO (NUM-DA, NUM-A) INTABELLATI
BDRTC1*
BDRTC1     PERFORM  VARYING  IDX-DA  FROM  1  BY  1
BDRTC1       UNTIL  IDX-DA  >  MAX-IDX-DA
BDRTC1*
BDRTC1         MOVE ELE-DA (IDX-DA)          TO WS-DECOD-DA (6 : 2)
BDRTC1         MOVE WS-DECOD-DA              TO W-DECOD
BDRTC1         MOVE W-XXN-N                  TO C
BDRTC1         COPY ZMZINDIR.
BDRTC1         MOVE MOD(M-I(IND1):M-L(IND1)) TO  WRK-NUMTC-NUM-DA
BDRTC1*
BDRTC1         MOVE ELE-A (IDX-DA)           TO WS-DECOD-A (6 : 2)
BDRTC1         MOVE WS-DECOD-A               TO W-DECOD
BDRTC1         MOVE W-XXN-N                  TO C
BDRTC1         COPY ZMZINDIR.
BDRTC1         MOVE MOD(M-I(IND1):M-L(IND1)) TO  WRK-NUMTC-NUM-A
BDRTC1*
BDRTC1         MOVE ELE-TAGLIO (IDX-DA)      TO WS-DECOD-DA (6 : 2)
BDRTC1         MOVE WS-DECOD-DA              TO W-DECOD
BDRTC1         MOVE W-XXN-N                  TO C
BDRTC1         COPY ZMZINDIR.
BDRTC1         COPY ZMZVALNM.
BDRTC1         COMPUTE  WRK-NUMTC-TAGLIO  =
BDRTC1                             W-COM-NUM / (10 ** M-D(IND1))
BDRTC1*
BDRTC1* ... VERIFICO CHE I NUMERI DA/A NON SI ACCAVALLINO AI PRECEDENTI
BDRTC1*     NON DEVE ESSERE COMPRESO TRA DA/A  ...
BDRTC1* ... SOLO SE > DI SPAZI
BDRTC1         PERFORM  VARYING  IDX-TRA FROM  1  BY  1
BDRTC1           UNTIL  IDX-TRA  >  IDX-DA
BDRTC1              OR  TRANCE-DA (IDX-TRA)  =  SPACES
BDRTC1              OR (WRK-NUMTC-NUM-DA  NOT >  SPACES
BDRTC1              AND WRK-NUMTC-NUM-A   NOT >  SPACES)
BDRTC1*
BDRTC1             IF ((WRK-NUMTC-NUM-DA  NOT <  TRANCE-DA (IDX-TRA)
BDRTC1                               AND  NOT >  TRANCE-A (IDX-TRA))
BDRTC1             OR  (WRK-NUMTC-NUM-A   NOT <  TRANCE-DA (IDX-TRA)
BDRTC1                               AND  NOT >  TRANCE-A (IDX-TRA)))
BDRTC1             AND IDX-TRA  NOT = IDX-DA
BDRTC1             AND WRK-NUMTC-TAGLIO  =  TRANCE-TAGLIO (IDX-TRA)
BDRTC1             THEN
BDRTC1                 MOVE 0                       TO W-MAP-ERR
BDRTC1                 MOVE SPACES                  TO W-MOD-ERR
BDRTC1                 MOVE 2                       TO W-FLAG-ERR
VAC???                 MOVE 'S203'                  TO W-COD-ERR
VAC???                 MOVE 'TRANCE ACCAVALLATE'    TO W-DES-ERR
BDRTC1                 PERFORM 9999-GESTIONE-ERRORE
BDRTC1                    THRU 9999-GESTIONE-ERRORE-END
BDRTC1                 GO TO  2054-CTRL-TC-END
BDRTC1             END-IF
BDRTC1         END-PERFORM
BDRTC1* ... CARICA IN TABELLA NUMERI DA/A ...
BDRTC1         MOVE  WRK-NUMTC-NUM-DA    TO TRANCE-DA (IDX-DA)
BDRTC1         MOVE  WRK-NUMTC-NUM-A     TO TRANCE-A (IDX-DA)
BDRTC1* ... CARICA IN TABELLA NUMERI TAGLIO E QUANTITA
BDRTC1         MOVE  WRK-NUMTC-TAGLIO    TO TRANCE-TAGLIO (IDX-DA)
BDRTC1         MOVE ELE-QTA (IDX-DA)         TO WS-DECOD-DA (6 : 2)
BDRTC1         MOVE WS-DECOD-DA              TO W-DECOD
BDRTC1         MOVE W-XXN-N                  TO C
BDRTC1         COPY ZMZINDIR.
BDRTC1         COPY ZMZVALNM.
BDRTC1         COMPUTE  TRANCE-QTA (IDX-DA)  =
BDRTC1                             W-COM-NUM / (10 ** M-D(IND1))
BDRTC1     END-PERFORM.
BDRTC1*
BDRTC1* ... CARICO TC / TRASMISSIONE ALLA DESTINATARIA
BDRTC1*
BDRTC1     IF  MOVP-TMOV  =  1
BDRTC1     AND ABSC-CTIPSTC  =  500
BDRTC1     AND (APROC-TPCSPRN  =  0  OR  APROC-TPCSPRN  =  6)
BDRTC1     THEN
BDRTC1         INITIALIZE     ZMWNUMTC
BDRTC1         MOVE  'C  '                   TO  DISTI-STATUSTC
BDRTC1         MOVE  MOVP-CDPZ               TO  WRK-NUMTC-DIPCARIC
BDRTC1         SET  WRK-NUMTC-NON-ESISTE     TO  TRUE
BDRTC1         IF  APROC-TPCSPRN  =  6
BDRTC1         THEN
BDRTC1             MOVE  'V  '                   TO  DISTI-STATUSTC
BDRTC1             SET  WRK-NUMTC-SCARICA        TO  TRUE
BDRTC1             SET  WRK-NUMTC-VIAGGIANTE     TO  TRUE
BDRTC1             MOVE  OPE-DIPOPE              TO  WRK-NUMTC-DIPCARIC
BDRTC1         END-IF
BDRTC1         MOVE  MOVP-NNDGSET            TO  WRK-NUMTC-NNDGSET
BDRTC1         MOVE  MOVP-CIST               TO  WRK-NUMTC-CIST
BDRTC1         MOVE  MOVP-CISO               TO  WRK-NUMTC-CISO
BDRTC1* ... PER TUTTI I CAMPI DA / A INTABELLATI
BDRTC1         PERFORM  VARYING  IDX-DA  FROM  1  BY  1
BDRTC1           UNTIL  IDX-DA  >  MAX-IDX-DA
BDRTC1              OR  WRK-NUMTC-RC NOT = SPACES
BDRTC1*
BDRTC1             MOVE  TRANCE-DA (IDX-DA)  TO WRK-NUMTC-NUM-DA
BDRTC1             MOVE  TRANCE-A (IDX-DA)   TO WRK-NUMTC-NUM-A
BDRTC1             MOVE  TRANCE-TAGLIO (IDX-DA) TO WRK-NUMTC-TAGLIO
BDRTC1* ... ALMENO UNO DEI DUE   VALORIZZATO ...
BDRTC1             IF  WRK-NUMTC-NUM-DA > SPACES
BDRTC1             OR  WRK-NUMTC-NUM-A > SPACES
BDRTC1             THEN
BDRTC1* ... VERIFICA CONGRUENZA ...
BDRTC1                 INITIALIZE  ZMWNRCAR
BDRTC1                 MOVE  WRK-NUMTC-NUM-DA TO NRCAR-NUMERO-DA
BDRTC1                 MOVE  WRK-NUMTC-NUM-A  TO NRCAR-NUMERO-A
BDRTC1                 MOVE  'C'              TO NRCAR-CHIAMATA
BDRTC1                 COPY  ZMYNRCAR.
BDRTC1                 IF  NRCAR-CODICE-RITORNO  NOT =  '00'
BDRTC1                 THEN
BDRTC1                     MOVE 0                       TO W-MAP-ERR
BDRTC1                     MOVE SPACES                  TO W-MOD-ERR
BDRTC1                     MOVE 2                       TO W-FLAG-ERR
BPL011*                    MOVE 'S200'                  TO W-COD-ERR
BPL011                     MOVE 'S202'                  TO W-COD-ERR
VAC???                     MOVE WRK-NUMTC-DES-ERR       TO W-DES-ERR
BDRTC1                     PERFORM 9999-GESTIONE-ERRORE
BDRTC1                        THRU 9999-GESTIONE-ERRORE-END
BDRTC1                     GO TO  2054-CTRL-TC-END
BDRTC1                 END-IF
BDRTC1                 COPY  ZMYNUMTC.
BDRTC1                 IF  WRK-NUMTC-RC NOT = SPACES
BDRTC1                 THEN
BDRTC1                     MOVE 0                        TO W-MAP-ERR
BDRTC1                     MOVE SPACES                   TO W-MOD-ERR
BDRTC1                     MOVE 2                        TO W-FLAG-ERR
VAC???                     MOVE 'S201'                   TO W-COD-ERR
BDRTC1                     MOVE WRK-NUMTC-DES-ERR        TO W-DES-ERR
BDRTC1                     PERFORM 9999-GESTIONE-ERRORE
BDRTC1                        THRU 9999-GESTIONE-ERRORE-END
BDRTC1                 END-IF
BDRTC1*
BDRTC1                 MOVE TRANCE-TAGLIO (IDX-DA)  TO DISTI-TAGLIO
BDRTC1                 MOVE TRANCE-DA  (IDX-DA)     TO DISTI-NUMVALORE
BDRTC1                 MOVE TRANCE-QTA (IDX-DA)     TO DISTI-QUANT
BDRTC1                 COMPUTE  DISTI-IMPVAL  =  DISTI-QUANT  *
BDRTC1                                           DISTI-TAGLIO
BDRTC1                 PERFORM 7000-SCRIVI-DISTI
BDRTC1                    THRU 7000-SCRIVI-DISTI-END
BDRTC1             END-IF
BDRTC1         END-PERFORM
BDRTC1     END-IF.
BDRTC1*
BDRTC1* ... RICEZIONE TC CON CARICO SULLA DESTINATARIA
BDRTC1*
BDRTC1     IF  MOVP-TMOV  =  1
BDRTC1     AND ABSC-CTIPSTC  =  500
BDRTC1     AND APROC-TPCSPRN  =  7
BDRTC1     THEN
BDRTC1         MOVE  'CR '                   TO  DISTI-STATUSTC
BDRTC1         INITIALIZE     ZMWNUMTC
BDRTC1*        SET  WRK-NUMTC-ESISTE         TO  TRUE
BDRTC1         SET  WRK-NUMTC-SCARICA        TO  TRUE
BDRTC1         SET  WRK-NUMTC-RICEVUTO       TO  TRUE
BDRTC1         MOVE  MOVP-NNDGSET            TO  WRK-NUMTC-NNDGSET
BDRTC1         MOVE  MOVP-CDPZ               TO  WRK-NUMTC-DIPCARIC
BDRTC1         MOVE  MOVP-CIST               TO  WRK-NUMTC-CIST
BDRTC1         MOVE  MOVP-CISO               TO  WRK-NUMTC-CISO
BDRTC1* ... PER TUTTI I CAMPI DA / A INTABELLATI
BDRTC1         PERFORM  VARYING  IDX-DA  FROM  1  BY  1
BDRTC1           UNTIL  IDX-DA  >  MAX-IDX-DA
BDRTC1              OR  WRK-NUMTC-RC NOT = SPACES
BDRTC1*
BDRTC1             MOVE  TRANCE-DA (IDX-DA)  TO WRK-NUMTC-NUM-DA
BDRTC1             MOVE  TRANCE-A (IDX-DA)   TO WRK-NUMTC-NUM-A
BDRTC1             MOVE  TRANCE-TAGLIO (IDX-DA) TO WRK-NUMTC-TAGLIO
BDRTC1* ... ALMENO UNO DEI DUE   VALORIZZATO ...
BDRTC1             IF  WRK-NUMTC-NUM-DA > SPACES
BDRTC1             OR  WRK-NUMTC-NUM-A > SPACES
BDRTC1             THEN
BDRTC1* ... VERIFICA CONGRUENZA ...
BDRTC1                 INITIALIZE  ZMWNRCAR
BDRTC1                 MOVE  WRK-NUMTC-NUM-DA TO NRCAR-NUMERO-DA
BDRTC1                 MOVE  WRK-NUMTC-NUM-A  TO NRCAR-NUMERO-A
BDRTC1                 MOVE  'C'              TO NRCAR-CHIAMATA
BDRTC1                 COPY  ZMYNRCAR.
BDRTC1                 IF  NRCAR-CODICE-RITORNO  NOT =  '00'
BDRTC1                 THEN
BDRTC1                     MOVE 0                       TO W-MAP-ERR
BDRTC1                     MOVE SPACES                  TO W-MOD-ERR
BDRTC1                     MOVE 2                       TO W-FLAG-ERR
BPL011*                    MOVE 'S200'                  TO W-COD-ERR
BPL011                     MOVE 'S203'                  TO W-COD-ERR
VAC???                     MOVE WRK-NUMTC-DES-ERR       TO W-DES-ERR
BDRTC1                     PERFORM 9999-GESTIONE-ERRORE
BDRTC1                        THRU 9999-GESTIONE-ERRORE-END
BDRTC1                     GO TO  2054-CTRL-TC-END
BDRTC1                 END-IF
BDRTC1                 COPY  ZMYNUMTC.
BDRTC1                 IF  WRK-NUMTC-RC NOT = SPACES
BDRTC1                 THEN
BDRTC1                     MOVE 0                        TO W-MAP-ERR
BDRTC1                     MOVE SPACES                   TO W-MOD-ERR
BDRTC1                     MOVE 2                        TO W-FLAG-ERR
VAC???                     MOVE 'S201'                   TO W-COD-ERR
BDRTC1                     MOVE WRK-NUMTC-DES-ERR        TO W-DES-ERR
BDRTC1                     PERFORM 9999-GESTIONE-ERRORE
BDRTC1                        THRU 9999-GESTIONE-ERRORE-END
BDRTC1                 END-IF
BDRTC1*
BDRTC1                 MOVE TRANCE-TAGLIO (IDX-DA)  TO DISTI-TAGLIO
BDRTC1                 MOVE TRANCE-DA  (IDX-DA)     TO DISTI-NUMVALORE
BDRTC1                 MOVE TRANCE-QTA (IDX-DA)     TO DISTI-QUANT
BDRTC1                 COMPUTE  DISTI-IMPVAL  =  DISTI-QUANT  *
BDRTC1                                           DISTI-TAGLIO
BDRTC1                 PERFORM 7000-SCRIVI-DISTI
BDRTC1                    THRU 7000-SCRIVI-DISTI-END
BDRTC1             END-IF
BDRTC1         END-PERFORM
BDRTC1*
BDRTC1     END-IF.
BDRTC1*
BDRTC1* ... COPERTURA TC VENDUTI DA QUALSIASI FILIALE
BDRTC1*
BDRTC1     IF  MOVP-TMOV  =  1
BDRTC1*    AND ABSC-CTIPSTC  =  500
BPL???*BDRTC1     AND ABSC-CTIPSTC  =  102
BPL???     AND (ABSC-CTIPSTC  =  102
BPL???     OR ABSC-CTIPSTC  =  116)
BDRTC1     AND APROC-TPCSPRN  =  8
BDRTC1     THEN
BDRTC1         MOVE  'CP '                   TO  DISTI-STATUSTC
BDRTC1         INITIALIZE     ZMWNUMTC
BPL025         MOVE 'ZSR210101'              TO W-DECOD
BPL025         COPY ZMZINDIR.
BPL025         COPY ZMZVALNM.
BPL025         MOVE W-COM-NUM                TO  WRK-NUMTC-DTCARIC
BDRTC1         SET  WRK-NUMTC-SCARICA        TO  TRUE
BDRTC1         SET  WRK-NUMTC-COPERTO        TO  TRUE
BDRTC1         MOVE  MOVP-NNDGSET            TO  WRK-NUMTC-NNDGSET
BDRTC1         MOVE  MOVP-CDPZ               TO  WRK-NUMTC-DIPCARIC
BDRTC1         MOVE  MOVP-CIST               TO  WRK-NUMTC-CIST
BDRTC1         MOVE  MOVP-CISO               TO  WRK-NUMTC-CISO
BDRTC1         COPY  ZMYNUMTC.
BDRTC1         IF  WRK-NUMTC-RC NOT = SPACES
BDRTC1         THEN
BDRTC1             MOVE 0                        TO W-MAP-ERR
BDRTC1             MOVE SPACES                   TO W-MOD-ERR
BDRTC1             MOVE 2                        TO W-FLAG-ERR
VAC???             MOVE 'S201'                   TO W-COD-ERR
BDRTC1             MOVE WRK-NUMTC-DES-ERR        TO W-DES-ERR
BDRTC1             PERFORM 9999-GESTIONE-ERRORE
BDRTC1                THRU 9999-GESTIONE-ERRORE-END
BDRTC1         END-IF
BDRTC1*
BDRTC1         MOVE 0                       TO DISTI-TAGLIO
BDRTC1                                         DISTI-QUANT
BDRTC1         MOVE SPACES                  TO DISTI-NUMVALORE
BDRTC1         MOVE WRK-NUMTC-IMP           TO DISTI-IMPVAL
BPL025         MOVE WRK-NUMTC-DTCARIC       TO DISTI-DULTMOV
BDRTC1*
BDRTC1         PERFORM 7000-SCRIVI-DISTI
BDRTC1            THRU 7000-SCRIVI-DISTI-END
BDRTC1*
BDRTC1         MOVE 'ZOR030501'           TO W-DECOD
BDRTC1         COPY ZMZINDIR.
BDRTC1         COMPUTE W-COM1 = DISTI-IMPVAL * (10 ** M-D(IND1))
BDRTC1         COPY ZMZFMMOD.
BDRTC1         MOVE SPACES                TO M-S(IND1)
BDRTC1     END-IF
BDRTC1*
BDRTC1* ... SCARICO TC VENDUTI / TRASMESSI
BDRTC1*
BDRTC1     IF  MOVP-TMOV  =  2
BDRTC1     AND ABSC-CTIPSTC  =  500
BDRTC1     AND ((APROC-TPCSPRN  NOT =  6  AND
BDRTC1           WS-ZFL101901  =  SPACES)
BDRTC1      OR  APROC-TPCSPRN  =  6)
BDRTC1     THEN
BDRTC1         INITIALIZE     ZMWNUMTC
BDRTC1         SET  WRK-NUMTC-SCARICA        TO  TRUE
BDRTC1         MOVE  MOVP-CIST               TO  WRK-NUMTC-CIST
BDRTC1         MOVE  MOVP-CISO               TO  WRK-NUMTC-CISO
BDRTC1         MOVE  MOVP-NNDGSET            TO  WRK-NUMTC-NNDGSET
BDRTC1         MOVE  MOVP-CDPZ               TO  WRK-NUMTC-DIPCARIC
BDRTC1         IF  APROC-TPCSPRN  NOT =  6
BDRTC1         THEN
BDRTC1             SET   WRK-NUMTC-VENDUTO       TO TRUE
BDRTC1             MOVE  'VN '                   TO  DISTI-STATUSTC
BDRTC1         ELSE
BDRTC1             SET   WRK-NUMTC-VIAGGIANTE    TO TRUE
BDRTC1             MOVE  'V  '                   TO  DISTI-STATUSTC
BDRTC1         END-IF
BDRTC1         IF  APROC-TPCSPRN  =  7
BDRTC1         THEN
BDRTC1             MOVE  'CR '                   TO  DISTI-STATUSTC
BDRTC1*****        SET  WRK-NUMTC-ESISTE         TO  TRUE
BDRTC1             SET  WRK-NUMTC-RICEVUTO       TO  TRUE
BDRTC1         END-IF
BDRTC1* ... PER TUTTI I CAMPI DA / A INTABELLATI
BDRTC1         PERFORM  VARYING  IDX-DA  FROM  1  BY  1
BDRTC1           UNTIL  IDX-DA  >  MAX-IDX-DA
BDRTC1              OR  WRK-NUMTC-RC NOT = SPACES
BDRTC1*
BDRTC1             MOVE  TRANCE-DA (IDX-DA)      TO WRK-NUMTC-NUM-DA
BDRTC1             MOVE  TRANCE-A (IDX-DA)       TO WRK-NUMTC-NUM-A
BDRTC1             MOVE  TRANCE-TAGLIO (IDX-DA)  TO WRK-NUMTC-TAGLIO
BDRTC1* ... ALMENO UNO DEI DUE   VALORIZZATO ...
BDRTC1             IF  WRK-NUMTC-NUM-DA > SPACES
BDRTC1             OR  WRK-NUMTC-NUM-A > SPACES
BDRTC1             THEN
BDRTC1* ... VERIFICA CONGRUENZA ...
BDRTC1                 INITIALIZE  ZMWNRCAR
BDRTC1                 MOVE  WRK-NUMTC-NUM-DA TO NRCAR-NUMERO-DA
BDRTC1                 MOVE  WRK-NUMTC-NUM-A  TO NRCAR-NUMERO-A
BDRTC1                 MOVE  'C'              TO NRCAR-CHIAMATA
BDRTC1                 COPY  ZMYNRCAR.
BDRTC1                 IF  NRCAR-CODICE-RITORNO  NOT =  '00'
BDRTC1                 THEN
BDRTC1                     MOVE 0                       TO W-MAP-ERR
BDRTC1                     MOVE SPACES                  TO W-MOD-ERR
BDRTC1                     MOVE 2                       TO W-FLAG-ERR
BPL011*                    MOVE 'S200'                  TO W-COD-ERR
BPL011                     MOVE 'S204'                  TO W-COD-ERR
VAC???                     MOVE WRK-NUMTC-DES-ERR       TO W-DES-ERR
BDRTC1                     PERFORM 9999-GESTIONE-ERRORE
BDRTC1                        THRU 9999-GESTIONE-ERRORE-END
BDRTC1                     GO TO  2054-CTRL-TC-END
BDRTC1                 END-IF
BDRTC1                 COPY  ZMYNUMTC.
BDRTC1                 IF  WRK-NUMTC-RC NOT = SPACES
BDRTC1                 THEN
BDRTC1                     MOVE 0                        TO W-MAP-ERR
BDRTC1                     MOVE SPACES                   TO W-MOD-ERR
BDRTC1                     MOVE 2                        TO W-FLAG-ERR
VAC???                     MOVE 'S201'                   TO W-COD-ERR
BDRTC1                     MOVE WRK-NUMTC-DES-ERR        TO W-DES-ERR
BDRTC1                     PERFORM 9999-GESTIONE-ERRORE
BDRTC1                        THRU 9999-GESTIONE-ERRORE-END
BDRTC1                 END-IF
BDRTC1*
BDRTC1                 MOVE TRANCE-TAGLIO (IDX-DA)  TO DISTI-TAGLIO
BDRTC1                 MOVE TRANCE-DA  (IDX-DA)     TO DISTI-NUMVALORE
BDRTC1                 MOVE TRANCE-QTA (IDX-DA)     TO DISTI-QUANT
BDRTC1                 COMPUTE  DISTI-IMPVAL  =  DISTI-QUANT  *
BDRTC1                                           DISTI-TAGLIO
BDRTC1                 PERFORM 7000-SCRIVI-DISTI
BDRTC1                    THRU 7000-SCRIVI-DISTI-END
BDRTC1             END-IF
BDRTC1         END-PERFORM
BDRTC1     END-IF
BDRTC1*
BDRTC1* ... VARIAZIONE STATO TC
BDRTC1*
BDRTC1     IF  MOVP-TMOV  =  2
BDRTC1     AND ABSC-CTIPSTC  =  500
BDRTC1     AND (APROC-TPCSPRN  =  0  AND
BDRTC1          WS-ZFL101901  NOT =  SPACES)
BDRTC1     THEN
BDRTC1         MOVE  WS-ZFL101901            TO  DISTI-STATUSTC
BDRTC1         INITIALIZE     ZMWNUMTC
BDRTC1         SET  WRK-NUMTC-SCARICA        TO  TRUE
BDRTC1         MOVE  MOVP-CIST               TO  WRK-NUMTC-CIST
BDRTC1         MOVE  MOVP-CISO               TO  WRK-NUMTC-CISO
BDRTC1         MOVE  MOVP-NNDGSET            TO  WRK-NUMTC-NNDGSET
BDRTC1         MOVE  MOVP-CDPZ               TO  WRK-NUMTC-DIPCARIC
BDRTC1         MOVE  WS-ZFL101901            TO  WRK-NUMTC-STATUSTC
BDRTC1* ... PER TUTTI I CAMPI DA / A INTABELLATI
BDRTC1         PERFORM  VARYING  IDX-DA  FROM  1  BY  1
BDRTC1           UNTIL  IDX-DA  >  MAX-IDX-DA
BDRTC1              OR  WRK-NUMTC-RC NOT = SPACES
BDRTC1*
BDRTC1             MOVE  TRANCE-DA (IDX-DA)      TO WRK-NUMTC-NUM-DA
BDRTC1             MOVE  TRANCE-A (IDX-DA)       TO WRK-NUMTC-NUM-A
BDRTC1             MOVE  TRANCE-TAGLIO (IDX-DA)  TO WRK-NUMTC-TAGLIO
BDRTC1* ... ALMENO UNO DEI DUE   VALORIZZATO ...
BDRTC1             IF  WRK-NUMTC-NUM-DA > SPACES
BDRTC1             OR  WRK-NUMTC-NUM-A > SPACES
BDRTC1             THEN
BDRTC1* ... VERIFICA CONGRUENZA ...
BDRTC1                 INITIALIZE  ZMWNRCAR
BDRTC1                 MOVE  WRK-NUMTC-NUM-DA TO NRCAR-NUMERO-DA
BDRTC1                 MOVE  WRK-NUMTC-NUM-A  TO NRCAR-NUMERO-A
BDRTC1                 MOVE  'C'              TO NRCAR-CHIAMATA
BDRTC1                 COPY  ZMYNRCAR.
BDRTC1                 IF  NRCAR-CODICE-RITORNO  NOT =  '00'
BDRTC1                 THEN
BDRTC1                     MOVE 0                       TO W-MAP-ERR
BDRTC1                     MOVE SPACES                  TO W-MOD-ERR
BDRTC1                     MOVE 2                       TO W-FLAG-ERR
BPL011*                    MOVE 'S200'                  TO W-COD-ERR
BPL011                     MOVE 'S205'                  TO W-COD-ERR
VAC???                     MOVE WRK-NUMTC-DES-ERR       TO W-DES-ERR
BDRTC1                     PERFORM 9999-GESTIONE-ERRORE
BDRTC1                        THRU 9999-GESTIONE-ERRORE-END
BDRTC1                     GO TO  2054-CTRL-TC-END
BDRTC1                 END-IF
BDRTC1                 COPY  ZMYNUMTC.
BDRTC1                 IF  WRK-NUMTC-RC NOT = SPACES
BDRTC1                 THEN
BDRTC1                     MOVE 0                        TO W-MAP-ERR
BDRTC1                     MOVE SPACES                   TO W-MOD-ERR
BDRTC1                     MOVE 2                        TO W-FLAG-ERR
VAC???                     MOVE 'S201'                   TO W-COD-ERR
BDRTC1                     MOVE WRK-NUMTC-DES-ERR        TO W-DES-ERR
BDRTC1                     PERFORM 9999-GESTIONE-ERRORE
BDRTC1                        THRU 9999-GESTIONE-ERRORE-END
BDRTC1                 END-IF
BDRTC1*
BDRTC1                 MOVE TRANCE-TAGLIO (IDX-DA)  TO DISTI-TAGLIO
BDRTC1                 MOVE TRANCE-DA  (IDX-DA)     TO DISTI-NUMVALORE
BDRTC1                 MOVE TRANCE-QTA (IDX-DA)     TO DISTI-QUANT
BDRTC1                 COMPUTE  DISTI-IMPVAL  =  DISTI-QUANT  *
BDRTC1                                           DISTI-TAGLIO
BDRTC1                 PERFORM 7000-SCRIVI-DISTI
BDRTC1                    THRU 7000-SCRIVI-DISTI-END
BDRTC1             END-IF
BDRTC1         END-PERFORM
BDRTC1*
BDRTC1     END-IF.
BDRTC1*
BDRTC1* ... ???????????????????
BDRTC1*
BDRTC1*    IF  MOVP-TMOV  =  2
BDRTC1*    AND ABSC-CTIPSTC  =  500
BDRTC1*    AND APROC-TPCSPRN  =  7
BDRTC1*    THEN
BDRTC1*    END-IF
BDRTC1*
BDRTC1*  *******************************************************
BDRTC1*
BDRTC1*              ... SCRITTURA TBADISTI ...
BDRTC1*  *******************************************************
BDRTC1*
BDRTC1*
BDRTC1 2054-CTRL-TC-END.
BDRTC1*
BDRTC1     EXIT.
BDRTC1*
BDRTC1 7000-SCRIVI-DISTI.
BDRTC1     MOVE 'ZDV130901'             TO W-DECOD
BDRTC1     MOVE W-XXN-N                 TO C
BDRTC1     COPY ZMZINDIR.
BDRTC1     COPY ZMZVALNM.
BDRTC1     IF W-COM-NUM > 0
BDRTC1        MOVE W-COM-NUM            TO DISTI-DSCAEFF
BDRTC1     ELSE
BDRTC1        MOVE 'ZDV131701'          TO W-DECOD
BDRTC1        MOVE W-XXN-N              TO C
BDRTC1        COPY ZMZINDIR.
BDRTC1        COPY ZMZVALNM.
BDRTC1        IF W-COM-NUM = 5
BDRTC1           MOVE 'ZDV131001'          TO W-DECOD
BDRTC1           MOVE W-XXN-N              TO C
BDRTC1           COPY ZMZINDIR.
BDRTC1           IF MOD(M-I(IND1):M-L(IND1)) GREATER SPACES
BDRTC1              INITIALIZE SC-AREA
BDRTC1              MOVE MOD(M-I(IND1):M-L(IND1))
BDRTC1                                     TO SC-CAMPO-DATA
BDRTC1              PERFORM 2053-DECOD-SCAD
BDRTC1                 THRU 2053-DECOD-SCAD-END
BDRTC1              IF SC-CODICE-RITORNO = ZEROES
BDRTC1                 MOVE SC-DATA-TRADIZIONALE
BDRTC1                                     TO DISTI-DSCAEFF
BDRTC1              END-IF
BDRTC1           END-IF
BDRTC1        ELSE
BDRTC1           MOVE ZEROES               TO DISTI-DSCAEFF
BDRTC1        END-IF
BDRTC1     END-IF
BDRTC1     MOVE 'ZDV131201'             TO W-DECOD
BDRTC1     MOVE W-XXN-N                 TO C
BDRTC1     COPY ZMZINDIR.
BDRTC1     MOVE MOD(M-I(IND1):M-L(IND1)) TO DISTI-TCART
BDRTC1     MOVE 'ZDV131301'             TO W-DECOD
BDRTC1     MOVE W-XXN-N                 TO C
BDRTC1     COPY ZMZINDIR.
BDRTC1     MOVE MOD(M-I(IND1):M-L(IND1)) TO DISTI-TRCH
BDRTC1     MOVE 'ZDV131401'             TO W-DECOD
BDRTC1     MOVE W-XXN-N                 TO C
BDRTC1     COPY ZMZINDIR.
BDRTC1     COPY ZMZVALNM.
BDRTC1     MOVE W-COM-NUM               TO DISTI-ACCDIP
BDRTC1     MOVE 'ZDV131501'             TO W-DECOD
BDRTC1     MOVE W-XXN-N                 TO C
BDRTC1     COPY ZMZINDIR.
BDRTC1     COPY ZMZVALNM.
BDRTC1     MOVE W-COM-NUM               TO DISTI-ACCNCC
BPO002     MOVE W-COM-NUM               TO DISTI-ACCNCC13
BDRTC1     MOVE 'ZDV131101'             TO W-DECOD
BDRTC1     MOVE W-XXN-N                 TO C
BDRTC1     COPY ZMZINDIR.
BDRTC1     COPY ZMZVALNM.
BDRTC1     MOVE W-COM-NUM               TO DISTI-NCST
BDRTC1     MOVE 'ZDV136001'             TO W-DECOD
BDRTC1     MOVE W-XXN-N                 TO C
BDRTC1     COPY ZMZINDIR.
BDRTC1     MOVE MOD(M-I(IND1):M-L(IND1)) TO DISTI-CSIGPAE
BDRTC1     MOVE 'ZDV131701'             TO W-DECOD
BDRTC1     MOVE W-XXN-N                 TO C
BDRTC1     COPY ZMZINDIR.
BDRTC1     COPY ZMZVALNM.
BDRTC1     IF W-COM-NUM = 5
BDRTC1        IF APROC-STSEFF = 1
BDRTC1           IF MOVP-NNDGPART GREATER SPACES
BDRTC1              MOVE MOVP-NNDGPART  TO DISTI-CODCEDENTE
BDRTC1           ELSE
BDRTC1              MOVE MOVP-NNDGNCONT TO DISTI-CODCEDENTE
BDRTC1           END-IF
BDRTC1        ELSE
BDRTC1           MOVE MOVP-NNDGNCONT    TO DISTI-CODCEDENTE
BDRTC1        END-IF
BDRTC1        MOVE 'ZFL100501'          TO W-DECOD
BDRTC1        COPY ZMZINDIR.
BDRTC1        IF MOD(M-I(IND1):M-L(IND1)) NOT GREATER SPACES
BDRTC1           MOVE APROC-STSEFF      TO DISTI-STSEFF
BDRTC1        END-IF
BDRTC1        IF MOD(M-I(IND1):M-L(IND1)) = 'IS'
BDRTC1           MOVE 2                 TO DISTI-STSEFF
BDRTC1        END-IF
BDRTC1        IF MOD(M-I(IND1):M-L(IND1)) = 'ME'
BDRTC1           MOVE 5                 TO DISTI-STSEFF
BDRTC1        END-IF
BDRTC1        IF MOD(M-I(IND1):M-L(IND1)) = 'RI'
BDRTC1           MOVE 3                 TO DISTI-STSEFF
BDRTC1        END-IF
BDRTC1     ELSE
BDRTC1        MOVE SPACES               TO DISTI-STSEFF
BDRTC1     END-IF
BDRTC1
BDRTC1     MOVE 'ZDV136201'             TO W-DECOD
BDRTC1     MOVE W-XXN-N                  TO C
BDRTC1     COPY ZMZINDIR.
BDRTC1     COPY ZMZVALNM.
BDRTC1     MOVE W-COM-NUM               TO DISTI-CSTGDB
BDRTC1     PERFORM 2060-SCRIVI-ADISTI
BDRTC1        THRU 2060-SCRIVI-ADISTI-END
BDRTC1     COMPUTE DISTI-NPRGRIGA = DISTI-NPRGRIGA + 1
BDRTC1     MOVE ZEROES                  TO DISTI-TAGLIO
BDRTC1                                     DISTI-QUANT.
BDRTC1*
BDRTC1 7000-SCRIVI-DISTI-END.
BDRTC1*
BDRTC1     EXIT.
       2060-SCRIVI-ADISTI.
           IF WRK-UPDATE-ADISTI = 'S'
              MOVE ZEROES        TO WRK-IND-INTAB
              MOVE SPACES        TO WRK-FINE-INTAB
              PERFORM
               VARYING WRK-IND-INTAB FROM 1 BY 1
                 UNTIL WRK-IND-INTAB GREATER 35
                    OR WRK-INTAB-NDISTI(WRK-IND-INTAB) = ZEROES
                    OR WRK-FINE-INTAB = 'SI'
                  IF DISTI-NPRGMOVP = WRK-INTAB-NDISTI(WRK-IND-INTAB)
                 AND DISTI-NSUBMOVP = WRK-INTAB-SUBDISTI(WRK-IND-INTAB)
                 AND DISTI-NPRGRIGA = WRK-INTAB-NRIGDISTI(WRK-IND-INTAB)
                     MOVE 'U'   TO WRK-INTAB-OPER-DISTI(WRK-IND-INTAB)
                     MOVE 'SI'  TO WRK-FINE-INTAB
                     PERFORM 2060-UPDATE-ADISTI
                        THRU 2060-UPDATE-ADISTI-END
                     IF L-ERR-ERR
                        GO TO 2060-SCRIVI-ADISTI-END
                     END-IF
                  END-IF
              END-PERFORM
              IF WRK-FINE-INTAB = 'SI'
                 GO TO 2060-SCRIVI-ADISTI-END
              END-IF
           END-IF.

           PERFORM 2060-INSERT-ADISTI
              THRU 2060-INSERT-ADISTI-END.
       2060-SCRIVI-ADISTI-END.
           EXIT.
       2060-UPDATE-ADISTI.
           EXEC SQL INCLUDE ZMU11801 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8                             TO W-FLAG-ERR
              MOVE '9999'                        TO W-COD-ERR
              MOVE 'TBADISTI'                    TO L-NOME-TABELLA
              MOVE W-SQLCODE                     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                    TO L-MODULO
              MOVE '2060-UPDATE-ADISTI'          TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       2060-UPDATE-ADISTI-END.
           EXIT.
       2060-INSERT-ADISTI.
           EXEC SQL INCLUDE ZMV11801 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8                             TO W-FLAG-ERR
              MOVE '9999'                        TO W-COD-ERR
              MOVE 'TBADISTI'                    TO L-NOME-TABELLA
              MOVE W-SQLCODE                     TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                    TO L-MODULO
              MOVE '2060-SCRIVI-ADISTI'          TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       2060-INSERT-ADISTI-END.
           EXIT.
       2061-COMPLETA-ADISTI.
           MOVE 'ZDV131901'                      TO W-DECOD
           MOVE IND9                             TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE ZEROES                           TO WRK-NUM-10I-3DEC
           IF W-COM-NUM > 0
              COMPUTE WRK-NUM-10I-3DEC = W-COM-NUM / (10 ** M-D(IND1))
              MOVE 'ZDV132001'                   TO W-DECOD
              MOVE IND9                          TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE DISTI-IMPVAL = W-COM-NUM * WRK-NUM-10I-3DEC
              COMPUTE DISTI-NPRGRIGA = DISTI-NPRGRIGA + 1
              PERFORM 2060-SCRIVI-ADISTI
                 THRU 2060-SCRIVI-ADISTI-END
           END-IF.
           MOVE 'ZDV132301'                      TO W-DECOD
           MOVE IND9                             TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           IF W-COM-NUM > 0
              COMPUTE W-COM-NUM-DEC7 = W-COM-NUM / 10 ** M-D(IND1)
              MOVE W-COM-NUM                     TO W-COM-NUM-D
              MOVE 'ZDV132401'                   TO W-DECOD
              MOVE IND9                          TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE W-COM-NUM-DEC6 = W-COM-NUM / 10 ** M-D(IND1)
              COMPUTE DISTI-IMPVAL = W-COM-NUM-DEC7 * W-COM-NUM-DEC6
              COMPUTE DISTI-NPRGRIGA = DISTI-NPRGRIGA + 1
              PERFORM 2060-SCRIVI-ADISTI
                 THRU 2060-SCRIVI-ADISTI-END
           END-IF.
           MOVE 'ZDV132701'                      TO W-DECOD
           MOVE IND9                             TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE ZEROES TO WRK-NUM-10I-3DEC
           IF W-COM-NUM > 0
              COMPUTE WRK-NUM-10I-3DEC = W-COM-NUM / (10 ** M-D(IND1))
              MOVE 'ZDV132801'                   TO W-DECOD
              MOVE IND9                          TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE DISTI-IMPVAL = W-COM-NUM * WRK-NUM-10I-3DEC
              COMPUTE DISTI-NPRGRIGA = DISTI-NPRGRIGA + 1
              PERFORM 2060-SCRIVI-ADISTI
                 THRU 2060-SCRIVI-ADISTI-END
           END-IF.
           MOVE 'ZDV133101'                      TO W-DECOD
           MOVE IND9                             TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE ZEROES TO WRK-NUM-10I-3DEC
           IF W-COM-NUM > 0
              COMPUTE WRK-NUM-10I-3DEC = W-COM-NUM / (10 ** M-D(IND1))
              MOVE 'ZDV133201'                   TO W-DECOD
              MOVE IND9                          TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE DISTI-IMPVAL = W-COM-NUM * WRK-NUM-10I-3DEC
              COMPUTE DISTI-NPRGRIGA = DISTI-NPRGRIGA + 1
              PERFORM 2060-SCRIVI-ADISTI
                 THRU 2060-SCRIVI-ADISTI-END
           END-IF.
           MOVE 'ZDV133501'                      TO W-DECOD
           MOVE IND9                             TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE ZEROES TO WRK-NUM-10I-3DEC
           IF W-COM-NUM > 0
              COMPUTE WRK-NUM-10I-3DEC = W-COM-NUM / (10 ** M-D(IND1))
              MOVE 'ZDV133601'                   TO W-DECOD
              MOVE IND9                          TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE DISTI-IMPVAL = W-COM-NUM * WRK-NUM-10I-3DEC
              COMPUTE DISTI-NPRGRIGA = DISTI-NPRGRIGA + 1
              PERFORM 2060-SCRIVI-ADISTI
                 THRU 2060-SCRIVI-ADISTI-END
           END-IF.
           MOVE 'ZDV133901'                      TO W-DECOD
           MOVE IND9                             TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE ZEROES TO WRK-NUM-10I-3DEC
           IF W-COM-NUM > 0
              COMPUTE WRK-NUM-10I-3DEC = W-COM-NUM / (10 ** M-D(IND1))
              MOVE 'ZDV134001'                   TO W-DECOD
              MOVE IND9                          TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE DISTI-IMPVAL = W-COM-NUM * WRK-NUM-10I-3DEC
              COMPUTE DISTI-NPRGRIGA = DISTI-NPRGRIGA + 1
              PERFORM 2060-SCRIVI-ADISTI
                 THRU 2060-SCRIVI-ADISTI-END
           END-IF.
           MOVE 'ZDV134301'                      TO W-DECOD
           MOVE IND9                             TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE ZEROES TO WRK-NUM-10I-3DEC
           IF W-COM-NUM > 0
              COMPUTE WRK-NUM-10I-3DEC = W-COM-NUM / (10 ** M-D(IND1))
              MOVE 'ZDV134401'                   TO W-DECOD
              MOVE IND9                          TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE DISTI-IMPVAL = W-COM-NUM * WRK-NUM-10I-3DEC
              COMPUTE DISTI-NPRGRIGA = DISTI-NPRGRIGA + 1
              PERFORM 2060-SCRIVI-ADISTI
                 THRU 2060-SCRIVI-ADISTI-END
           END-IF.
           MOVE 'ZDV134701'                      TO W-DECOD
           MOVE IND9                             TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE ZEROES TO WRK-NUM-10I-3DEC
           IF W-COM-NUM > 0
              COMPUTE WRK-NUM-10I-3DEC = W-COM-NUM / (10 ** M-D(IND1))
              MOVE 'ZDV134801'                   TO W-DECOD
              MOVE IND9                          TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE DISTI-IMPVAL = W-COM-NUM * WRK-NUM-10I-3DEC
              COMPUTE DISTI-NPRGRIGA = DISTI-NPRGRIGA + 1
              PERFORM 2060-SCRIVI-ADISTI
                 THRU 2060-SCRIVI-ADISTI-END
           END-IF.
           MOVE 'ZDV135101'                      TO W-DECOD
           MOVE IND9                             TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE ZEROES TO WRK-NUM-10I-3DEC
           IF W-COM-NUM > 0
              COMPUTE WRK-NUM-10I-3DEC = W-COM-NUM / (10 ** M-D(IND1))
              MOVE 'ZDV135201'                   TO W-DECOD
              MOVE IND9                          TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE DISTI-IMPVAL = W-COM-NUM * WRK-NUM-10I-3DEC
              COMPUTE DISTI-NPRGRIGA = DISTI-NPRGRIGA + 1
              PERFORM 2060-SCRIVI-ADISTI
                 THRU 2060-SCRIVI-ADISTI-END
           END-IF.
           MOVE 'ZDV135501'                      TO W-DECOD
           MOVE IND9                             TO C
           COPY ZMZINDIR.
           COPY ZMZVALNM.
           MOVE ZEROES TO WRK-NUM-10I-3DEC
           IF W-COM-NUM > 0
              COMPUTE WRK-NUM-10I-3DEC = W-COM-NUM / (10 ** M-D(IND1))
              MOVE 'ZDV135601'                   TO W-DECOD
              MOVE IND9                          TO C
              COPY ZMZINDIR.
              COPY ZMZVALNM.
              COMPUTE DISTI-IMPVAL = W-COM-NUM * WRK-NUM-10I-3DEC
              COMPUTE DISTI-NPRGRIGA = DISTI-NPRGRIGA + 1
              PERFORM 2060-SCRIVI-ADISTI
                 THRU 2060-SCRIVI-ADISTI-END
           END-IF.
       2061-COMPLETA-ADISTI-END.
           EXIT.
       2070-SCRIVI-ADISTI-LOOP.
           MOVE DISTI-NUMVALORE                  TO W-COM-N16-B
           ADD 1                                 TO W-COM-N16-B
           IF W-COM-N16-B > W-COM-N16-A
              MOVE 'SI'                          TO W-F-EX
           END-IF.
           MOVE W-COM-N16-B                      TO DISTI-NUMVALORE.
           PERFORM 2060-SCRIVI-ADISTI
              THRU 2060-SCRIVI-ADISTI-END.
       2070-SCRIVI-ADISTI-LOOP-END.
           EXIT.
       3000-SALVA-DATI.

           MOVE W-CPCS-MOD                       TO PRSDA-CPCS.

           INITIALIZE ZMWRDAT.

           PERFORM 3010-LEGGI-TTSDAT
              THRU 3010-LEGGI-TTSDAT-END.

           IF W-SQL-OK
              MOVE W-CIST                        TO RDAT-CIST
              MOVE W-DIPOPE                      TO RDAT-DIPOPE
              MOVE OPE-NUMOPE                    TO RDAT-NUMOPE
              MOVE SPACES                        TO W-EXPERFORM
              MOVE ZEROES TO IND15
              PERFORM 3020-RIEMPI-ARDAT
                 THRU 3020-RIEMPI-ARDAT-END
                      VARYING  IND6 FROM 1 BY 1
                      UNTIL IND6 > W-MAX-ARDAT
                      OR W-EXPERFORM = 'SI'
              MOVE ZMWRDAT     TO       RDAT-WTABARDAT-TEXT
              IF WRK-UPDATE-ARDAT = 'S'
                 PERFORM 3030-UPDATE-ARDAT
                    THRU 3030-UPDATE-ARDAT-END
              ELSE
                 PERFORM 3030-SCRIVI-ARDAT
                    THRU 3030-SCRIVI-ARDAT-END
              END-IF
           END-IF.
       3000-SALVA-DATI-END.
           EXIT.
       3010-LEGGI-TTSDAT.
           INITIALIZE ZMWRDAT.
           EXEC SQL INCLUDE ZMS32701 END-EXEC.
           IF NOT W-SQL-OK
              IF NOT W-SQL-NON-TROVATO
                 MOVE 8                          TO W-FLAG-ERR
                 MOVE '9999'                     TO W-COD-ERR
                 MOVE 'TBWPRSDA'                 TO L-NOME-TABELLA
                 MOVE W-SQLCODE                  TO L-CODICE-SQL
                 MOVE 'ZMBSVIL0'                 TO L-MODULO
                 MOVE '3010-LEGGI-TTSDAT'        TO L-SUB-MODULO
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF
BPEL26     ELSE
BPEL26        INITIALIZE ZMWPRSDA
BPEL26        IF PRSDA-WTABSDA-LEN GREATER ZEROES
BPEL26           MOVE PRSDA-WTABSDA-TEXT(1:PRSDA-WTABSDA-LEN)
BPEL26                                  TO ZMWPRSDA
BPEL26        END-IF
           END-IF.
BPEL26*    INITIALIZE ZMWPRSDA.
BPEL26*    MOVE PRSDA-WTABSDA-TEXT(1:PRSDA-WTABSDA-LEN)
BPEL26*                             TO ZMWPRSDA.
       3010-LEGGI-TTSDAT-END.
           EXIT.
       3020-RIEMPI-ARDAT.
           IF WPRSDA-WTAB(IND6) NOT > SPACES
              MOVE 'SI'                 TO W-EXPERFORM
           ELSE
              ADD 1                     TO IND15
              MOVE WPRSDA-TTZNRIP(IND6) TO WRDAT-TTZNRIP(IND15)
150797        MOVE WPRSDA-TTZNRIP(IND6) TO W-DEC-COORD
150797        COPY ZMZINDIR.
150797        MOVE IND1     TO    IND7
              MOVE WPRSDA-TTZNAPP(IND6) TO W-DEC-COORD
              COPY ZMZINDIR.
              IF  M-T(IND1) = 'X'
              AND M-L(IND1) = 16
              AND MOD(M-I(IND1):M-L(IND1)) = ALL '9'
                 MOVE SPACES            TO WRDAT-TTCNTVAL(IND15)
              ELSE
150797***--- SE IL CAMPO DI PARTENZA ED IL CAMPO DI ARRIVO SONO NUMERICI
150797***--- E HANNO LUNGHEZZA DIVERSA VERIFICO SE
150797***--- PARTENZA > ARRIVO ERRORE
150797***--- PARTENZA < ARRIVO ALLINEARE IN BASE AL CAMPO DI ARRIVO
150797***--- NUMERO DECIMALI ARRIVO <> NUMERO DECIMALI PARTENZA
150797           IF  M-T(IND1) = 'N' AND M-T(IND7) = 'N'
150797           AND (M-L(IND1) NOT = M-L(IND7) OR
150797                M-D(IND1) NOT = M-D(IND7))
150797               IF M-L(IND1) > M-L(IND7)
150797               OR M-D(IND1) NOT = M-D(IND7)
150797                  MOVE '0'                     TO W-MAP-ERR
150797                  MOVE SPACES                  TO W-MOD-ERR
150797                  MOVE 2                       TO W-FLAG-ERR
150797                  MOVE 'S112'                  TO W-COD-ERR
150797                  PERFORM 9999-GESTIONE-ERRORE
150797                     THRU 9999-GESTIONE-ERRORE-END
150797                  MOVE 'SI'                 TO W-EXPERFORM
150797               ELSE
150797                  COPY ZMZVALNM.
150797                  COMPUTE DA1 = 19 - M-L(IND7)
150797                  MOVE W-COM-NUM(DA1:M-L(IND7))
150797                              TO WRDAT-TTCNTVAL(IND15)
150797               END-IF
150797           ELSE
                    MOVE MOD(M-I(IND1):M-L(IND1))
                                        TO WRDAT-TTCNTVAL(IND15)
150797           END-IF
              END-IF
              IF M-T(IND1) = 'X' AND
                 WRDAT-TTCNTVAL(IND15) NOT GREATER SPACES
                 INITIALIZE WPRSDA-WTAB(IND15)
                 SUBTRACT 1 FROM IND15
              END-IF
           END-IF.
       3020-RIEMPI-ARDAT-END.
           EXIT.
       3030-UPDATE-ARDAT.
           EXEC SQL INCLUDE ZMU10401 END-EXEC.
BPER10     IF W-SQL-NON-TROVATO
BPER10        PERFORM 3030-SCRIVI-ARDAT
BPER10           THRU 3030-SCRIVI-ARDAT-END
BPER10     ELSE
              IF NOT W-SQL-OK
                 MOVE 8                          TO W-FLAG-ERR
                 MOVE '9999'                     TO W-COD-ERR
                 MOVE 'TBARDAT '                 TO L-NOME-TABELLA
                 MOVE W-SQLCODE                  TO L-CODICE-SQL
                 MOVE 'ZMBSVIL0'                 TO L-MODULO
                 MOVE '3030-UPDATE-ARDAT'        TO L-SUB-MODULO
                 PERFORM 9999-GESTIONE-ERRORE
                    THRU 9999-GESTIONE-ERRORE-END
              END-IF.
       3030-UPDATE-ARDAT-END.
           EXIT.
       3030-SCRIVI-ARDAT.
           EXEC SQL INCLUDE ZMV10401 END-EXEC.
           IF NOT W-SQL-OK
              MOVE 8                          TO W-FLAG-ERR
              MOVE '9999'                     TO W-COD-ERR
              MOVE 'TBARDAT '                 TO L-NOME-TABELLA
              MOVE W-SQLCODE                  TO L-CODICE-SQL
              MOVE 'ZMBSVIL0'                 TO L-MODULO
              MOVE '3030-SCRIVI-ARDAT'        TO L-SUB-MODULO
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
           END-IF.
       3030-SCRIVI-ARDAT-END.
           EXIT.
000007 3329-TRATTA-CAMBIO.
000007     MOVE W-CIST          TO LICMB-CIST.
000007     MOVE 'MU'            TO LICMB-CSIGBORCMB.
000007
000007     PERFORM 3329-CERCA-CAMBIO
000007        THRU 3329-CERCA-CAMBIO-END.
000007
000007 3329-TRATTA-CAMBIO-END.
000007     EXIT.
000007*----------------------------------------------------------------
000007* CERCA CAMBIO
000007*----------------------------------------------------------------
000007 3329-CERCA-CAMBIO.
000007     PERFORM 3329-APRI-CURSORE10
000007        THRU 3329-APRI-CURSORE10-END.
000007     IF L-ERR-ERR
000007        GO TO 3329-CERCA-CAMBIO-END.
000007     PERFORM 3329-LEGGI-TBALICMB
000007        THRU 3329-LEGGI-TBALICMB-END.
000007     IF L-ERR-ERR
000007        GO TO 3329-CERCA-CAMBIO-END.
000007     PERFORM 3329-CHIUDI-CURSORE10
000007        THRU 3329-CHIUDI-CURSORE10-END.
000007 3329-CERCA-CAMBIO-END.
000007     EXIT.
000007*----------------------------------------------------------------
000007* APERTURA DEL CURSORE CUR10
000007*----------------------------------------------------------------
000007 3329-APRI-CURSORE10.
000007     EXEC SQL INCLUDE ZMLOPE10 END-EXEC.
000007     IF NOT W-SQL-OK
000007        MOVE 8                      TO W-FLAG-ERR
000007        MOVE '9999'                 TO W-COD-ERR
000007        MOVE SPACES                 TO L-NOME-TABELLA
000007        MOVE W-SQLCODE              TO L-CODICE-SQL
000007        MOVE 'ZMBSVIL0'             TO L-MODULO
000007        MOVE '3329-APRI-CURSORE10'  TO L-SUB-MODULO
000007        PERFORM 9999-GESTIONE-ERRORE
000007           THRU 9999-GESTIONE-ERRORE-END.
000007 3329-APRI-CURSORE10-END.
000007     EXIT.
000007*----------------------------------------------------------------
000007*     LETTURA TABELLA ZM.TBALICMB (106) CON CURSORE CUR10
000007*----------------------------------------------------------------
000007 3329-LEGGI-TBALICMB.
000007     EXEC SQL INCLUDE ZMF10612 END-EXEC.
000007     IF NOT W-SQL-OK
000007        MOVE 8                         TO W-FLAG-ERR
000007        MOVE '9999'                    TO W-COD-ERR
000007        MOVE 'TBALICMB'                TO L-NOME-TABELLA
000007        MOVE W-SQLCODE                 TO L-CODICE-SQL
000007        MOVE 'ZMBSVIL0'                TO L-MODULO
000007        MOVE '3329-LEGGI-TBALICMB'     TO L-SUB-MODULO
000007        PERFORM 9999-GESTIONE-ERRORE
000007           THRU 9999-GESTIONE-ERRORE-END.
000007 3329-LEGGI-TBALICMB-END.
000007     EXIT.
000007*----------------------------------------------------------------
000007* CHIUSURA DEL CURSORE CUR10
000007*----------------------------------------------------------------
000007 3329-CHIUDI-CURSORE10.
000007     EXEC SQL INCLUDE ZMLCLO10 END-EXEC.
000007     IF NOT W-SQL-OK
000007        MOVE 8                            TO W-FLAG-ERR
000007        MOVE '9999'                       TO W-COD-ERR
000007        MOVE SPACES                       TO L-NOME-TABELLA
000007        MOVE W-SQLCODE                    TO L-CODICE-SQL
000007        MOVE 'ZMBSVIL0'                   TO L-MODULO
000007        MOVE '3329-CHIUDI-CURSORE10'      TO L-SUB-MODULO
000007        PERFORM 9999-GESTIONE-ERRORE
000007           THRU 9999-GESTIONE-ERRORE-END.
000007 3329-CHIUDI-CURSORE10-END.
000007     EXIT.
       TP222-INCLUDE.
           EXEC SQL INCLUDE ZMS22201 END-EXEC.
           MOVE SPACES                           TO W-TROVATO.
       TP222-INCLUDE-END.
           EXIT.
       6000-SYNCPOINT.
           EXEC SQL INCLUDE ZMYSYNCP END-EXEC.
       6000-SYNCPOINT-END.
           EXIT.
120297 LEGGI-TZINTE.
"
"          MOVE ZEROES                      TO W-SQLCODE.
"          EXEC SQL INCLUDE ZMS20001  END-EXEC.
"
"          IF NOT W-SQL-OK
"             MOVE 8                   TO W-FLAG-ERR
"             MOVE '9999'              TO W-COD-ERR
"             MOVE 'TBTZINTE'          TO L-NOME-TABELLA
"             MOVE W-SQLCODE           TO L-CODICE-SQL
"             MOVE 'ZMBSVIL0'          TO L-MODULO
"             MOVE 'ZMS20001'          TO L-SUB-MODULO
"             PERFORM 9999-GESTIONE-ERRORE
"                THRU 9999-GESTIONE-ERRORE-END
"          END-IF.
"
"      LEGGI-TZINTE-END.
120297     EXIT.
      *-----------------------------------------------------------------
      * CALCOLA LA DATA SPOT PER LA DIVISA
      *-----------------------------------------------------------------
140497 CALCOLA-DATA-SPOT.
           MOVE L-DATA-OGGI  TO W-DAT.
           MOVE '01'         TO LX-TIPOPE.
           PERFORM CHIAMA-ZMBFOREX
              THRU CHIAMA-ZMBFOREX-END.
           IF LX-RC GREATER ZEROES
              GO TO CALCOLA-DATA-SPOT-END
           END-IF.
           MOVE LX-DATA-OUT TO WRK-DATASPOT.
140497 CALCOLA-DATA-SPOT-END.
           EXIT.
      *---------------------------------------------------------------
      * CHIAMA ROUTINE ZMBFOREX PER IL CALCOLO DATE-VALUTA PER DIVISA
      *---------------------------------------------------------------
140497 CHIAMA-ZMBFOREX.
000188*    MOVE MOVP-CISO                      TO LX-CISO.
000188     MOVE WRK-DIVISA-SPOT                TO LX-CISO.
           MOVE W-CIST                         TO LX-CIST.
           MOVE W-DAT                          TO LX-DATA-INP.
           MOVE L-DATA-OGGI                    TO LX-DATA-OGGI.
           EXEC SQL INCLUDE ZMYFOREX END-EXEC.
           IF LX-RC = 8
              MOVE 'E'                         TO M-S(IND-COM)
              MOVE 8                           TO W-FLAG-ERR
              MOVE '9999'                      TO W-COD-ERR
              MOVE 'ZMBCOMP0'                  TO L-MODULO
              MOVE LX-SUB-MODULO               TO L-SUB-MODULO
              MOVE LX-TABELLA                  TO L-NOME-TABELLA
              MOVE LX-SQLCODE                  TO L-CODICE-SQL
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
              GO TO CHIAMA-ZMBFOREX-END.
           IF LX-RC = 2
              IF LX-COD-ERR = 'F005'
                 MOVE M-M(IND7)     TO W-MAP-ERR
                 MOVE W-COM-COORD  TO W-MOD-ERR
              ELSE
                 MOVE M-M(IND-COM) TO W-MAP-ERR
                 MOVE W-COM-COORD  TO W-MOD-ERR
              END-IF
              MOVE LX-COD-ERR  TO W-COD-ERR
              MOVE 'E'         TO M-S(IND-COM)
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END.
140497 CHIAMA-ZMBFOREX-END.
           EXIT.
110697 ERRORE-CHIAVE-RAPP.
120597     IF L-FASE GREATER 1
              MOVE 'E'                        TO M-S(W-STC)
              MOVE M-M(W-STC)                 TO W-MAP-ERR
              MOVE W-COORD-STC                TO W-MOD-ERR
              MOVE 2                          TO W-FLAG-ERR
              MOVE 'S109'                     TO W-COD-ERR
              MOVE 'CHIAVE RAPPORTO NON COMPLETA SU MOVIMENTO '
                                              TO WCM-ERRAP-DESC1
              MOVE MOVP-NPRGMOVP              TO WCM-ERRAP-NPRGMOVP
              MOVE ' CON GESTIONE '           TO WCM-ERRAP-DESC2
              MOVE ABSC-FTPGEST               TO WCM-ERRAP-FTPGEST
              MOVE WCM-ERR-ERRAP              TO W-DES-ERR
              PERFORM 9999-GESTIONE-ERRORE
                 THRU 9999-GESTIONE-ERRORE-END
120597     END-IF.
110697 ERRORE-CHIAVE-RAPP-END.
110697     EXIT.
020797 LEGGI-TBAFOREX.
           EXEC SQL INCLUDE ZMS10201 END-EXEC.
           IF NOT W-SQL-OK
           AND NOT W-SQL-NON-TROVATO
               MOVE 8                     TO W-FLAG-ERR
               MOVE '9999'                TO W-COD-ERR
               MOVE 'TBAFOREX'            TO L-NOME-TABELLA
               MOVE W-SQLCODE             TO L-CODICE-SQL
               MOVE 'ZMBCOMP0'            TO L-MODULO
               MOVE 'LEGGI-TBAFOREX'      TO L-SUB-MODULO
               PERFORM 9999-GESTIONE-ERRORE
                  THRU 9999-GESTIONE-ERRORE-END.
       LEGGI-TBAFOREX-END.
           EXIT.

           EXEC SQL INCLUDE ZMIERRO1 END-EXEC.
140497*-------------------------------------------------------------*
140497*    4000-COMPUTA-DATA
140497*-------------------------------------------------------------*
140497     EXEC SQL INCLUDE ZMZSUMDT END-EXEC.
SDM002*-----------------------------------------------------------------63440000
SDM002* SISEB DATA MART - NUOVA GESTIONE IMPEGNI E RISCHI ON LINE       63450000
SDM002*-----------------------------------------------------------------63460000
SDM002* SE ABBIAMO VALUTA REGOLAMENTO FUTURA CREA PARTITE SOSPESE.      63470000
SDM002*-----------------------------------------------------------------63480000
SDM002* COME NEL 186, I TIPI S/CONTO 400, 310, 325 DEVONO DIVENTARE     63490000
SDM002* MATURI E SCRIVERE PARTITE SOSPESE DI DEBITORI/CREDITORI.        63500000
SDM002* SI TESTERANNO: FTPGEST (FLAG TIPO GESTIONE) = 6 E               63510000
SDM002*                FMOVPSD/A (FLAG POSTERGATE DARE/AVERE) = 0       63520000
SDM002* SE OPPORTUNO VERRA' VARIATA LA DVALNOA (VALUTA REGOLAMENTO).    63530000
SDM002*-----------------------------------------------------------------63540000
SDM002* ATTENZIONE:LA DVALNOA VA CAMBIATA ANCHE SUL MOV DI CTP (ALGHISIO63550000
SDM002*-----------------------------------------------------------------63560000
SDM002 GESTIONE-IMPEGNI-RISCHI.                                         63570000
BPO564     IF APROC-TPCS NOT = 76 AND NOT = 77 AND NOT = 78             45410400
BPO564               AND NOT = 79 AND NOT = 80                          45410500
BPO564        GO TO GESTIONE-IMPEGNI-RISCHI-END.                        63570000
SDM002                                                                  63580000
SDM002*------ SALVA TABELLE CHE RILEGGERA' -VERIFICARE SE SERVE SALVARLE63590000
SDM002     MOVE  DCLTBTABSC        TO  SAVE-DCLTBTABSC.                 63600000
SDM002     MOVE  DCLTBADIV         TO  SAVE-DCLTBADIV.                  63610000
SDM002     MOVE  DCLTBTRACPA       TO  SAVE-DCLTBTRACPA.                63620000
SDM002     MOVE  DCLTBAMOVE        TO  SAVE-DCLTBAMOVE.                 63630000
SDM002                                                                  63640000
SDM002*------ VALORIZZAZIONE CAMPI WIMR00- PER CHIAMATA A ROUTINE IIRR  63650000
SDM002     INITIALIZE ZMWIMR00.                                         63660000
SDM002     MOVE  OPE-DESCOPE       TO  WIMR00-DESCOPE                   63670000
SDM002     MOVE  OPE-FTIPORD       TO  WIMR00-FTIPORD                   63680000
SDM021     MOVE  OPE-CPCS          TO  WIMR00-CPCS                      63681000
SDM002     MOVE  MOVP-DVALNOA      TO  WIMR00-DVALNOA                   63690000
SDM014     MOVE  MOVP-NEWDVALNOA   TO  WIMR00-NEWDVALNOA                63691000
SDM002     MOVE  MOVP-CISO         TO  WIMR00-CISO                      63700000
SDM002     MOVE  MOVP-CDIVCTP      TO  WIMR00-CDIVCTP                   63710000
SDM002     MOVE  MOVP-CSTC         TO  WIMR00-CSTC                      63720000
SDM002     MOVE  MOVP-CSTCCTP      TO  WIMR00-CSTCCTP                   63730000
SDM002     MOVE  MOVP-NPRGMOVP     TO  WIMR00-NPRGMOVP                  63740000
SDM002     MOVE  MOVP-NSUBMOVP     TO  WIMR00-NSUBMOVP                  63750000
SDM002     MOVE  MOVP-IMOV         TO  WIMR00-IMOV                      63760000
SDM002     MOVE  MOVP-TMOV         TO  WIMR00-TMOV                      63770000
SDM002     IF MOVP-TMOV = 1                                             63780000
SDM002        MOVE  2              TO  WIMR00-TMOVCTP                   63790000
SDM002     ELSE                                                         63800000
SDM002        MOVE  1              TO  WIMR00-TMOVCTP                   63810000
SDM002     END-IF                                                       63820000
SDM002                                                                  63830000
SDM002*------ LETTURA S/C DI CONTROPARTITA PER PRELEVARE FLAGS VARI     63840000
SDM002     MOVE W-CIST                 TO  ABSC-CIST                    63850000
SDM002     MOVE MOVP-CSTCCTP           TO  ABSC-CSTC                    63860000
SDM002     PERFORM 0630-LEGGI-TABSC                                     63870000
SDM002        THRU 0630-LEGGI-TABSC-END                                 63880000
SDM002                                                                  63890000
SDM008*VERIFICARE SE PUO SERVIRE. SE SI,AGGIUNGERE CAMPO NELLA ZMWIMR00 63900000
SDM008*    MOVE ABSC-FTPGEST           TO  WIMR00-FTPGESTCTP            63910000
SDM002     MOVE ABSC-FMOVPSD           TO  WIMR00-FMOVPSDCTP            63920000
SDM002     MOVE ABSC-FMOVPSA           TO  WIMR00-FMOVPSACTP            63930000
SDM002                                                                  63940000
SDM002*------ LETTURA S/C DEL MOVIMENTO PER PRELEVARE FLAGS VARI        63950000
SDM002     MOVE W-CIST                 TO  ABSC-CIST                    63960000
SDM002     MOVE MOVP-CSTC              TO  ABSC-CSTC                    63970000
SDM002     PERFORM 0630-LEGGI-TABSC                                     63980000
SDM002        THRU 0630-LEGGI-TABSC-END                                 63990000
SDM002                                                                  64000000
SDM002     MOVE ABSC-FTPGEST           TO  WIMR00-FTPGEST               64010000
SDM002     MOVE ABSC-FMOVPSD           TO  WIMR00-FMOVPSD               64020000
SDM002     MOVE ABSC-FMOVPSA           TO  WIMR00-FMOVPSA               64030000
SDM013     MOVE ABSC-CTIPSTC           TO  WIMR00-CTIPSTC               64031000
SDM002                                                                  64040000
SDM002*------ VALORIZZAZIONE DELLE SPESE                                64050000
SDM002     MOVE  ZEROS      TO  IR-ISPSVAL                              64060000
SDM002     MOVE  ZEROS      TO  IR-ICTVLISPS                            64070000
SDM002                                                                  64080000
SDM002     PERFORM VARYING INDE FROM 1 BY 1                             64090000
SDM002               UNTIL INDE > 35                                    64100000
SDM002                  OR WS-TAB-TBAMOVE(INDE) = SPACES                64110000
SDM002        MOVE  WS-TAB-TBAMOVE(INDE)   TO  DCLTBAMOVE               64120000
SDM002        IF MOVE-NPRGMOVP = MOVP-NPRGMOVP AND                      64130000
SDM002           MOVE-NSUBMOVP = MOVP-NSUBMOVP                          64140000
SDM002           ADD  MOVE-ISPSVAL     TO  IR-ISPSVAL                   64150000
SDM002           ADD  MOVE-ICTVLISPS   TO  IR-ICTVLISPS                 64160000
SDM002        END-IF                                                    64170000
SDM002     END-PERFORM.                                                 64180000
SDM002                                                                  64190000
SDM002     MOVE  IR-ISPSVAL            TO  WIMR00-ISPSVAL               64200000
SDM002     MOVE  IR-ICTVLISPS          TO  WIMR00-ICTVLISPS             64210000
SDM002                                                                  64220000
SDM016     PERFORM CALCOLA-DIVISE                                       64221000
SDM016        THRU CALCOLA-DIVISE-END.                                  64222000
SDM016                                                                  64223000
SDM002*------ AZZERAMENTO RETURN CODE                                   64230000
SDM002     MOVE '00'                   TO  WIMR00-RETCODE.              64240000
SDM002                                                                  64250000
SDM002******************************************************************64260000
SDM002*------ CHIAMATA A ROUTINE PER DETERMINAZIONE IMPEGNI E RISCHI    64270000
SDM002******************************************************************64280000
SDM002     PERFORM DETERMINA-IR                                         64290000
SDM002        THRU DETERMINA-IR-END.                                    64300000
SDM002******************************************************************64310000
SDM002                                                                  64320000
SDM002     EVALUATE WIMR00-RETCODE                                      64330000
SDM002*--------------------------------------- '00' TUTTO OK            64340000
SDM002*---------------------------------------      VALORIZZO CAMPI NEW 64350000
SDM002     WHEN '00'                                                    64360000
SDM002        MOVE  WIMR00-CSTCIR          TO  MOVP-CSTCIR              64370000
SDM002        MOVE  WIMR00-CSTCCPIR        TO  MOVP-CSTCCPIR            64380000
SDM002        MOVE  WIMR00-IMOVIR          TO  MOVP-IMOVIR              64390000
SDM002        MOVE  WIMR00-CSTCSVIR        TO  MOVP-CSTCSVIR            64400000
SDM002        MOVE  WIMR00-CSTCSVCPIR      TO  MOVP-CSTCSVCPIR          64410000
SDM002        MOVE  WIMR00-ISPSVALIR       TO  MOVP-ISPSVALIR           64420000
SDM002        MOVE  WIMR00-CSTCSEIR        TO  MOVP-CSTCSEIR            64430000
SDM002        MOVE  WIMR00-CSTCSECPIR      TO  MOVP-CSTCSECPIR          64440000
SDM002        MOVE  WIMR00-ICTVLISPSIR     TO  MOVP-ICTVSPSIR           64450000
SDM002        MOVE  WIMR00-CSTCFD          TO  MOVP-CSTCFD              64460000
SDM002        MOVE  WIMR00-CSTCCPFD        TO  MOVP-CSTCCPFD            64470000
SDM002        MOVE  WIMR00-IMOVFD          TO  MOVP-IMOVFD              64480000
SDM002*------ PER CONSENTIRE UN PARALLELO TRA VECCHIA E NUOVA GESTIONE, 64490000
SDM002*------ LA DVALNOA RICALCOLATA VIENE MEMORIZZATA SUL NUOVO CAMPO  64500000
SDM002*------ MOVP-NEWDVALNOA PRECEDENTEMENTE INIZIALIZ CON MOVP-DVALNOA64510000
SDM014*SDM002        IF WIMR00-NEWDVALNOA GREATER ZEROS                 64520000
SDM002           MOVE  WIMR00-NEWDVALNOA   TO  MOVP-NEWDVALNOA          64530000
SDM014*SDM002        END-IF                                             64540000
SDM002        MOVE  WIMR00-EXTRT           TO  MOVP-EXTRT               64550000
SDM002*--------------------------------------- '01' NO IMPEGNI E RISCHI 64560000
SDM002*---------------------------------------      ABBLENCO CAMPI IIRR 64570000
SDM002     WHEN '01'                                                    64580000
SDM002        MOVE  ZEROS                  TO  MOVP-CSTCIR              64590000
SDM002                                         MOVP-CSTCCPIR            64600000
SDM002                                         MOVP-IMOVIR              64610000
SDM002                                         MOVP-CSTCSVIR            64620000
SDM002                                         MOVP-CSTCSVCPIR          64630000
SDM002                                         MOVP-ISPSVALIR           64640000
SDM002                                         MOVP-CSTCSEIR            64650000
SDM002                                         MOVP-CSTCSECPIR          64660000
SDM002                                         MOVP-ICTVSPSIR           64670000
SDM002                                         MOVP-CSTCFD              64680000
SDM002                                         MOVP-CSTCCPFD            64690000
SDM002                                         MOVP-IMOVFD              64700000
SDM002        MOVE  SPACES                 TO  MOVP-EXTRT               64710000
SDM002*--------------------------------------- '05' RACCORDO NON TROVATO64720000
SDM002*------------ PROSEGUE CON 0 SUL RACCORDO (NON SVILUPPA P/SOSPESA)64730000
SDM002*------------ SEGNALA DESCRIZIONE ERRORE SU MOVP-EXTRT            64740000
SDM002     WHEN '05'                                                    64750000
SDM002        MOVE  WIMR00-DESCRIZ         TO  MOVP-EXTRT               64760000
SDM002*--------------------------------------- OTHER GESTIONE GENERICA  64770000
SDM002*---------------------------------------       ERRORE BLOCCANTE   64780000
SDM002*                      CENSIRE ERRORE                             64790000
SDM002     WHEN OTHER                                                   64800000
SDM002        MOVE 'RC=  .'                TO  MOVP-EXTRT               64810000
SDM002        MOVE  WIMR00-RETCODE         TO  MOVP-EXTRT (4:2)         64820000
SDM002        MOVE  WIMR00-DESCRIZ         TO  MOVP-EXTRT (7:)          64830000
SDM002                                                                  64840000
SDM002     END-EVALUATE.                                                64850000
SDM002                                                                  64860000
SDM002*------ RIPRISTINA LE TABELLE SALVATE                             64870000
SDM002     MOVE  SAVE-DCLTBTABSC        TO  DCLTBTABSC.                 64880000
SDM002     MOVE  SAVE-DCLTBADIV         TO  DCLTBADIV.                  64890000
SDM002     MOVE  SAVE-DCLTBTRACPA       TO  DCLTBTRACPA.                64900000
SDM002     MOVE  SAVE-DCLTBAMOVE        TO  DCLTBAMOVE.                 64910000
SDM002                                                                  64920000
SDM002 GESTIONE-IMPEGNI-RISCHI-END.                                     64930000
SDM002     EXIT.                                                        64940000
SDM002                                                                  64950000
SDM016 DETERMINA-IR.                                                    64951000
SDM016     EXEC SQL INCLUDE ZMYIMR00 END-EXEC.                          64952000
SDM016 DETERMINA-IR-END.                                                64953000
SDM016     EXIT.                                                        64954000
SDM002******************************************************************66020000
SDM002 CALCOLA-DIVISE.                                                  66030000
SDM002******************************************************************66040000
SDM002                                                                  66050000
SDM002*------ CALCOLA FLAG DIVISA ORDINE                                66060000
SDM002*------ SE FINOUT < 4                                             66070000
SDM002*------    PORRE UGUALE A EUR                                     66080000
SDM002*------ ALTRIMENTI                                                66090000
SDM002*------    PORRE UGUALE A DIVISA ORDINE                           66100000
SDM002                                                                  66110000
SDM002     MOVE W-CIST              TO DIV-CIST                         66120000
SDM002     MOVE WIMR00-CISO         TO DIV-CISO                         66130000
SDM002     PERFORM 0833-LEGGI-ADIV                                      66140000
SDM002        THRU 0833-LEGGI-ADIV-END                                  66150000
SDM002     IF DIV-FINOUT < 4                                            66160000
SDM016*SDM002        MOVE 'EUR'            TO IR-CISO                   66170000
SDM016        MOVE 'EUR'            TO WIMR00-CDIVFINOUT                66171000
SDM002     ELSE                                                         66180000
SDM016*SDM002        MOVE WIMR00-CISO      TO IR-CISO                   66190000
SDM016        MOVE WIMR00-CISO      TO WIMR00-CDIVFINOUT                66191000
SDM002     END-IF                                                       66200000
SDM002                                                                  66210000
SDM002*------ CALCOLA FLAG DIVISA DI CONTROPARTITA                      66220000
SDM002*------ SE NON VALORIZ. LA DIVISA CTP E LA SOMM. DELLE SPESE      66230000
SDM002*------ E' UGUALE ALL'IMP. DEL MOVIMENTO SU AMOVP                 66240000
SDM002*------    PORRE IL FLAG = EUR                                    66250000
SDM002*------ SE NON VALORIZ. LA DIVISA CTP E LA SOMM. DELLE SPESE      66260000
SDM002*------ E' DIVERSA ALL'IMP. DEL MOVIMENTO SU AMOVP                66270000
SDM002*------    ERRORE                                                 66280000
SDM002*------ SE FINOUT < 4                                             66290000
SDM002*------    PORRE UGUALE A EUR                                     66300000
SDM002*------ ALTRIMENTI                                                66310000
SDM002*------    PORRE UGUALE A VAL                                     66320000
SDM002                                                                  66330000
SDM002     IF WIMR00-CDIVCTP NOT GREATER SPACES                         66340000
SDM002        IF WRK-IMOV-VALASS = WRK-ISPSVAL-VALASS                   66350000
SDM016*SDM002           MOVE 'EUR'               TO  IR-CISOCTP         66360000
SDM016           MOVE 'EUR'               TO  WIMR00-CDIVFINOUTCTP      66361000
SDM002        ELSE                                                      66370000
SDM016           MOVE  SPACES             TO  WIMR00-CDIVFINOUTCTP      66371000
SDM016*SDM002           MOVE '06'                TO  WIMR00-RETCODE     66380000
SDM016*SDM002          MOVE 'DIVISA CONTROPART. ASSENTE SU MOVIMENTO '  66390000
SDM016*SDM002                                    TO  WIMR00-DESCRIZ     66400000
SDM016*SDM002        MOVE  WIMR00-NPRGMOVP    TO  WIMR00-DESCRIZ (41:)  66410000
SDM016*SDM002           GO TO CALCOLA-DIVISE-END                        66420000
SDM002        END-IF                                                    66430000
SDM002     END-IF.                                                      66440000
SDM002                                                                  66450000
SDM002     IF WIMR00-CDIVCTP GREATER SPACES                             66460000
SDM002        MOVE W-CIST              TO DIV-CIST                      66470000
SDM002        MOVE WIMR00-CDIVCTP      TO DIV-CISO                      66480000
SDM002        PERFORM 0833-LEGGI-ADIV                                   66490000
SDM002           THRU 0833-LEGGI-ADIV-END                               66500000
SDM002        IF DIV-FINOUT < 4                                         66510000
SDM016*SDM002           MOVE 'EUR'            TO IR-CISOCTP             66520000
SDM016           MOVE 'EUR'            TO WIMR00-CDIVFINOUTCTP          66521000
SDM002        ELSE                                                      66530000
SDM016           MOVE WIMR00-CDIVCTP   TO WIMR00-CDIVFINOUTCTP          66531000
SDM016*SDM002          MOVE WIMR00-CDIVCTP   TO IR-CISOCTP              66540000
SDM002        END-IF                                                    66550000
SDM002     END-IF.                                                      66560000
SDM002                                                                  66570000
SDM002 CALCOLA-DIVISE-END.                                              66580000
SDM002     EXIT.                                                        66590000
SDM002                                                                  66930000
BAVG90**** CONDIZIONI
BAVG90     EXEC SQL INCLUDE ZMWCOND0 END-EXEC.
BAVG90**** CONDIZIONI - END
BAVG90*------------------------------------------------------------*
BAVG90*   ROUTINE STANDARD PER CONTROLLO CAMPI NUMERICI            *
BAVG90*------------------------------------------------------------*
BAVG90     COPY ZMZCTRNM.
