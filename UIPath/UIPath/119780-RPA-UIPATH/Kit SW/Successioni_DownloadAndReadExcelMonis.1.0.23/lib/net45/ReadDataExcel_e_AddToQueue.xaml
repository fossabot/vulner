<Activity mc:Ignorable="sap sap2010 sads" x:Class="LeggiSheet" this:LeggiSheet.file="C:\Users\tst_svilrpa22\Downloads\MONIS_report_pratiche.xls"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:SuccessioniLibrary_v01;assembly=SuccessioniLibrary_v01"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="file" Type="InArgument(x:String)" />
    <x:Property Name="listaTipoPratica" Type="InArgument(x:String)" />
    <x:Property Name="listaFrazionari" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>LeggiSheet_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>SuccessioniLibrary_v01</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Newtonsoft.Json</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>SuccessioniLibrary_v01</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="LeggiSheet" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="MONIS_report_pratiche" Name="sheet" />
      <Variable x:TypeArguments="sd:DataTable" Name="excelDataTable" />
      <Variable x:TypeArguments="s:LetturaMonis" Name="LetturaMonis" />
      <Variable x:TypeArguments="x:String" Name="guidPratica" />
      <Variable x:TypeArguments="x:String" Name="TSC" />
      <Variable x:TypeArguments="x:String" Name="tipoPratica" />
      <Variable x:TypeArguments="x:Boolean" Name="aggiungiInCoda" />
      <Variable x:TypeArguments="x:String" Name="statoPrecedente" />
      <Variable x:TypeArguments="x:String" Name="userPrecedente" />
      <Variable x:TypeArguments="x:String" Name="frazionario" />
      <Variable x:TypeArguments="x:String" Name="idMonis" />
      <Variable x:TypeArguments="x:String" Name="StatoPratica" />
    </Sequence.Variables>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" Visible="False" WorkbookPath="[file]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <ui:ExcelReadRange AddHeaders="True" DataTable="[excelDataTable]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="[sheet]">
              <ui:ExcelReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelReadRange.Range>
            </ui:ExcelReadRange>
            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[excelDataTable]" DisplayName="For Each Row" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_2">
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_20">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[TSC]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[row("TSC").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_21">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[tipoPratica]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[row("Tipo pratica").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_22">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[statoPrecedente]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[row("Stato precedente").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_23">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[userPrecedente]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[row("User precedente").ToString.Replace("[","").Replace("]","")]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_24">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[frazionario]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[row("Frazionario UP").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_25">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[idMonis]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[row("Numero pratica").ToString.Replace("[","").Replace("]","")]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_27">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[StatoPratica]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[row("Stato pratica").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <If Condition="[Trim(TSC).Equals(&quot;TSC BA&quot;) or Trim(TSC).Equals(&quot;TSC TS&quot;)  or Trim(TSC).Equals(&quot;CS BA1&quot;)]" DisplayName="If - Filtro per TSC " sap2010:WorkflowViewState.IdRef="If_2">
                      <If.Then>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                          <If Condition="[StatoPratica.Trim.Equals(&quot;SPEDITO TSC&quot;) And listaTipoPratica.Contains(tipoPratica)]" DisplayName="If - filtro per tipologia pratica e stato pratica" sap2010:WorkflowViewState.IdRef="If_1">
                            <If.Then>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
                                <If Condition="[listaFrazionari.Contains(frazionario) Or listaFrazionari.Equals(&quot;&quot;)]" DisplayName="If - filtro frazionari" sap2010:WorkflowViewState.IdRef="If_7">
                                  <If.Then>
                                    <If Condition="[not Trim(statoPrecedente).Equals(&quot;&quot;) and not Trim(userPrecedente).Equals(&quot;&quot;)]" DisplayName="If" sap2010:WorkflowViewState.IdRef="If_5">
                                      <If.Then>
                                        <If Condition="[Trim(statoPrecedente).Equals(&quot;BOZZA UP&quot;)]" DisplayName="If filtro per Bozza UP" sap2010:WorkflowViewState.IdRef="If_4">
                                          <If.Then>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Boolean">[aggiungiInCoda]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Then>
                                          <If.Else>
                                            <If Condition="[Trim(userPrecedente.ToUpper) = &quot;SRV_TSC_BA&quot; OR Trim(userPrecedente.ToUpper).Equals(&quot;SRV_CS_BA1&quot;) OR Trim(userPrecedente.ToUpper).Equals(&quot;SRV_TSC_TS&quot;)]" DisplayName="If - filtro user e stato precedente" sap2010:WorkflowViewState.IdRef="If_3">
                                              <If.Then>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[aggiungiInCoda]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </If.Then>
                                              <If.Else>
                                                <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Boolean">[aggiungiInCoda]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </If.Else>
                                            </If>
                                          </If.Else>
                                        </If>
                                      </If.Then>
                                      <If.Else>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[aggiungiInCoda]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Else>
                                    </If>
                                  </If.Then>
                                  <If.Else>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Boolean">[aggiungiInCoda]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Else>
                                </If>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[aggiungiInCoda]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[aggiungiInCoda]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </Assign.Value>
                        </Assign>
                      </If.Else>
                    </If>
                    <If Condition="[aggiungiInCoda = True]" sap2010:WorkflowViewState.IdRef="If_6">
                      <If.Then>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
                            <Assign.To>
                              <OutArgument x:TypeArguments="s:LetturaMonis">[LetturaMonis]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="s:LetturaMonis">[New LetturaMonis]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[guidPratica]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[Guid.NewGuid.ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[LetturaMonis.GUID]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[guidPratica]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[LetturaMonis.TSC]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[TSC]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[LetturaMonis.Frazionario]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[frazionario]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[LetturaMonis.Tipologia]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[tipoPratica]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[LetturaMonis.IdMonis]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[idMonis]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item" sap2010:WorkflowViewState.IdRef="AddQueueItem_1" Priority="Normal" QueueType="q_Successioni_LetturaMonis" Reference="[guidPratica + &quot;_&quot; + idMonis]">
                            <ui:AddQueueItem.ItemInformation>
                              <InArgument x:TypeArguments="x:String" x:Key="Json">[JsonConvert.SerializeObject(LetturaMonis)]</InArgument>
                            </ui:AddQueueItem.ItemInformation>
                          </ui:AddQueueItem>
                        </Sequence>
                      </If.Then>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
            </ui:ForEachRow>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <sads:DebugSymbol.Symbol>d4cBQzpcVXNlcnNcVFNUX0NPTExSUEEyOFxEZXNrdG9wXFN1Y2Nlc3Npb25pIFJlbGVhc2VcUmVsZWFzZVxVaVBhdGhcU3VjY2Vzc2lvbmlfRG93bmxvYWRBbmRSZWFkRXhjZWxNb25pc1xSZWFkRGF0YUV4Y2VsX2VfQWRkVG9RdWV1ZS54YW1sYQFVAZABAQJTA9sCDgIBAVU0VUsCAQJiBdkCIAIBA2KwAWK4AQMBgQFoC9YCFgIBBGkNbyECAXtwDdUCHQIBBWk8aU4CAX9sE2xCAgF+aaUBaa4BAgF8cD5wUAIBeXYT0gIeAgEGdxV+HgIBdX8VhgEeAgFxhwEVjgEeAgFtjwEVlgEeAgFplwEVngEeAgFlnwEVpgEeAgFhpwEVrgEeAgFdrwEVjgIaAgEtjwIV0QIaAgEHfEB8VQIBeHlBeUYCAXaEAUCEAV4CAXSBAUGBAU4CAXKMAUCMAWICAXCJAUGJAVICAW6UAUCUAYEBAgFskQFBkQFRAgFqnAFAnAFgAgFomQFBmQFOAgFmpAFApAGAAQIBZKEBQaEBSgIBYqwBQKwBXwIBYKkBQakBTwIBXq8BI68BnAECAS6xARmCAiQCATOFAhmMAiICAS+PAiOPAjwCAQiRAhnPAiQCAQqyARuBAiACATSKAkWKAkoCATKHAkaHAlYCATCSAhuZAiQCASmaAhuhAiQCASWiAhupAiQCASGqAhuxAiQCAR2yAhu5AiQCARm6AhvBAiQCARXCAhvJAiQCARHKAhvOAi0CAQuyASmyAYkBAgE1tAEf9QEqAgE9+AEf/wEoAgE5lwJMlwJeAgEslAJNlAJbAgEqnwJGnwJdAgEonAJHnAJUAgEmpwJGpwJTAgEjpAJHpAJaAgEirwJGrwJLAgEfrAJHrAJZAgEetwJGtwJTAgEbtAJHtAJhAgEavwJGvwJTAgEXvAJHvAJfAgEWxwJGxwJPAgETxAJHxAJdAgESygLwAcoCmQICAQ7KAskBygLlAQIBDcwCU8wCfgIBDLUBIfQBJgIBPv0BS/0BUAIBPPoBTPoBXAIBOrUBL7UBgAECAT+3ASXoASoCAUfrASXyAS4CAUO3ATO3AZcBAgFIuQEp3AEuAgFN3wEp5gEyAgFJ8AFR8AFWAgFG7QFS7QFiAgFEuQE3uQFtAgFOuwEtwgE2AgFZxQEt2gEyAgFP5AFV5AFaAgFM4QFW4QFmAgFKwAFZwAFdAgFcvQFavQFqAgFaxQE7xQHyAQIBUMcBMc4BOgIBVdEBMdgBOgIBUcwBXcwBYQIBWMkBXskBbgIBVtYBXdYBYgIBVNMBXtMBbgIBUg==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="ExcelReadRange_1" sap:VirtualizedContainerService.HintSize="1940,59" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="1888,60" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="1888,60" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="1888,60" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="1888,60" />
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="1888,60" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="1888,60" />
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="1888,60" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="509,207" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="776,354" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="1043,501" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="1310,648" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="1332,772">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="1599,919" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="1621,1043">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="1888,1190">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddQueueItem_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="264,846">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="1888,993">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="1910,3047">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="1940,3194" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="1962,3417">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="1976,3526" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="1998,3650">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LeggiSheet_1" sap:VirtualizedContainerService.HintSize="2038,3730" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>