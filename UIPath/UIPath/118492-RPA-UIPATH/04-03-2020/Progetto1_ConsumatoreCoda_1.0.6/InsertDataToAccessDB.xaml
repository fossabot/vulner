<Activity mc:Ignorable="sap sap2010 sads" x:Class="InsertDataToAccessDB" this:InsertDataToAccessDB.ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\Users\azadmin\Desktop\20200121_RpaDbPosteIt_v2.mdb"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="listOfID" Type="OutArgument(scg:List(x:String))" />
    <x:Property Name="ConnectionString" Type="InArgument(x:String)" />
    <x:Property Name="tracciatoCSV" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>InsertDataToAccessDB_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="InsertDataToAccessDB" sap2010:WorkflowViewState.IdRef="Sequence_3">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="stringConnectionDB_RpaDbPosteIt" />
      <Variable x:TypeArguments="x:Int32" Name="indexForEach" />
      <Variable x:TypeArguments="sd:DataTable" Name="outputQuery" />
      <Variable x:TypeArguments="x:Int32" Name="indexDT" />
      <Variable x:TypeArguments="x:String" Name="queryInsert" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="queryFields" />
      <Variable x:TypeArguments="x:String" Name="queryFieldsToString" />
      <Variable x:TypeArguments="scg:List(x:String)" Default="[New List(Of String)]" Name="queryValues" />
      <Variable x:TypeArguments="x:String" Name="queryValuesToString" />
    </Sequence.Variables>
    <ui:DatabaseConnect sap2010:Annotation.AnnotationText="Apertura della connessione verso il DB Access" DatabaseConnection="[stringConnectionDB_RpaDbPosteIt]" DisplayName="Connect to DB RpaDbPosteIt" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="System.Data.OleDb" ConnectionString="[ConnectionString]" />
    <Assign sap2010:Annotation.AnnotationText="Creazione della lista di Stringhe &quot;listOfID&quot; che conterrà tutti gli Id della tabella sulla quale andremo ad effettuare le varie Insert per ogni entry presente nel tracciato." DisplayName="Creazione Lista di Id" sap2010:WorkflowViewState.IdRef="Assign_18">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:List(x:String)">[listOfID]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:List(x:String)">[New List(of String)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEachRow sap2010:Annotation.AnnotationText="Presa la DataTable &quot;tracciatoCSV&quot;, andremo riga per riga, a recuperare i dati che servono per poter creare le query specifiche per inserire nel DB ogni riga presente." CurrentIndex="[indexForEach]" DataTable="[tracciatoCSV]" DisplayName="For Each Row - Estrazione dati per inserimento su DB" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
          </ActivityAction.Argument>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_26">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Name="arrayIndex" />
            </Sequence.Variables>
            <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_1" Text="// Ad ogni nuova riga della DataTable svuotiamo le due liste, dei campi e dei rispettivi valori, per evitare di caricare dati incoerenti sul DB." />
            <Assign sap2010:Annotation.AnnotationText="Lista di stringhe che conterrà i nomi dei campi presenti sia nel tracciato CSV che nella tabella targer sul DB." DisplayName="Assign - queryFields" sap2010:WorkflowViewState.IdRef="Assign_19">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">[queryFields]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:Annotation.AnnotationText="Lista di stringhe che conterrà i valori, associati ai rispettivi campi presenti nell'altra lista." DisplayName="Assign - queryValues" sap2010:WorkflowViewState.IdRef="Assign_20">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:List(x:String)">[queryValues]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)]</InArgument>
              </Assign.Value>
            </Assign>
            <While sap2010:Annotation.AnnotationText="Presa la singola riga della DataTable &quot;tracciatoCSV&quot;, andremo sulla singola colonna per aggiornare i dati della entry creata in precendenza tramite la INSERT su DB. Il ciclio funzionerà finché l'indice &quot;indexDT&quot; sarà minore del numero di colonne." DisplayName="While - Ciclo sulla singola riga" sap2010:WorkflowViewState.IdRef="While_3">
              <While.Variables>
                <Variable x:TypeArguments="x:String" Name="queryUpdate" />
              </While.Variables>
              <While.Condition>[indexDT &lt; tracciatoCSV.Columns.Count]</While.Condition>
              <Sequence DisplayName="Memorizzazione dei valori dei singoli campi in una lista" sap2010:WorkflowViewState.IdRef="Sequence_25">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="field" />
                  <Variable x:TypeArguments="x:String" Name="value" />
                </Sequence.Variables>
                <Assign sap2010:Annotation.AnnotationText="Memorizzo il nome della colonna attuale, della DataTable, corrispondente ad un campo della tabella target sul DB." DisplayName="Assign - field" sap2010:WorkflowViewState.IdRef="Assign_21">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[field]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[tracciatoCSV.Columns(indexDT).ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:Annotation.AnnotationText="Memorizzo il valore della colonna attule della DataTable, aggiungendo anche gli apici." DisplayName="Assign - value" sap2010:WorkflowViewState.IdRef="Assign_22">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[value]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">["'"+row(indexDT).ToString+"'"]</InArgument>
                  </Assign.Value>
                </Assign>
                <If sap2010:Annotation.AnnotationText="Controllo necessario da effettuare sul campo &quot;ChiusuraEffettiva&quot;. Questo perché dal tracciato questo campo risulta valorizzato con un formato di data non compatibile con quelli supportati dalla tabella sul DB. Il formato che troveremo è il seguente &quot;2019-07-08 11:10:00.000&quot;: come si può notare è presente la sezione dei millisecondi nell'orario. Andremo a lavorare sulla stringa ottenuta per eliminarla." Condition="[field.ToLower = &quot;chiusuraeffettiva&quot;]" DisplayName="If - Chiusura Effettiva" sap2010:WorkflowViewState.IdRef="If_10">
                  <If.Then>
                    <Sequence DisplayName="Ho trovato il campo &quot;chiusuraEffettiva&quot;" sap2010:WorkflowViewState.IdRef="Sequence_23">
                      <If Condition="[value.Contains(&quot;.&quot;)]" sap2010:WorkflowViewState.IdRef="If_9">
                        <If.Then>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_21">
                            <Assign sap2010:Annotation.AnnotationText="Tramite il metodo Substring otterremo la data nel formato desiderato dando come indice finale quello del punto, ovvero la posizione in cui inizia la parte in millisecondi dell'ora." DisplayName="Assign - Sovrascrittura di value" sap2010:WorkflowViewState.IdRef="Assign_23">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[value]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["'"+row(indexDT).ToString.Substring(0, row(indexDT).ToString.IndexOf("."))+"'"]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <WriteLine DisplayName="Write Line - Verificat dato" sap2010:WorkflowViewState.IdRef="WriteLine_12" Text="[&quot;Chiusura effettiva: &quot; + value]" />
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_22">
                            <WriteLine DisplayName="Write Line - Verificat dato" sap2010:WorkflowViewState.IdRef="WriteLine_13" Text="[&quot;Chiusura effettiva: &quot; + value]" />
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                  </If.Then>
                </If>
                <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_2" Text="// Si da per assodato che il controllo su Rda e posizioneOda diverse da &quot;NULL&quot; sia stato fatto durante l'acquisizione del tracciato in formato .csv" />
                <If sap2010:Annotation.AnnotationText="Qui verifichiamo che il valore corrispondente alla singola colonna sia diverso dalla stringa &quot;NULL&quot; presente sul tracciato di partenza. Questo per evitare incompatibilità dei dati sulla tabella del DB.&#xA;Se la condizione è verificata non faremo nulla, lasciando vuoto il campo sul DB, e andremo direttamente alla colonna successiva, in caso contrario invece andremo ad aggiungere il campo e il suo valore alle rispettive liste che abbiamo costruito." Condition="[value.ToLower = &quot;'null'&quot;]" DisplayName="If - Verifica sulla consistenza del dato" sap2010:WorkflowViewState.IdRef="If_11">
                  <If.Then>
                    <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_3" Text="// Se il valore del campo è NULL non lo aggiungiamo ai campi da inserire nel DB, questo per evitare eccezioni del &quot;Data Type Mismatch&quot; nel caso in cui da tracciato uno dei campi risulti essere NULL mentre nelle tabella sul DB accetta dati con un formato differente." />
                  </If.Then>
                  <If.Else>
                    <Sequence DisplayName="Aggiunta field/value alle due liste" sap2010:WorkflowViewState.IdRef="Sequence_24">
                      <AddToCollection x:TypeArguments="x:String" Collection="[queryFields]" DisplayName="Add To Collection - Aggiungo Field" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[field]" />
                      <AddToCollection x:TypeArguments="x:String" Collection="[queryValues]" DisplayName="Add To Collection - Aggiungo value" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3" Item="[value]" />
                    </Sequence>
                  </If.Else>
                </If>
                <Assign sap2010:Annotation.AnnotationText="Ciclo While per aggiornare tutti i campi presenti su una singola riga.&#xA;&#xA;Trovandoci all'interno di un ciclo While è necessario incrementare la variabile di ciclo manualmente." DisplayName="Assign - Incremento dell'indice" sap2010:WorkflowViewState.IdRef="Assign_24">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[indexDT]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[indexDT + 1]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </While>
            <WriteLine sap2010:Annotation.AnnotationText="Check per Data Validation" DisplayName="Write Line - Lista dei campi" sap2010:WorkflowViewState.IdRef="WriteLine_14" Text="[&quot;Campi della query: &quot;+ vbCrLf +String.Join(&quot;,&quot;,queryFields).ToString]" />
            <Assign sap2010:Annotation.AnnotationText="Conversione della lista in stringa unica, i cui valore sono separati dalla virgola." DisplayName="Assign - queryFieldsToString" sap2010:WorkflowViewState.IdRef="Assign_25">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[queryFieldsToString]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Join(",",queryFields).ToString]</InArgument>
              </Assign.Value>
            </Assign>
            <WriteLine sap2010:Annotation.AnnotationText="Check per Data Validation" DisplayName="Write Line - Lista dei valori" sap2010:WorkflowViewState.IdRef="WriteLine_15" Text="[&quot;Valori della query: &quot;+ vbCrLf + String.Join(&quot;,&quot;,queryValues)]" />
            <Assign sap2010:Annotation.AnnotationText="Conversione della lista in stringa unica, i cui valore sono separati dalla virgola." DisplayName="Assign - queryValuesToString" sap2010:WorkflowViewState.IdRef="Assign_26">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[queryValuesToString]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Join(",",queryValues)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:Annotation.AnnotationText="Creazione delle query in formato stringa così da poterla tracciare e controllare in caso di eccezioni sulla sintassi. La query è una INSERT che presenta tutti i campi, mandatori e non sulla tabella target del DB, valorizzandoli in base al valore estratto dal tracciato." DisplayName="Assign - Creazione delle Query" sap2010:WorkflowViewState.IdRef="Assign_27">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[queryInsert]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">["INSERT INTO ImmobiliareRealGimm (idmapprocess,idmapstatus,timecreation,timelastmodified,"+queryFieldsToString+") VALUES ('1','1','"+Date.Now.ToString+"','"+Date.Now.ToString+"',"+queryValuesToString+")"]</InArgument>
              </Assign.Value>
            </Assign>
            <WriteLine DisplayName="Write Line - queryInsert" sap2010:WorkflowViewState.IdRef="WriteLine_16" Text="[queryInsert]" />
            <ui:ExecuteQuery ContinueOnError="{x:Null}" DataTable="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Esecuzione della query verso il DB. In questo modo andiamo a creare la entry corrispondente alla riga della DataTable su cui stiamo attualmente lavorando." CommandType="Text" DisplayName="Execute queryInsert" ExistingDbConnection="[stringConnectionDB_RpaDbPosteIt]" sap2010:WorkflowViewState.IdRef="ExecuteQuery_5" Sql="[queryInsert]">
              <ui:ExecuteQuery.Parameters>
                <scg:Dictionary x:TypeArguments="x:String, Argument" />
              </ui:ExecuteQuery.Parameters>
            </ui:ExecuteQuery>
            <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Questa query serve per poter ottenere il valore dell'id relativo alla query effettuata poco prima e mappare quindi tutte le entry." CommandType="Text" DataTable="[outputQuery]" DisplayName="Execute SELECT @@IDENTITY" ExistingDbConnection="[stringConnectionDB_RpaDbPosteIt]" sap2010:WorkflowViewState.IdRef="ExecuteQuery_6" Sql="SELECT @@IDENTITY">
              <ui:ExecuteQuery.Parameters>
                <scg:Dictionary x:TypeArguments="x:String, Argument" />
              </ui:ExecuteQuery.Parameters>
            </ui:ExecuteQuery>
            <WriteLine sap2010:Annotation.AnnotationText="Verifica che la query precendete abbia restituito un valore coerente" DisplayName="Write Line - Verifica dato" sap2010:WorkflowViewState.IdRef="WriteLine_17" Text="[&quot;Return Query: &quot;+ outputQuery.Rows(0)(0).ToString]" />
            <AddToCollection x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Aggiungiamo l'id appena ottenuto alla lista creata in precedenza per la mappatura degli id." Collection="[listOfID]" DisplayName="Add To listOfID" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[outputQuery.Rows(0)(0).ToString]" />
            <Assign sap2010:Annotation.AnnotationText="Creazione e valorizzazione dell'indice che mi servirà per poter ciclare su ogni colonna mantenendomi fermo sulla stessa riga e aggiornare gli altri campo nel DB." DisplayName="Assign - indexDT" sap2010:WorkflowViewState.IdRef="Assign_28">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[indexDT]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">0</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
    </ui:ForEachRow>
    <ui:DatabaseDisconnect sap2010:Annotation.AnnotationText="Disconnessione dal DB" DatabaseConnection="[stringConnectionDB_RpaDbPosteIt]" DisplayName="Disconnect from  DB RpaDbPosteIt" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_1" />
    <sads:DebugSymbol.Symbol>d15DOlxVc2Vyc1xhemFkbWluXERlc2t0b3BcUHJvZ2V0dG8gMSAtICBJbW1vYmlsaWFyZSB2OFxQb3N0ZV9JdGFsaWFuZVxJbnNlcnREYXRhVG9BY2Nlc3NEQi54YW1sWwF1AdgBAQJPA/4BDgIBAVY+VlUCAQNYPlhVAgECWwVbyAICAXlcBWMOAgF1ZAX7ARUCAQf8AQX8AfUBAgEEW4wCW58CAgF+W7ECW8UCAgF8W35boQECAXphOmFPAgF4XjteRQIBdmT2AWSGAgIBc2SRAmShAgIBcWoL+AEWAgEI/AFp/AGMAQIBBW4Nbt8BAgFwbw12FgIBbHcNfhYCAWh/DcgBFQIBNckBDckBlAICATPKAQ3RARYCAS7SAQ3SAY4CAgEs0wEN2gEWAgEn2wEN4gEWAgEh4wEN4wGFAQIBHuQBDegBHwIBGekBDe0BHwIBE+4BDe4BoAICARHvAQ3vAdACAgEN8AEN9wEWAgEJdEJ0VwIBb3FDcVACAW18QnxXAgFreUN5UAIBaYQBD8cBGgIBN4MBIIMBSQIBNskBtQHJAZECAgE0zwE4zwFfAgExzAE5zAFOAgEv0gG2AdIBiwICAS3YATjYAVYCASrVATnVAU4CASjgATjgAYUCAgEk3QE53QFGAgEi4wFz4wGCAQIBH+QB7ALkAY8DAgEc5AHFA+QB1AMCARrpAd8C6QGCAwIBF+kBkgLpAaECAgEV6QG4A+kBywMCARTuAd4B7gGdAgIBEu8BxAHvAdABAgEP7wGqAu8BzQICAQ71ATf1ATgCAQzyATjyAUECAQqJARGQARoCAWSRARGYARoCAWCZARGyARYCAU2zARGzAfABAgFMtAERvgEWAgE9vwERxgEaAgE4jgE8jgFkAgFniwE9iwFEAgFllgE8lgFbAgFjkwE9kwFEAgFhmQHsA5kBnQQCAU6bARWwASACAVC0AZEEtAG3BAIBPrYBFbYB6gICAUu5ARW8ASACAUDEATvEAUgCATvBATzBAUUCATmcARevARwCAVG6ARe6AdYBAgFGuwEXuwHWAQIBQZwBJZwBRgIBUp4BG6gBJgIBWKsBG60BJgIBVLoBTroBXQIBSboBygG6AdMBAgFHuwFOuwFdAgFEuwHKAbsB0wECAUKfAR2mASYCAVynAR2nAbUBAgFZrAEdrAG1AQIBVaQBSKQBmAECAV+hAUmhAVACAV2nAYYBpwGyAQIBWqwBhgGsAbIBAgFW</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="DatabaseConnect_1" sap:VirtualizedContainerService.HintSize="769,86">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="769,147">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_1" sap:VirtualizedContainerService.HintSize="717,112" />
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="717,117">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="717,117">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="669,132">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="669,117">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="242,162">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_12" sap:VirtualizedContainerService.HintSize="242,61" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="264,387">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_13" sap:VirtualizedContainerService.HintSize="211,61" />
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="233,185">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="522,535" />
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="544,659">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_10" sap:VirtualizedContainerService.HintSize="669,879">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Comment_2" sap:VirtualizedContainerService.HintSize="669,112" />
      <sap2010:ViewStateData Id="Comment_3" sap:VirtualizedContainerService.HintSize="314,150" />
      <sap2010:ViewStateData Id="AddToCollection`1_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="222,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="669,443">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="669,162">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="691,2169">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_3" sap:VirtualizedContainerService.HintSize="717,2369">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_14" sap:VirtualizedContainerService.HintSize="717,88">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="717,117">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_15" sap:VirtualizedContainerService.HintSize="717,88">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="717,117">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="717,192">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_16" sap:VirtualizedContainerService.HintSize="717,61" />
      <sap2010:ViewStateData Id="ExecuteQuery_5" sap:VirtualizedContainerService.HintSize="717,160">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExecuteQuery_6" sap:VirtualizedContainerService.HintSize="717,145">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_17" sap:VirtualizedContainerService.HintSize="717,118">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_4" sap:VirtualizedContainerService.HintSize="717,94">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="717,147">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_26" sap:VirtualizedContainerService.HintSize="739,4726">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_2" sap:VirtualizedContainerService.HintSize="769,4916">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="DatabaseDisconnect_1" sap:VirtualizedContainerService.HintSize="769,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="791,5442">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InsertDataToAccessDB_1" sap:VirtualizedContainerService.HintSize="831,5562" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>